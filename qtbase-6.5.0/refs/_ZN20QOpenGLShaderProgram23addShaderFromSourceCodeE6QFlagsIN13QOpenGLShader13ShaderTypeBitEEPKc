<dec f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.h' l='80' type='bool QOpenGLShaderProgram::addShaderFromSourceCode(QOpenGLShader::ShaderType type, const char * source)'/>
<def f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.cpp' l='932' ll='945' type='bool QOpenGLShaderProgram::addShaderFromSourceCode(QOpenGLShader::ShaderType type, const char * source)'/>
<use f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.cpp' l='964' u='c' c='_ZN20QOpenGLShaderProgram23addShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK10QByteArray'/>
<use f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.cpp' l='984' u='c' c='_ZN20QOpenGLShaderProgram23addShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK7QString'/>
<use f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.cpp' l='1039' u='c' c='_ZN20QOpenGLShaderProgram32addCacheableShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEEPKc'/>
<doc f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.cpp' l='919'>/*!
    Compiles \a source as a shader of the specified \a type and
    adds it to this shader program.  Returns \c true if compilation
    was successful, false otherwise.  The compilation errors
    and warnings will be made available via log().

    This function is intended to be a short-cut for quickly
    adding vertex and fragment shaders to a shader program without
    creating an instance of QOpenGLShader first.

    \sa addShader(), addShaderFromSourceFile()
    \sa removeShader(), link(), log(), removeAllShaders()
*/</doc>
