<dec f='qtbase-6.5.0/src/widgets/styles/qdrawutil.h' l='26' type='void qDrawShadeLine(QPainter * p, int x1, int y1, int x2, int y2, const QPalette &amp; pal, bool sunken = true, int lineWidth = 1, int midLineWidth = 0)'/>
<def f='qtbase-6.5.0/src/widgets/styles/qdrawutil.cpp' l='86' ll='178' type='void qDrawShadeLine(QPainter * p, int x1, int y1, int x2, int y2, const QPalette &amp; pal, bool sunken = true, int lineWidth = 1, int midLineWidth = 0)'/>
<use f='qtbase-6.5.0/src/widgets/styles/qdrawutil.cpp' l='654' u='c' c='_Z14qDrawShadeLineP8QPainterRK6QPointS3_RK8QPalettebii'/>
<doc f='qtbase-6.5.0/src/widgets/styles/qdrawutil.cpp' l='53'>/*!
    \fn void qDrawShadeLine(QPainter *painter, int x1, int y1, int x2, int y2,
                     const QPalette &amp;palette, bool sunken,
                     int lineWidth, int midLineWidth)
    \relates &lt;qdrawutil.h&gt;

    Draws a horizontal (\a y1 == \a y2) or vertical (\a x1 == \a x2)
    shaded line using the given \a painter.  Note that nothing is
    drawn if \a y1 != \a y2 and \a x1 != \a x2 (i.e. the line is
    neither horizontal nor vertical).

    The provided \a palette specifies the shading colors (\l
    {QPalette::light()}{light}, \l {QPalette::dark()}{dark} and \l
    {QPalette::mid()}{middle} colors).  The given \a lineWidth
    specifies the line width for each of the lines; it is not the
    total line width. The given \a midLineWidth specifies the width of
    a middle line drawn in the QPalette::mid() color.

    The line appears sunken if \a sunken is true, otherwise raised.

    \warning This function does not look at QWidget::style() or
    QApplication::style().  Use the drawing functions in QStyle to
    make widgets that follow the current GUI style.


    Alternatively you can use a QFrame widget and apply the
    QFrame::setFrameStyle() function to display a shaded line:

    \snippet code/src_gui_painting_qdrawutil.cpp 0

    \sa qDrawShadeRect(), qDrawShadePanel(), QStyle
*/</doc>
