<dec f='qtbase-6.5.0/src/gui/kernel/qevent.h' l='321' type='void QTabletEvent::QTabletEvent(QEvent::Type t, const QPointingDevice * device, const QPointF &amp; pos, const QPointF &amp; globalPos, qreal pressure, float xTilt, float yTilt, float tangentialPressure, qreal rotation, float z, Qt::KeyboardModifiers keyState, Qt::MouseButton button, Qt::MouseButtons buttons)'/>
<def f='qtbase-6.5.0/src/gui/kernel/qevent.cpp' l='2497' ll='2511' type='void QTabletEvent::QTabletEvent(QEvent::Type type, const QPointingDevice * dev, const QPointF &amp; pos, const QPointF &amp; globalPos, qreal pressure, float xTilt, float yTilt, float tangentialPressure, qreal rotation, float z, Qt::KeyboardModifiers keyState, Qt::MouseButton button, Qt::MouseButtons buttons)'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qevent.cpp' l='2459'>/*!
    Construct a tablet event of the given \a type.

    The \a pos parameter indicates where the event occurred in the widget;
    \a globalPos is the corresponding position in absolute coordinates.

    \a pressure gives the pressure exerted on the device \a dev.

    \a xTilt and \a yTilt give the device&apos;s degree of tilt from the
    x and y axes respectively.

    \a keyState specifies which keyboard modifiers are pressed (e.g.,
    \uicontrol{Ctrl}).

    The \a z parameter gives the Z coordinate of the device on the tablet;
    this is usually given by a wheel on a 4D mouse. If the device does not
    support a Z-axis (i.e. \l QPointingDevice::capabilities() does not include
    \c ZPosition), pass \c 0 here.

    The \a tangentialPressure parameter gives the tangential pressure
    thumbwheel value from an airbrush. If the device does not support
    tangential pressure (i.e. \l QPointingDevice::capabilities() does not
    include \c TangentialPressure), pass \c 0 here.

    \a rotation gives the device&apos;s rotation in degrees.
    4D mice, the Wacom Art Pen, and the Apple Pencil support rotation.
    If the device does not support rotation (i.e. \l QPointingDevice::capabilities()
    does not include \c Rotation), pass \c 0 here.

    The \a button that caused the event is given as a value from the
    \l Qt::MouseButton enum. If the event \a type is not \l TabletPress or
    \l TabletRelease, the appropriate button for this event is \l Qt::NoButton.

    \a buttons is the state of all buttons at the time of the event.

    \sa pos(), globalPos(), device(), pressure(), xTilt(), yTilt(), uniqueId(), rotation(),
      tangentialPressure(), z()
*/</doc>
<use f='qtbase-6.5.0/src/gui/kernel/qguiapplication.cpp' l='2767' u='c' c='_ZN22QGuiApplicationPrivate18processTabletEventEPN29QWindowSystemInterfacePrivate11TabletEventE'/>
<use f='qtbase-6.5.0/src/gui/kernel/qguiapplication.cpp' l='2803' u='c' c='_ZN22QGuiApplicationPrivate32processTabletEnterProximityEventEPN29QWindowSystemInterfacePrivate25TabletEnterProximityEventE'/>
<use f='qtbase-6.5.0/src/gui/kernel/qguiapplication.cpp' l='2817' u='c' c='_ZN22QGuiApplicationPrivate32processTabletLeaveProximityEventEPN29QWindowSystemInterfacePrivate25TabletLeaveProximityEventE'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qapplication.cpp' l='2937' u='c' c='_ZN12QApplication6notifyEP7QObjectP6QEvent'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qwidgetwindow.cpp' l='1065' u='c' c='_ZN13QWidgetWindow17handleTabletEventEP12QTabletEvent'/>
