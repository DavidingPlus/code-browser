<dec f='qtbase-6.5.0/src/gui/kernel/qopenglcontext.h' l='114' type='static QOpenGLContext::OpenGLModuleType QOpenGLContext::openGLModuleType()'/>
<def f='qtbase-6.5.0/src/gui/kernel/qopenglcontext.cpp' l='886' ll='896' type='static QOpenGLContext::OpenGLModuleType QOpenGLContext::openGLModuleType()'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qopenglcontext.cpp' l='870'>/*!
  Returns the underlying OpenGL implementation type.

  On platforms where the OpenGL implementation is not dynamically
  loaded, the return value is determined during compile time and never
  changes.

  \note A desktop OpenGL implementation may be capable of creating
  ES-compatible contexts too. Therefore in most cases it is more
  appropriate to check QSurfaceFormat::renderableType() or use
  the convenience function isOpenGLES().

  \note This function requires that the QGuiApplication instance is already created.

  \since 5.3
 */</doc>
<use f='qtbase-6.5.0/src/gui/opengl/platform/egl/qeglconvenience.cpp' l='221' u='c' c='_ZN17QEglConfigChooser12chooseConfigEv'/>
<use f='qtbase-6.5.0/src/gui/opengl/platform/egl/qeglconvenience.cpp' l='355' u='c' c='_Z20q_glFormatFromConfigPvS_RK14QSurfaceFormat'/>
<use f='qtbase-6.5.0/src/opengl/qopenglframebufferobject_p.h' l='40' u='c' c='_ZN37QOpenGLFramebufferObjectFormatPrivateC1Ev'/>
