<dec f='qtbase-6.5.0/src/gui/painting/qpagelayout.h' l='44' type='void QPageLayout::QPageLayout(const QPageSize &amp; pageSize, QPageLayout::Orientation orientation, const QMarginsF &amp; margins, QPageLayout::Unit units = Point, const QMarginsF &amp; minMargins = QMarginsF(0, 0, 0, 0))'/>
<use f='qtbase-6.5.0/src/gui/painting/qpagelayout.cpp' l='320' u='c' c='_ZN11QPageLayoutC1Ev'/>
<def f='qtbase-6.5.0/src/gui/painting/qpagelayout.cpp' l='337' ll='342' type='void QPageLayout::QPageLayout(const QPageSize &amp; pageSize, QPageLayout::Orientation orientation, const QMarginsF &amp; margins, QPageLayout::Unit units = Point, const QMarginsF &amp; minMargins = QMarginsF(0, 0, 0, 0))'/>
<doc f='qtbase-6.5.0/src/gui/painting/qpagelayout.cpp' l='324'>/*!
    Creates a QPageLayout with the given \a pageSize, \a orientation and
    \a margins in the given \a units.

    Optionally define the minimum allowed margins \a minMargins, e.g. the minimum
    margins able to be printed by a physical print device.

    The constructed QPageLayout will be in StandardMode.

    The \a margins given will be clamped to the minimum margins and the maximum
    margins allowed by the page size.
*/</doc>
<use f='qtbase-6.5.0/src/gui/painting/qpdf.cpp' l='1460' u='c' c='_ZN17QPdfEnginePrivateC1Ev'/>
