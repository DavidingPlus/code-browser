<dec f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='1682' type='32'/>
<doc f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='673'>\value Tessellation Indicates that the tessellation control and evaluation
    stages are supported. When reported as supported, the topology of a
    QRhiGraphicsPipeline can be set to
    \l{QRhiGraphicsPipeline::Patches}{Patches}, the number of control points
    can be set via
    \l{QRhiGraphicsPipeline::setPatchControlPointCount()}{setPatchControlPointCount()},
    and shaders for tessellation control and evaluation can be specified in the
    QRhiShaderStage list. Tessellation shaders have portability issues between
    APIs (for example, translating GLSL/SPIR-V to HLSL is problematic due to
    the way hull shaders are structured, whereas Metal uses a somewhat
    different tessellation pipeline than others), and therefore unexpected
    issues may still arise, even though basic functionality is implemented
    across all the underlying APIs. For Direct 3D in particular, handwritten
    HLSL hull and domain shaders must be injected into each QShader for the
    tessellation control and evaluation stages, respectively, since qsb cannot
    generate these from SPIR-V. Note that isoline tessellation should be
    avoided as it will not be supported by all backends. The maximum patch
    control point count portable between backends is 32.</doc>
<use f='qtbase-6.5.0/src/gui/rhi/qrhigles2.cpp' l='1307' c='_ZNK9QRhiGles218isFeatureSupportedEN4QRhi7FeatureE'/>
