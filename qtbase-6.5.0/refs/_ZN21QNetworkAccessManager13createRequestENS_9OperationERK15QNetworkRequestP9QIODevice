<dec f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.h' l='128' type='QNetworkReply * QNetworkAccessManager::createRequest(QNetworkAccessManager::Operation op, const QNetworkRequest &amp; request, QIODevice * outgoingData = nullptr)'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='764' u='c' c='_ZN21QNetworkAccessManager4headERK15QNetworkRequest'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='779' u='c' c='_ZN21QNetworkAccessManager3getERK15QNetworkRequest'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='798' u='c' c='_ZN21QNetworkAccessManager4postERK15QNetworkRequestP9QIODevice'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='881' u='c' c='_ZN21QNetworkAccessManager3putERK15QNetworkRequestP9QIODevice'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='913' u='c' c='_ZN21QNetworkAccessManager14deleteResourceERK15QNetworkRequest'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='1063' u='c' c='_ZN21QNetworkAccessManager17sendCustomRequestERK15QNetworkRequestRK10QByteArrayP9QIODevice'/>
<def f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='1122' ll='1270' type='QNetworkReply * QNetworkAccessManager::createRequest(QNetworkAccessManager::Operation op, const QNetworkRequest &amp; originalReq, QIODevice * outgoingData = nullptr)'/>
<doc f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='1109'>/*!
    Returns a new QNetworkReply object to handle the operation \a op
    and request \a originalReq. The device \a outgoingData is always 0
    for Get and Head requests, but is the value passed to post() and
    put() in those operations (the QByteArray variants will pass a QBuffer
    object).

    The default implementation calls QNetworkCookieJar::cookiesForUrl()
    on the cookie jar set with setCookieJar() to obtain the cookies to
    be sent to the remote server.

    The returned object must be in an open state.
*/</doc>
