<dec f='include/c++/9/new' l='125' type='void * operator new(std::size_t )'/>
<use f='include/c++/9/ext/new_allocator.h' l='114' u='c' c='__gnu_cxx::new_allocator::allocate'/>
<doc f='include/c++/9/new' l='115'>/** These are replaceable signatures:
 *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 *  - normal array new and delete (same)
 *  - @c nothrow single new and delete (take a @c nothrow argument, return
 *    @c NULL on error)
 *  - @c nothrow array new and delete (same)
 *
 *  Placement new and delete signatures (take a memory address argument,
 *  does nothing) may not be replaced by a user&apos;s program.
*/</doc>
<use f='qtbase-6.5.0/src/corelib/tools/qsharedpointer_impl.h' l='189' u='c' c='_ZN15QtSharedPointer33ExternalRefCountWithCustomDeleter6createEPT_T0_PFvPNS_20ExternalRefCountDataEE'/>
<use f='qtbase-6.5.0/src/corelib/tools/qsharedpointer_impl.h' l='232' u='c' c='_ZN15QtSharedPointer34ExternalRefCountWithContiguousData6createEPPNSt9remove_cvIT_E4typeEPFvPNS_20ExternalRefCountDataEE'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qmetatype.cpp' l='655' u='c' c='_ZNK9QMetaType6createEPKv'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qvariant.cpp' l='319' u='c' c='_ZN8QVariant13PrivateShared6createEmm'/>
