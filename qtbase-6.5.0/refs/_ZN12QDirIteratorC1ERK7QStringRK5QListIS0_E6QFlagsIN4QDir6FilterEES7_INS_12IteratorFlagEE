<dec f='qtbase-6.5.0/src/corelib/io/qdiriterator.h' l='28' type='void QDirIterator::QDirIterator(const QString &amp; path, const QStringList &amp; nameFilters, QDir::Filters filters = QDir::NoFilter, QDirIterator::IteratorFlags flags = NoIteratorFlags)'/>
<use f='qtbase-6.5.0/qmake/generators/win32/msvc_nmake.cpp' l='318' u='c' c='_ZN22NmakeMakefileGenerator22writeImplicitRulesPartER11QTextStream'/>
<use f='qtbase-6.5.0/qmake/generators/win32/msvc_vcproj.cpp' l='1296' u='c' c='_ZN15VcprojGenerator18initDeploymentToolEv'/>
<use f='qtbase-6.5.0/src/corelib/io/qabstractfileengine.cpp' l='591' u='c' c='_ZNK19QAbstractFileEngine9entryListE6QFlagsIN4QDir6FilterEERK5QListI7QStringE'/>
<use f='qtbase-6.5.0/src/corelib/io/qdir.cpp' l='1387' u='c' c='_ZNK4QDir9entryListERK5QListI7QStringE6QFlagsINS_6FilterEES5_INS_8SortFlagEE'/>
<use f='qtbase-6.5.0/src/corelib/io/qdir.cpp' l='1427' u='c' c='_ZNK4QDir13entryInfoListERK5QListI7QStringE6QFlagsINS_6FilterEES5_INS_8SortFlagEE'/>
<use f='qtbase-6.5.0/src/corelib/io/qdir.cpp' l='1918' u='c' c='_ZNK4QDir7isEmptyE6QFlagsINS_6FilterEE'/>
<def f='qtbase-6.5.0/src/corelib/io/qdiriterator.cpp' l='441' ll='445' type='void QDirIterator::QDirIterator(const QString &amp; path, const QStringList &amp; nameFilters, QDir::Filters filters = QDir::NoFilter, QDirIterator::IteratorFlags flags = NoIteratorFlags)'/>
<doc f='qtbase-6.5.0/src/corelib/io/qdiriterator.cpp' l='423'>/*!
    Constructs a QDirIterator that can iterate over \a path, using \a
    nameFilters and \a filters. You can pass options via \a flags to decide
    how the directory should be iterated.

    By default, \a flags is NoIteratorFlags, which provides the same behavior
    as QDir::entryList().

    For example, the following iterator could be used to iterate over audio
    files:

    \snippet code/src_corelib_io_qdiriterator.cpp 2

    \note To list symlinks that point to non existing files, QDir::System must be
     passed to the flags.

    \sa hasNext(), next(), IteratorFlags, QDir::setNameFilters()
*/</doc>
