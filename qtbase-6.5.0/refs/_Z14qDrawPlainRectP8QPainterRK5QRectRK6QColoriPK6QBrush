<dec f='qtbase-6.5.0/src/widgets/styles/qdrawutil.h' l='71' type='void qDrawPlainRect(QPainter * p, const QRect &amp; r, const QColor &amp; , int lineWidth = 1, const QBrush * fill = nullptr)'/>
<use f='qtbase-6.5.0/src/widgets/styles/qcommonstyle.cpp' l='248' u='c' c='_ZNK12QCommonStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/styles/qcommonstyle.cpp' l='543' u='c' c='_ZNK12QCommonStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/styles/qcommonstyle.cpp' l='2348' u='c' c='_ZNK12QCommonStyle11drawControlEN6QStyle14ControlElementEPK12QStyleOptionP8QPainterPK7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/styles/qcommonstyle.cpp' l='2364' u='c' c='_ZNK12QCommonStyle11drawControlEN6QStyle14ControlElementEPK12QStyleOptionP8QPainterPK7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/styles/qcommonstyle.cpp' l='2371' u='c' c='_ZNK12QCommonStyle11drawControlEN6QStyle14ControlElementEPK12QStyleOptionP8QPainterPK7QWidget'/>
<def f='qtbase-6.5.0/src/widgets/styles/qdrawutil.cpp' l='815' ll='820' type='void qDrawPlainRect(QPainter * p, const QRect &amp; r, const QColor &amp; c, int lineWidth = 1, const QBrush * fill = nullptr)'/>
<doc f='qtbase-6.5.0/src/widgets/styles/qdrawutil.cpp' l='794'>/*!
    \fn void qDrawPlainRect(QPainter *painter, const QRect &amp;rect, const QColor &amp;lineColor, int lineWidth, const QBrush *fill)
    \relates &lt;qdrawutil.h&gt;
    \overload

    Draws the plain rectangle specified by \a rect using the given \a painter,
    \a lineColor and \a lineWidth. The rectangle&apos;s interior is filled with the
    \a fill brush unless \a fill is \nullptr.

    \warning This function does not look at QWidget::style() or
    QApplication::style(). Use the drawing functions in QStyle to make
    widgets that follow the current GUI style.

    Alternatively you can use a QFrame widget and apply the
    QFrame::setFrameStyle() function to display a plain rectangle:

    \snippet code/src_gui_painting_qdrawutil.cpp 9

    \sa qDrawShadeRect(), QStyle
*/</doc>
<use f='qtbase-6.5.0/src/widgets/styles/qfusionstyle.cpp' l='960' u='c' c='_ZNK12QFusionStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget'/>
