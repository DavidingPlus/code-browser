<dec f='qtbase-6.5.0/src/corelib/time/qcalendarbackend_p.h' l='109' type='QCalendar::SystemId QCalendarBackend::registerCustomBackend(const QStringList &amp; names)'/>
<def f='qtbase-6.5.0/src/corelib/time/qcalendar.cpp' l='579' ll='587' type='QCalendar::SystemId QCalendarBackend::registerCustomBackend(const QStringList &amp; names)'/>
<doc f='qtbase-6.5.0/src/corelib/time/qcalendar.cpp' l='557'>/*!
    Register this backend as a custom backend.

    The backend should not already be registered. This method should only be
    called on objects that are completely initialized because they become
    available to other threads immediately. In particular, this function should
    not be called from backend constructors.

    The backend is also registered by names passed in \a names. Only the names
    that are not already registered are associated with the backend. The name
    matching is case-insensitive. The list of names associated with the backend
    can be queried using \c names() method after successful registration.

    Returns the new ID assigned to this backend. If its isValid() is \c true,
    the calendar registry has taken ownership of the object; this ID can then
    be used to create \c QCalendar instances. Otherwise, registration failed
    and the caller is responsible for destruction of the backend, which shall
    not be available for use by \c QCalendar. Failure should normally only
    happen if registration is attempted during program termination.

    \sa names()
*/</doc>
