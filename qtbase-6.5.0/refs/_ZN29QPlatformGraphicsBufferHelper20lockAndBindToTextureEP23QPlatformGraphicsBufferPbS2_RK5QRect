<dec f='qtbase-6.5.0/src/gui/kernel/qplatformgraphicsbufferhelper.h' l='13' type='bool QPlatformGraphicsBufferHelper::lockAndBindToTexture(QPlatformGraphicsBuffer * graphicsBuffer, bool * swizzleRandB, bool * premultipliedB, const QRect &amp; rect = QRect())'/>
<def f='qtbase-6.5.0/src/gui/kernel/qplatformgraphicsbufferhelper.cpp' l='58' ll='81' type='bool QPlatformGraphicsBufferHelper::lockAndBindToTexture(QPlatformGraphicsBuffer * graphicsBuffer, bool * swizzle, bool * premultiplied, const QRect &amp; rect = QRect())'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qplatformgraphicsbufferhelper.cpp' l='33'>/*!
    Convenience function to both lock and bind the \a graphicsBuffer to a texture.
    This function will first try to lock with texture read and texture write
    access. If this succeeds it will use the bindToTexture function to bind the
    content to the currently bound texture, and if \a premultiplied is provided,
    it is set to false.

    If it fails, it will try to lock with SWReadAccess and then use the
    bindSWToTexture convenience function. If \a premultiplied is provided, it is
    passed to the bindSWToTexture() function.

    \a swizzle is meant to be used by the caller to figure out if the Red and
    Blue color channels need to be swizzled when rendering.

    \a rect is the subrect which is desired to be bounded to the texture. This
    argument has a not less than semantic, meaning more (if not all) of the buffer
    can be bounded to the texture. An empty QRect is interpreted as entire buffer
    should be bound.

    The user should use the AccessTypes returned by isLocked to figure out what
    lock has been obtained.

    Returns true if the buffer has successfully been bound to the currently
    bound texture, otherwise returns false.
*/</doc>
