<dec f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.h' l='88' type='QNetworkReply * QNetworkAccessManager::sendCustomRequest(const QNetworkRequest &amp; request, const QByteArray &amp; verb, QIODevice * data = nullptr)'/>
<def f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='1059' ll='1064' type='QNetworkReply * QNetworkAccessManager::sendCustomRequest(const QNetworkRequest &amp; request, const QByteArray &amp; verb, QIODevice * data = nullptr)'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='1080' u='c' c='_ZN21QNetworkAccessManager17sendCustomRequestERK15QNetworkRequestRK10QByteArrayS5_'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='1104' u='c' c='_ZN21QNetworkAccessManager17sendCustomRequestERK15QNetworkRequestRK10QByteArrayP14QHttpMultiPart'/>
<doc f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='1040'>/*!
    \since 4.7

    Sends a custom request to the server identified by the URL of \a request.

    It is the user&apos;s responsibility to send a \a verb to the server that is valid
    according to the HTTP specification.

    This method provides means to send verbs other than the common ones provided
    via get() or post() etc., for instance sending an HTTP OPTIONS command.

    If \a data is not empty, the contents of the \a data
    device will be uploaded to the server; in that case, data must be open for
    reading and must remain valid until the finished() signal is emitted for this reply.

    \note This feature is currently available for HTTP(S) only.

    \sa get(), post(), put(), deleteResource()
*/</doc>
