<def f='qtbase-6.5.0/src/corelib/tools/qcommandlineparser.h' l='26' ll='29'/>
<use f='qtbase-6.5.0/src/corelib/tools/qcommandlineparser.h' l='30' c='_ZN18QCommandLineParser27setSingleDashWordOptionModeENS_24SingleDashWordOptionModeE'/>
<use f='qtbase-6.5.0/src/corelib/tools/qcommandlineparser.cpp' l='82'/>
<use f='qtbase-6.5.0/src/corelib/tools/qcommandlineparser.cpp' l='280' c='_ZN18QCommandLineParser27setSingleDashWordOptionModeENS_24SingleDashWordOptionModeE'/>
<doc f='qtbase-6.5.0/src/corelib/tools/qcommandlineparser.cpp' l='250'>/*!
    \enum QCommandLineParser::SingleDashWordOptionMode

    This enum describes the way the parser interprets command-line
    options that use a single dash followed by multiple letters, as as \c{-abc}.

    \value ParseAsCompactedShortOptions \c{-abc} is interpreted as \c{-a -b -c},
    i.e. as three short options that have been compacted on the command-line,
    if none of the options take a value. If \c{a} takes a value, then it
    is interpreted as \c{-a bc}, i.e. the short option \c{a} followed by the value \c{bc}.
    This is typically used in tools that behave like compilers, in order
    to handle options such as \c{-DDEFINE=VALUE} or \c{-I/include/path}.
    This is the default parsing mode. New applications are recommended to
    use this mode.

    \value ParseAsLongOptions \c{-abc} is interpreted as \c{--abc},
    i.e. as the long option named \c{abc}. This is how Qt&apos;s own tools
    (uic, rcc...) have always been parsing arguments. This mode should be
    used for preserving compatibility in applications that were parsing
    arguments in such a way. There is an exception if the \c{a} option has the
    QCommandLineOption::ShortOptionStyle flag set, in which case it is still
    interpreted as \c{-a bc}.

    \sa setSingleDashWordOptionMode()
*/</doc>
