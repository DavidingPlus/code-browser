<dec f='qtbase-6.5.0/src/widgets/widgets/qmenu.h' l='146' type='QAction * QMenu::exec(const QPoint &amp; pos, QAction * at = nullptr)'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qdialog.cpp' l='670' u='c' c='_ZN7QDialog16contextMenuEventEP17QContextMenuEvent'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qabstractspinbox.cpp' l='1309' u='c' c='_ZN16QAbstractSpinBox16contextMenuEventEP17QContextMenuEvent'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qmdiarea.cpp' l='586' u='c' c='_ZN14QMdiAreaTabBar16contextMenuEventEP17QContextMenuEvent'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qmdisubwindow.cpp' l='3409' u='c' c='_ZN13QMdiSubWindow16contextMenuEventEP17QContextMenuEvent'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qmenu.cpp' l='2586' u='c' c='_ZN5QMenu4execEv'/>
<def f='qtbase-6.5.0/src/widgets/widgets/qmenu.cpp' l='2625' ll='2629' type='QAction * QMenu::exec(const QPoint &amp; p, QAction * action = nullptr)'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qmenu.cpp' l='2677' u='c' c='_ZN5QMenu4execERK5QListIP7QActionERK6QPointS2_P7QWidget'/>
<doc f='qtbase-6.5.0/src/widgets/widgets/qmenu.cpp' l='2590'>/*!
    \overload

    Executes this menu synchronously.

    Pops up the menu so that the action \a action will be at the
    specified \e global position \a p. To translate a widget&apos;s local
    coordinates into global coordinates, use QWidget::mapToGlobal().

    This returns the triggered QAction in either the popup menu or one
    of its submenus, or \nullptr if no item was triggered (normally
    because the user pressed Esc).

    Note that all signals are emitted as usual. If you connect a
    QAction to a slot and call the menu&apos;s exec(), you get the result
    both via the signal-slot connection and in the return value of
    exec().

    Common usage is to position the menu at the current mouse
    position:
    \snippet code/src_gui_widgets_qmenu.cpp 3
    or aligned to a widget:
    \snippet code/src_gui_widgets_qmenu.cpp 4
    or in reaction to a QMouseEvent *e:
    \snippet code/src_gui_widgets_qmenu.cpp 5

    When positioning a menu with exec() or popup(), bear in mind that
    you cannot rely on the menu&apos;s current size(). For performance
    reasons, the menu adapts its size only when necessary. So in many
    cases, the size before and after the show is different. Instead,
    use sizeHint() which calculates the proper size depending on the
    menu&apos;s current contents.

    \sa popup(), QWidget::mapToGlobal()
*/</doc>
<use f='qtbase-6.5.0/src/widgets/widgets/qpushbutton.cpp' l='584' u='c' c='_ZN18QPushButtonPrivate15_q_popupPressedEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qscrollbar.cpp' l='384' u='c' c='_ZN10QScrollBar16contextMenuEventEP17QContextMenuEvent'/>
