<dec f='qtbase-6.5.0/src/gui/text/qstatictext.h' l='51' type='void QStaticText::prepare(const QTransform &amp; matrix = QTransform(), const QFont &amp; font = QFont())'/>
<def f='qtbase-6.5.0/src/gui/text/qstatictext.cpp' l='178' ll='183' type='void QStaticText::prepare(const QTransform &amp; matrix = QTransform(), const QFont &amp; font = QFont())'/>
<doc f='qtbase-6.5.0/src/gui/text/qstatictext.cpp' l='162'>/*!
  Prepares the QStaticText object for being painted with the given \a matrix and the given \a font
  to avoid overhead when the actual drawStaticText() call is made.

  When drawStaticText() is called, the layout of the QStaticText will be recalculated if any part
  of the QStaticText object has changed since the last time it was drawn. It will also be
  recalculated if the painter&apos;s font is not the same as when the QStaticText was last drawn, or,
  on any other paint engine than the OpenGL2 engine, if the painter&apos;s matrix has been altered
  since the static text was last drawn.

  To avoid the overhead of creating the layout the first time you draw the QStaticText after
  making changes, you can use the prepare() function and pass in the \a matrix and \a font you
  expect to use when drawing the text.

  \sa QPainter::setFont(), QPainter::setWorldTransform()
*/</doc>
