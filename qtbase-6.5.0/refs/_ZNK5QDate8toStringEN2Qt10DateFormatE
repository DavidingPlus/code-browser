<dec f='qtbase-6.5.0/src/corelib/time/qdatetime.h' l='119' type='QString QDate::toString(Qt::DateFormat format = Qt::TextDate) const'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qmetatype.cpp' l='1196' u='c' c='_ZNK3$_07convertEPKviPvi'/>
<def f='qtbase-6.5.0/src/corelib/time/qdatetime.cpp' l='1122' ll='1138' type='QString QDate::toString(Qt::DateFormat format = Qt::TextDate) const'/>
<use f='qtbase-6.5.0/src/corelib/time/qdatetime.cpp' l='5570' u='c' c='_Zls6QDebug5QDate'/>
<doc f='qtbase-6.5.0/src/corelib/time/qdatetime.cpp' l='1094'>/*!
    \overload

    Returns the date as a string. The \a format parameter determines the format
    of the string.

    If the \a format is Qt::TextDate, the string is formatted in the default
    way. The day and month names will be in English. An example of this
    formatting is &quot;Sat May 20 1995&quot;. For localized formatting, see
    \l{QLocale::toString()}.

    If the \a format is Qt::ISODate, the string format corresponds
    to the ISO 8601 extended specification for representations of
    dates and times, taking the form yyyy-MM-dd, where yyyy is the
    year, MM is the month of the year (between 01 and 12), and dd is
    the day of the month between 01 and 31.

    If the \a format is Qt::RFC2822Date, the string is formatted in
    an \l{RFC 2822} compatible way. An example of this formatting is
    &quot;20 May 1995&quot;.

    If the date is invalid, an empty string will be returned.

    \warning The Qt::ISODate format is only valid for years in the
    range 0 to 9999.

    \sa fromString(), QLocale::toString()
*/</doc>
<use f='qtbase-6.5.0/src/sql/kernel/qsqldriver.cpp' l='579' u='c' c='_ZNK10QSqlDriver11formatValueERK9QSqlFieldb'/>
