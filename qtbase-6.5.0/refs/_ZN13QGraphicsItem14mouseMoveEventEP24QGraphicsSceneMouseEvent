<dec f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.h' l='382' type='void QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent * event)'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='6686' u='c' c='_ZN13QGraphicsItem10sceneEventEP6QEvent'/>
<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='7076' ll='7157' type='void QGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent * event)'/>
<ovr f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='10108' c='_ZN17QGraphicsTextItem14mouseMoveEventEP24QGraphicsSceneMouseEvent'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='10111' u='c' c='_ZN17QGraphicsTextItem14mouseMoveEventEP24QGraphicsSceneMouseEvent'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='7055'>/*!
    This event handler, for event \a event, can be reimplemented to
    receive mouse move events for this item. If you do receive this
    event, you can be certain that this item also received a mouse
    press event, and that this item is the current mouse grabber.

    Calling QEvent::ignore() or QEvent::accept() on \a event has no
    effect.

    The default implementation handles basic item interaction, such as
    selection and moving. If you want to keep the base implementation
    when reimplementing this function, call
    QGraphicsItem::mouseMoveEvent() in your reimplementation.

    Please note that mousePressEvent() decides which graphics item it
    is that receives mouse events. See the mousePressEvent()
    description for details.

    \sa mousePressEvent(), mouseReleaseEvent(),
    mouseDoubleClickEvent(), sceneEvent()
*/</doc>
<ovr f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsproxywidget.cpp' l='1209' c='_ZN20QGraphicsProxyWidget14mouseMoveEventEP24QGraphicsSceneMouseEvent'/>
