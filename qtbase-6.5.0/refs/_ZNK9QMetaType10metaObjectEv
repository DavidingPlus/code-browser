<use f='qtbase-6.5.0/src/corelib/kernel/qmetatype.h' l='415' u='c' c='_ZN9QMetaType17metaObjectForTypeEi'/>
<dec f='qtbase-6.5.0/src/corelib/kernel/qmetatype.h' l='456' type='const QMetaObject * QMetaType::metaObject() const'/>
<def f='qtbase-6.5.0/src/corelib/kernel/qmetatype.h' l='2624' ll='2627' type='const QMetaObject * QMetaType::metaObject() const'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qmetaobject.cpp' l='3637' u='c' c='_ZNK13QMetaProperty5writeEP7QObjectRK8QVariant'/>
<doc f='qtbase-6.5.0/src/corelib/kernel/qmetatype.cpp' l='613'>/*!
    \fn constexpr const QMetaObject *QMetaType::metaObject() const
    \since 5.5

    Returns a QMetaObject relative to this type.

    If the type is a pointer type to a subclass of QObject, flags() contains
    QMetaType::PointerToQObject and this function returns the corresponding QMetaObject.
    This can be used in combination with QMetaObject::newInstance() to create QObjects of this type.

    If the type is a Q_GADGET, flags() contains QMetaType::IsGadget.
    If the type is a pointer to a Q_GADGET, flags() contains QMetaType::PointerToGadget.
    In both cases, this function returns its QMetaObject.
    This can be used to retrieve QMetaMethod and QMetaProperty and use them on a
    pointer of this type for example, as given by QVariant::data().

    If the type is an enumeration, flags() contains QMetaType::IsEnumeration.
    In this case, this function returns the QMetaObject of the enclosing
    object if the enum was registered as a Q_ENUM or \nullptr otherwise.

    \sa QMetaType::flags()
*/</doc>
