<def f='include/freetype2/freetype/fttypes.h' l='467' ll='472'/>
<use f='include/freetype2/freetype/fttypes.h' l='467'/>
<size>16</size>
<doc f='include/freetype2/freetype/fttypes.h' l='438'>/**************************************************************************
   *
   * @struct:
   *   FT_Generic
   *
   * @description:
   *   Client applications often need to associate their own data to a
   *   variety of FreeType core objects.  For example, a text layout API
   *   might want to associate a glyph cache to a given size object.
   *
   *   Some FreeType object contains a `generic` field, of type `FT_Generic`,
   *   which usage is left to client applications and font servers.
   *
   *   It can be used to store a pointer to client-specific data, as well as
   *   the address of a &apos;finalizer&apos; function, which will be called by
   *   FreeType when the object is destroyed (for example, the previous
   *   client example would put the address of the glyph cache destructor in
   *   the `finalizer` field).
   *
   * @fields:
   *   data ::
   *     A typeless pointer to any client-specified data. This field is
   *     completely ignored by the FreeType library.
   *
   *   finalizer ::
   *     A pointer to a &apos;generic finalizer&apos; function, which will be called
   *     when the object is destroyed.  If this field is set to `NULL`, no
   *     code will be called.
   */</doc>
<mbr r='FT_Generic_::data' o='0' t='void *'/>
<mbr r='FT_Generic_::finalizer' o='64' t='FT_Generic_Finalizer'/>
