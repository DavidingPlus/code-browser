<dec f='qtbase-6.5.0/src/widgets/widgets/qcalendarwidget.h' l='72' type='QDate QCalendarWidget::maximumDate() const'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qcalendarwidget.cpp' l='1864' u='c' c='_ZN22QCalendarWidgetPrivate17updateCurrentPageE5QDate'/>
<def f='qtbase-6.5.0/src/widgets/widgets/qcalendarwidget.cpp' l='2557' ll='2561' type='QDate QCalendarWidget::maximumDate() const'/>
<doc f='qtbase-6.5.0/src/widgets/widgets/qcalendarwidget.cpp' l='2531'>/*!
    \property QCalendarWidget::maximumDate
    \brief the maximum date of the currently specified date range.

    The user will not be able to select a date which is after the
    currently set maximum date.

    \table
    \row
    \li \image qcalendarwidget-maximum.png
    \row
    \li
    \snippet code/src_gui_widgets_qcalendarwidget.cpp 2
    \endtable

    By default, the maximum date is the last day the QDate class can
    handle.

    When setting a maximum date, the minimumDate and selectedDate
    properties are adjusted if the selection range becomes invalid. If
    the provided date is not a valid QDate object, the
    setMaximumDate() function does nothing.

    \sa setDateRange()
*/</doc>
