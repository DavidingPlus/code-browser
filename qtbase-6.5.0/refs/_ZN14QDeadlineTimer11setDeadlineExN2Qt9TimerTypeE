<dec f='qtbase-6.5.0/src/corelib/kernel/qdeadlinetimer.h' l='53' type='void QDeadlineTimer::setDeadline(qint64 msecs, Qt::TimerType timerType = Qt::CoarseTimer)'/>
<def f='qtbase-6.5.0/src/corelib/kernel/qdeadlinetimer.cpp' l='770' ll='783' type='void QDeadlineTimer::setDeadline(qint64 msecs, Qt::TimerType timerType = Qt::CoarseTimer)'/>
<doc f='qtbase-6.5.0/src/corelib/kernel/qdeadlinetimer.cpp' l='757'>/*!
    Sets the deadline for this QDeadlineTimer object to be the \a msecs
    absolute time point, counted in milliseconds since the reference clock (the
    same as QElapsedTimer::msecsSinceReference()), and the timer type to \a
    timerType. If the value is in the past, this QDeadlineTimer will be marked
    as expired.

    If \a msecs is \c{std::numeric_limits&lt;qint64&gt;::max()} or the deadline is
    beyond a representable point in the future, this QDeadlineTimer will be set
    to never expire.

    \sa setPreciseDeadline(), deadline(), deadlineNSecs(), setRemainingTime()
*/</doc>
