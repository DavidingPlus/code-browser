<def f='qtbase-6.5.0/src/gui/text/qfontdatabase.h' l='18' ll='116'/>
<size>1</size>
<smbr r='QFontDatabase::staticMetaObject' t='const QMetaObject'/>
<fun r='_ZN13QFontDatabase26qt_check_for_QGADGET_macroEv'/>
<fun r='_ZN13QFontDatabase18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv'/>
<fun r='_ZN13QFontDatabase13standardSizesEv'/>
<fun r='_ZN13QFontDatabaseC1Ev'/>
<fun r='_ZN13QFontDatabase14writingSystemsEv'/>
<fun r='_ZN13QFontDatabase14writingSystemsERK7QString'/>
<fun r='_ZN13QFontDatabase8familiesENS_13WritingSystemE'/>
<fun r='_ZN13QFontDatabase6stylesERK7QString'/>
<fun r='_ZN13QFontDatabase10pointSizesERK7QStringS2_'/>
<fun r='_ZN13QFontDatabase11smoothSizesERK7QStringS2_'/>
<fun r='_ZN13QFontDatabase11styleStringERK5QFont'/>
<fun r='_ZN13QFontDatabase11styleStringERK9QFontInfo'/>
<fun r='_ZN13QFontDatabase4fontERK7QStringS2_i'/>
<fun r='_ZN13QFontDatabase16isBitmapScalableERK7QStringS2_'/>
<fun r='_ZN13QFontDatabase18isSmoothlyScalableERK7QStringS2_'/>
<fun r='_ZN13QFontDatabase10isScalableERK7QStringS2_'/>
<fun r='_ZN13QFontDatabase12isFixedPitchERK7QStringS2_'/>
<fun r='_ZN13QFontDatabase6italicERK7QStringS2_'/>
<fun r='_ZN13QFontDatabase4boldERK7QStringS2_'/>
<fun r='_ZN13QFontDatabase6weightERK7QStringS2_'/>
<fun r='_ZN13QFontDatabase9hasFamilyERK7QString'/>
<fun r='_ZN13QFontDatabase15isPrivateFamilyERK7QString'/>
<fun r='_ZN13QFontDatabase17writingSystemNameENS_13WritingSystemE'/>
<fun r='_ZN13QFontDatabase19writingSystemSampleENS_13WritingSystemE'/>
<fun r='_ZN13QFontDatabase18addApplicationFontERK7QString'/>
<fun r='_ZN13QFontDatabase26addApplicationFontFromDataERK10QByteArray'/>
<fun r='_ZN13QFontDatabase23applicationFontFamiliesEi'/>
<fun r='_ZN13QFontDatabase21removeApplicationFontEi'/>
<fun r='_ZN13QFontDatabase25removeAllApplicationFontsEv'/>
<fun r='_ZN13QFontDatabase10systemFontENS_10SystemFontE'/>
<doc f='qtbase-6.5.0/src/gui/text/qfontdatabase.cpp' l='1156'>/*!
    \class QFontDatabase
    \threadsafe
    \inmodule QtGui

    \brief The QFontDatabase class provides information about the fonts available in the underlying window system.

    \ingroup appearance

    The most common uses of this class are to query the database for
    the list of font families() and for the pointSizes() and styles()
    that are available for each family. An alternative to pointSizes()
    is smoothSizes() which returns the sizes at which a given family
    and style will look attractive.

    If the font family is available from two or more foundries the
    foundry name is included in the family name; for example:
    &quot;Helvetica [Adobe]&quot; and &quot;Helvetica [Cronyx]&quot;. When you specify a
    family, you can either use the old hyphenated &quot;foundry-family&quot;
    format or the bracketed &quot;family [foundry]&quot; format; for example:
    &quot;Cronyx-Helvetica&quot; or &quot;Helvetica [Cronyx]&quot;. If the family has a
    foundry it is always returned using the bracketed format, as is
    the case with the value returned by families().

    The font() function returns a QFont given a family, style and
    point size.

    A family and style combination can be checked to see if it is
    italic() or bold(), and to retrieve its weight(). Similarly we can
    call isBitmapScalable(), isSmoothlyScalable(), isScalable() and
    isFixedPitch().

    Use the styleString() to obtain a text version of a style.

    The QFontDatabase class provides some helper functions, for
    example, standardSizes(). You can retrieve the description of a
    writing system using writingSystemName(), and a sample of
    characters in a writing system with writingSystemSample().

    Example:

    \snippet qfontdatabase/qfontdatabase_snippets.cpp 0

    This example gets the list of font families, the list of
    styles for each family, and the point sizes that are available for
    each combination of family and style, displaying this information
    in a tree view.

    \sa QFont, QFontInfo, QFontMetrics, {Character Map Example}
*/</doc>
<fun r='_ZN13QFontDatabase11styleStringERK5QFont'/>
<fun r='_ZN13QFontDatabase11styleStringERK9QFontInfo'/>
<fun r='_ZN13QFontDatabase14writingSystemsEv'/>
<fun r='_ZN13QFontDatabase14writingSystemsERK7QString'/>
<fun r='_ZN13QFontDatabase8familiesENS_13WritingSystemE'/>
<fun r='_ZN13QFontDatabase6stylesERK7QString'/>
<fun r='_ZN13QFontDatabase12isFixedPitchERK7QStringS2_'/>
<fun r='_ZN13QFontDatabase16isBitmapScalableERK7QStringS2_'/>
<fun r='_ZN13QFontDatabase18isSmoothlyScalableERK7QStringS2_'/>
<fun r='_ZN13QFontDatabase10isScalableERK7QStringS2_'/>
<fun r='_ZN13QFontDatabase10pointSizesERK7QStringS2_'/>
<fun r='_ZN13QFontDatabase4fontERK7QStringS2_i'/>
<fun r='_ZN13QFontDatabase11smoothSizesERK7QStringS2_'/>
<fun r='_ZN13QFontDatabase13standardSizesEv'/>
<fun r='_ZN13QFontDatabase6italicERK7QStringS2_'/>
<fun r='_ZN13QFontDatabase4boldERK7QStringS2_'/>
<fun r='_ZN13QFontDatabase6weightERK7QStringS2_'/>
<fun r='_ZN13QFontDatabase9hasFamilyERK7QString'/>
<fun r='_ZN13QFontDatabase15isPrivateFamilyERK7QString'/>
<fun r='_ZN13QFontDatabase17writingSystemNameENS_13WritingSystemE'/>
<fun r='_ZN13QFontDatabase19writingSystemSampleENS_13WritingSystemE'/>
<fun r='_ZN13QFontDatabase18addApplicationFontERK7QString'/>
<fun r='_ZN13QFontDatabase26addApplicationFontFromDataERK10QByteArray'/>
<fun r='_ZN13QFontDatabase23applicationFontFamiliesEi'/>
<fun r='_ZN13QFontDatabase10systemFontENS_10SystemFontE'/>
<fun r='_ZN13QFontDatabase21removeApplicationFontEi'/>
<fun r='_ZN13QFontDatabase25removeAllApplicationFontsEv'/>
