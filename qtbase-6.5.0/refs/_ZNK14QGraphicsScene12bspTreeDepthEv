<dec f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsscene.h' l='105' type='int QGraphicsScene::bspTreeDepth() const'/>
<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsscene.cpp' l='1886' ll='1891' type='int QGraphicsScene::bspTreeDepth() const'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsscene.cpp' l='1854'>/*!
    \property QGraphicsScene::bspTreeDepth
    \brief the depth of QGraphicsScene&apos;s BSP index tree
    \since 4.3

    This property has no effect when NoIndex is used.

    This value determines the depth of QGraphicsScene&apos;s BSP tree. The depth
    directly affects QGraphicsScene&apos;s performance and memory usage; the latter
    growing exponentially with the depth of the tree. With an optimal tree
    depth, QGraphicsScene can instantly determine the locality of items, even
    for scenes with thousands or millions of items. This also greatly improves
    rendering performance.

    By default, the value is 0, in which case Qt will guess a reasonable
    default depth based on the size, location and number of items in the
    scene. If these parameters change frequently, however, you may experience
    slowdowns as QGraphicsScene retunes the depth internally. You can avoid
    potential slowdowns by fixating the tree depth through setting this
    property.

    The depth of the tree and the size of the scene rectangle decide the
    granularity of the scene&apos;s partitioning. The size of each scene segment is
    determined by the following algorithm:

    \snippet code/src_gui_graphicsview_qgraphicsscene.cpp 2

    The BSP tree has an optimal size when each segment contains between 0 and
    10 items.

    \sa itemIndexMethod
*/</doc>
