<dec f='qtbase-6.5.0/src/network/socket/qlocalserver.h' l='49' type='bool QLocalServer::listen(const QString &amp; name)'/>
<def f='qtbase-6.5.0/src/network/socket/qlocalserver.cpp' l='307' ll='330' type='bool QLocalServer::listen(const QString &amp; name)'/>
<doc f='qtbase-6.5.0/src/network/socket/qlocalserver.cpp' l='287'>/*!
    Tells the server to listen for incoming connections on \a name.
    If the server is currently listening then it will return false.
    Return true on success otherwise false.

    \a name can be a single name and QLocalServer will determine
    the correct platform specific path.  serverName() will return
    the name that is passed into listen.

    Usually you would just pass in a name like &quot;foo&quot;, but on Unix this
    could also be a path such as &quot;/tmp/foo&quot; and on Windows this could
    be a pipe path such as &quot;\\\\.\\pipe\\foo&quot;

    \note On Unix if the server crashes without closing listen will fail
    with AddressInUseError.  To create a new server the file should be removed.
    On Windows two local servers can listen to the same pipe at the same
    time, but any connections will go to one of the server.

    \sa serverName(), isListening(), close()
 */</doc>
