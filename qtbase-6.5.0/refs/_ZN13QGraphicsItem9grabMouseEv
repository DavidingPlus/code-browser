<dec f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.h' l='221' type='void QGraphicsItem::grabMouse()'/>
<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='3631' ll='3642' type='void QGraphicsItem::grabMouse()'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='3597'>/*!
    \since 4.4
    Grabs the mouse input.

    This item will receive all mouse events for the scene until any of the
    following events occurs:

    \list
    \li The item becomes invisible
    \li The item is removed from the scene
    \li The item is deleted
    \li The item call ungrabMouse()
    \li Another item calls grabMouse(); the item will regain the mouse grab
    when the other item calls ungrabMouse().
    \endlist

    When an item gains the mouse grab, it receives a QEvent::GrabMouse
    event. When it loses the mouse grab, it receives a QEvent::UngrabMouse
    event. These events can be used to detect when your item gains or loses
    the mouse grab through other means than receiving mouse button events.

    It is almost never necessary to explicitly grab the mouse in Qt, as Qt
    grabs and releases it sensibly. In particular, Qt grabs the mouse when you
    press a mouse button, and keeps the mouse grabbed until you release the
    last mouse button. Also, Qt::Popup widgets implicitly call grabMouse()
    when shown, and ungrabMouse() when hidden.

    Note that only visible items can grab mouse input. Calling grabMouse() on
    an invisible item has no effect.

    Keyboard events are not affected.

    \sa QGraphicsScene::mouseGrabberItem(), ungrabMouse(), grabKeyboard()
*/</doc>
<use f='qtbase-6.5.0/src/widgets/util/qflickgesture.cpp' l='240' u='c' c='_ZN17PressDelayHandler14sendMouseEventEP11QMouseEventi'/>
