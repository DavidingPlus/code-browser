<use f='include/freetype2/freetype/ftglyph.h' l='187'/>
<def f='include/freetype2/freetype/ftglyph.h' l='218' ll='223'/>
<use f='include/freetype2/freetype/ftglyph.h' l='218'/>
<size>80</size>
<doc f='include/freetype2/freetype/ftglyph.h' l='190'>/**************************************************************************
   *
   * @struct:
   *   FT_OutlineGlyphRec
   *
   * @description:
   *   A structure used for outline (vectorial) glyph images.  This really is
   *   a &apos;sub-class&apos; of @FT_GlyphRec.
   *
   * @fields:
   *   root ::
   *     The root @FT_Glyph fields.
   *
   *   outline ::
   *     A descriptor for the outline.
   *
   * @note:
   *   You can typecast an @FT_Glyph to @FT_OutlineGlyph if you have
   *   `glyph-&gt;format == FT_GLYPH_FORMAT_OUTLINE`.  This lets you access the
   *   outline&apos;s content easily.
   *
   *   As the outline is extracted from a glyph slot, its coordinates are
   *   expressed normally in 26.6 pixels, unless the flag @FT_LOAD_NO_SCALE
   *   was used in @FT_Load_Glyph or @FT_Load_Char.
   *
   *   The outline&apos;s tables are always owned by the object and are destroyed
   *   with it.
   */</doc>
<mbr r='FT_OutlineGlyphRec_::root' o='0' t='FT_GlyphRec'/>
<mbr r='FT_OutlineGlyphRec_::outline' o='320' t='FT_Outline'/>
