<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='37149'/>
<def f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='41239' ll='41257'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='41551' c='unixOpenSharedMemory'/>
<size>96</size>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='41210'>/*
** Object used to represent an shared memory buffer.
**
** When multiple threads all reference the same wal-index, each thread
** has its own unixShm object, but they all point to a single instance
** of this unixShmNode object.  In other words, each wal-index is opened
** only once per process.
**
** Each unixShmNode object is connected to a single unixInodeInfo object.
** We could coalesce this object into unixInodeInfo, but that would mean
** every open file that does not use shared memory (in other words, most
** open files) would have to carry around this extra information.  So
** the unixInodeInfo object contains a pointer to this unixShmNode object
** and the unixShmNode object is created only when needed.
**
** unixMutexHeld() must be true when creating or destroying
** this object or while reading or writing the following fields:
**
**      nRef
**
** The following fields are read-only after the object is created:
**
**      hShm
**      zFilename
**
** Either unixShmNode.pShmMutex must be held or unixShmNode.nRef==0 and
** unixMutexHeld() is true when reading or writing any other field
** in this structure.
*/</doc>
