<dec f='qtbase-6.5.0/src/openglwidgets/qopenglwidget.h' l='36' type='void QOpenGLWidget::~QOpenGLWidget()'/>
<inh f='qtbase-6.5.0/src/widgets/kernel/qwidget.h' l='214' c='_ZN7QWidgetD1Ev'/>
<def f='qtbase-6.5.0/src/openglwidgets/qopenglwidget.cpp' l='1125' ll='1135' type='void QOpenGLWidget::~QOpenGLWidget()'/>
<doc f='qtbase-6.5.0/src/openglwidgets/qopenglwidget.cpp' l='1108'>/*!
  Destroys the QOpenGLWidget instance, freeing its resources.

  The QOpenGLWidget&apos;s context is made current in the destructor, allowing for
  safe destruction of any child object that may need to release OpenGL
  resources belonging to the context provided by this widget.

  \warning if you have objects wrapping OpenGL resources (such as
  QOpenGLBuffer, QOpenGLShaderProgram, etc.) as members of a OpenGLWidget
  subclass, you may need to add a call to makeCurrent() in that subclass&apos;
  destructor as well. Due to the rules of C++ object destruction, those objects
  will be destroyed \e{before} calling this function (but after that the
  destructor of the subclass has run), therefore making the OpenGL context
  current in this function happens too late for their safe disposal.

  \sa makeCurrent
*/</doc>
