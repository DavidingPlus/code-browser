<dec f='qtbase-6.5.0/src/network/access/qnetworkrequest.h' l='117' type='QVariant QNetworkRequest::header(QNetworkRequest::KnownHeaders header) const'/>
<doc f='qtbase-6.5.0/src/network/access/qnetworkrequest.h' l='116'>// &quot;cooked&quot; headers</doc>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='1183' u='c' c='_ZN21QNetworkAccessManager13createRequestENS_9OperationERK15QNetworkRequestP9QIODevice'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='1654' u='c' c='_ZN28QNetworkAccessManagerPrivate16prepareMultipartERK15QNetworkRequestP14QHttpMultiPart'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyhttpimpl.cpp' l='198' u='c' c='_ZN21QNetworkReplyHttpImplC1EP21QNetworkAccessManagerRK15QNetworkRequestRNS0_9OperationEP9QIODevice'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyimpl.cpp' l='246' u='c' c='_ZN24QNetworkReplyImplPrivate5setupEN21QNetworkAccessManager9OperationERK15QNetworkRequestP9QIODevice'/>
<def f='qtbase-6.5.0/src/network/access/qnetworkrequest.cpp' l='598' ll='601' type='QVariant QNetworkRequest::header(QNetworkRequest::KnownHeaders header) const'/>
<doc f='qtbase-6.5.0/src/network/access/qnetworkrequest.cpp' l='591'>/*!
    Returns the value of the known network header \a header if it is
    present in this request. If it is not present, returns QVariant()
    (i.e., an invalid variant).

    \sa KnownHeaders, rawHeader(), setHeader()
*/</doc>
