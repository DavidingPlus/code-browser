<dec f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.h' l='83' type='bool QOpenGLShaderProgram::addShaderFromSourceFile(QOpenGLShader::ShaderType type, const QString &amp; fileName)'/>
<def f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.cpp' l='999' ll='1013' type='bool QOpenGLShaderProgram::addShaderFromSourceFile(QOpenGLShader::ShaderType type, const QString &amp; fileName)'/>
<use f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.cpp' l='1165' u='c' c='_ZN20QOpenGLShaderProgram32addCacheableShaderFromSourceFileE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK7QString'/>
<doc f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.cpp' l='987'>/*!
    Compiles the contents of \a fileName as a shader of the specified
    \a type and adds it to this shader program.  Returns \c true if
    compilation was successful, false otherwise.  The compilation errors
    and warnings will be made available via log().

    This function is intended to be a short-cut for quickly
    adding vertex and fragment shaders to a shader program without
    creating an instance of QOpenGLShader first.

    \sa addShader(), addShaderFromSourceCode()
*/</doc>
