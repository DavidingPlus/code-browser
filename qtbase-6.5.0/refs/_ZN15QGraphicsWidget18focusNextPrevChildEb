<dec f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicswidget.h' l='172' type='bool QGraphicsWidget::focusNextPrevChild(bool next)'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='2432' u='c' c='_ZN20QGraphicsItemPrivate16setVisibleHelperEbbbb'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='2631' u='c' c='_ZN20QGraphicsItemPrivate16setEnabledHelperEbbb'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='6708' u='c' c='_ZN13QGraphicsItem10sceneEventEP6QEvent'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='6714' u='c' c='_ZN13QGraphicsItem10sceneEventEP6QEvent'/>
<ovr f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsproxywidget.cpp' l='1415' c='_ZN20QGraphicsProxyWidget18focusNextPrevChildEb'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsproxywidget.cpp' l='1419' u='c' c='_ZN20QGraphicsProxyWidget18focusNextPrevChildEb'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsproxywidget.cpp' l='1428' u='c' c='_ZN20QGraphicsProxyWidget18focusNextPrevChildEb'/>
<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicswidget.cpp' l='1517' ll='1534' type='bool QGraphicsWidget::focusNextPrevChild(bool next)'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicswidget.cpp' l='1523' u='c' c='_ZN15QGraphicsWidget18focusNextPrevChildEb'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicswidget.cpp' l='1498'>/*!
    Finds a new widget to give the keyboard focus to, as appropriate for Tab
    and Shift+Tab, and returns \c true if it can find a new widget; returns \c false
    otherwise. If \a next is true, this function searches forward; if \a next
    is false, it searches backward.

    Sometimes, you will want to reimplement this function to provide special
    focus handling for your widget and its subwidgets. For example, a web
    browser might reimplement it to move its current active link forward or
    backward, and call the base implementation only when it reaches the last
    or first link on the page.

    Child widgets call focusNextPrevChild() on their parent widgets, but only
    the window that contains the child widgets decides where to redirect
    focus. By reimplementing this function for an object, you gain control of
    focus traversal for all child widgets.

    \sa focusPolicy()
*/</doc>
