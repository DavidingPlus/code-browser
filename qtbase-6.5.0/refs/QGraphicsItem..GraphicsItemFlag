<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.h' l='49' ll='71'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.h' l='72'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.h' l='148' c='_ZN13QGraphicsItem7setFlagENS_16GraphicsItemFlagEb'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.h' l='990' c='_Zls6QDebugN13QGraphicsItem16GraphicsItemFlagE'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem_p.h' l='152' c='_ZN20QGraphicsItemPrivate18updateAncestorFlagEN13QGraphicsItem16GraphicsItemFlagENS_12AncestorFlagEbb'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='929' c='_ZN20QGraphicsItemPrivate18updateAncestorFlagEN13QGraphicsItem16GraphicsItemFlagENS_12AncestorFlagEbb'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='1878' c='_ZN13QGraphicsItem7setFlagENS_16GraphicsItemFlagEb'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='3229' c='_ZN13QGraphicsItem21setFiltersChildEventsEb'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='3280' c='_ZN13QGraphicsItem21setHandlesChildEventsEb'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='11378' c='_Zls6QDebugN13QGraphicsItem16GraphicsItemFlagE'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='11456' c='_Zls6QDebug6QFlagsIN13QGraphicsItem16GraphicsItemFlagEE'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='323'>/*!
    \enum QGraphicsItem::GraphicsItemFlag

    This enum describes different flags that you can set on an item to
    toggle different features in the item&apos;s behavior.

    All flags are disabled by default.

    \value ItemIsMovable The item supports interactive movement using
    the mouse. By clicking on the item and then dragging, the item
    will move together with the mouse cursor. If the item has
    children, all children are also moved. If the item is part of a
    selection, all selected items are also moved. This feature is
    provided as a convenience through the base implementation of
    QGraphicsItem&apos;s mouse event handlers.

    \value ItemIsSelectable The item supports selection. Enabling this
    feature will enable setSelected() to toggle selection for the
    item. It will also let the item be selected automatically as a
    result of calling QGraphicsScene::setSelectionArea(), by clicking
    on an item, or by using rubber band selection in QGraphicsView.

    \value ItemIsFocusable The item supports keyboard input focus (i.e., it is
    an input item). Enabling this flag will allow the item to accept focus,
    which again allows the delivery of key events to
    QGraphicsItem::keyPressEvent() and QGraphicsItem::keyReleaseEvent().

    \value ItemClipsToShape The item clips to its own shape. The item cannot
    draw or receive mouse, tablet, drag and drop or hover events outside its
    shape. It is disabled by default. This behavior is enforced by
    QGraphicsView::drawItems() or QGraphicsScene::drawItems(). This flag was
    introduced in Qt 4.3.

    \value ItemClipsChildrenToShape The item clips the painting of all its
    descendants to its own shape. Items that are either direct or indirect
    children of this item cannot draw outside this item&apos;s shape. By default,
    this flag is disabled; children can draw anywhere. This behavior is
    enforced by QGraphicsView::drawItems() or
    QGraphicsScene::drawItems(). This flag was introduced in Qt 4.3.
    \note This flag is similar to ItemContainsChildrenInShape but in addition
    enforces the containment by clipping the children.

    \value ItemIgnoresTransformations The item ignores inherited
    transformations (i.e., its position is still anchored to its parent, but
    the parent or view rotation, zoom or shear transformations are ignored).
    This flag is useful for keeping text label items horizontal and unscaled,
    so they will still be readable if the view is transformed.  When set, the
    item&apos;s view geometry and scene geometry will be maintained separately. You
    must call deviceTransform() to map coordinates and detect collisions in
    the view. By default, this flag is disabled. This flag was introduced in
    Qt 4.3. \note With this flag set you can still scale the item itself, and
    that scale transformation will influence the item&apos;s children.

    \value ItemIgnoresParentOpacity The item ignores its parent&apos;s opacity. The
    item&apos;s effective opacity is the same as its own; it does not combine with
    the parent&apos;s opacity. This flags allows your item to keep its absolute
    opacity even if the parent is semitransparent. This flag was introduced in
    Qt 4.5.

    \value ItemDoesntPropagateOpacityToChildren The item doesn&apos;t propagate its
    opacity to its children. This flag allows you to create a semitransparent
    item that does not affect the opacity of its children. This flag was
    introduced in Qt 4.5.

    \value ItemStacksBehindParent The item is stacked behind its parent. By
    default, child items are stacked on top of the parent item. But setting
    this flag, the child will be stacked behind it. This flag is useful for
    drop shadow effects and for decoration objects that follow the parent
    item&apos;s geometry without drawing on top of it. This flag was introduced
    in Qt 4.5.

    \value ItemUsesExtendedStyleOption The item makes use of either
    \l{QStyleOptionGraphicsItem::} {exposedRect} in
    QStyleOptionGraphicsItem. By default, the
    \l{QStyleOptionGraphicsItem::} {exposedRect} is initialized to the
    item&apos;s boundingRect(). You can
    enable this flag for the style options to be set up with more
    fine-grained values. Use
    QStyleOptionGraphicsItem::levelOfDetailFromTransform() if you need
    a higher value. This flag was introduced in Qt 4.6.

    \value ItemHasNoContents The item does not paint anything (i.e., calling
    paint() on the item has no effect). You should set this flag on items that
    do not need to be painted to ensure that Graphics View avoids unnecessary
    painting preparations. This flag was introduced in Qt 4.6.

    \value ItemSendsGeometryChanges The item enables itemChange()
    notifications for ItemPositionChange, ItemPositionHasChanged,
    ItemTransformChange, ItemTransformHasChanged, ItemRotationChange,
    ItemRotationHasChanged, ItemScaleChange, ItemScaleHasChanged,
    ItemTransformOriginPointChange, and ItemTransformOriginPointHasChanged. For
    performance reasons, these notifications are disabled by default. You must
    enable this flag to receive notifications for position and transform
    changes. This flag was introduced in Qt 4.6.

    \value ItemAcceptsInputMethod The item supports input methods typically
    used for Asian languages.
    This flag was introduced in Qt 4.6.

    \value ItemNegativeZStacksBehindParent The item automatically
    stacks behind it&apos;s parent if it&apos;s z-value is negative. This flag
    enables setZValue() to toggle ItemStacksBehindParent. This flag
    was introduced in Qt 4.6.

    \value ItemIsPanel The item is a panel. A panel provides activation and
    contained focus handling. Only one panel can be active at a time (see
    QGraphicsItem::isActive()). When no panel is active, QGraphicsScene
    activates all non-panel items. Window items (i.e.,
    QGraphicsItem::isWindow() returns \c true) are panels. This flag was
    introduced in Qt 4.6.

    \omitvalue ItemIsFocusScope \omit Internal only (for now). \endomit

    \value ItemSendsScenePositionChanges The item enables itemChange()
    notifications for ItemScenePositionHasChanged. For performance reasons,
    these notifications are disabled by default. You must enable this flag
    to receive notifications for scene position changes. This flag was
    introduced in Qt 4.6.

    \omitvalue ItemStopsClickFocusPropagation \omit The item stops propagating
    click focus to items underneath when being clicked on. This flag
    allows you create a non-focusable item that can be clicked on without
    changing the focus. \endomit

    \omitvalue ItemStopsFocusHandling \omit Same as
    ItemStopsClickFocusPropagation, but also suppresses focus-out. This flag
    allows you to completely take over focus handling.
    This flag was introduced in Qt 4.7. \endomit

    \value ItemContainsChildrenInShape This flag indicates that all of the
    item&apos;s direct or indirect children only draw within the item&apos;s shape.
    Unlike ItemClipsChildrenToShape, this restriction is not enforced. Set
    ItemContainsChildrenInShape when you manually assure that drawing
    is bound to the item&apos;s shape and want to avoid the cost associated with
    enforcing the clip. Setting this flag enables more efficient drawing and
    collision detection. The flag is disabled by default.
    \note If both this flag and ItemClipsChildrenToShape are set, the clip
    will be enforced. This is equivalent to just setting
    ItemClipsChildrenToShape.

    This flag was introduced in Qt 5.4.
*/</doc>
