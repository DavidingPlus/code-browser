<dec f='qtbase-6.5.0/src/corelib/kernel/qsystemsemaphore.h' l='48' type='bool QSystemSemaphore::release(int n = 1)'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qsharedmemory.cpp' l='646' u='c' c='_ZN13QSharedMemory6unlockEv'/>
<def f='qtbase-6.5.0/src/corelib/kernel/qsystemsemaphore.cpp' l='269' ll='278' type='bool QSystemSemaphore::release(int n = 1)'/>
<doc f='qtbase-6.5.0/src/corelib/kernel/qsystemsemaphore.cpp' l='248'>/*!
  Releases \a n resources guarded by the semaphore. Returns \c true
  unless there is a system error.

  Example: Create a system semaphore having five resources; acquire
  them all and then release them all.

  \snippet code/src_corelib_kernel_qsystemsemaphore.cpp 1

  This function can also &quot;create&quot; resources. For example, immediately
  following the sequence of statements above, suppose we add the
  statement:

  \snippet code/src_corelib_kernel_qsystemsemaphore.cpp 2

  Ten new resources are now guarded by the semaphore, in addition to
  the five that already existed. You would not normally use this
  function to create more resources.

  \sa acquire()
 */</doc>
<use f='qtbase-6.5.0/src/tools/androidtestrunner/main.cpp' l='479' u='c' c='_ZN12RunnerLockerD1Ev'/>
