<dec f='qtbase-6.5.0/src/network/socket/qtcpserver.h' l='47' type='QTcpSocket * QTcpServer::nextPendingConnection()'/>
<def f='qtbase-6.5.0/src/network/socket/qtcpserver.cpp' l='544' ll='557' type='QTcpSocket * QTcpServer::nextPendingConnection()'/>
<doc f='qtbase-6.5.0/src/network/socket/qtcpserver.cpp' l='526'>/*!
    Returns the next pending connection as a connected QTcpSocket
    object.

    The socket is created as a child of the server, which means that
    it is automatically deleted when the QTcpServer object is
    destroyed. It is still a good idea to delete the object
    explicitly when you are done with it, to avoid wasting memory.

    \nullptr is returned if this function is called when there are no pending
    connections.

    \note The returned QTcpSocket object cannot be used from another
    thread. If you want to use an incoming connection from another thread,
    you need to override incomingConnection().

    \sa hasPendingConnections()
*/</doc>
<use f='qtbase-6.5.0/src/plugins/platforms/vnc/qvnc.cpp' l='625' u='c' c='_ZN10QVncServer13newConnectionEv'/>
