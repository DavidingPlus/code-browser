<dec f='qtbase-6.5.0/src/corelib/thread/qfuturewatcher.h' l='81' type='void QFutureWatcherBase::togglePaused()'/>
<def f='qtbase-6.5.0/src/corelib/thread/qfuturewatcher.cpp' l='208' ll='211' type='void QFutureWatcherBase::togglePaused()'/>
<doc f='qtbase-6.5.0/src/corelib/thread/qfuturewatcher.cpp' l='197'>/*! \fn template &lt;typename T&gt; void QFutureWatcher&lt;T&gt;::togglePaused()

    \deprecated [6.0] Use toggleSuspended() instead.

    Toggles the paused state of the asynchronous computation. In other words,
    if the computation is currently paused, calling this function resumes it;
    if the computation is running, it is paused. This is a convenience method
    for calling setPaused(!isPaused()).

    \sa setSuspended(), suspend(), resume()
*/</doc>
