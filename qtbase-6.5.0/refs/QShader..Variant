<def f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='105' ll='111'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='181' c='_ZN10QShaderKeyC1EN7QShader6SourceERK14QShaderVersionNS0_7VariantE'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='189' c='_ZNK10QShaderKey13sourceVariantEv'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='190' c='_ZN10QShaderKey16setSourceVariantEN7QShader7VariantE'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='195'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='273' c='_ZN15QRhiShaderStageC1ENS_4TypeERK7QShaderNS1_7VariantE'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='281' c='_ZNK15QRhiShaderStage13shaderVariantEv'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='282' c='_ZN15QRhiShaderStage16setShaderVariantEN7QShader7VariantE'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='287'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='1596' c='_ZN15QRhiShaderStageC1ENS_4TypeERK7QShaderNS1_7VariantE'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader.cpp' l='452' c='_ZL13readShaderKeyP11QDataStreamP10QShaderKey'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader.cpp' l='591' c='_ZN10QShaderKeyC1EN7QShader6SourceERK14QShaderVersionNS0_7VariantE'/>
<doc f='qtbase-6.5.0/src/gui/rhi/qshader.cpp' l='166'>/*!
    \enum QShader::Variant
    Describes what kind of shader code an entry contains.

    \value StandardShader The normal, unmodified version of the shader code.

    \value BatchableVertexShader Vertex shader rewritten to be suitable for Qt Quick scenegraph batching.

    \value UInt16IndexedVertexAsComputeShader A vertex shader meant to be used
    in a Metal pipeline with tessellation in combination with indexed draw
    calls sourcing index data from a uint16 index buffer. To support the Metal
    tessellation pipeline, the vertex shader is translated to a compute shader
    that may be dependent on the index buffer usage in the draw calls (e.g. if
    the shader is using gl_VertexIndex), hence the need for three dedicated
    variants.

    \value UInt32IndexedVertexAsComputeShader A vertex shader meant to be used
    in a Metal pipeline with tessellation in combination with indexed draw
    calls sourcing index data from a uint32 index buffer. To support the Metal
    tessellation pipeline, the vertex shader is translated to a compute shader
    that may be dependent on the index buffer usage in the draw calls (e.g. if
    the shader is using gl_VertexIndex), hence the need for three dedicated
    variants.

    \value NonIndexedVertexAsComputeShader A vertex shader meant to be used in
    a Metal pipeline with tessellation in combination with non-indexed draw
    calls. To support the Metal tessellation pipeline, the vertex shader is
    translated to a compute shader that may be dependent on the index buffer
    usage in the draw calls (e.g. if the shader is using gl_VertexIndex), hence
    the need for three dedicated variants.
 */</doc>
