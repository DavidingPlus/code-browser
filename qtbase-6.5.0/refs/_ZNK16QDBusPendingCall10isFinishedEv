<dec f='qtbase-6.5.0/src/dbus/qdbuspendingcall.h' l='34' type='bool QDBusPendingCall::isFinished() const'/>
<doc f='qtbase-6.5.0/src/dbus/qdbuspendingcall.h' l='33'>// pretend that they aren&apos;t here</doc>
<def f='qtbase-6.5.0/src/dbus/qdbuspendingcall.cpp' l='294' ll='301' type='bool QDBusPendingCall::isFinished() const'/>
<doc f='qtbase-6.5.0/src/dbus/qdbuspendingcall.cpp' l='266'>/*!
    \fn bool QDBusPendingCallWatcher::isFinished() const

    Returns \c true if the pending call has finished processing and the
    reply has been received.

    Note that this function only changes state if you call
    waitForFinished() or if an external D-Bus event happens, which in
    general only happens if you return to the event loop execution.

    \sa QDBusPendingReply::isFinished()
*/</doc>
<doc f='qtbase-6.5.0/src/dbus/qdbuspendingcall.cpp' l='279'>/*!
    \fn template &lt;typename... Types&gt; bool QDBusPendingReply&lt;Types...&gt;::isFinished() const

    Returns \c true if the pending call has finished processing and the
    reply has been received. If this function returns \c true, the
    isError(), error() and reply() methods should return valid
    information.

    Note that this function only changes state if you call
    waitForFinished() or if an external D-Bus event happens, which in
    general only happens if you return to the event loop execution.

    \sa QDBusPendingCallWatcher::isFinished()
*/</doc>
<use f='qtbase-6.5.0/src/plugins/platforminputcontexts/ibus/qibusplatforminputcontext.cpp' l='418' u='c' c='_ZN25QIBusPlatformInputContext11filterEventEPK6QEvent'/>
