<dec f='qtbase-6.5.0/src/widgets/kernel/qwidget.h' l='218' type='WId QWidget::winId() const'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='1224' u='c' c='_Z34q_createNativeChildrenAndSetParentPK7QWidget'/>
<def f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='2364' ll='2375' type='WId QWidget::winId() const'/>
<doc f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='2348'>/*!
    \fn WId QWidget::winId() const

    Returns the window system identifier of the widget.

    Portable in principle, but if you use it you are probably about to
    do something non-portable. Be careful.

    If a widget is non-native (alien) and winId() is invoked on it, that widget
    will be provided a native handle.

    This value may change at run-time. An event with type QEvent::WinIdChange
    will be sent to the widget following a change in window system identifier.

    \sa find()
*/</doc>
<use f='qtbase-6.5.0/src/widgets/kernel/qwindowcontainer.cpp' l='78' u='c' c='_ZN23QWindowContainerPrivate23updateUsesNativeWidgetsEv'/>
