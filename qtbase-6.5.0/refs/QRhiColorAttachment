<def f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='440' ll='476'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='478'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='478'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='478'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='478'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='478'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='484' c='_ZN34QRhiTextureRenderTargetDescriptionC1ERK19QRhiColorAttachment'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='485' c='_ZN34QRhiTextureRenderTargetDescriptionC1ERK19QRhiColorAttachmentP16QRhiRenderBuffer'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='486' c='_ZN34QRhiTextureRenderTargetDescriptionC1ERK19QRhiColorAttachmentP11QRhiTexture'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='488' c='_ZN34QRhiTextureRenderTargetDescription19setColorAttachmentsESt16initializer_listI19QRhiColorAttachmentE'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='495' c='_ZNK34QRhiTextureRenderTargetDescription22cbeginColorAttachmentsEv'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='496' c='_ZNK34QRhiTextureRenderTargetDescription20cendColorAttachmentsEv'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='497' c='_ZNK34QRhiTextureRenderTargetDescription17colorAttachmentAtEi'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='506'/>
<size>40</size>
<fun r='_ZN19QRhiColorAttachmentC1Ev'/>
<fun r='_ZN19QRhiColorAttachmentC1EP11QRhiTexture'/>
<fun r='_ZN19QRhiColorAttachmentC1EP16QRhiRenderBuffer'/>
<fun r='_ZNK19QRhiColorAttachment7textureEv'/>
<fun r='_ZN19QRhiColorAttachment10setTextureEP11QRhiTexture'/>
<fun r='_ZNK19QRhiColorAttachment12renderBufferEv'/>
<fun r='_ZN19QRhiColorAttachment15setRenderBufferEP16QRhiRenderBuffer'/>
<fun r='_ZNK19QRhiColorAttachment5layerEv'/>
<fun r='_ZN19QRhiColorAttachment8setLayerEi'/>
<fun r='_ZNK19QRhiColorAttachment5levelEv'/>
<fun r='_ZN19QRhiColorAttachment8setLevelEi'/>
<fun r='_ZNK19QRhiColorAttachment14resolveTextureEv'/>
<fun r='_ZN19QRhiColorAttachment17setResolveTextureEP11QRhiTexture'/>
<fun r='_ZNK19QRhiColorAttachment12resolveLayerEv'/>
<fun r='_ZN19QRhiColorAttachment15setResolveLayerEi'/>
<fun r='_ZNK19QRhiColorAttachment12resolveLevelEv'/>
<fun r='_ZN19QRhiColorAttachment15setResolveLevelEi'/>
<mbr r='QRhiColorAttachment::m_texture' o='0' t='QRhiTexture *'/>
<mbr r='QRhiColorAttachment::m_renderBuffer' o='64' t='QRhiRenderBuffer *'/>
<mbr r='QRhiColorAttachment::m_layer' o='128' t='int'/>
<mbr r='QRhiColorAttachment::m_level' o='160' t='int'/>
<mbr r='QRhiColorAttachment::m_resolveTexture' o='192' t='QRhiTexture *'/>
<mbr r='QRhiColorAttachment::m_resolveLayer' o='256' t='int'/>
<mbr r='QRhiColorAttachment::m_resolveLevel' o='288' t='int'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p_p.h' l='745' c='_ZN33QRhiRenderTargetAttachmentTracker15updateResIdListERK34QRhiTextureRenderTargetDescriptionP15QVarLengthArrayINS_5ResIdELx17EE'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='1733' c='_ZN34QRhiTextureRenderTargetDescriptionC1ERK19QRhiColorAttachment'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='1743' c='_ZN34QRhiTextureRenderTargetDescriptionC1ERK19QRhiColorAttachmentP16QRhiRenderBuffer'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='1758' c='_ZN34QRhiTextureRenderTargetDescriptionC1ERK19QRhiColorAttachmentP11QRhiTexture'/>
<size>40</size>
<doc f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='1649'>/*!
    \class QRhiColorAttachment
    \internal
    \inmodule QtGui
    \brief Describes the a single color attachment of a render target.

    A color attachment is either a QRhiTexture or a QRhiRenderBuffer. The
    former, when texture() is set, is used in most cases.

    \note texture() and renderBuffer() cannot be both set (be non-null at the
    same time).

    Setting renderBuffer instead is recommended only when multisampling is
    needed. Relying on QRhi::MultisampleRenderBuffer is a better choice than
    QRhi::MultisampleTexture in practice since the former is available in more
    run time configurations (e.g. when running on OpenGL ES 3.0 which has no
    support for multisample textures, but does support multisample
    renderbuffers).

    When targeting a non-multisample texture, the layer() and level() indicate
    the targeted layer (face index \c{0-5} for cubemaps) and mip level. For 3D
    textures layer() specifies the slice (one 2D image within the 3D texture)
    to render to. For texture arrays layer() is the array index.

    When texture() or renderBuffer() is multisample, resolveTexture() can be
    set optionally. When set, samples are resolved automatically into that
    (non-multisample) texture at the end of the render pass. When rendering
    into a multisample renderbuffers, this is the only way to get resolved,
    non-multisample content out of them. Multisample textures allow sampling in
    shaders so for them this is just one option.

    \note when resolving is enabled, the multisample data may not be written
    out at all. This means that the multisample texture() must not be used
    afterwards with shaders for sampling when resolveTexture() is set.
 */</doc>
<fun r='_ZN19QRhiColorAttachmentC1EP11QRhiTexture'/>
<fun r='_ZN19QRhiColorAttachmentC1EP16QRhiRenderBuffer'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhigles2.cpp' l='4105' c='_ZN9QRhiGles222enqueueBindFramebufferEP16QRhiRenderTargetP19QGles2CommandBufferPbS4_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhigles2.cpp' l='4203' c='_ZN9QRhiGles27endPassEP17QRhiCommandBufferP23QRhiResourceUpdateBatch'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhigles2.cpp' l='5456' c='_ZN25QGles2TextureRenderTarget6createEv'/>
<size>40</size>
<use f='qtbase-6.5.0/src/gui/rhi/qrhinull.cpp' l='813' c='_ZN24QNullTextureRenderTarget6createEv'/>
<size>40</size>
