<dec f='include/xkbcommon/xkbcommon.h' l='1420' type='int xkb_state_key_get_utf8(struct xkb_state * state, xkb_keycode_t key, char * buffer, size_t size)'/>
<use f='qtbase-6.5.0/src/gui/platform/unix/qxkbcommon.cpp' l='407' u='c' c='_ZN10QXkbCommon12lookupStringEP9xkb_statej'/>
<use f='qtbase-6.5.0/src/gui/platform/unix/qxkbcommon.cpp' l='410' u='c' c='_ZN10QXkbCommon12lookupStringEP9xkb_statej'/>
<doc f='include/xkbcommon/xkbcommon.h' l='1393'>/**
 * Get the Unicode/UTF-8 string obtained from pressing a particular key
 * in a given keyboard state.
 *
 * @param[in]  state  The keyboard state object.
 * @param[in]  key    The keycode of the key.
 * @param[out] buffer A buffer to write the string into.
 * @param[in]  size   Size of the buffer.
 *
 * @warning If the buffer passed is too small, the string is truncated
 * (though still NUL-terminated).
 *
 * @returns The number of bytes required for the string, excluding the
 * NUL byte.  If there is nothing to write, returns 0.
 *
 * You may check if truncation has occurred by comparing the return value
 * with the size of @p buffer, similarly to the snprintf(3) function.
 * You may safely pass NULL and 0 to @p buffer and @p size to find the
 * required size (without the NUL-byte).
 *
 * This function performs Capitalization and Control @ref
 * keysym-transformations.
 *
 * @memberof xkb_state
 * @since 0.4.1
 */</doc>
