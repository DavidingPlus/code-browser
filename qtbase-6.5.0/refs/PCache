<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='16571'/>
<def f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='52654' ll='52667'/>
<size>72</size>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='52629'>/*
** A complete page cache is an instance of this structure.  Every
** entry in the cache holds a single page of the database file.  The
** btree layer only operates on the cached copy of the database pages.
**
** A page cache entry is &quot;clean&quot; if it exactly matches what is currently
** on disk.  A page is &quot;dirty&quot; if it has been modified and needs to be
** persisted to disk.
**
** pDirty, pDirtyTail, pSynced:
**   All dirty pages are linked into the doubly linked list using
**   PgHdr.pDirtyNext and pDirtyPrev. The list is maintained in LRU order
**   such that p was added to the list more recently than p-&gt;pDirtyNext.
**   PCache.pDirty points to the first (newest) element in the list and
**   pDirtyTail to the last (oldest).
**
**   The PCache.pSynced variable is used to optimize searching for a dirty
**   page to eject from the cache mid-transaction. It is better to eject
**   a page that does not require a journal sync than one that does.
**   Therefore, pSynced is maintained so that it *almost* always points
**   to either the oldest page in the pDirty/pDirtyTail list that has a
**   clear PGHDR_NEED_SYNC flag or to a page that is older than this one
**   (so that the right page to eject can be found by following pDirtyPrev
**   pointers).
*/</doc>
