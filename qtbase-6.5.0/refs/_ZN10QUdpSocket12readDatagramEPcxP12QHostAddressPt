<dec f='qtbase-6.5.0/src/network/socket/qudpsocket.h' l='49' type='qint64 QUdpSocket::readDatagram(char * data, qint64 maxlen, QHostAddress * host = nullptr, quint16 * port = nullptr)'/>
<use f='qtbase-6.5.0/src/network/socket/qsocks5socketengine.cpp' l='1251' u='c' c='_ZN26QSocks5SocketEnginePrivate28_q_udpSocketReadNotificationEv'/>
<def f='qtbase-6.5.0/src/network/socket/qudpsocket.cpp' l='458' ll='493' type='qint64 QUdpSocket::readDatagram(char * data, qint64 maxSize, QHostAddress * address = nullptr, quint16 * port = nullptr)'/>
<doc f='qtbase-6.5.0/src/network/socket/qudpsocket.cpp' l='443'>/*!
    Receives a datagram no larger than \a maxSize bytes and stores
    it in \a data. The sender&apos;s host address and port is stored in
    *\a address and *\a port (unless the pointers are \nullptr).

    Returns the size of the datagram on success; otherwise returns
    -1.

    If \a maxSize is too small, the rest of the datagram will be
    lost. To avoid loss of data, call pendingDatagramSize() to
    determine the size of the pending datagram before attempting to
    read it. If \a maxSize is 0, the datagram will be discarded.

    \sa writeDatagram(), hasPendingDatagrams(), pendingDatagramSize()
*/</doc>
<use f='qtbase-6.5.0/src/plugins/generic/tuiotouch/qtuiohandler.cpp' l='109' u='c' c='_ZN12QTuioHandler14processPacketsEv'/>
