<dec f='qtbase-6.5.0/src/gui/kernel/qopenglcontext.h' l='119' type='static QOpenGLContext * QOpenGLContext::globalShareContext()'/>
<def f='qtbase-6.5.0/src/gui/kernel/qopenglcontext.cpp' l='947' ll='951' type='static QOpenGLContext * QOpenGLContext::globalShareContext()'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qopenglcontext.cpp' l='928'>/*!
    \since 5.5

    Returns the application-wide shared OpenGL context, if present.
    Otherwise, returns \nullptr.

    This is useful if you need to upload OpenGL objects (buffers, textures,
    etc.) before creating or showing a QOpenGLWidget or QQuickWidget.

    \note You must set the Qt::AA_ShareOpenGLContexts flag on QGuiApplication
    before creating the QGuiApplication object, otherwise Qt may not create a
    global shared context.

    \warning Do not attempt to make the context returned by this function
    current on any surface. Instead, you can create a new context which shares
    with the global one, and then make the new context current.

    \sa Qt::AA_ShareOpenGLContexts, setShareContext(), makeCurrent()
*/</doc>
<use f='qtbase-6.5.0/src/gui/kernel/qsurfaceformat.cpp' l='785' u='c' c='_ZN14QSurfaceFormat16setDefaultFormatERKS_'/>
