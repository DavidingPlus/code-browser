<inh f='qtbase-6.5.0/src/corelib/kernel/qobject.h' l='89' c='QObject'/>
<def f='qtbase-6.5.0/src/widgets/itemviews/qdatawidgetmapper.h' l='19' ll='81'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qdatawidgetmapper.h' l='74' c='_ZN17QDataWidgetMapperC1ERKS_'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qdatawidgetmapper.h' l='74' c='_ZN17QDataWidgetMapperaSERKS_'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qdatawidgetmapper.h' l='74' c='_ZN17QDataWidgetMapperaSERKS_'/>
<size>16</size>
<smbr r='QDataWidgetMapper::staticMetaObject' t='const QMetaObject'/>
<fun r='_ZNK17QDataWidgetMapper10metaObjectEv'/>
<fun r='_ZN17QDataWidgetMapper11qt_metacastEPKc'/>
<fun r='_ZN17QDataWidgetMapper11qt_metacallEN11QMetaObject4CallEiPPv'/>
<fun r='_ZN17QDataWidgetMapper2trEPKcS1_i'/>
<fun r='_ZN17QDataWidgetMapper18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv'/>
<fun r='_ZN17QDataWidgetMapperC1EP7QObject'/>
<fun r='_ZN17QDataWidgetMapperD1Ev'/>
<fun r='_ZN17QDataWidgetMapper8setModelEP18QAbstractItemModel'/>
<fun r='_ZNK17QDataWidgetMapper5modelEv'/>
<fun r='_ZN17QDataWidgetMapper15setItemDelegateEP21QAbstractItemDelegate'/>
<fun r='_ZNK17QDataWidgetMapper12itemDelegateEv'/>
<fun r='_ZN17QDataWidgetMapper12setRootIndexERK11QModelIndex'/>
<fun r='_ZNK17QDataWidgetMapper9rootIndexEv'/>
<fun r='_ZN17QDataWidgetMapper14setOrientationEN2Qt11OrientationE'/>
<fun r='_ZNK17QDataWidgetMapper11orientationEv'/>
<fun r='_ZN17QDataWidgetMapper15setSubmitPolicyENS_12SubmitPolicyE'/>
<fun r='_ZNK17QDataWidgetMapper12submitPolicyEv'/>
<fun r='_ZN17QDataWidgetMapper10addMappingEP7QWidgeti'/>
<fun r='_ZN17QDataWidgetMapper10addMappingEP7QWidgetiRK10QByteArray'/>
<fun r='_ZN17QDataWidgetMapper13removeMappingEP7QWidget'/>
<fun r='_ZNK17QDataWidgetMapper13mappedSectionEP7QWidget'/>
<fun r='_ZNK17QDataWidgetMapper18mappedPropertyNameEP7QWidget'/>
<fun r='_ZNK17QDataWidgetMapper14mappedWidgetAtEi'/>
<fun r='_ZN17QDataWidgetMapper12clearMappingEv'/>
<fun r='_ZNK17QDataWidgetMapper12currentIndexEv'/>
<fun r='_ZN17QDataWidgetMapper6revertEv'/>
<fun r='_ZN17QDataWidgetMapper6submitEv'/>
<fun r='_ZN17QDataWidgetMapper7toFirstEv'/>
<fun r='_ZN17QDataWidgetMapper6toLastEv'/>
<fun r='_ZN17QDataWidgetMapper6toNextEv'/>
<fun r='_ZN17QDataWidgetMapper10toPreviousEv'/>
<fun r='_ZN17QDataWidgetMapper15setCurrentIndexEi'/>
<fun r='_ZN17QDataWidgetMapper20setCurrentModelIndexERK11QModelIndex'/>
<fun r='_ZN17QDataWidgetMapper19currentIndexChangedEi'/>
<fun r='_ZN17QDataWidgetMapper6d_funcEv'/>
<fun r='_ZNK17QDataWidgetMapper6d_funcEv'/>
<fun r='_ZN17QDataWidgetMapperC1ERKS_'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qdatawidgetmapper.cpp' l='21' c='_ZN24QDataWidgetMapperPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qdatawidgetmapper.cpp' l='21' c='_ZN24QDataWidgetMapperPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qdatawidgetmapper.cpp' l='21' c='_ZNK24QDataWidgetMapperPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qdatawidgetmapper.cpp' l='21' c='_ZNK24QDataWidgetMapperPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qdatawidgetmapper.cpp' l='21'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qdatawidgetmapper.cpp' l='194' c='_ZN24QDataWidgetMapperPrivate17_q_modelDestroyedEv'/>
<size>16</size>
<doc f='qtbase-6.5.0/src/widgets/itemviews/qdatawidgetmapper.cpp' l='200'>/*!
    \class QDataWidgetMapper
    \brief The QDataWidgetMapper class provides mapping between a section
    of a data model to widgets.
    \since 4.2
    \ingroup model-view
    \ingroup advanced
    \inmodule QtWidgets

    QDataWidgetMapper can be used to create data-aware widgets by mapping
    them to sections of an item model. A section is a column of a model
    if the orientation is horizontal (the default), otherwise a row.

    Every time the current index changes, each widget is updated with data
    from the model via the property specified when its mapping was made.
    If the user edits the contents of a widget, the changes are read using
    the same property and written back to the model.
    By default, each widget&apos;s \l{Q_PROPERTY()}{user property} is used to
    transfer data between the model and the widget. Since Qt 4.3, an
    additional addMapping() function enables a named property to be used
    instead of the default user property.

    It is possible to set an item delegate to support custom widgets. By default,
    a QItemDelegate is used to synchronize the model with the widgets.

    Let us assume that we have an item model named \c{model} with the following contents:

    \table
    \row \li 1 \li Qt Norway       \li Oslo
    \row \li 2 \li Qt Australia    \li Brisbane
    \row \li 3 \li Qt USA          \li Palo Alto
    \row \li 4 \li Qt China        \li Beijing
    \row \li 5 \li Qt Germany      \li Berlin
    \endtable

    The following code will map the columns of the model to widgets called \c mySpinBox,
    \c myLineEdit and \c{myCountryChooser}:

    \snippet code/src_gui_itemviews_qdatawidgetmapper.cpp 0

    After the call to toFirst(), \c mySpinBox displays the value \c{1}, \c myLineEdit
    displays \c{Qt Norway} and \c myCountryChooser displays \c{Oslo}. The
    navigational functions toFirst(), toNext(), toPrevious(), toLast() and setCurrentIndex()
    can be used to navigate in the model and update the widgets with contents from
    the model.

    The setRootIndex() function enables a particular item in a model to be
    specified as the root index - children of this item will be mapped to
    the relevant widgets in the user interface.

    QDataWidgetMapper supports two submit policies, \c AutoSubmit and \c{ManualSubmit}.
    \c AutoSubmit will update the model as soon as the current widget loses focus,
    \c ManualSubmit will not update the model unless submit() is called. \c ManualSubmit
    is useful when displaying a dialog that lets the user cancel all modifications.
    Also, other views that display the model won&apos;t update until the user finishes
    all their modifications and submits.

    Note that QDataWidgetMapper keeps track of external modifications. If the contents
    of the model are updated in another module of the application, the widgets are
    updated as well.

    \sa QAbstractItemModel, QAbstractItemDelegate
 */</doc>
<fun r='_ZN17QDataWidgetMapperC1EP7QObject'/>
<fun r='_ZN17QDataWidgetMapperD1Ev'/>
<fun r='_ZN17QDataWidgetMapper8setModelEP18QAbstractItemModel'/>
<fun r='_ZNK17QDataWidgetMapper5modelEv'/>
<fun r='_ZN17QDataWidgetMapper15setItemDelegateEP21QAbstractItemDelegate'/>
<fun r='_ZNK17QDataWidgetMapper12itemDelegateEv'/>
<fun r='_ZN17QDataWidgetMapper12setRootIndexERK11QModelIndex'/>
<fun r='_ZNK17QDataWidgetMapper9rootIndexEv'/>
<fun r='_ZN17QDataWidgetMapper10addMappingEP7QWidgeti'/>
<fun r='_ZN17QDataWidgetMapper10addMappingEP7QWidgetiRK10QByteArray'/>
<fun r='_ZN17QDataWidgetMapper13removeMappingEP7QWidget'/>
<fun r='_ZNK17QDataWidgetMapper13mappedSectionEP7QWidget'/>
<fun r='_ZNK17QDataWidgetMapper18mappedPropertyNameEP7QWidget'/>
<fun r='_ZNK17QDataWidgetMapper14mappedWidgetAtEi'/>
<fun r='_ZN17QDataWidgetMapper6revertEv'/>
<fun r='_ZN17QDataWidgetMapper6submitEv'/>
<fun r='_ZN17QDataWidgetMapper7toFirstEv'/>
<fun r='_ZN17QDataWidgetMapper6toLastEv'/>
<fun r='_ZN17QDataWidgetMapper6toNextEv'/>
<fun r='_ZN17QDataWidgetMapper10toPreviousEv'/>
<fun r='_ZN17QDataWidgetMapper15setCurrentIndexEi'/>
<fun r='_ZNK17QDataWidgetMapper12currentIndexEv'/>
<fun r='_ZN17QDataWidgetMapper20setCurrentModelIndexERK11QModelIndex'/>
<fun r='_ZN17QDataWidgetMapper12clearMappingEv'/>
<fun r='_ZN17QDataWidgetMapper14setOrientationEN2Qt11OrientationE'/>
<fun r='_ZNK17QDataWidgetMapper11orientationEv'/>
<fun r='_ZN17QDataWidgetMapper15setSubmitPolicyENS_12SubmitPolicyE'/>
<fun r='_ZNK17QDataWidgetMapper12submitPolicyEv'/>
