<dec f='qtbase-6.5.0/src/corelib/plugin/qpluginloader.h' l='30' type='QObject * QPluginLoader::instance()'/>
<def f='qtbase-6.5.0/src/corelib/plugin/qpluginloader.cpp' l='139' ll='144' type='QObject * QPluginLoader::instance()'/>
<doc f='qtbase-6.5.0/src/corelib/plugin/qpluginloader.cpp' l='119'>/*!
    Returns the root component object of the plugin. The plugin is
    loaded if necessary. The function returns \nullptr if the plugin could
    not be loaded or if the root component object could not be
    instantiated.

    If the root component object was destroyed, calling this function
    creates a new instance.

    The root component, returned by this function, is not deleted when
    the QPluginLoader is destroyed. If you want to ensure that the root
    component is deleted, you should call unload() as soon you don&apos;t
    need to access the core component anymore.  When the library is
    finally unloaded, the root component will automatically be deleted.

    The component object is a QObject. Use qobject_cast() to access
    interfaces you are interested in.

    \sa load()
*/</doc>
