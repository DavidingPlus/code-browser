<dec f='qtbase-6.5.0/src/corelib/kernel/qdeadlinetimer.h' l='39' type='bool QDeadlineTimer::hasExpired() const'/>
<def f='qtbase-6.5.0/src/corelib/kernel/qdeadlinetimer.cpp' l='587' ll='592' type='bool QDeadlineTimer::hasExpired() const'/>
<doc f='qtbase-6.5.0/src/corelib/kernel/qdeadlinetimer.cpp' l='577'>/*!
    Returns true if this QDeadlineTimer object has expired, false if there
    remains time left. For objects that have expired, remainingTime() will
    return zero and deadline() will return a time point in the past.

    QDeadlineTimer objects created with the \l {ForeverConstant} never expire
    and this function always returns false for them.

    \sa isForever(), remainingTime()
*/</doc>
<use f='qtbase-6.5.0/src/corelib/thread/qthreadpool.cpp' l='290' u='c' c='_ZN18QThreadPoolPrivate11waitForDoneERK14QDeadlineTimer'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccesscache.cpp' l='217' u='c' c='_ZN19QNetworkAccessCache10timerEventEP11QTimerEvent'/>
