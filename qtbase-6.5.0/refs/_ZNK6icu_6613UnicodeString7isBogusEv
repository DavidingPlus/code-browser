<dec f='include/unicode/unistr.h' l='1844' type='UBool icu_66::UnicodeString::isBogus() const'/>
<def f='include/unicode/unistr.h' l='3904' ll='3906' type='UBool icu_66::UnicodeString::isBogus() const'/>
<use f='include/unicode/unistr.h' l='3941' u='c' c='_ZNK6icu_6613UnicodeString9doCompareEiiRKS0_ii'/>
<use f='include/unicode/unistr.h' l='3942' u='c' c='_ZNK6icu_6613UnicodeString9doCompareEiiRKS0_ii'/>
<use f='include/unicode/unistr.h' l='3952' u='c' c='_ZNK6icu_6613UnicodeStringeqERKS0_'/>
<use f='include/unicode/unistr.h' l='3953' u='c' c='_ZNK6icu_6613UnicodeStringeqERKS0_'/>
<use f='include/unicode/unistr.h' l='3956' u='c' c='_ZNK6icu_6613UnicodeStringeqERKS0_'/>
<use f='include/unicode/unistr.h' l='4033' u='c' c='_ZNK6icu_6613UnicodeString23doCompareCodePointOrderEiiRKS0_ii'/>
<use f='include/unicode/unistr.h' l='4034' u='c' c='_ZNK6icu_6613UnicodeString23doCompareCodePointOrderEiiRKS0_ii'/>
<use f='include/unicode/unistr.h' l='4095' u='c' c='_ZNK6icu_6613UnicodeString13doCaseCompareEiiRKS0_iij'/>
<use f='include/unicode/unistr.h' l='4096' u='c' c='_ZNK6icu_6613UnicodeString13doCaseCompareEiiRKS0_iij'/>
<use f='include/unicode/unistr.h' l='4168' u='c' c='_ZNK6icu_6613UnicodeString7indexOfERKS0_iiii'/>
<use f='include/unicode/unistr.h' l='4265' u='c' c='_ZNK6icu_6613UnicodeString11lastIndexOfERKS0_iiii'/>
<use f='include/unicode/unistr.h' l='4699' u='c' c='_ZN6icu_6613UnicodeString6removeEv'/>
<use f='include/unicode/unistr.h' l='4732' u='c' c='_ZN6icu_6613UnicodeString8truncateEi'/>
<doc f='include/unicode/unistr.h' l='1832'>/**
   * Determine if this object contains a valid string.
   * A bogus string has no value. It is different from an empty string,
   * although in both cases isEmpty() returns TRUE and length() returns 0.
   * setToBogus() and isBogus() can be used to indicate that no string value is available.
   * For a bogus string, getBuffer() and getTerminatedBuffer() return NULL, and
   * length() returns 0.
   *
   * @return TRUE if the string is bogus/invalid, FALSE otherwise
   * @see setToBogus()
   * @stable ICU 2.0
   */</doc>
