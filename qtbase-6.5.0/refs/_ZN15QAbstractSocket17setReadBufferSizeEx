<dec f='qtbase-6.5.0/src/network/socket/qabstractsocket.h' l='157' type='void QAbstractSocket::setReadBufferSize(qint64 size)'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnectionchannel.cpp' l='397' u='c' c='_ZN29QHttpNetworkConnectionChannel16ensureConnectionEv'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnectionchannel.cpp' l='405' u='c' c='_ZN29QHttpNetworkConnectionChannel16ensureConnectionEv'/>
<def f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='2732' ll='2746' type='void QAbstractSocket::setReadBufferSize(qint64 size)'/>
<doc f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='2710'>/*!
    Sets the size of QAbstractSocket&apos;s internal read buffer to be \a
    size bytes.

    If the buffer size is limited to a certain size, QAbstractSocket
    won&apos;t buffer more than this size of data. Exceptionally, a buffer
    size of 0 means that the read buffer is unlimited and all
    incoming data is buffered. This is the default.

    This option is useful if you only read the data at certain points
    in time (e.g., in a real-time streaming application) or if you
    want to protect your socket against receiving too much data,
    which may eventually cause your application to run out of memory.

    Only QTcpSocket uses QAbstractSocket&apos;s internal buffer; QUdpSocket
    does not use any buffering at all, but rather relies on the
    implicit buffering provided by the operating system.
    Because of this, calling this function on QUdpSocket has no
    effect.

    \sa readBufferSize(), read()
*/</doc>
<use f='qtbase-6.5.0/src/network/socket/qhttpsocketengine.cpp' l='118' u='c' c='_ZN17QHttpSocketEngine15connectInternalEv'/>
<use f='qtbase-6.5.0/src/network/socket/qlocalsocket_unix.cpp' l='578' u='c' c='_ZN12QLocalSocket17setReadBufferSizeEx'/>
<use f='qtbase-6.5.0/src/network/socket/qsocks5socketengine.cpp' l='1089' u='c' c='_ZN19QSocks5SocketEngine15connectInternalEv'/>
