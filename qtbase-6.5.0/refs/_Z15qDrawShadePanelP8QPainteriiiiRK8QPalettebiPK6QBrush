<dec f='qtbase-6.5.0/src/widgets/styles/qdrawutil.h' l='44' type='void qDrawShadePanel(QPainter * p, int x, int y, int w, int h, const QPalette &amp; pal, bool sunken = false, int lineWidth = 1, const QBrush * fill = nullptr)'/>
<use f='qtbase-6.5.0/src/widgets/styles/qcommonstyle.cpp' l='174' u='c' c='_ZNK12QCommonStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/styles/qcommonstyle.cpp' l='453' u='c' c='_ZNK12QCommonStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/styles/qcommonstyle.cpp' l='455' u='c' c='_ZNK12QCommonStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/styles/qcommonstyle.cpp' l='461' u='c' c='_ZNK12QCommonStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/styles/qcommonstyle.cpp' l='463' u='c' c='_ZNK12QCommonStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget'/>
<def f='qtbase-6.5.0/src/widgets/styles/qdrawutil.cpp' l='330' ll='410' type='void qDrawShadePanel(QPainter * p, int x, int y, int w, int h, const QPalette &amp; pal, bool sunken = false, int lineWidth = 1, const QBrush * fill = nullptr)'/>
<use f='qtbase-6.5.0/src/widgets/styles/qdrawutil.cpp' l='730' u='c' c='_Z15qDrawShadePanelP8QPainterRK5QRectRK8QPalettebiPK6QBrush'/>
<doc f='qtbase-6.5.0/src/widgets/styles/qdrawutil.cpp' l='301'>/*!
    \fn void qDrawShadePanel(QPainter *painter, int x, int y, int width, int height,
                      const QPalette &amp;palette, bool sunken,
                      int lineWidth, const QBrush *fill)
    \relates &lt;qdrawutil.h&gt;

    Draws the shaded panel beginning at (\a x, \a y) with the given \a
    width and \a height using the provided \a painter and the given \a
    lineWidth.

    The given \a palette specifies the shading colors (\l
    {QPalette::light()}{light}, \l {QPalette::dark()}{dark} and \l
    {QPalette::mid()}{middle} colors).  The panel&apos;s interior is filled
    with the \a fill brush unless \a fill is \nullptr.

    The panel appears sunken if \a sunken is true, otherwise raised.

    \warning This function does not look at QWidget::style() or
    QApplication::style(). Use the drawing functions in QStyle to make
    widgets that follow the current GUI style.

    Alternatively you can use a QFrame widget and apply the
    QFrame::setFrameStyle() function to display a shaded panel:

    \snippet code/src_gui_painting_qdrawutil.cpp 2

    \sa qDrawWinPanel(), qDrawShadeLine(), qDrawShadeRect(), QStyle
*/</doc>
<use f='qtbase-6.5.0/src/widgets/styles/qwindowsstyle.cpp' l='670' u='c' c='_ZNK13QWindowsStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/styles/qwindowsstyle.cpp' l='672' u='c' c='_ZNK13QWindowsStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/styles/qwindowsstyle.cpp' l='678' u='c' c='_ZNK13QWindowsStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/styles/qwindowsstyle.cpp' l='680' u='c' c='_ZNK13QWindowsStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget'/>
