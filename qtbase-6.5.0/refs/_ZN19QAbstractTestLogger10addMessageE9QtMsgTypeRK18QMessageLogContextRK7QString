<dec f='qtbase-6.5.0/src/testlib/qabstracttestlogger_p.h' l='73' type='void QAbstractTestLogger::addMessage(QtMsgType , const QMessageLogContext &amp; , const QString &amp; )'/>
<def f='qtbase-6.5.0/src/testlib/qabstracttestlogger.cpp' l='350' ll='370' type='void QAbstractTestLogger::addMessage(QtMsgType type, const QMessageLogContext &amp; context, const QString &amp; message)'/>
<doc f='qtbase-6.5.0/src/testlib/qabstracttestlogger.cpp' l='333'>/*!
    \overload

    This virtual method is called from the custom message handler QtTest
    installs in place of Qt&apos;s default message handler for the duration of
    testing, unless QTest::ignoreMessage() was used to ignore it, or too many
    messages have previously been processed. (The limiting number of messages is
    controlled by the -maxwarnings option to a test and defaults to 2002.)

    Logging implementations should not normally need to override this method.
    The base implementation converts \a type to the matching \l MessageType,
    formats the given \a message suitably for the specified \a context, and
    forwards the converted type and formatted message to the overload that takes
    MessageType and QString.

    \sa QTest::ignoreMessage(), addIncident()
*/</doc>
<ovr f='qtbase-6.5.0/src/testlib/qplaintestlogger.cpp' l='487' c='_ZN16QPlainTestLogger10addMessageE9QtMsgTypeRK18QMessageLogContextRK7QString'/>
<use f='qtbase-6.5.0/src/testlib/qplaintestlogger.cpp' l='489' u='c' c='_ZN16QPlainTestLogger10addMessageE9QtMsgTypeRK18QMessageLogContextRK7QString'/>
<use f='qtbase-6.5.0/src/testlib/qtestlog.cpp' l='238' u='c' c='_ZN5QTestL14messageHandlerE9QtMsgTypeRK18QMessageLogContextRK7QString'/>
