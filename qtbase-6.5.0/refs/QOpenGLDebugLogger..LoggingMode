<def f='qtbase-6.5.0/src/opengl/qopengldebug.h' l='125' ll='128'/>
<use f='qtbase-6.5.0/src/opengl/qopengldebug.h' l='129' c='_Z20qt_getEnumMetaObjectN18QOpenGLDebugLogger11LoggingModeE'/>
<use f='qtbase-6.5.0/src/opengl/qopengldebug.h' l='129' c='_Z14qt_getEnumNameN18QOpenGLDebugLogger11LoggingModeE'/>
<use f='qtbase-6.5.0/src/opengl/qopengldebug.h' l='137' c='_ZNK18QOpenGLDebugLogger11loggingModeEv'/>
<use f='qtbase-6.5.0/src/opengl/qopengldebug.h' l='166' c='_ZN18QOpenGLDebugLogger12startLoggingENS_11LoggingModeE'/>
<use f='qtbase-6.5.0/src/opengl/qopengldebug.cpp' l='1064'/>
<use f='qtbase-6.5.0/src/opengl/qopengldebug.cpp' l='1393' c='_ZN18QOpenGLDebugLogger12startLoggingENS_11LoggingModeE'/>
<use f='qtbase-6.5.0/src/opengl/qopengldebug.cpp' l='1430' c='_ZNK18QOpenGLDebugLogger11loggingModeEv'/>
<doc f='qtbase-6.5.0/src/opengl/qopengldebug.cpp' l='355'>/*!
    \enum QOpenGLDebugLogger::LoggingMode

    The LoggingMode enum defines the logging mode of the logger object.

    \value AsynchronousLogging
        Messages from the OpenGL server are logged asynchronously. This means
        that messages can be logged some time after the corresponding OpenGL
        actions that caused them, and even be received in an out-of-order
        fashion, depending on the OpenGL implementation. This mode has a very low
        performance penalty, as OpenGL implementations are heavily threaded
        and asynchronous by nature.

    \value SynchronousLogging
        Messages from the OpenGL server are logged synchronously and
        sequentially. This has a severe performance hit, as OpenGL
        implementations are very asynchronous by nature; but it&apos;s very useful
        to debug OpenGL problems, as OpenGL guarantees that the messages
        generated by a OpenGL command will be logged before the corresponding
        command execution has returned. Therefore, you can install a breakpoint
        on the messageLogged() signal and see in the backtrace which OpenGL
        command caused it; the only caveat is that if you are using OpenGL from
        multiple threads you may need to force direct connection when
        connecting to the messageLogged() signal.
*/

// When using OpenGL ES 2.0, all the necessary GL_KHR_debug constants are
// provided in qopengles2ext.h. Unfortunately, newer versions of that file
// suffix everything with _KHR which causes extra headache when the goal is
// to have a single piece of code that builds in all our target
// environments. Therefore, try to detect this and use our custom defines
// instead, which we anyway need for OS X.</doc>
