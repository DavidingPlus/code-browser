<inh f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicstransform.h' l='20' c='QGraphicsTransform'/>
<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicstransform.h' l='43' ll='78'/>
<size>16</size>
<smbr r='QGraphicsScale::staticMetaObject' t='const QMetaObject'/>
<fun r='_ZNK14QGraphicsScale10metaObjectEv'/>
<fun r='_ZN14QGraphicsScale11qt_metacastEPKc'/>
<fun r='_ZN14QGraphicsScale11qt_metacallEN11QMetaObject4CallEiPPv'/>
<fun r='_ZN14QGraphicsScale2trEPKcS1_i'/>
<fun r='_ZN14QGraphicsScale18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv'/>
<fun r='_ZN14QGraphicsScaleC1EP7QObject'/>
<fun r='_ZN14QGraphicsScaleD1Ev'/>
<fun r='_ZNK14QGraphicsScale6originEv'/>
<fun r='_ZN14QGraphicsScale9setOriginERK9QVector3D'/>
<fun r='_ZNK14QGraphicsScale6xScaleEv'/>
<fun r='_ZN14QGraphicsScale9setXScaleEd'/>
<fun r='_ZNK14QGraphicsScale6yScaleEv'/>
<fun r='_ZN14QGraphicsScale9setYScaleEd'/>
<fun r='_ZNK14QGraphicsScale6zScaleEv'/>
<fun r='_ZN14QGraphicsScale9setZScaleEd'/>
<fun r='_ZNK14QGraphicsScale7applyToEP10QMatrix4x4'/>
<fun r='_ZN14QGraphicsScale13originChangedEv'/>
<fun r='_ZN14QGraphicsScale13xScaleChangedEv'/>
<fun r='_ZN14QGraphicsScale13yScaleChangedEv'/>
<fun r='_ZN14QGraphicsScale13zScaleChangedEv'/>
<fun r='_ZN14QGraphicsScale12scaleChangedEv'/>
<fun r='_ZN14QGraphicsScale6d_funcEv'/>
<fun r='_ZNK14QGraphicsScale6d_funcEv'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicstransform.cpp' l='143'>/*!
  \class QGraphicsScale
  \brief The QGraphicsScale class provides a scale transformation.
  \since 4.6
  \inmodule QtWidgets

  QGraphicsScene provides certain parameters to help control how the scale
  should be applied.

  The origin is the point that the item is scaled from (i.e., it stays fixed
  relative to the parent as the rest of the item grows). By default the
  origin is QPointF(0, 0).

  The parameters xScale, yScale, and zScale describe the scale factors to
  apply in horizontal, vertical, and depth directions. They can take on any
  value, including 0 (to collapse the item to a point) or negative value.
  A negative xScale value will mirror the item horizontally. A negative yScale
  value will flip the item vertically. A negative zScale will flip the
  item end for end.

  \sa QGraphicsTransform, QGraphicsItem::setScale(), QTransform::scale()
*/</doc>
<fun r='_ZN14QGraphicsScaleC1EP7QObject'/>
<fun r='_ZN14QGraphicsScaleD1Ev'/>
<fun r='_ZNK14QGraphicsScale6originEv'/>
<fun r='_ZN14QGraphicsScale9setOriginERK9QVector3D'/>
<fun r='_ZNK14QGraphicsScale6xScaleEv'/>
<fun r='_ZN14QGraphicsScale9setXScaleEd'/>
<fun r='_ZNK14QGraphicsScale6yScaleEv'/>
<fun r='_ZN14QGraphicsScale9setYScaleEd'/>
<fun r='_ZNK14QGraphicsScale6zScaleEv'/>
<fun r='_ZN14QGraphicsScale9setZScaleEd'/>
<fun r='_ZNK14QGraphicsScale7applyToEP10QMatrix4x4'/>
