<def f='qtbase-6.5.0/src/network/access/qnetworkrequest.h' l='72' ll='77'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='1164' c='_ZN21QNetworkAccessManager13createRequestENS_9OperationERK15QNetworkRequestP9QIODevice'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='1165' c='_ZN21QNetworkAccessManager13createRequestENS_9OperationERK15QNetworkRequestP9QIODevice'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyhttpimpl.cpp' l='472' c='_ZN28QNetworkReplyHttpImplPrivate22loadFromCacheIfAllowedER19QHttpNetworkRequest'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyhttpimpl.cpp' l='473' c='_ZN28QNetworkReplyHttpImplPrivate22loadFromCacheIfAllowedER19QHttpNetworkRequest'/>
<doc f='qtbase-6.5.0/src/network/access/qnetworkrequest.cpp' l='331'>/*!
    \enum QNetworkRequest::CacheLoadControl

    Controls the caching mechanism of QNetworkAccessManager.

    \value AlwaysNetwork        always load from network and do not
    check if the cache has a valid entry (similar to the
    &quot;Reload&quot; feature in browsers); in addition, force intermediate
    caches to re-validate.

    \value PreferNetwork        default value; load from the network
    if the cached entry is older than the network entry. This will never
    return stale data from the cache, but revalidate resources that
    have become stale.

    \value PreferCache          load from cache if available,
    otherwise load from network. Note that this can return possibly
    stale (but not expired) items from cache.

    \value AlwaysCache          only load from cache, indicating error
    if the item was not cached (i.e., off-line mode)
*/</doc>
