<dec f='qtbase-6.5.0/src/gui/painting/qpen.h' l='46' type='void QPen::setDashPattern(const QList&lt;qreal&gt; &amp; pattern)'/>
<def f='qtbase-6.5.0/src/gui/painting/qpen.cpp' l='484' ll='498' type='void QPen::setDashPattern(const QList&lt;qreal&gt; &amp; pattern)'/>
<doc f='qtbase-6.5.0/src/gui/painting/qpen.cpp' l='454'>/*!
    Sets the dash pattern for this pen to the given \a pattern. This
    implicitly converts the style of the pen to Qt::CustomDashLine.

    The pattern must be specified as an even number of positive entries
    where the entries 1, 3, 5... are the dashes and 2, 4, 6... are the
    spaces. For example:

    \table 100%
    \row
    \li \inlineimage qpen-custom.png
    \li
    \snippet code/src_gui_painting_qpen.cpp 3
    \endtable

    The dash pattern is specified in units of the pens width; e.g. a
    dash of length 5 in width 10 is 50 pixels long. Note that a pen
    with zero width is equivalent to a cosmetic pen with a width of 1
    pixel.

    Each dash is also subject to cap styles so a dash of 1 with square
    cap set will extend 0.5 pixels out in each direction resulting in
    a total width of 2.

    Note that the default cap style is Qt::SquareCap, meaning that a
    square line end covers the end point and extends beyond it by half
    the line width.

    \sa setStyle(), dashPattern(), setCapStyle(), setCosmetic()
 */</doc>
