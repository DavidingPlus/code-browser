<dec f='qtbase-6.5.0/src/gui/painting/qpainter.h' l='358' type='void QPainter::drawText(const QPointF &amp; p, const QString &amp; s)'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.h' l='830' u='c' c='_ZN8QPainter8drawTextERK6QPointRK7QString'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.h' l='840' u='c' c='_ZN8QPainter8drawTextEiiRK7QString'/>
<use f='qtbase-6.5.0/src/gui/image/qpicture.cpp' l='585' u='c' c='_ZN8QPicture4execEP8QPainterR11QDataStreami'/>
<def f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='5416' ll='5419' type='void QPainter::drawText(const QPointF &amp; p, const QString &amp; str)'/>
<doc f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='5397'>/*!
    \fn void QPainter::drawText(const QPointF &amp;position, const QString &amp;text)

    Draws the given \a text with the currently defined text direction,
    beginning at the given \a position.

    This function does not handle the newline character (\\n), as it cannot
    break text into multiple lines, and it cannot display the newline character.
    Use the QPainter::drawText() overload that takes a rectangle instead
    if you want to draw multiple lines of text with the newline character, or
    if you want the text to be wrapped.

    By default, QPainter draws text anti-aliased.

    \note The y-position is used as the baseline of the font.

    \sa setFont(), setPen()
*/</doc>
<use f='qtbase-6.5.0/src/gui/text/qtextlayout.cpp' l='2775' u='c' c='_ZNK9QTextLine13draw_internalEP8QPainterRK7QPointFPKN11QTextLayout11FormatRangeE'/>
<use f='qtbase-6.5.0/src/gui/text/qtextlayout.cpp' l='2850' u='c' c='_ZNK9QTextLine13draw_internalEP8QPainterRK7QPointFPKN11QTextLayout11FormatRangeE'/>
