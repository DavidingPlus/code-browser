<inh f='qtbase-6.5.0/src/gui/kernel/qopenglcontext_p.h' l='39' c='QOpenGLSharedResource'/>
<def f='qtbase-6.5.0/src/gui/opengl/qopenglprogrambinarycache_p.h' l='86' ll='97'/>
<use f='qtbase-6.5.0/src/gui/opengl/qopenglprogrambinarycache_p.h' l='102' c='_ZN39QOpenGLProgramBinarySupportCheckWrapper3getEP14QOpenGLContext'/>
<use f='qtbase-6.5.0/src/gui/opengl/qopenglprogrambinarycache_p.h' l='104' c='_ZN39QOpenGLProgramBinarySupportCheckWrapper3getEP14QOpenGLContext'/>
<size>24</size>
<doc f='qtbase-6.5.0/src/gui/opengl/qopenglprogrambinarycache_p.h' l='81'>// While unlikely, one application can in theory use contexts with different versions
// or profiles. Therefore any version- or extension-specific checks must be done on a
// per-context basis, not just once per process. QOpenGLSharedResource enables this,
// although it&apos;s once-per-sharing-context-group, not per-context. Still, this should
// be good enough in practice.</doc>
<fun r='_ZN32QOpenGLProgramBinarySupportCheckC1EP14QOpenGLContext'/>
<fun r='_ZN32QOpenGLProgramBinarySupportCheck18invalidateResourceEv'/>
<fun r='_ZN32QOpenGLProgramBinarySupportCheck12freeResourceEP14QOpenGLContext'/>
<fun r='_ZNK32QOpenGLProgramBinarySupportCheck11isSupportedEv'/>
<mbr r='QOpenGLProgramBinarySupportCheck::m_supported' o='128' t='bool'/>
<fun r='_ZN32QOpenGLProgramBinarySupportCheckC1EP14QOpenGLContext'/>
