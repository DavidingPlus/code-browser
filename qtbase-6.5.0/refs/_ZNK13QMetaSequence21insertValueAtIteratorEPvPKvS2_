<dec f='qtbase-6.5.0/src/corelib/kernel/qmetacontainer.h' l='965' type='void QMetaSequence::insertValueAtIterator(void * container, const void * iterator, const void * value) const'/>
<def f='qtbase-6.5.0/src/corelib/kernel/qmetacontainer.cpp' l='594' ll='599' type='void QMetaSequence::insertValueAtIterator(void * container, const void * iterator, const void * value) const'/>
<doc f='qtbase-6.5.0/src/corelib/kernel/qmetacontainer.cpp' l='582'>/*!
    Inserts \a value into the \a container, if possible, taking the non-const
    \a iterator into account. If \l canInsertValueAtIterator() returns
    \c false, the \a value is not inserted. Else if \l isSortable() returns
    \c true, the value is inserted before the value pointed to by
    \a iterator. Else, the \a value is inserted at an unspecified place or not
    at all. In the latter case, the \a iterator is taken as a hint. If it points
    to the correct place for the \a value, the operation may be faster than a
    \l addValue() without iterator.

    \sa canInsertValueAtIterator(), isSortable(), begin(), end()
 */</doc>
