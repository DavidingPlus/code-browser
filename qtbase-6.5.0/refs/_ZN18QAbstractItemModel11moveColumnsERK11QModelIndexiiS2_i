<dec f='qtbase-6.5.0/src/corelib/itemmodels/qabstractitemmodel.h' l='282' type='bool QAbstractItemModel::moveColumns(const QModelIndex &amp; sourceParent, int sourceColumn, int count, const QModelIndex &amp; destinationParent, int destinationChild)'/>
<use f='qtbase-6.5.0/src/corelib/itemmodels/qabstractitemmodel.h' l='419' u='c' c='_ZN18QAbstractItemModel10moveColumnERK11QModelIndexiS2_i'/>
<def f='qtbase-6.5.0/src/corelib/itemmodels/qabstractitemmodel.cpp' l='2397' ll='2400' type='bool QAbstractItemModel::moveColumns(const QModelIndex &amp; , int , int , const QModelIndex &amp; , int )'/>
<doc f='qtbase-6.5.0/src/corelib/itemmodels/qabstractitemmodel.cpp' l='2381'>/*!
    On models that support this, moves \a count columns starting with the given
    \a sourceColumn under parent \a sourceParent to column \a destinationChild under
    parent \a destinationParent.

    Returns \c{true} if the columns were successfully moved; otherwise returns
    \c{false}.

    The base class implementation does nothing and returns \c{false}.

    If you implement your own model, you can reimplement this function if you
    want to support moving. Alternatively, you can provide your own API for
    altering the data.

    \sa beginMoveColumns(), endMoveColumns()
*/</doc>
<ovr f='qtbase-6.5.0/src/corelib/itemmodels/qidentityproxymodel.cpp' l='259' c='_ZN19QIdentityProxyModel11moveColumnsERK11QModelIndexiiS2_i'/>
<use f='qtbase-6.5.0/src/corelib/itemmodels/qidentityproxymodel.cpp' l='264' u='c' c='_ZN19QIdentityProxyModel11moveColumnsERK11QModelIndexiiS2_i'/>
<use f='qtbase-6.5.0/src/corelib/itemmodels/qtransposeproxymodel.cpp' l='370' u='c' c='_ZN20QTransposeProxyModel8moveRowsERK11QModelIndexiiS2_i'/>
<ovr f='qtbase-6.5.0/src/corelib/itemmodels/qtransposeproxymodel.cpp' l='400' c='_ZN20QTransposeProxyModel11moveColumnsERK11QModelIndexiiS2_i'/>
