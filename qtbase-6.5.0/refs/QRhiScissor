<def f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='102' ll='115'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='117'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='117'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='117'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='117'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='117'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='119' c='_ZeqRK11QRhiScissorS1_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='119' c='_ZeqRK11QRhiScissorS1_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='120' c='_ZneRK11QRhiScissorS1_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='120' c='_ZneRK11QRhiScissorS1_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='121' c='_Z5qHashRK11QRhiScissorm'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='123' c='_Zls6QDebugRK11QRhiScissor'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='1506' c='_ZN17QRhiCommandBuffer10setScissorERK11QRhiScissor'/>
<size>16</size>
<fun r='_ZN11QRhiScissorC1Ev'/>
<fun r='_ZN11QRhiScissorC1Eiiii'/>
<fun r='_ZNK11QRhiScissor7scissorEv'/>
<fun r='_ZN11QRhiScissor10setScissorEiiii'/>
<mbr r='QRhiScissor::m_rect' o='0' t='std::array&lt;int, 4&gt;'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p_p.h' l='99' c='_ZN18QRhiImplementation10setScissorEP17QRhiCommandBufferRK11QRhiScissor'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhinull_p_p.h' l='239' c='_ZN8QRhiNull10setScissorEP17QRhiCommandBufferRK11QRhiScissor'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhigles2_p_p.h' l='784' c='_ZN9QRhiGles210setScissorEP17QRhiCommandBufferRK11QRhiScissor'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='1075' c='_ZeqRK11QRhiScissorS1_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='1075' c='_ZeqRK11QRhiScissorS1_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='1086' c='_ZneRK11QRhiScissorS1_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='1086' c='_ZneRK11QRhiScissorS1_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='1096' c='_Z5qHashRK11QRhiScissorm'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='1103' c='_Zls6QDebugRK11QRhiScissor'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='6584' c='_ZN17QRhiCommandBuffer10setScissorERK11QRhiScissor'/>
<size>16</size>
<doc f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='1028'>/*!
    \class QRhiScissor
    \internal
    \inmodule QtGui
    \brief Specifies a scissor rectangle.

    Used with QRhiCommandBuffer::setScissor(). Setting a scissor rectangle is
    only possible with a QRhiGraphicsPipeline that has
    QRhiGraphicsPipeline::UsesScissor set.

    QRhi assumes OpenGL-style scissor coordinates, meaning x and y are
    bottom-left. Negative width or height are not allowed. However, apart from
    that, the flexible OpenGL semantics apply: negative x and y, partially out
    of bounds rectangles, etc. will be handled gracefully, clamping as
    appropriate. Therefore, any rendering logic targeting OpenGL can feed
    scissor rectangles into QRhiScissor as-is, without any adaptation.

    \sa QRhiCommandBuffer::setScissor(), QRhiViewport
 */</doc>
<fun r='_ZN11QRhiScissorC1Eiiii'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhigles2.cpp' l='1788' c='_ZN9QRhiGles210setScissorEP17QRhiCommandBufferRK11QRhiScissor'/>
<size>16</size>
<use f='qtbase-6.5.0/src/gui/rhi/qrhinull.cpp' l='261' c='_ZN8QRhiNull10setScissorEP17QRhiCommandBufferRK11QRhiScissor'/>
<size>16</size>
