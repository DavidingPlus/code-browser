<dec f='qtbase-6.5.0/src/widgets/itemviews/qstyleditemdelegate.h' l='29' type='void QStyledItemDelegate::paint(QPainter * painter, const QStyleOptionViewItem &amp; option, const QModelIndex &amp; index) const'/>
<doc f='qtbase-6.5.0/src/widgets/itemviews/qstyleditemdelegate.h' l='28'>// painting</doc>
<ovr f='qtbase-6.5.0/src/widgets/util/qcompleter_p.h' l='167' c='_ZNK22QCompleterItemDelegate5paintEP8QPainterRK20QStyleOptionViewItemRK11QModelIndex'/>
<use f='qtbase-6.5.0/src/widgets/util/qcompleter_p.h' l='172' u='c' c='_ZNK22QCompleterItemDelegate5paintEP8QPainterRK20QStyleOptionViewItemRK11QModelIndex'/>
<ovr f='qtbase-6.5.0/src/widgets/itemviews/qcolumnview.cpp' l='1095' c='_ZNK19QColumnViewDelegate5paintEP8QPainterRK20QStyleOptionViewItemRK11QModelIndex'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qcolumnview.cpp' l='1113' u='c' c='_ZNK19QColumnViewDelegate5paintEP8QPainterRK20QStyleOptionViewItemRK11QModelIndex'/>
<inh f='qtbase-6.5.0/src/widgets/itemviews/qabstractitemdelegate.h' l='40' c='_ZNK21QAbstractItemDelegate5paintEP8QPainterRK20QStyleOptionViewItemRK11QModelIndex'/>
<def f='qtbase-6.5.0/src/widgets/itemviews/qstyleditemdelegate.cpp' l='364' ll='375' type='void QStyledItemDelegate::paint(QPainter * painter, const QStyleOptionViewItem &amp; option, const QModelIndex &amp; index) const'/>
<doc f='qtbase-6.5.0/src/widgets/itemviews/qstyleditemdelegate.cpp' l='342'>/*!
    Renders the delegate using the given \a painter and style \a option for
    the item specified by \a index.

    This function paints the item using the view&apos;s QStyle.

    When reimplementing paint in a subclass. Use the initStyleOption()
    to set up the \a option in the same way as the
    QStyledItemDelegate.

    Whenever possible, use the \a option while painting.
    Especially its \l{QStyleOption::}{rect} variable to decide
    where to draw and its \l{QStyleOption::}{state} to determine
    if it is enabled or selected.

    After painting, you should ensure that the painter is returned to
    the state it was supplied in when this function was called.
    For example, it may be useful to call QPainter::save() before
    painting and QPainter::restore() afterwards.

    \sa QItemDelegate::paint(), QStyle::drawControl(), QStyle::CE_ItemViewItem
*/</doc>
<ovr f='qtbase-6.5.0/src/widgets/widgets/qcalendarwidget.cpp' l='1677' c='_ZNK9QtPrivate17QCalendarDelegate5paintEP8QPainterRK20QStyleOptionViewItemRK11QModelIndex'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qcalendarwidget.cpp' l='1686' u='c' c='_ZNK9QtPrivate17QCalendarDelegate5paintEP8QPainterRK20QStyleOptionViewItemRK11QModelIndex'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qcalendarwidget.cpp' l='1697' u='c' c='_ZNK9QtPrivate17QCalendarDelegate9paintCellEP8QPainterRK5QRect5QDate'/>
<ovr f='qtbase-6.5.0/src/widgets/widgets/qcombobox_p.h' l='281' c='_ZNK17QComboBoxDelegate5paintEP8QPainterRK20QStyleOptionViewItemRK11QModelIndex'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qcombobox_p.h' l='292' u='c' c='_ZNK17QComboBoxDelegate5paintEP8QPainterRK20QStyleOptionViewItemRK11QModelIndex'/>
