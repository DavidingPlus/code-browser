<dec f='qtbase-6.5.0/src/corelib/text/qstring.h' l='561' type='static QString QString::vasprintf(const char * format, __va_list_tag * ap)'/>
<use f='qtbase-6.5.0/src/corelib/global/qlogging.cpp' l='368' u='c' c='_ZL10qt_message9QtMsgTypeRK18QMessageLogContextPKcP13__va_list_tag'/>
<use f='qtbase-6.5.0/src/corelib/global/qlogging.cpp' l='2070' u='c' c='_Z13qErrnoWarningPKcz'/>
<use f='qtbase-6.5.0/src/corelib/global/qlogging.cpp' l='2084' u='c' c='_Z13qErrnoWarningiPKcz'/>
<use f='qtbase-6.5.0/src/corelib/text/qstring.cpp' l='6833' u='c' c='_ZN7QString8asprintfEPKcz'/>
<def f='qtbase-6.5.0/src/corelib/text/qstring.cpp' l='6923' ll='7172' type='static QString QString::vasprintf(const char * cformat, __va_list_tag * ap)'/>
<doc f='qtbase-6.5.0/src/corelib/text/qstring.cpp' l='6909'>/*!
    \fn QString QString::vasprintf(const char *cformat, va_list ap)
    \since 5.5

    Equivalent method to asprintf(), but takes a va_list \a ap
    instead a list of variable arguments. See the asprintf()
    documentation for an explanation of \a cformat.

    This method does not call the va_end macro, the caller
    is responsible to call va_end on \a ap.

    \sa asprintf()
*/</doc>
