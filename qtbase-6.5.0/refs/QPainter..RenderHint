<def f='qtbase-6.5.0/src/gui/painting/qpainter.h' l='51' ll='58'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.h' l='59' c='_Z20qt_getEnumMetaObjectN8QPainter10RenderHintE'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.h' l='59' c='_Z14qt_getEnumNameN8QPainter10RenderHintE'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.h' l='61'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.h' l='404' c='_ZN8QPainter13setRenderHintENS_10RenderHintEb'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.h' l='407' c='_ZNK8QPainter14testRenderHintENS_10RenderHintE'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.h' l='91' c='_ZN13QGraphicsView13setRenderHintEN8QPainter10RenderHintEb'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='6821' c='_ZN8QPainter13setRenderHintENS_10RenderHintEb'/>
<doc f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='1381'>/*!
    \enum QPainter::RenderHint

    Renderhints are used to specify flags to QPainter that may or
    may not be respected by any given engine.

    \value Antialiasing Indicates that the engine should antialias
    edges of primitives if possible.

    \value TextAntialiasing Indicates that the engine should antialias
    text if possible. To forcibly disable antialiasing for text, do not
    use this hint. Instead, set QFont::NoAntialias on your font&apos;s style
    strategy.

    \value SmoothPixmapTransform Indicates that the engine should use
    a smooth pixmap transformation algorithm (such as bilinear) rather
    than nearest neighbor.

    \value VerticalSubpixelPositioning Allow text to be positioned at fractions
    of pixels vertically as well as horizontally, if this is supported by the
    font engine. This is currently supported by Freetype on all platforms when
    the hinting preference is QFont::PreferNoHinting, and also on macOS. For
    most use cases this will not improve visual quality, but may increase memory
    consumption and some reduction in text rendering performance. Therefore, enabling
    this is not recommended unless the use case requires it. One such use case could
    be aligning glyphs with other visual primitives.
    This value was added in Qt 6.1.

    \value LosslessImageRendering Use a lossless image rendering, whenever possible.
    Currently, this hint is only used when QPainter is employed to output a PDF
    file through QPrinter or QPdfWriter, where drawImage()/drawPixmap() calls
    will encode images using a lossless compression algorithm instead of lossy
    JPEG compression.
    This value was added in Qt 5.13.

    \value NonCosmeticBrushPatterns When painting with a brush with one of the predefined pattern
    styles, transform the pattern too, along with the object being painted. The default is to treat
    the pattern as cosmetic, so that the pattern pixels will map directly to device pixels,
    independently of any active transformations.
    This value was added in Qt 6.4.

    \sa renderHints(), setRenderHint(), {QPainter#Rendering
    Quality}{Rendering Quality}, {Concentric Circles Example}

*/</doc>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.cpp' l='1309' c='_ZN13QGraphicsView13setRenderHintEN8QPainter10RenderHintEb'/>
