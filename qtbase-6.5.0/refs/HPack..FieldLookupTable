<def f='qtbase-6.5.0/src/network/access/http2/hpacktable_p.h' l='110' ll='204'/>
<use f='qtbase-6.5.0/src/network/access/http2/hpacktable_p.h' l='164' c='_ZN5HPack16FieldLookupTable11SearchEntryC1EPKNS_11HeaderFieldEPKSt6vectorIS2_SaIS2_EEjPKS0_'/>
<use f='qtbase-6.5.0/src/network/access/http2/hpacktable_p.h' l='169'/>
<use f='qtbase-6.5.0/src/network/access/http2/hpacktable_p.h' l='203' c='_ZN5HPack16FieldLookupTableC1ERKS0_'/>
<use f='qtbase-6.5.0/src/network/access/http2/hpacktable_p.h' l='203' c='_ZN5HPack16FieldLookupTableaSERKS0_'/>
<use f='qtbase-6.5.0/src/network/access/http2/hpacktable_p.h' l='203' c='_ZN5HPack16FieldLookupTableaSERKS0_'/>
<use f='qtbase-6.5.0/src/network/access/http2/hpacktable_p.h' l='203' c='_ZN5HPack16FieldLookupTableC1EOS0_'/>
<use f='qtbase-6.5.0/src/network/access/http2/hpacktable_p.h' l='203' c='_ZN5HPack16FieldLookupTableaSEOS0_'/>
<use f='qtbase-6.5.0/src/network/access/http2/hpacktable_p.h' l='203' c='_ZN5HPack16FieldLookupTableaSEOS0_'/>
<use f='qtbase-6.5.0/src/network/access/http2/hpack_p.h' l='78'/>
<use f='qtbase-6.5.0/src/network/access/http2/hpack_p.h' l='112'/>
<size>184</size>
<doc f='qtbase-6.5.0/src/network/access/http2/hpacktable_p.h' l='62'>/*
    Lookup table consists of two parts (HPACK, 2.3):
    the immutable static table (pre-defined by HPACK&apos;s specs)
    and dynamic table which is updated while
    compressing/decompressing headers.

    Table must provide/implement:
    1. Fast random access - we read fields&apos; indices from
       HPACK&apos;s bit stream.
    2. FIFO for dynamic part - to push new items to the front
       and evict them from the back (HPACK, 2.3.2).
    3. Fast lookup - encoder receives pairs of strings
       (name|value) and it has to find an index for a pair
       as the whole or  for a name at least (if it&apos;s already
       in either static or dynamic table).

    Static table is an immutable vector.

    Dynamic part is implemented in a way similar to std::deque -
    it&apos;s a vector of pointers to chunks. Each chunk is a vector of
    (name|value) pairs. Once allocated with a fixed size, chunk
    never re-allocates its data, so entries&apos; addresses do not change.
    We add new chunks prepending them to the front of a vector,
    in each chunk we fill (name|value) pairs starting from the back
    of the chunk (this simplifies item eviction/FIFO).
    Given a &apos;linear&apos; index we can find a chunk number and
    offset in this chunk - random access.

    Lookup in a static part is straightforward:
    it&apos;s an (immutable) vector, data is sorted,
    contains no duplicates, we use binary search comparing string values.

    To provide a lookup in dynamic table faster than a linear search,
    we have an std::set of &apos;SearchEntries&apos;, where each entry contains:
     - a pointer to a (name|value) pair (to compare
       name|value strings).
     - a pointer to a chunk containing this pair and
     - an offset within this chunk - to calculate a
       &apos;linear&apos; index.

    Entries in a table can be duplicated (HPACK, 2.3.2),
    if we evict an entry, we must update our index removing
    the exactly right key, thus keys in this set are sorted
    by name|value pairs first, and then by chunk index/offset
    (so that NewSearchEntryKey &lt; OldSearchEntry even if strings
    are equal).
*/</doc>
<fun r='_ZN5HPack16FieldLookupTableC1Ejb'/>
<fun r='_ZN5HPack16FieldLookupTable12prependFieldERK10QByteArrayS3_'/>
<fun r='_ZN5HPack16FieldLookupTable10evictEntryEv'/>
<fun r='_ZNK5HPack16FieldLookupTable15numberOfEntriesEv'/>
<fun r='_ZNK5HPack16FieldLookupTable21numberOfStaticEntriesEv'/>
<fun r='_ZNK5HPack16FieldLookupTable22numberOfDynamicEntriesEv'/>
<fun r='_ZNK5HPack16FieldLookupTable15dynamicDataSizeEv'/>
<fun r='_ZN5HPack16FieldLookupTable17clearDynamicTableEv'/>
<fun r='_ZNK5HPack16FieldLookupTable12indexIsValidEj'/>
<fun r='_ZNK5HPack16FieldLookupTable7indexOfERK10QByteArrayS3_'/>
<fun r='_ZNK5HPack16FieldLookupTable7indexOfERK10QByteArray'/>
<fun r='_ZNK5HPack16FieldLookupTable5fieldEjP10QByteArrayS2_'/>
<fun r='_ZNK5HPack16FieldLookupTable9fieldNameEjP10QByteArray'/>
<fun r='_ZNK5HPack16FieldLookupTable10fieldValueEjP10QByteArray'/>
<fun r='_ZN5HPack16FieldLookupTable22updateDynamicTableSizeEj'/>
<fun r='_ZN5HPack16FieldLookupTable22setMaxDynamicTableSizeEj'/>
<fun r='_ZN5HPack16FieldLookupTable10staticPartEv'/>
<mbr r='HPack::FieldLookupTable::maxTableSize' o='0' t='quint32'/>
<mbr r='HPack::FieldLookupTable::tableCapacity' o='32' t='quint32'/>
<mbr r='HPack::FieldLookupTable::chunks' o='64' t='std::deque&lt;ChunkPtr&gt;'/>
<mbr r='HPack::FieldLookupTable::useIndex' o='704' t='bool'/>
<mbr r='HPack::FieldLookupTable::searchIndex' o='768' t='std::set&lt;SearchEntry&gt;'/>
<fun r='_ZNK5HPack16FieldLookupTable8frontKeyEv'/>
<fun r='_ZNK5HPack16FieldLookupTable7backKeyEv'/>
<fun r='_ZNK5HPack16FieldLookupTable7fieldAtEjPNS_11HeaderFieldE'/>
<fun r='_ZNK5HPack16FieldLookupTable5frontEv'/>
<fun r='_ZN5HPack16FieldLookupTable5frontEv'/>
<fun r='_ZNK5HPack16FieldLookupTable4backEv'/>
<mbr r='HPack::FieldLookupTable::nDynamic' o='1152' t='quint32'/>
<mbr r='HPack::FieldLookupTable::begin' o='1184' t='quint32'/>
<mbr r='HPack::FieldLookupTable::end' o='1216' t='quint32'/>
<mbr r='HPack::FieldLookupTable::dataSize' o='1248' t='quint32'/>
<fun r='_ZNK5HPack16FieldLookupTable12indexOfChunkEPKSt6vectorINS_11HeaderFieldESaIS2_EE'/>
<fun r='_ZNK5HPack16FieldLookupTable10keyToIndexERKNS0_11SearchEntryE'/>
<fun r='_ZN5HPack16FieldLookupTable16findInStaticPartERKNS_11HeaderFieldENS0_11CompareModeE'/>
<mbr r='HPack::FieldLookupTable::dummyDst' o='1280' t='QByteArray'/>
<fun r='_ZN5HPack16FieldLookupTableC1ERKS0_'/>
<fun r='_ZN5HPack16FieldLookupTableC1EOS0_'/>
<use f='qtbase-6.5.0/src/network/access/http2/hpacktable.cpp' l='64' c='_ZN5HPack16FieldLookupTable11SearchEntryC1EPKNS_11HeaderFieldEPKSt6vectorIS2_SaIS2_EEjPKS0_'/>
<size>184</size>
<fun r='_ZN5HPack16FieldLookupTableC1Ejb'/>
<fun r='_ZN5HPack16FieldLookupTable12prependFieldERK10QByteArrayS3_'/>
<fun r='_ZN5HPack16FieldLookupTable10evictEntryEv'/>
<fun r='_ZNK5HPack16FieldLookupTable15numberOfEntriesEv'/>
<fun r='_ZNK5HPack16FieldLookupTable21numberOfStaticEntriesEv'/>
<fun r='_ZNK5HPack16FieldLookupTable22numberOfDynamicEntriesEv'/>
<fun r='_ZNK5HPack16FieldLookupTable15dynamicDataSizeEv'/>
<fun r='_ZN5HPack16FieldLookupTable17clearDynamicTableEv'/>
<fun r='_ZNK5HPack16FieldLookupTable12indexIsValidEj'/>
<fun r='_ZNK5HPack16FieldLookupTable7indexOfERK10QByteArrayS3_'/>
<fun r='_ZNK5HPack16FieldLookupTable7indexOfERK10QByteArray'/>
<fun r='_ZNK5HPack16FieldLookupTable5fieldEjP10QByteArrayS2_'/>
<fun r='_ZNK5HPack16FieldLookupTable9fieldNameEjP10QByteArray'/>
<fun r='_ZNK5HPack16FieldLookupTable10fieldValueEjP10QByteArray'/>
<fun r='_ZNK5HPack16FieldLookupTable5frontEv'/>
<fun r='_ZN5HPack16FieldLookupTable5frontEv'/>
<fun r='_ZNK5HPack16FieldLookupTable4backEv'/>
<fun r='_ZNK5HPack16FieldLookupTable12indexOfChunkEPKSt6vectorINS_11HeaderFieldESaIS2_EE'/>
<fun r='_ZNK5HPack16FieldLookupTable10keyToIndexERKNS0_11SearchEntryE'/>
<fun r='_ZNK5HPack16FieldLookupTable8frontKeyEv'/>
<fun r='_ZNK5HPack16FieldLookupTable7backKeyEv'/>
<fun r='_ZN5HPack16FieldLookupTable22updateDynamicTableSizeEj'/>
<fun r='_ZN5HPack16FieldLookupTable22setMaxDynamicTableSizeEj'/>
<fun r='_ZN5HPack16FieldLookupTable10staticPartEv'/>
<fun r='_ZN5HPack16FieldLookupTable16findInStaticPartERKNS_11HeaderFieldENS0_11CompareModeE'/>
