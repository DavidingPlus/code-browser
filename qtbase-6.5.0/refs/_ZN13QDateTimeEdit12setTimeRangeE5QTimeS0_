<dec f='qtbase-6.5.0/src/widgets/widgets/qdatetimeedit.h' l='103' type='void QDateTimeEdit::setTimeRange(QTime min, QTime max)'/>
<def f='qtbase-6.5.0/src/widgets/widgets/qdatetimeedit.cpp' l='660' ll='667' type='void QDateTimeEdit::setTimeRange(QTime min, QTime max)'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qdatetimeedit.cpp' l='942' u='c' c='_ZN13QDateTimeEdit16setDisplayFormatERK7QString'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qdatetimeedit.cpp' l='947' u='c' c='_ZN13QDateTimeEdit16setDisplayFormatERK7QString'/>
<doc f='qtbase-6.5.0/src/widgets/widgets/qdatetimeedit.cpp' l='630'>/*!
  \brief Set the range of allowed times for the date time edit.

  This convenience function sets the \l minimumTime and \l maximumTime
  properties.

  Note that these only constrain the date time edit&apos;s value on,
  respectively, the \l minimumDate and \l maximumDate. When these date
  properties do not coincide, times after \a max are allowed on dates
  before \l maximumDate and times before \a min are allowed on dates
  after \l minimumDate.

  \snippet code/src_gui_widgets_qdatetimeedit.cpp 5

  is analogous to:

  \snippet code/src_gui_widgets_qdatetimeedit.cpp 6

  If either \a min or \a max is invalid, this function does nothing. This
  function preserves the \l minimumDate and \l maximumDate properties. If those
  properties coincide and \a max is less than \a min, \a min is used as \a max.

  If the range is narrower then a time interval whose end it spans, for example
  the interval from ten to an hour to ten past the same hour, users can only
  edit the time to one in the later part of the range if keyboard-tracking is
  disabled.

  \sa minimumTime, maximumTime, setDateTimeRange(), QTime::isValid(), {Keyboard Tracking}
*/</doc>
