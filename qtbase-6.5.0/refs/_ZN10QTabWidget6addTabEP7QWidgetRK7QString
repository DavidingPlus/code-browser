<dec f='qtbase-6.5.0/src/widgets/widgets/qtabwidget.h' l='38' type='int QTabWidget::addTab(QWidget * widget, const QString &amp; )'/>
<def f='qtbase-6.5.0/src/widgets/widgets/qtabwidget.cpp' l='361' ll='364' type='int QTabWidget::addTab(QWidget * child, const QString &amp; label)'/>
<doc f='qtbase-6.5.0/src/widgets/widgets/qtabwidget.cpp' l='340'>/*!
    \fn int QTabWidget::addTab(QWidget *page, const QString &amp;label)

    Adds a tab with the given \a page and \a label to the tab widget,
    and returns the index of the tab in the tab bar. Ownership of \a page
    is passed on to the QTabWidget.

    If the tab&apos;s \a label contains an ampersand, the letter following
    the ampersand is used as a shortcut for the tab, e.g. if the
    label is &quot;Bro\&amp;wse&quot; then Alt+W becomes a shortcut which will
    move the focus to this tab.

    \note If you call addTab() after show(), the layout system will try
    to adjust to the changes in its widgets hierarchy and may cause
    flicker. To prevent this, you can set the QWidget::updatesEnabled
    property to false prior to changes; remember to set the property
    to true when the changes are done, making the widget receive paint
    events again.

    \sa insertTab()
*/</doc>
