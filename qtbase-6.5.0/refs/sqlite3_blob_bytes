<dec f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='7923' type='int sqlite3_blob_bytes(sqlite3_blob * )'/>
<def f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='99596' ll='99599' type='int sqlite3_blob_bytes(sqlite3_blob * pBlob)'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='133029'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='191626' u='c' c='sqlite3Fts3ReadBlock'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='202218' u='c' c='nodeAcquire'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='231280' u='c' c='fts5DataRead'/>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='7909'>/*
** CAPI3REF: Return The Size Of An Open BLOB
** METHOD: sqlite3_blob
**
** ^Returns the size in bytes of the BLOB accessible via the
** successfully opened [BLOB handle] in its only argument.  ^The
** incremental blob I/O routines can only read or overwriting existing
** blob content; they cannot change the size of a blob.
**
** This routine only works on a [BLOB handle] which has been created
** by a prior successful call to [sqlite3_blob_open()] and which has not
** been closed by [sqlite3_blob_close()].  Passing any other pointer in
** to this routine results in undefined and probably undesirable behavior.
*/</doc>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='99590'>/*
** Query a blob handle for the size of the data.
**
** The Incrblob.nByte field is fixed for the lifetime of the Incrblob
** so no mutex is required for access.
*/</doc>
<dec f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='7617' type='int sqlite3_blob_bytes(sqlite3_blob * )'/>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='7603'>/*
** CAPI3REF: Return The Size Of An Open BLOB
** METHOD: sqlite3_blob
**
** ^Returns the size in bytes of the BLOB accessible via the
** successfully opened [BLOB handle] in its only argument.  ^The
** incremental blob I/O routines can only read or overwriting existing
** blob content; they cannot change the size of a blob.
**
** This routine only works on a [BLOB handle] which has been created
** by a prior successful call to [sqlite3_blob_open()] and which has not
** been closed by [sqlite3_blob_close()].  Passing any other pointer in
** to this routine results in undefined and probably undesirable behavior.
*/</doc>
