<dec f='qtbase-6.5.0/src/opengl/qopengltexture.h' l='497' type='void QOpenGLTexture::setSwizzleMask(QOpenGLTexture::SwizzleComponent component, QOpenGLTexture::SwizzleValue value)'/>
<def f='qtbase-6.5.0/src/opengl/qopengltexture.cpp' l='4086' ll='4107' type='void QOpenGLTexture::setSwizzleMask(QOpenGLTexture::SwizzleComponent component, QOpenGLTexture::SwizzleValue value)'/>
<doc f='qtbase-6.5.0/src/opengl/qopengltexture.cpp' l='4074'>/*!
    GLSL shaders are able to reorder the components of the vec4 returned by texture
    functions. It is also desirable to be able to control this reordering from CPU
    side code. This is made possible by swizzle masks since OpenGL 3.3.

    Each component of the texture can be mapped to one of the SwizzleValue options.

    This function maps \a component to the output \a value.

    \note This function has no effect on Mac and Qt built for OpenGL ES 2.
    \sa swizzleMask()
*/</doc>
