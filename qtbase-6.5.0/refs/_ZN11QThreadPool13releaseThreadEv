<dec f='qtbase-6.5.0/src/corelib/thread/qthreadpool.h' l='60' type='void QThreadPool::releaseThread()'/>
<use f='qtbase-6.5.0/src/corelib/thread/qfutureinterface.cpp' l='34' u='c' c='_ZN12_GLOBAL__N_124ThreadPoolThreadReleaserC1EP11QThreadPool'/>
<def f='qtbase-6.5.0/src/corelib/thread/qthreadpool.cpp' l='757' ll='763' type='void QThreadPool::releaseThread()'/>
<use f='qtbase-6.5.0/src/corelib/thread/qthreadpool.cpp' l='787' u='c' c='_ZN11QThreadPool21startOnReservedThreadEP9QRunnable'/>
<use f='qtbase-6.5.0/src/corelib/thread/qthreadpool.cpp' l='811' u='c' c='_ZN11QThreadPool21startOnReservedThreadESt8functionIFvvEE'/>
<doc f='qtbase-6.5.0/src/corelib/thread/qthreadpool.cpp' l='745'>/*!
    Releases a thread previously reserved by a call to reserveThread().

    \note Calling this function without previously reserving a thread
    temporarily increases maxThreadCount(). This is useful when a
    thread goes to sleep waiting for more work, allowing other threads
    to continue. Be sure to call reserveThread() when done waiting, so
    that the thread pool can correctly maintain the
    activeThreadCount().

    \sa reserveThread()
*/</doc>
