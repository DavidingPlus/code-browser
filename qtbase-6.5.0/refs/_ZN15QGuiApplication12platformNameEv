<dec f='qtbase-6.5.0/src/gui/kernel/qguiapplication.h' l='73' type='static QString QGuiApplication::platformName()'/>
<def f='qtbase-6.5.0/src/gui/kernel/qguiapplication.cpp' l='1182' ll='1186' type='static QString QGuiApplication::platformName()'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qguiapplication.cpp' l='1149'>/*!
    \property QGuiApplication::platformName
    \brief The name of the underlying platform plugin.

    The QPA platform plugins are located in \c {qtbase\src\plugins\platforms}.
    At the time of writing, the following platform plugin names are supported:

    \list
        \li \c android
        \li \c cocoa is a platform plugin for \macos.
        \li \c directfb
        \li \c eglfs is a platform plugin for running Qt5 applications on top of
            EGL and  OpenGL ES 2.0 without an actual windowing system (like X11
            or Wayland). For more information, see \l{EGLFS}.
        \li \c ios (also used for tvOS)
        \li \c linuxfb writes directly to the framebuffer. For more information,
            see \l{LinuxFB}.
        \li \c minimal is provided as an examples for developers who want to
            write their own platform plugins. However, you can use the plugin to
            run GUI applications in environments without a GUI, such as servers.
        \li \c minimalegl is an example plugin.
        \li \c offscreen
        \li \c qnx
        \li \c windows
        \li \c wayland is a platform plugin for the Wayland display server protocol,
            used on some Linux desktops and embedded systems.
        \li \c xcb is a plugin for the X11 window system, used on some desktop Linux platforms.
    \endlist

    For more information about the platform plugins for embedded Linux devices,
    see \l{Qt for Embedded Linux}.
*/</doc>
<use f='qtbase-6.5.0/src/gui/platform/unix/qgenericunixservices.cpp' l='408' u='c' c='_ZN20QGenericUnixServices11colorPickerEP7QWindow'/>
<use f='qtbase-6.5.0/src/gui/platform/unix/qgenericunixservices.cpp' l='486' u='c' c='_ZN20QGenericUnixServices7openUrlERK4QUrl'/>
<use f='qtbase-6.5.0/src/gui/platform/unix/qgenericunixservices.cpp' l='520' u='c' c='_ZN20QGenericUnixServices12openDocumentERK4QUrl'/>
<use f='qtbase-6.5.0/src/gui/platform/unix/qgenericunixservices.cpp' l='563' u='c' c='_ZN20QGenericUnixServices22portalWindowIdentifierEP7QWindow'/>
<use f='qtbase-6.5.0/src/plugins/platforminputcontexts/ibus/qibusplatforminputcontext.cpp' l='228' u='c' c='_ZN25QIBusPlatformInputContext17cursorRectChangedEv'/>
<use f='qtbase-6.5.0/src/printsupport/dialogs/qprintdialog_unix.cpp' l='1331' u='c' c='_ZN16QUnixPrintWidgetC1EP8QPrinterP7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qabstractspinbox.cpp' l='1065' u='c' c='_ZN16QAbstractSpinBox13keyPressEventEP9QKeyEvent'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qdockwidget.cpp' l='255' u='c' c='_ZN17QDockWidgetLayout26wmSupportsNativeWindowDecoEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsizegrip.cpp' l='243' u='c' c='_ZL19usePlatformSizeGripPK7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qwidgetresizehandler.cpp' l='188' u='c' c='_ZN20QWidgetResizeHandler14mouseMoveEventEP11QMouseEvent'/>
