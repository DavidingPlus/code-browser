<use f='include/glib-2.0/gio/gmount.h' l='38'/>
<def f='include/glib-2.0/gio/gmount.h' l='75' ll='162'/>
<size>232</size>
<doc f='include/glib-2.0/gio/gmount.h' l='40'>/**
 * GMountIface:
 * @g_iface: The parent interface.
 * @changed: Changed signal that is emitted when the mount&apos;s state has changed.
 * @unmounted: The unmounted signal that is emitted when the #GMount have been unmounted. If the recipient is holding references to the object they should release them so the object can be finalized.
 * @pre_unmount: The ::pre-unmount signal that is emitted when the #GMount will soon be emitted. If the recipient is somehow holding the mount open by keeping an open file on it it should close the file.
 * @get_root: Gets a #GFile to the root directory of the #GMount.
 * @get_name: Gets a string containing the name of the #GMount.
 * @get_icon: Gets a #GIcon for the #GMount.
 * @get_uuid: Gets the UUID for the #GMount. The reference is typically based on the file system UUID for the mount in question and should be considered an opaque string. Returns %NULL if there is no UUID available.
 * @get_volume: Gets a #GVolume the mount is located on. Returns %NULL if the #GMount is not associated with a #GVolume.
 * @get_drive: Gets a #GDrive the volume of the mount is located on. Returns %NULL if the #GMount is not associated with a #GDrive or a #GVolume. This is convenience method for getting the #GVolume and using that to get the #GDrive.
 * @can_unmount: Checks if a #GMount can be unmounted.
 * @can_eject: Checks if a #GMount can be ejected.
 * @unmount: Starts unmounting a #GMount.
 * @unmount_finish: Finishes an unmounting operation.
 * @eject: Starts ejecting a #GMount.
 * @eject_finish: Finishes an eject operation.
 * @remount: Starts remounting a #GMount.
 * @remount_finish: Finishes a remounting operation.
 * @guess_content_type: Starts guessing the type of the content of a #GMount.
 *     See g_mount_guess_content_type() for more information on content
 *     type guessing. This operation was added in 2.18.
 * @guess_content_type_finish: Finishes a content type guessing operation. Added in 2.18.
 * @guess_content_type_sync: Synchronous variant of @guess_content_type. Added in 2.18
 * @unmount_with_operation: Starts unmounting a #GMount using a #GMountOperation. Since 2.22.
 * @unmount_with_operation_finish: Finishes an unmounting operation using a #GMountOperation. Since 2.22.
 * @eject_with_operation: Starts ejecting a #GMount using a #GMountOperation. Since 2.22.
 * @eject_with_operation_finish: Finishes an eject operation using a #GMountOperation. Since 2.22.
 * @get_default_location: Gets a #GFile indication a start location that can be use as the entry point for this mount. Since 2.24.
 * @get_sort_key: Gets a key used for sorting #GMount instance or %NULL if no such key exists. Since 2.32.
 * @get_symbolic_icon: Gets a symbolic #GIcon for the #GMount. Since 2.34.
 *
 * Interface for implementing operations for mounts.
 **/</doc>
<mbr r='_GMountIface::g_iface' o='0' t='GTypeInterface'/>
<mbr r='_GMountIface::changed' o='128' t='void (*)(GMount *)'/>
<mbr r='_GMountIface::unmounted' o='192' t='void (*)(GMount *)'/>
<mbr r='_GMountIface::get_root' o='256' t='GFile *(*)(GMount *)'/>
<mbr r='_GMountIface::get_name' o='320' t='char *(*)(GMount *)'/>
<mbr r='_GMountIface::get_icon' o='384' t='GIcon *(*)(GMount *)'/>
<mbr r='_GMountIface::get_uuid' o='448' t='char *(*)(GMount *)'/>
<mbr r='_GMountIface::get_volume' o='512' t='GVolume *(*)(GMount *)'/>
<mbr r='_GMountIface::get_drive' o='576' t='GDrive *(*)(GMount *)'/>
<mbr r='_GMountIface::can_unmount' o='640' t='gboolean (*)(GMount *)'/>
<mbr r='_GMountIface::can_eject' o='704' t='gboolean (*)(GMount *)'/>
<mbr r='_GMountIface::unmount' o='768' t='void (*)(GMount *, GMountUnmountFlags, GCancellable *, GAsyncReadyCallback, gpointer)'/>
<mbr r='_GMountIface::unmount_finish' o='832' t='gboolean (*)(GMount *, GAsyncResult *, GError **)'/>
<mbr r='_GMountIface::eject' o='896' t='void (*)(GMount *, GMountUnmountFlags, GCancellable *, GAsyncReadyCallback, gpointer)'/>
<mbr r='_GMountIface::eject_finish' o='960' t='gboolean (*)(GMount *, GAsyncResult *, GError **)'/>
<mbr r='_GMountIface::remount' o='1024' t='void (*)(GMount *, GMountMountFlags, GMountOperation *, GCancellable *, GAsyncReadyCallback, gpointer)'/>
<mbr r='_GMountIface::remount_finish' o='1088' t='gboolean (*)(GMount *, GAsyncResult *, GError **)'/>
<mbr r='_GMountIface::guess_content_type' o='1152' t='void (*)(GMount *, gboolean, GCancellable *, GAsyncReadyCallback, gpointer)'/>
<mbr r='_GMountIface::guess_content_type_finish' o='1216' t='gchar **(*)(GMount *, GAsyncResult *, GError **)'/>
<mbr r='_GMountIface::guess_content_type_sync' o='1280' t='gchar **(*)(GMount *, gboolean, GCancellable *, GError **)'/>
<mbr r='_GMountIface::pre_unmount' o='1344' t='void (*)(GMount *)'/>
<mbr r='_GMountIface::unmount_with_operation' o='1408' t='void (*)(GMount *, GMountUnmountFlags, GMountOperation *, GCancellable *, GAsyncReadyCallback, gpointer)'/>
<mbr r='_GMountIface::unmount_with_operation_finish' o='1472' t='gboolean (*)(GMount *, GAsyncResult *, GError **)'/>
<mbr r='_GMountIface::eject_with_operation' o='1536' t='void (*)(GMount *, GMountUnmountFlags, GMountOperation *, GCancellable *, GAsyncReadyCallback, gpointer)'/>
<mbr r='_GMountIface::eject_with_operation_finish' o='1600' t='gboolean (*)(GMount *, GAsyncResult *, GError **)'/>
<mbr r='_GMountIface::get_default_location' o='1664' t='GFile *(*)(GMount *)'/>
<mbr r='_GMountIface::get_sort_key' o='1728' t='const gchar *(*)(GMount *)'/>
<mbr r='_GMountIface::get_symbolic_icon' o='1792' t='GIcon *(*)(GMount *)'/>
