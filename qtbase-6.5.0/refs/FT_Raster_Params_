<def f='include/freetype2/freetype/ftimage.h' l='1022' ll='1034'/>
<use f='include/freetype2/freetype/ftimage.h' l='1022'/>
<size>96</size>
<doc f='include/freetype2/freetype/ftimage.h' l='972'>/**************************************************************************
   *
   * @struct:
   *   FT_Raster_Params
   *
   * @description:
   *   A structure to hold the parameters used by a raster&apos;s render function,
   *   passed as an argument to @FT_Outline_Render.
   *
   * @fields:
   *   target ::
   *     The target bitmap.
   *
   *   source ::
   *     A pointer to the source glyph image (e.g., an @FT_Outline).
   *
   *   flags ::
   *     The rendering flags.
   *
   *   gray_spans ::
   *     The gray span drawing callback.
   *
   *   black_spans ::
   *     Unused.
   *
   *   bit_test ::
   *     Unused.
   *
   *   bit_set ::
   *     Unused.
   *
   *   user ::
   *     User-supplied data that is passed to each drawing callback.
   *
   *   clip_box ::
   *     An optional clipping box.  It is only used in direct rendering mode.
   *     Note that coordinates here should be expressed in _integer_ pixels
   *     (and not in 26.6 fixed-point units).
   *
   * @note:
   *   An anti-aliased glyph bitmap is drawn if the @FT_RASTER_FLAG_AA bit
   *   flag is set in the `flags` field, otherwise a monochrome bitmap is
   *   generated.
   *
   *   If the @FT_RASTER_FLAG_DIRECT bit flag is set in `flags`, the raster
   *   will call the `gray_spans` callback to draw gray pixel spans.  This
   *   allows direct composition over a pre-existing bitmap through
   *   user-provided callbacks to perform the span drawing and composition.
   *   Not supported by the monochrome rasterizer.
   */</doc>
<mbr r='FT_Raster_Params_::target' o='0' t='const FT_Bitmap *'/>
<mbr r='FT_Raster_Params_::source' o='64' t='const void *'/>
<mbr r='FT_Raster_Params_::flags' o='128' t='int'/>
<mbr r='FT_Raster_Params_::gray_spans' o='192' t='FT_SpanFunc'/>
<mbr r='FT_Raster_Params_::black_spans' o='256' t='FT_SpanFunc'/>
<mbr r='FT_Raster_Params_::bit_test' o='320' t='FT_Raster_BitTest_Func'/>
<mbr r='FT_Raster_Params_::bit_set' o='384' t='FT_Raster_BitSet_Func'/>
<mbr r='FT_Raster_Params_::user' o='448' t='void *'/>
<mbr r='FT_Raster_Params_::clip_box' o='512' t='FT_BBox'/>
