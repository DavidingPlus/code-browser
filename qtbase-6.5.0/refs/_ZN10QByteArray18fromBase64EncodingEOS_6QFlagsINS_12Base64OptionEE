<dec f='qtbase-6.5.0/src/corelib/text/qbytearray.h' l='379' type='static QByteArray::FromBase64Result QByteArray::fromBase64Encoding(QByteArray &amp;&amp; base64, QByteArray::Base64Options options = Base64Encoding)'/>
<def f='qtbase-6.5.0/src/corelib/text/qbytearray.cpp' l='4531' ll='4545' type='static QByteArray::FromBase64Result QByteArray::fromBase64Encoding(QByteArray &amp;&amp; base64, QByteArray::Base64Options options = Base64Encoding)'/>
<doc f='qtbase-6.5.0/src/corelib/text/qbytearray.cpp' l='4504'>/*!
    \fn QByteArray::FromBase64Result QByteArray::fromBase64Encoding(QByteArray &amp;&amp;base64, Base64Options options)
    \fn QByteArray::FromBase64Result QByteArray::fromBase64Encoding(const QByteArray &amp;base64, Base64Options options)
    \since 5.15
    \overload

    Decodes the Base64 array \a base64, using the options
    defined by \a options. If \a options contains \c{IgnoreBase64DecodingErrors}
    (the default), the input is not checked for validity; invalid
    characters in the input are skipped, enabling the decoding process to
    continue with subsequent characters. If \a options contains
    \c{AbortOnBase64DecodingErrors}, then decoding will stop at the first
    invalid character.

    For example:

    \snippet code/src_corelib_text_qbytearray.cpp 44ter

    The algorithm used to decode Base64-encoded data is defined in \l{RFC 4648}.

    Returns a QByteArrayFromBase64Result object, containing the decoded
    data and a flag telling whether decoding was successful. If the
    \c{AbortOnBase64DecodingErrors} option was passed and the input
    data was invalid, it is unspecified what the decoded data contains.

    \sa toBase64()
*/</doc>
