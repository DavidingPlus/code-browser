<dec f='qtbase-6.5.0/src/widgets/dialogs/qwizard.h' l='202' type='bool QWizardPage::isComplete() const'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='469' u='c' c='_ZNK18QWizardPagePrivate16cachedIsCompleteEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='476' u='c' c='_ZN18QWizardPagePrivate27_q_maybeEmitCompleteChangedEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='484' u='c' c='_ZN18QWizardPagePrivate28_q_updateCachedCompleteStateEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='1643' u='c' c='_ZN14QWizardPrivate21_q_updateButtonStatesEv'/>
<def f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='3658' ll='3688' type='bool QWizardPage::isComplete() const'/>
<doc f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='3641'>/*!
    This virtual function is called by QWizard to determine whether
    the \uicontrol Next or \uicontrol Finish button should be enabled or
    disabled.

    The default implementation returns \c true if all \l{mandatory
    fields} are filled; otherwise, it returns \c false.

    If you reimplement this function, make sure to emit completeChanged(),
    from the rest of your implementation, whenever the value of isComplete()
    changes. This ensures that QWizard updates the enabled or disabled state of
    its buttons. An example of the reimplementation is
    available \l{http://doc.qt.io/archives/qq/qq22-qwizard.html#validatebeforeitstoolate}
    {here}.

    \sa completeChanged(), isFinalPage()
*/</doc>
