<dec f='qtbase-6.5.0/src/plugins/platforms/offscreen/qoffscreenintegration.h' l='24' type='QJsonObject QOffscreenIntegration::defaultConfiguration() const'/>
<use f='qtbase-6.5.0/src/plugins/platforms/offscreen/qoffscreenintegration.cpp' l='79' u='c' c='_ZN21QOffscreenIntegrationC1ERK5QListI7QStringE'/>
<def f='qtbase-6.5.0/src/plugins/platforms/offscreen/qoffscreenintegration.cpp' l='119' ll='137' type='QJsonObject QOffscreenIntegration::defaultConfiguration() const'/>
<doc f='qtbase-6.5.0/src/plugins/platforms/offscreen/qoffscreenintegration.cpp' l='89'>/*
    The offscren platform plugin is configurable with a JSON configuration.
    The confiuration can be provided either from a file on disk on startup,
    or at by calling setConfiguration().

    To provide a configuration on startuip, write the config to disk and pass
    the file path as a platform argument:

        ./myapp -platform offscreen:configfile=/path/to/config.json

    The supported top-level config keys are:
    {
        &quot;synchronousWindowSystemEvents&quot;: &lt;bool&gt;
        &quot;windowFrameMargins&quot;: &lt;bool&gt;,
        &quot;screens&quot;: [&lt;screens&gt;],
    }

    &quot;screens&quot; is an array of:
    {
        &quot;name&quot;: string,
        &quot;x&quot;: int,
        &quot;y&quot;: int,
        &quot;width&quot;: int,
        &quot;height&quot;: int,
        &quot;logicalDpi&quot;: int,
        &quot;logicalBaseDpi&quot;: int,
        &quot;dpr&quot;: double,
    }
*/</doc>
