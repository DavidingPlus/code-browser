<dec f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.h' l='371' type='void QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent * event)'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='6671' u='c' c='_ZN13QGraphicsItem10sceneEventEP6QEvent'/>
<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='6823' ll='6829' type='void QGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent * event)'/>
<ovr f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='10218' c='_ZN17QGraphicsTextItem14dragLeaveEventEP27QGraphicsSceneDragDropEvent'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='6807'>/*!
    This event handler, for event \a event, can be reimplemented to receive
    drag leave events for this item. Drag leave events are generated as the
    cursor leaves the item&apos;s area. Most often you will not need to reimplement
    this function, but it can be useful for resetting state in your item
    (e.g., highlighting).

    Calling QEvent::ignore() or QEvent::accept() on \a event has no effect.

    Items do not receive drag and drop events by default; to enable this
    feature, call \c setAcceptDrops(true).

    The default implementation does nothing.

    \sa dragEnterEvent(), dropEvent(), dragMoveEvent()
*/</doc>
<ovr f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsproxywidget.cpp' l='1045' c='_ZN20QGraphicsProxyWidget14dragLeaveEventEP27QGraphicsSceneDragDropEvent'/>
