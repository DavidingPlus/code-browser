<dec f='qtbase-6.5.0/src/corelib/thread/qfuturewatcher.h' l='71' type='void QFutureWatcherBase::toggleSuspended()'/>
<def f='qtbase-6.5.0/src/corelib/thread/qfuturewatcher.cpp' l='225' ll='228' type='void QFutureWatcherBase::toggleSuspended()'/>
<doc f='qtbase-6.5.0/src/corelib/thread/qfuturewatcher.cpp' l='214'>/*! \fn template &lt;typename T&gt; void QFutureWatcher&lt;T&gt;::toggleSuspended()

    \since 6.0

    Toggles the suspended state of the asynchronous computation. In other words,
    if the computation is currently suspending or suspended, calling this
    function resumes it; if the computation is running, it is suspended. This is a
    convenience method for calling setSuspended(!(isSuspending() || isSuspended())).

    \sa setSuspended(), suspend(), resume()
*/</doc>
