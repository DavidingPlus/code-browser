<dec f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='3112' type='int sqlite3_busy_timeout(sqlite3 * , int ms)'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='132890'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='136746' u='c' c='sqlite3Pragma'/>
<def f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='175735' ll='175747' type='int sqlite3_busy_timeout(sqlite3 * db, int ms)'/>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='3091'>/*
** CAPI3REF: Set A Busy Timeout
** METHOD: sqlite3
**
** ^This routine sets a [sqlite3_busy_handler | busy handler] that sleeps
** for a specified amount of time when a table is locked.  ^The handler
** will sleep multiple times until at least &quot;ms&quot; milliseconds of sleeping
** have accumulated.  ^After at least &quot;ms&quot; milliseconds of sleeping,
** the handler returns 0 which causes [sqlite3_step()] to return
** [SQLITE_BUSY].
**
** ^Calling this routine with an argument less than or equal to zero
** turns off all busy handlers.
**
** ^(There can only be a single busy handler for a particular
** [database connection] at any given moment.  If another busy handler
** was defined  (using [sqlite3_busy_handler()]) prior to calling
** this routine, that other busy handler is cleared.)^
**
** See also:  [PRAGMA busy_timeout]
*/</doc>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='175731'>/*
** This routine installs a default busy handler that waits for the
** specified number of milliseconds before returning 0.
*/</doc>
<dec f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='2806' type='int sqlite3_busy_timeout(sqlite3 * , int ms)'/>
<use f='qtbase-6.5.0/src/plugins/sqldrivers/sqlite/qsql_sqlite.cpp' l='748' u='c' c='_ZN13QSQLiteDriver4openERK7QStringS2_S2_S2_iS2_'/>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='2785'>/*
** CAPI3REF: Set A Busy Timeout
** METHOD: sqlite3
**
** ^This routine sets a [sqlite3_busy_handler | busy handler] that sleeps
** for a specified amount of time when a table is locked.  ^The handler
** will sleep multiple times until at least &quot;ms&quot; milliseconds of sleeping
** have accumulated.  ^After at least &quot;ms&quot; milliseconds of sleeping,
** the handler returns 0 which causes [sqlite3_step()] to return
** [SQLITE_BUSY].
**
** ^Calling this routine with an argument less than or equal to zero
** turns off all busy handlers.
**
** ^(There can only be a single busy handler for a particular
** [database connection] at any given moment.  If another busy handler
** was defined  (using [sqlite3_busy_handler()]) prior to calling
** this routine, that other busy handler is cleared.)^
**
** See also:  [PRAGMA busy_timeout]
*/</doc>
