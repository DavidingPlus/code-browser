<def f='qtbase-6.5.0/src/3rdparty/md4c/md4c.h' l='231' ll='236'/>
<use f='qtbase-6.5.0/src/3rdparty/md4c/md4c.h' l='231'/>
<size>32</size>
<doc f='qtbase-6.5.0/src/3rdparty/md4c/md4c.h' l='204'>/* String attribute.
 *
 * This wraps strings which are outside of a normal text flow and which are
 * propagated within various detailed structures, but which still may contain
 * string portions of different types like e.g. entities.
 *
 * So, for example, lets consider this image:
 *
 *     ![image alt text](http://example.org/image.png &apos;foo &amp;quot; bar&apos;)
 *
 * The image alt text is propagated as a normal text via the MD_PARSER::text()
 * callback. However, the image title (&apos;foo &amp;quot; bar&apos;) is propagated as
 * MD_ATTRIBUTE in MD_SPAN_IMG_DETAIL::title.
 *
 * Then the attribute MD_SPAN_IMG_DETAIL::title shall provide the following:
 *  -- [0]: &quot;foo &quot;   (substr_types[0] == MD_TEXT_NORMAL; substr_offsets[0] == 0)
 *  -- [1]: &quot;&amp;quot;&quot; (substr_types[1] == MD_TEXT_ENTITY; substr_offsets[1] == 4)
 *  -- [2]: &quot; bar&quot;   (substr_types[2] == MD_TEXT_NORMAL; substr_offsets[2] == 10)
 *  -- [3]: (n/a)    (n/a                              ; substr_offsets[3] == 14)
 *
 * Note that these invariants are always guaranteed:
 *  -- substr_offsets[0] == 0
 *  -- substr_offsets[LAST+1] == size
 *  -- Currently, only MD_TEXT_NORMAL, MD_TEXT_ENTITY, MD_TEXT_NULLCHAR
 *     substrings can appear. This could change only of the specification
 *     changes.
 */</doc>
<mbr r='MD_ATTRIBUTE::text' o='0' t='const MD_CHAR *'/>
<mbr r='MD_ATTRIBUTE::size' o='64' t='MD_SIZE'/>
<mbr r='MD_ATTRIBUTE::substr_types' o='128' t='const MD_TEXTTYPE *'/>
<mbr r='MD_ATTRIBUTE::substr_offsets' o='192' t='const MD_OFFSET *'/>
