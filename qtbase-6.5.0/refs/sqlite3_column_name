<dec f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='5028' type='const char * sqlite3_column_name(sqlite3_stmt * , int N)'/>
<def f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='89113' ll='89115' type='const char * sqlite3_column_name(sqlite3_stmt * pStmt, int N)'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='131961' u='c' c='sqlite3_exec'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='132906'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='181274' u='c' c='fts3ContentColumns'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='181285' u='c' c='fts3ContentColumns'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='204670' u='c' c='rtreeConstraintError'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='204675' u='c' c='rtreeConstraintError'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='204676' u='c' c='rtreeConstraintError'/>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='5001'>/*
** CAPI3REF: Column Names In A Result Set
** METHOD: sqlite3_stmt
**
** ^These routines return the name assigned to a particular column
** in the result set of a [SELECT] statement.  ^The sqlite3_column_name()
** interface returns a pointer to a zero-terminated UTF-8 string
** and sqlite3_column_name16() returns a pointer to a zero-terminated
** UTF-16 string.  ^The first parameter is the [prepared statement]
** that implements the [SELECT] statement. ^The second parameter is the
** column number.  ^The leftmost column is number 0.
**
** ^The returned string pointer is valid until either the [prepared statement]
** is destroyed by [sqlite3_finalize()] or until the statement is automatically
** reprepared by the first call to [sqlite3_step()] for a particular run
** or until the next call to
** sqlite3_column_name() or sqlite3_column_name16() on the same column.
**
** ^If sqlite3_malloc() fails during the processing of either routine
** (for example during a conversion from UTF-8 to UTF-16) then a
** NULL pointer is returned.
**
** ^The name of a result column is the value of the &quot;AS&quot; clause for
** that column, if there is an AS clause.  If there is no AS clause
** then the name of the column is unspecified and may change from
** one release of SQLite to the next.
*/</doc>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='89109'>/*
** Return the name of the Nth column of the result set returned by SQL
** statement pStmt.
*/</doc>
<dec f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='4722' type='const char * sqlite3_column_name(sqlite3_stmt * , int N)'/>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='4695'>/*
** CAPI3REF: Column Names In A Result Set
** METHOD: sqlite3_stmt
**
** ^These routines return the name assigned to a particular column
** in the result set of a [SELECT] statement.  ^The sqlite3_column_name()
** interface returns a pointer to a zero-terminated UTF-8 string
** and sqlite3_column_name16() returns a pointer to a zero-terminated
** UTF-16 string.  ^The first parameter is the [prepared statement]
** that implements the [SELECT] statement. ^The second parameter is the
** column number.  ^The leftmost column is number 0.
**
** ^The returned string pointer is valid until either the [prepared statement]
** is destroyed by [sqlite3_finalize()] or until the statement is automatically
** reprepared by the first call to [sqlite3_step()] for a particular run
** or until the next call to
** sqlite3_column_name() or sqlite3_column_name16() on the same column.
**
** ^If sqlite3_malloc() fails during the processing of either routine
** (for example during a conversion from UTF-8 to UTF-16) then a
** NULL pointer is returned.
**
** ^The name of a result column is the value of the &quot;AS&quot; clause for
** that column, if there is an AS clause.  If there is no AS clause
** then the name of the column is unspecified and may change from
** one release of SQLite to the next.
*/</doc>
