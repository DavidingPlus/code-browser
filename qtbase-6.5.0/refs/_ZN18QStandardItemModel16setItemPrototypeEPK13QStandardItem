<dec f='qtbase-6.5.0/src/gui/itemmodels/qstandarditemmodel.h' l='363' type='void QStandardItemModel::setItemPrototype(const QStandardItem * item)'/>
<def f='qtbase-6.5.0/src/gui/itemmodels/qstandarditemmodel.cpp' l='2581' ll='2588' type='void QStandardItemModel::setItemPrototype(const QStandardItem * item)'/>
<doc f='qtbase-6.5.0/src/gui/itemmodels/qstandarditemmodel.cpp' l='2566'>/*!
    \since 4.2

    Sets the item prototype for the model to the specified \a item. The model
    takes ownership of the prototype.

    The item prototype acts as a QStandardItem factory, by relying on the
    QStandardItem::clone() function.  To provide your own prototype, subclass
    QStandardItem, reimplement QStandardItem::clone() and set the prototype to
    be an instance of your custom class. Whenever QStandardItemModel needs to
    create an item on demand (for instance, when a view or item delegate calls
    setData())), the new items will be instances of your custom class.

    \sa itemPrototype(), QStandardItem::clone()
*/</doc>
