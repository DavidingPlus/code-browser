<dec f='qtbase-6.5.0/src/corelib/serialization/qcborstreamreader.h' l='89' type='bool QCborStreamReader::next(int maxRecursion = 10000)'/>
<def f='qtbase-6.5.0/src/corelib/serialization/qcborstreamreader.cpp' l='1006' ll='1043' type='bool QCborStreamReader::next(int maxRecursion = 10000)'/>
<use f='qtbase-6.5.0/src/corelib/serialization/qcborstreamreader.cpp' l='1019' u='c' c='_ZN17QCborStreamReader4nextEi'/>
<doc f='qtbase-6.5.0/src/corelib/serialization/qcborstreamreader.cpp' l='990'>/*!
   Advance the CBOR stream decoding one element. You should usually call this
   function when parsing fixed-width basic elements (that is, integers, simple
   values, tags and floating point values). But this function can be called
   when the current item is a string, array or map too and it will skip over
   that entire element, including all contained elements.

   This function returns true if advancing was successful, false otherwise. It
   may fail if the stream is corrupt, incomplete or if the nesting level of
   arrays and maps exceeds \a maxRecursion. Calling this function when
   hasNext() has returned false is also an error. If this function returns
   false, lastError() will return the error code detailing what the failure
   was.

   \sa lastError(), isValid(), hasNext()
 */</doc>
