<dec f='qtbase-6.5.0/src/corelib/text/qbytearray.h' l='381' type='static QByteArray QByteArray::fromBase64(const QByteArray &amp; base64, QByteArray::Base64Options options = Base64Encoding)'/>
<use f='qtbase-6.5.0/src/corelib/io/qdataurl.cpp' l='40' u='c' c='_Z14qDecodeDataUrlRK4QUrlR7QStringR10QByteArray'/>
<def f='qtbase-6.5.0/src/corelib/text/qbytearray.cpp' l='4584' ll='4589' type='static QByteArray QByteArray::fromBase64(const QByteArray &amp; base64, QByteArray::Base64Options options = Base64Encoding)'/>
<doc f='qtbase-6.5.0/src/corelib/text/qbytearray.cpp' l='4560'>/*!
    \since 5.2

    Returns a decoded copy of the Base64 array \a base64, using the options
    defined by \a options. If \a options contains \c{IgnoreBase64DecodingErrors}
    (the default), the input is not checked for validity; invalid
    characters in the input are skipped, enabling the decoding process to
    continue with subsequent characters. If \a options contains
    \c{AbortOnBase64DecodingErrors}, then decoding will stop at the first
    invalid character.

    For example:

    \snippet code/src_corelib_text_qbytearray.cpp 44

    The algorithm used to decode Base64-encoded data is defined in \l{RFC 4648}.

    Returns the decoded data, or, if the \c{AbortOnBase64DecodingErrors}
    option was passed and the input data was invalid, an empty byte array.

    \note The fromBase64Encoding() function is recommended in new code.

    \sa toBase64(), fromBase64Encoding()
*/</doc>
<use f='qtbase-6.5.0/src/network/kernel/qauthenticator.cpp' l='602' u='c' c='_ZN21QAuthenticatorPrivate17calculateResponseE14QByteArrayViewS0_11QStringView'/>
<use f='qtbase-6.5.0/src/plugins/tls/shared/qx509_generic.cpp' l='119' u='c' c='_ZN11QTlsPrivate22X509CertificateGeneric19certificatesFromPemERK10QByteArrayi'/>
