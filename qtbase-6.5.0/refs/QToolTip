<def f='qtbase-6.5.0/src/widgets/kernel/qtooltip.h' l='13' ll='28'/>
<size>1</size>
<fun r='_ZN8QToolTipC1Ev'/>
<fun r='_ZN8QToolTip8showTextERK6QPointRK7QStringP7QWidgetRK5QRecti'/>
<fun r='_ZN8QToolTip8hideTextEv'/>
<fun r='_ZN8QToolTip9isVisibleEv'/>
<fun r='_ZN8QToolTip4textEv'/>
<fun r='_ZN8QToolTip7paletteEv'/>
<fun r='_ZN8QToolTip10setPaletteERK8QPalette'/>
<fun r='_ZN8QToolTip4fontEv'/>
<fun r='_ZN8QToolTip7setFontERK5QFont'/>
<doc f='qtbase-6.5.0/src/widgets/kernel/qtooltip.cpp' l='31'>/*!
    \class QToolTip

    \brief The QToolTip class provides tool tips (balloon help) for any
    widget.

    \ingroup helpsystem
    \inmodule QtWidgets

    The tip is a short piece of text reminding the user of the
    widget&apos;s function. It is drawn immediately below the given
    position in a distinctive black-on-yellow color combination. The
    tip can be any \l{QTextEdit}{rich text} formatted string.

    Rich text displayed in a tool tip is implicitly word-wrapped unless
    specified differently with \c{&lt;p style=&apos;white-space:pre&apos;&gt;}.

    The simplest and most common way to set a widget&apos;s tool tip is by
    calling its QWidget::setToolTip() function.

    It is also possible to show different tool tips for different
    regions of a widget, by using a QHelpEvent of type
    QEvent::ToolTip. Intercept the help event in your widget&apos;s \l
    {QWidget::}{event()} function and call QToolTip::showText() with
    the text you want to display. The \l{widgets/tooltips}{Tooltips}
    example illustrates this technique.

    If you are calling QToolTip::hideText(), or QToolTip::showText()
    with an empty string, as a result of a \l{QEvent::}{ToolTip}-event you
    should also call \l{QEvent::}{ignore()} on the event, to signal
    that you don&apos;t want to start any tooltip specific modes.

    Note that, if you want to show tooltips in an item view, the
    model/view architecture provides functionality to set an item&apos;s
    tool tip; e.g., the QTableWidgetItem::setToolTip() function.
    However, if you want to provide custom tool tips in an item view,
    you must intercept the help event in the
    QAbstractItemView::viewportEvent() function and handle it yourself.

    The default tool tip color and font can be customized with
    setPalette() and setFont(). When a tooltip is currently on
    display, isVisible() returns \c true and text() the currently visible
    text.

    \note Tool tips use the inactive color group of QPalette, because tool
    tips are not active windows.

    \sa QWidget::toolTip, QAction::toolTip, {Tool Tips Example}
*/</doc>
<fun r='_ZN8QToolTip8showTextERK6QPointRK7QStringP7QWidgetRK5QRecti'/>
<fun r='_ZN8QToolTip9isVisibleEv'/>
<fun r='_ZN8QToolTip4textEv'/>
<fun r='_ZN8QToolTip7paletteEv'/>
<fun r='_ZN8QToolTip4fontEv'/>
<fun r='_ZN8QToolTip10setPaletteERK8QPalette'/>
<fun r='_ZN8QToolTip7setFontERK5QFont'/>
