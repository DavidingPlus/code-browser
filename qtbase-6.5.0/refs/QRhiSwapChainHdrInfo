<def f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='1339' ll='1356'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='1358'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='1358'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='1358'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='1358'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='1358'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='1361' c='_Zls6QDebugRK20QRhiSwapChainHdrInfo'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='1425' c='_ZN13QRhiSwapChain7hdrInfoEv'/>
<size>16</size>
<mbr r='QRhiSwapChainHdrInfo::isHardCodedDefaults' o='0' t='bool'/>
<mbr r='QRhiSwapChainHdrInfo::limitsType' o='32' t='QRhiSwapChainHdrInfo::LimitsType'/>
<mbr r='QRhiSwapChainHdrInfo::limits' o='64' t='union (unnamed union at /home/lzx0626/DavidingPlus/qtbase/build/include/QtGui/6.5.0/QtGui/private/../../../../../../src/gui/rhi/qrhi_p.h:1347:5)'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='4971' c='_ZN13QRhiSwapChain7hdrInfoEv'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='4973' c='_ZN13QRhiSwapChain7hdrInfoEv'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='4982' c='_Zls6QDebugRK20QRhiSwapChainHdrInfo'/>
<size>16</size>
<doc f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='4916'>/*!
    \struct QRhiSwapChainHdrInfo
    \internal
    \inmodule QtGui

    \brief Describes the high dynamic range related information of the
    swapchain&apos;s associated output.

    To perform tonemapping, one often needs to know the maximum luminance of
    the display the swapchain&apos;s window is associated with. While this is often
    made user-configurable, it can be highly useful to set defaults based on
    the values reported by the display itself, thus providing a decent starting
    point.

    There are some problems however: the information is exposed in different
    forms on different platforms, whereas with cross-platform graphics APIs
    there is often no associated solution at all, because managing such
    information is not in the scope of the API (and may rather be retrievable
    via other platform-specific means, if any).

    The struct returned from QRhiSwapChain::hdrInfo() contains either some
    hard-coded defaults, indicated by the \c isHardCodedDefaults field, or real
    values received from an API such as DXGI (IDXGIOutput6) or Cocoa
    (NSScreen). The default is 1000 nits for maximum luminance.

    With Metal on macOS/iOS, there is no luminance values exposed in the
    platform APIs. Instead, the maximum color component value, that would be
    1.0 in a non-HDR setup, is provided. The \c limitsType field indicates what
    kind of information is available. It is then up to the clients of QRhi to
    access the correct data from the \c limits union and use it as they see
    fit.

    With an API like Vulkan, where there is no way to get such information, the
    values are always the built-in defaults and \c isHardCodedDefaults is
    always true.

    \sa QRhiSwapChain::hdrInfo()
 */</doc>
