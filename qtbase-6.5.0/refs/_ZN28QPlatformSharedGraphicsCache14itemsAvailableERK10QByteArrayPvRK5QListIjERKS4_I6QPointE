<dec f='qtbase-6.5.0/src/gui/kernel/qplatformsharedgraphicscache.h' l='57' type='void QPlatformSharedGraphicsCache::itemsAvailable(const QByteArray &amp; cacheId, void * bufferId, const QList&lt;quint32&gt; &amp; itemIds, const QList&lt;QPoint&gt; &amp; positionsInBuffer)'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qplatformsharedgraphicscache.cpp' l='119'>/*!
    \fn void QPlatformSharedGraphicsCache::itemsAvailable(const QByteArray &amp;cacheId, void *bufferId, const QList&lt;quint32&gt; &amp;itemIds, const QList&lt;QPoint&gt; &amp;positionsInBuffer)

    This signal can be emitted at any time when either requestItems() or insertItems() has been
    called by the application for one or more items in the cache named \a cacheId, as long as
    releaseItems() has not subsequently been called for the same items. It instructs the application
    on where to find the items that have been entered into the cache. When the application receives
    a buffer, it is expected to reference it using referenceBuffer() on it if it keeps a reference
    to the buffer.

    The \a bufferId is an ID for the buffer that contains the items. The \a bufferId can be
    converted to a format usable by the application depending on which format it was given at
    initialization. If it is a OpenGLTexture, its texture ID can be requested using the
    textureIdForBuffer() function. The dimensions of the buffer are given by \a bufferSize.

    The items provided by the cache are identified in the \a itemIds list. The
    \a positionsInBuffer list contains the locations inside the buffer of each item. Each entry in
    \a positionsInBuffer corresponds to an item in \a itemIds.

    The buffer and the items&apos; locations within the buffer can be considered valid until an
    itemsInvalidated() signal has been emitted for the items, or until releaseItems() is called
    for the items.

    \sa itemsMissing(), requestItems(), bufferType()
*/</doc>
