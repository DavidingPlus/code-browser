<dec f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='1505' type='void QRhiCommandBuffer::setViewport(const QRhiViewport &amp; viewport)'/>
<use f='qtbase-6.5.0/src/gui/painting/qbackingstoredefaultcompositor.cpp' l='588' u='c' c='_ZN30QBackingStoreDefaultCompositor5flushEP21QPlatformBackingStoreP4QRhiP13QRhiSwapChainP7QWindowdRK7QRegionRK6QPointP20QPlatformTextureListb'/>
<def f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='6565' ll='6568' type='void QRhiCommandBuffer::setViewport(const QRhiViewport &amp; viewport)'/>
<doc f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='6551'>/*!
    Records setting the active viewport rectangle specified in \a viewport.

    With backends where the underlying graphics API has scissoring always
    enabled, this function also sets the scissor to match the viewport whenever
    the active QRhiGraphicsPipeline does not have
    \l{QRhiGraphicsPipeline::UsesScissor}{UsesScissor} set.

    \note QRhi assumes OpenGL-style viewport coordinates, meaning x and y are
    bottom-left.

    \note This function can only be called inside a render pass, meaning
    between a beginPass() and endPass() call.
 */</doc>
