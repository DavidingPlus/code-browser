<dec f='qtbase-6.5.0/src/corelib/serialization/qtextstream.h' l='93' type='bool QTextStream::readLineInto(QString * line, qint64 maxlen = 0)'/>
<use f='qtbase-6.5.0/src/corelib/io/qloggingregistry.cpp' l='171' u='c' c='_ZN22QLoggingSettingsParser10setContentER11QTextStream'/>
<use f='qtbase-6.5.0/src/corelib/serialization/qtextstream.cpp' l='1534' u='c' c='_ZN11QTextStream8readLineEx'/>
<def f='qtbase-6.5.0/src/corelib/serialization/qtextstream.cpp' l='1563' ll='1586' type='bool QTextStream::readLineInto(QString * line, qint64 maxlen = 0)'/>
<doc f='qtbase-6.5.0/src/corelib/serialization/qtextstream.cpp' l='1538'>/*!
    \since 5.5

    Reads one line of text from the stream into \a line.
    If \a line is \nullptr, the read line is not stored.

    The maximum allowed line length is set to \a maxlen. If
    the stream contains lines longer than this, then the lines will be
    split after \a maxlen characters and returned in parts.

    If \a maxlen is 0, the lines can be of any length.

    The resulting line has no trailing end-of-line characters (&quot;\\n&quot;
    or &quot;\\r\\n&quot;), so calling QString::trimmed() can be unnecessary.

    If \a line has sufficient capacity for the data that is about to be
    read, this function may not need to allocate new memory. Because of
    this, it can be faster than readLine().

    Returns \c false if the stream has read to the end of the file or
    an error has occurred; otherwise returns \c true. The contents in
    \a line before the call are discarded in any case.

    \sa readAll(), QIODevice::readLine()
*/</doc>
<use f='qtbase-6.5.0/src/tools/cmake_automoc_parser/main.cpp' l='142' u='c' c='_ZL14readParseCacheR4QMapI7QString15ParseCacheEntryERKS0_'/>
