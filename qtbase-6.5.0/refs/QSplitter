<inh f='qtbase-6.5.0/src/widgets/widgets/qframe.h' l='16' c='QFrame'/>
<def f='qtbase-6.5.0/src/widgets/widgets/qsplitter.h' l='20' ll='93'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.h' l='89' c='_ZN9QSplitterC1ERKS_'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.h' l='89' c='_ZN9QSplitteraSERKS_'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.h' l='89' c='_ZN9QSplitteraSERKS_'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.h' l='101' c='_ZN15QSplitterHandleC1EN2Qt11OrientationEP9QSplitter'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.h' l='107' c='_ZNK15QSplitterHandle8splitterEv'/>
<size>40</size>
<smbr r='QSplitter::staticMetaObject' t='const QMetaObject'/>
<fun r='_ZNK9QSplitter10metaObjectEv'/>
<fun r='_ZN9QSplitter11qt_metacastEPKc'/>
<fun r='_ZN9QSplitter11qt_metacallEN11QMetaObject4CallEiPPv'/>
<fun r='_ZN9QSplitter2trEPKcS1_i'/>
<fun r='_ZN9QSplitter18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv'/>
<fun r='_ZN9QSplitterC1EP7QWidget'/>
<fun r='_ZN9QSplitterC1EN2Qt11OrientationEP7QWidget'/>
<fun r='_ZN9QSplitterD1Ev'/>
<fun r='_ZN9QSplitter9addWidgetEP7QWidget'/>
<fun r='_ZN9QSplitter12insertWidgetEiP7QWidget'/>
<fun r='_ZN9QSplitter13replaceWidgetEiP7QWidget'/>
<fun r='_ZN9QSplitter14setOrientationEN2Qt11OrientationE'/>
<fun r='_ZNK9QSplitter11orientationEv'/>
<fun r='_ZN9QSplitter22setChildrenCollapsibleEb'/>
<fun r='_ZNK9QSplitter19childrenCollapsibleEv'/>
<fun r='_ZN9QSplitter14setCollapsibleEib'/>
<fun r='_ZNK9QSplitter13isCollapsibleEi'/>
<fun r='_ZN9QSplitter15setOpaqueResizeEb'/>
<fun r='_ZNK9QSplitter12opaqueResizeEv'/>
<fun r='_ZN9QSplitter7refreshEv'/>
<fun r='_ZNK9QSplitter8sizeHintEv'/>
<fun r='_ZNK9QSplitter15minimumSizeHintEv'/>
<fun r='_ZNK9QSplitter5sizesEv'/>
<fun r='_ZN9QSplitter8setSizesERK5QListIiE'/>
<fun r='_ZNK9QSplitter9saveStateEv'/>
<fun r='_ZN9QSplitter12restoreStateERK10QByteArray'/>
<fun r='_ZNK9QSplitter11handleWidthEv'/>
<fun r='_ZN9QSplitter14setHandleWidthEi'/>
<fun r='_ZNK9QSplitter7indexOfEP7QWidget'/>
<fun r='_ZNK9QSplitter6widgetEi'/>
<fun r='_ZNK9QSplitter5countEv'/>
<fun r='_ZNK9QSplitter8getRangeEiPiS0_'/>
<fun r='_ZNK9QSplitter6handleEi'/>
<fun r='_ZN9QSplitter16setStretchFactorEii'/>
<fun r='_ZN9QSplitter13splitterMovedEii'/>
<fun r='_ZN9QSplitter12createHandleEv'/>
<fun r='_ZN9QSplitter10childEventEP11QChildEvent'/>
<fun r='_ZN9QSplitter5eventEP6QEvent'/>
<fun r='_ZN9QSplitter11resizeEventEP12QResizeEvent'/>
<fun r='_ZN9QSplitter11changeEventEP6QEvent'/>
<fun r='_ZN9QSplitter12moveSplitterEii'/>
<fun r='_ZN9QSplitter13setRubberBandEi'/>
<fun r='_ZN9QSplitter20closestLegalPositionEii'/>
<fun r='_ZN9QSplitterC1ERKS_'/>
<fun r='_ZN9QSplitter6d_funcEv'/>
<fun r='_ZNK9QSplitter6d_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter_p.h' l='47' c='_ZN16QSplitterPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter_p.h' l='47' c='_ZN16QSplitterPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter_p.h' l='47' c='_ZNK16QSplitterPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter_p.h' l='47' c='_ZNK16QSplitterPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter_p.h' l='47'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter_p.h' l='112'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.cpp' l='86' c='_ZN15QSplitterHandleC1EN2Qt11OrientationEP9QSplitter'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.cpp' l='146' c='_ZNK15QSplitterHandle8splitterEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.cpp' l='180' c='_ZN15QSplitterHandle20closestLegalPositionEi'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.cpp' l='353' c='_ZN16QSplitterPrivate4initEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.cpp' l='363' c='_ZN16QSplitterPrivate6recalcEb'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.cpp' l='420' c='_ZN16QSplitterPrivate6recalcEb'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.cpp' l='452' c='_ZN16QSplitterPrivate8doResizeEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.cpp' l='579' c='_ZNK16QSplitterPrivate8getRangeEiPiS0_S0_S0_'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.cpp' l='672' c='_ZN16QSplitterPrivate13updateHandlesEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.cpp' l='711' c='_ZNK16QSplitterPrivate16shouldShowWidgetEPK7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.cpp' l='717' c='_ZN16QSplitterPrivate6setGeoEP21QSplitterLayoutStructiib'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.cpp' l='808' c='_ZN16QSplitterPrivate19insertWidget_helperEiP7QWidgetb'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.cpp' l='827' c='_ZN16QSplitterPrivate12insertWidgetEiP7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.cpp' l='920' c='_ZN9QSplitterC1EP7QWidget'/>
<size>40</size>
<doc f='qtbase-6.5.0/src/widgets/widgets/qsplitter.cpp' l='860'>/*!
    \class QSplitter
    \brief The QSplitter class implements a splitter widget.

    \ingroup organizers
    \inmodule QtWidgets


    A splitter lets the user control the size of child widgets by dragging the
    boundary between them. Any number of widgets may be controlled by a
    single splitter. The typical use of a QSplitter is to create several
    widgets and add them using insertWidget() or addWidget().

    The following example will show a QListView, QTreeView, and
    QTextEdit side by side, with two splitter handles:

    \snippet splitter/splitter.cpp 0

    If a widget is already inside a QSplitter when insertWidget() or
    addWidget() is called, it will move to the new position. This can be used
    to reorder widgets in the splitter later. You can use indexOf(),
    widget(), and count() to get access to the widgets inside the splitter.

    A default QSplitter lays out its children horizontally (side by side); you
    can use setOrientation(Qt::Vertical) to lay its
    children out vertically.

    By default, all widgets can be as large or as small as the user
    wishes, between the \l minimumSizeHint() (or \l minimumSize())
    and \l maximumSize() of the widgets.

    QSplitter resizes its children dynamically by default. If you
    would rather have QSplitter resize the children only at the end of
    a resize operation, call setOpaqueResize(false).

    The initial distribution of size between the widgets is determined by
    multiplying the initial size with the stretch factor.
    You can also use setSizes() to set the sizes
    of all the widgets. The function sizes() returns the sizes set by the user.
    Alternatively, you can save and restore the sizes of the widgets from a
    QByteArray using saveState() and restoreState() respectively.

    When you hide() a child, its space will be distributed among the
    other children. It will be reinstated when you show() it again.

    \note Adding a QLayout to a QSplitter is not supported (either through
    setLayout() or making the QSplitter a parent of the QLayout); use addWidget()
    instead (see example above).

    \sa QSplitterHandle, QHBoxLayout, QVBoxLayout, QTabWidget
*/</doc>
<fun r='_ZN9QSplitterC1EP7QWidget'/>
<fun r='_ZN9QSplitterC1EN2Qt11OrientationEP7QWidget'/>
<fun r='_ZN9QSplitterD1Ev'/>
<fun r='_ZN9QSplitter7refreshEv'/>
<fun r='_ZN9QSplitter14setOrientationEN2Qt11OrientationE'/>
<fun r='_ZNK9QSplitter11orientationEv'/>
<fun r='_ZN9QSplitter22setChildrenCollapsibleEb'/>
<fun r='_ZNK9QSplitter19childrenCollapsibleEv'/>
<fun r='_ZN9QSplitter14setCollapsibleEib'/>
<fun r='_ZNK9QSplitter13isCollapsibleEi'/>
<fun r='_ZN9QSplitter11resizeEventEP12QResizeEvent'/>
<fun r='_ZN9QSplitter9addWidgetEP7QWidget'/>
<fun r='_ZN9QSplitter12insertWidgetEiP7QWidget'/>
<fun r='_ZN9QSplitter13replaceWidgetEiP7QWidget'/>
<fun r='_ZNK9QSplitter7indexOfEP7QWidget'/>
<fun r='_ZN9QSplitter12createHandleEv'/>
<fun r='_ZNK9QSplitter6handleEi'/>
<fun r='_ZNK9QSplitter6widgetEi'/>
<fun r='_ZNK9QSplitter5countEv'/>
<fun r='_ZN9QSplitter10childEventEP11QChildEvent'/>
<fun r='_ZN9QSplitter13setRubberBandEi'/>
<fun r='_ZN9QSplitter5eventEP6QEvent'/>
<fun r='_ZN9QSplitter12moveSplitterEii'/>
<fun r='_ZNK9QSplitter8getRangeEiPiS0_'/>
<fun r='_ZN9QSplitter20closestLegalPositionEii'/>
<fun r='_ZNK9QSplitter12opaqueResizeEv'/>
<fun r='_ZN9QSplitter15setOpaqueResizeEb'/>
<fun r='_ZNK9QSplitter8sizeHintEv'/>
<fun r='_ZNK9QSplitter15minimumSizeHintEv'/>
<fun r='_ZNK9QSplitter5sizesEv'/>
<fun r='_ZN9QSplitter8setSizesERK5QListIiE'/>
<fun r='_ZNK9QSplitter11handleWidthEv'/>
<fun r='_ZN9QSplitter14setHandleWidthEi'/>
<fun r='_ZN9QSplitter11changeEventEP6QEvent'/>
<fun r='_ZNK9QSplitter9saveStateEv'/>
<fun r='_ZN9QSplitter12restoreStateERK10QByteArray'/>
<fun r='_ZN9QSplitter16setStretchFactorEii'/>
