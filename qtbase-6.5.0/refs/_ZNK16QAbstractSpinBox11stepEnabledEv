<dec f='qtbase-6.5.0/src/widgets/widgets/qabstractspinbox.h' l='132' type='QAbstractSpinBox::StepEnabled QAbstractSpinBox::stepEnabled() const'/>
<def f='qtbase-6.5.0/src/widgets/widgets/qabstractspinbox.cpp' l='536' ll='551' type='QAbstractSpinBox::StepEnabled QAbstractSpinBox::stepEnabled() const'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qabstractspinbox.cpp' l='1007' u='c' c='_ZN16QAbstractSpinBox13keyPressEventEP9QKeyEvent'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qabstractspinbox.cpp' l='1154' u='c' c='_ZN16QAbstractSpinBox10wheelEventEP11QWheelEvent'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qabstractspinbox.cpp' l='1256' u='c' c='_ZN16QAbstractSpinBox10timerEventEP11QTimerEvent'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qabstractspinbox.cpp' l='1299' u='c' c='_ZN16QAbstractSpinBox16contextMenuEventEP17QContextMenuEvent'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qabstractspinbox.cpp' l='1337' u='c' c='_ZN16QAbstractSpinBox14mouseMoveEventEP11QMouseEvent'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qabstractspinbox.cpp' l='1364' u='c' c='_ZN16QAbstractSpinBox15mousePressEventEP11QMouseEvent'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qabstractspinbox.cpp' l='1646' u='c' c='_ZN23QAbstractSpinBoxPrivate11updateStateEbb'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qabstractspinbox.cpp' l='1697' u='c' c='_ZNK16QAbstractSpinBox15initStyleOptionEP19QStyleOptionSpinBox'/>
<doc f='qtbase-6.5.0/src/widgets/widgets/qabstractspinbox.cpp' l='518'>/*!
    Virtual function that determines whether stepping up and down is
    legal at any given time.

    The up arrow will be painted as disabled unless (stepEnabled() &amp;
    StepUpEnabled) != 0.

    The default implementation will return (StepUpEnabled|
    StepDownEnabled) if wrapping is turned on. Else it will return
    StepDownEnabled if value is &gt; minimum() or&apos;ed with StepUpEnabled if
    value &lt; maximum().

    If you subclass QAbstractSpinBox you will need to reimplement this function.

    \sa QSpinBox::minimum(), QSpinBox::maximum(), wrapping()
*/</doc>
<ovr f='qtbase-6.5.0/src/widgets/widgets/qdatetimeedit.cpp' l='1470' c='_ZNK13QDateTimeEdit11stepEnabledEv'/>
