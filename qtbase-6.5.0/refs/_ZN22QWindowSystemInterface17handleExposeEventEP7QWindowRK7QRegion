<dec f='qtbase-6.5.0/src/gui/kernel/qwindowsysteminterface.h' l='172' type='static bool QWindowSystemInterface::handleExposeEvent(QWindow * window, const QRegion &amp; region)'/>
<use f='qtbase-6.5.0/src/gui/kernel/qplatformwindow.cpp' l='152' u='c' c='_ZN15QPlatformWindow10setVisibleEb'/>
<def f='qtbase-6.5.0/src/gui/kernel/qwindowsysteminterface.cpp' l='329' ll='333' macro='1' type='static bool QWindowSystemInterface::handleExposeEvent(QWindow * window, const QRegion &amp; region)'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qwindowsysteminterface.cpp' l='312'>/*! \internal
    Handles an expose event.

    The platform plugin sends expose events when an area of the window
    is invalidated or window exposure changes. \a region is in window
    local coordinates. An empty region indicates that the window is
    obscured, but note that the exposed property of the QWindow will be set
    based on what QPlatformWindow::isExposed() returns at the time of this call,
    not based on what the region is. // FIXME: this should probably be fixed.

    The platform plugin may omit sending expose events (or send obscure
    events) for windows that are on screen but where the client area is
    completely covered by other windows or otherwise not visible. Expose
    event consumers can then use this to disable updates for such windows.
    This is required behavior on platforms where OpenGL swapbuffers stops
    blocking for obscured windows (like macOS).
*/</doc>
<use f='qtbase-6.5.0/src/platformsupport/fbconvenience/qfbwindow.cpp' l='39' u='c' c='_ZN9QFbWindow11setGeometryERK5QRect'/>
<use f='qtbase-6.5.0/src/platformsupport/fbconvenience/qfbwindow.cpp' l='70' u='c' c='_ZN9QFbWindow10setVisibleEb'/>
<use f='qtbase-6.5.0/src/platformsupport/fbconvenience/qfbwindow.cpp' l='93' u='c' c='_ZN9QFbWindow5raiseEv'/>
<use f='qtbase-6.5.0/src/platformsupport/fbconvenience/qfbwindow.cpp' l='99' u='c' c='_ZN9QFbWindow5lowerEv'/>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfscursor.cpp' l='246' u='c' c='_ZN12QEglFSCursor5eventEP6QEvent'/>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfscursor.cpp' l='251' u='c' c='_ZN12QEglFSCursor5eventEP6QEvent'/>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfswindow.cpp' l='227' u='c' c='_ZN12QEglFSWindow10setVisibleEb'/>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfswindow.cpp' l='245' u='c' c='_ZN12QEglFSWindow11setGeometryERK5QRect'/>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfswindow.cpp' l='267' u='c' c='_ZN12QEglFSWindow21requestActivateWindowEv'/>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfswindow.cpp' l='277' u='c' c='_ZN12QEglFSWindow5raiseEv'/>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfswindow.cpp' l='290' u='c' c='_ZN12QEglFSWindow5lowerEv'/>
<use f='qtbase-6.5.0/src/plugins/platforms/offscreen/qoffscreenwindow.cpp' l='76' u='c' c='_ZN16QOffscreenWindow15setGeometryImplERK5QRect'/>
<use f='qtbase-6.5.0/src/plugins/platforms/offscreen/qoffscreenwindow.cpp' l='100' u='c' c='_ZN16QOffscreenWindow10setVisibleEb'/>
<use f='qtbase-6.5.0/src/plugins/platforms/offscreen/qoffscreenwindow.cpp' l='109' u='c' c='_ZN16QOffscreenWindow10setVisibleEb'/>
