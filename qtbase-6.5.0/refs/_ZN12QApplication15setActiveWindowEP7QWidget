<dec f='qtbase-6.5.0/src/widgets/kernel/qapplication.h' l='84' type='static void QApplication::setActiveWindow(QWidget * act)'/>
<def f='qtbase-6.5.0/src/widgets/kernel/qapplication.cpp' l='1793' ll='1796' type='static void QApplication::setActiveWindow(QWidget * act)'/>
<doc f='qtbase-6.5.0/src/widgets/kernel/qapplication.cpp' l='1773'>/*!
    \fn void QApplication::setActiveWindow(QWidget* active)
    \deprecated Use QWidget::activateWindow() instead.

    Sets the active window to the \a active widget in response to a system
    event. The function is called from the platform specific event handlers.

    \warning This function does \e not set the keyboard focus to the active
    widget. Call QWidget::activateWindow() instead.

    It sets the activeWindow() and focusWidget() attributes and sends proper
    \l{QEvent::WindowActivate}{WindowActivate}/\l{QEvent::WindowDeactivate}
    {WindowDeactivate} and \l{QEvent::FocusIn}{FocusIn}/\l{QEvent::FocusOut}
    {FocusOut} events to all appropriate widgets. The window will then be
    painted in active state (e.g. cursors in line edits will blink), and it
    will have tool tips enabled.

    \sa activeWindow(), QWidget::activateWindow()
*/</doc>
