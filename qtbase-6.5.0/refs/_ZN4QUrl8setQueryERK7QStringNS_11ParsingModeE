<dec f='qtbase-6.5.0/src/corelib/io/qurl.h' l='211' type='void QUrl::setQuery(const QString &amp; query, QUrl::ParsingMode mode = TolerantMode)'/>
<use f='qtbase-6.5.0/src/corelib/io/qfileselector.cpp' l='208' u='c' c='_ZNK13QFileSelector6selectERK4QUrl'/>
<def f='qtbase-6.5.0/src/corelib/io/qurl.cpp' l='2550' ll='2566' type='void QUrl::setQuery(const QString &amp; query, QUrl::ParsingMode mode = TolerantMode)'/>
<use f='qtbase-6.5.0/src/corelib/io/qurl.cpp' l='2944' u='c' c='_ZNK4QUrl8adjustedE12QUrlTwoFlagsINS_19UrlFormattingOptionENS_25ComponentFormattingOptionEE'/>
<doc f='qtbase-6.5.0/src/corelib/io/qurl.cpp' l='2519'>/*!
    Sets the query string of the URL to \a query.

    This function is useful if you need to pass a query string that
    does not fit into the key-value pattern, or that uses a different
    scheme for encoding special characters than what is suggested by
    QUrl.

    Passing a value of QString() to \a query (a null QString) unsets
    the query completely. However, passing a value of QString(&quot;&quot;)
    will set the query to an empty value, as if the original URL
    had a lone &quot;?&quot;.

    The \a query data is interpreted according to \a mode: in StrictMode,
    any &apos;%&apos; characters must be followed by exactly two hexadecimal characters
    and some characters (including space) are not allowed in undecoded form. In
    TolerantMode, all characters are accepted in undecoded form and the
    tolerant parser will correct stray &apos;%&apos; not followed by two hex characters.
    In DecodedMode, &apos;%&apos; stand for themselves and encoded characters are not
    possible.

    Query strings often contain percent-encoded sequences, so use of
    DecodedMode is discouraged. One special sequence to be aware of is that of
    the plus character (&apos;+&apos;). QUrl does not convert spaces to plus characters,
    even though HTML forms posted by web browsers do. In order to represent an
    actual plus character in a query, the sequence &quot;%2B&quot; is usually used. This
    function will leave &quot;%2B&quot; sequences untouched in TolerantMode or
    StrictMode.

    \sa query(), hasQuery()
*/</doc>
<use f='qtbase-6.5.0/src/network/access/qhttpthreaddelegate.cpp' l='131' u='c' c='_ZL12makeCacheKeyR4QUrlP13QNetworkProxyRK7QString'/>
