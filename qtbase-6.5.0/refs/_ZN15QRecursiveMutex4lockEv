<def f='qtbase-6.5.0/src/corelib/thread/qmutex.h' l='203' ll='204' type='void QRecursiveMutex::lock()'/>
<doc f='qtbase-6.5.0/src/corelib/thread/qmutex.h' l='202'>// BasicLockable concept</doc>
<doc f='qtbase-6.5.0/src/corelib/thread/qmutex.cpp' l='270'>/*! \fn void QRecursiveMutex::lock()

    Locks the mutex. If another thread has locked the mutex then this
    call will block until that thread has unlocked it.

    Calling this function multiple times on the same mutex from the
    same thread is allowed.

    \sa unlock()
*/</doc>
<use f='qtbase-6.5.0/src/gui/text/freetype/qfontengine_ft_p.h' l='57' u='c' c='_ZN13QFreetypeFace4lockEv'/>
