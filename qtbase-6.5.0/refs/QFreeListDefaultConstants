<def f='qtbase-6.5.0/src/corelib/tools/qfreelist_p.h' l='78' ll='91'/>
<use f='qtbase-6.5.0/src/corelib/tools/qfreelist_p.h' l='110'/>
<ovr f='qtbase-6.5.0/src/corelib/kernel/qabstracteventdispatcher.cpp' l='16' c='QtTimerIdFreeListConstants'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qabstracteventdispatcher.cpp' l='16'/>
<size>1</size>
<doc f='qtbase-6.5.0/src/corelib/tools/qfreelist_p.h' l='61'>/*! \internal

    Defines default constants used by QFreeList:

    - The initial value returned by QFreeList::next() is zero.

    - QFreeList allows for up to 16777216 elements in QFreeList and uses the top
      8 bits to store a serial counter for ABA protection.

    - QFreeList will make a maximum of 4 allocations (blocks), with each
      successive block larger than the previous.

    - Sizes static int[] array to define the size of each block.

    It is possible to define your own constants struct/class and give this to
    QFreeList to customize/tune the behavior.
*/</doc>
<smbr r='QFreeListDefaultConstants::Sizes' t='const int[4]'/>
<ovr f='qtbase-6.5.0/src/corelib/thread/qreadwritelock.cpp' l='583' c='(anonymousnamespace)::QReadWriteLockFreeListConstants'/>
<use f='qtbase-6.5.0/src/corelib/thread/qreadwritelock.cpp' l='583'/>
<size>1</size>
