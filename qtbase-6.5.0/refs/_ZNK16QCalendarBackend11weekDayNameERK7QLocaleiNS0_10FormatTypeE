<dec f='qtbase-6.5.0/src/corelib/time/qcalendarbackend_p.h' l='97' type='QString QCalendarBackend::weekDayName(const QLocale &amp; locale, int day, QLocale::FormatType format) const'/>
<def f='qtbase-6.5.0/src/corelib/text/qlocale.cpp' l='3019' ll='3046' type='QString QCalendarBackend::weekDayName(const QLocale &amp; locale, int day, QLocale::FormatType format) const'/>
<doc f='qtbase-6.5.0/src/corelib/text/qlocale.cpp' l='3017'>// Most calendars share the common week-day naming, modulo locale.
// Calendars that don&apos;t must override these methods.</doc>
<use f='qtbase-6.5.0/src/corelib/time/qcalendar.cpp' l='1537' u='c' c='_ZNK9QCalendar11weekDayNameERK7QLocaleiNS0_10FormatTypeE'/>
<doc f='qtbase-6.5.0/src/corelib/time/qcalendar.cpp' l='909'>/*!
    \fn QString QCalendarBackend::weekDayName(const QLocale &amp;locale, int day,
                                              QLocale::FormatType format) const

    Returns the name of the specified \a day of the week in the chosen \a
    locale, using the specified \a format to determine how complete the name is.

    The base implementation handles \a day values from 1 to 7 using the day
    names CLDR provides, which are suitable for calendards that use the same
    (Hebrew-derived) week as the Gregorian calendar.

    Calendars whose dayOfWeek() returns a value outside the range from 1 to 7
    need to reimplement this method to handle such extra week-day values. They
    can assume that \a day is a value returned by the same calendar&apos;s
    dayOfWeek().

    \sa dayOfWeek(), standaloneWeekDayName(), QLocale::dayName()
*/</doc>
