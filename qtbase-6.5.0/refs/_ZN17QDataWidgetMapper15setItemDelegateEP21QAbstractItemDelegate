<dec f='qtbase-6.5.0/src/widgets/itemviews/qdatawidgetmapper.h' l='34' type='void QDataWidgetMapper::setItemDelegate(QAbstractItemDelegate * delegate)'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qdatawidgetmapper.cpp' l='294' u='c' c='_ZN17QDataWidgetMapperC1EP7QObject'/>
<def f='qtbase-6.5.0/src/widgets/itemviews/qdatawidgetmapper.cpp' l='363' ll='382' type='void QDataWidgetMapper::setItemDelegate(QAbstractItemDelegate * delegate)'/>
<doc f='qtbase-6.5.0/src/widgets/itemviews/qdatawidgetmapper.cpp' l='347'>/*!
    Sets the item delegate to \a delegate. The delegate will be used to write
    data from the model into the widget and from the widget to the model,
    using QAbstractItemDelegate::setEditorData() and QAbstractItemDelegate::setModelData().

    Any existing delegate will be removed, but not deleted. QDataWidgetMapper
    does not take ownership of \a delegate.

    The delegate also decides when to apply data and when to change the editor,
    using QAbstractItemDelegate::commitData() and QAbstractItemDelegate::closeEditor().

    \warning You should not share the same instance of a delegate between widget mappers
    or views. Doing so can cause incorrect or unintuitive editing behavior since each
    view connected to a given delegate may receive the \l{QAbstractItemDelegate::}{closeEditor()}
    signal, and attempt to access, modify or close an editor that has already been closed.
 */</doc>
