<dec f='qtbase-6.5.0/src/gui/text/qtextdocumentfragment.h' l='44' type='static QTextDocumentFragment QTextDocumentFragment::fromMarkdown(const QString &amp; markdown, QTextDocument::MarkdownFeatures features = QTextDocument::MarkdownDialectGitHub)'/>
<use f='qtbase-6.5.0/src/gui/text/qtextcursor.cpp' l='2269' u='c' c='_ZN11QTextCursor14insertMarkdownERK7QString6QFlagsIN13QTextDocument15MarkdownFeatureEE'/>
<def f='qtbase-6.5.0/src/gui/text/qtextdocumentfragment.cpp' l='1309' ll='1317' type='static QTextDocumentFragment QTextDocumentFragment::fromMarkdown(const QString &amp; markdown, QTextDocument::MarkdownFeatures features = QTextDocument::MarkdownDialectGitHub)'/>
<doc f='qtbase-6.5.0/src/gui/text/qtextdocumentfragment.cpp' l='1296'>/*!
    \fn QTextDocumentFragment QTextDocumentFragment::fromMarkdown(const QString &amp;markdown, QTextDocument::MarkdownFeatures features)
    \since 6.4

    Returns a QTextDocumentFragment based on the given \a markdown text with
    the specified \a features. The default is GitHub dialect.

    The formatting is preserved as much as possible; for example, \c {**bold**}
    will become a document fragment containing the text &quot;bold&quot; with a bold
    character style.

    \note Loading external resources is not supported.
*/</doc>
<use f='qtbase-6.5.0/src/widgets/widgets/qwidgettextcontrol.cpp' l='2716' u='c' c='_ZN18QWidgetTextControl18insertFromMimeDataEPK9QMimeData'/>
