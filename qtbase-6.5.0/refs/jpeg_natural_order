<dec f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jpegint.h' l='372' type='const int[]'/>
<doc f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jpegint.h' l='372'>/* zigzag coef order to natural order */</doc>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jcapimin.c' l='85' u='r' c='jpeg_CreateCompress'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jcarith.c' l='490' u='r' c='encode_mcu_AC_first'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jcarith.c' l='502' u='r' c='encode_mcu_AC_first'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jcarith.c' l='624' u='r' c='encode_mcu_AC_refine'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jcarith.c' l='633' u='r' c='encode_mcu_AC_refine'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jcarith.c' l='646' u='r' c='encode_mcu_AC_refine'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jcarith.c' l='769' u='r' c='encode_mcu'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jcarith.c' l='775' u='r' c='encode_mcu'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jchuff.c' l='830' u='r' c='htest_one_block'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jcmarker.c' l='175' u='r' c='emit_dqt'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jcphuff.c' l='690' u='r' c='encode_mcu_AC_first'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jcphuff.c' l='956' u='r' c='encode_mcu_AC_refine'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdarith.c' l='391' u='r' c='decode_mcu_AC_first'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdarith.c' l='463' u='r' c='decode_mcu_AC_refine'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdarith.c' l='470' u='r' c='decode_mcu_AC_refine'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdarith.c' l='619' u='r' c='decode_mcu'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdhuff.c' l='616' u='r' c='decode_mcu_slow'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdhuff.c' l='711' u='r' c='decode_mcu_fast'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdinput.c' l='82' u='r' c='initial_setup'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdmarker.c' l='539' u='r' c='get_dqt'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdphuff.c' l='411' u='r' c='decode_mcu_AC_first'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdphuff.c' l='575' u='r' c='decode_mcu_AC_refine'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdphuff.c' l='593' u='r' c='decode_mcu_AC_refine'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdphuff.c' l='609' u='r' c='decode_mcu_AC_refine'/>
<def f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jutils.c' l='56' ll='67' type='const int[80]'/>
<doc f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jutils.c' l='42'>/*
 * jpeg_natural_order[i] is the natural-order position of the i&apos;th element
 * of zigzag order.
 *
 * When reading corrupted data, the Huffman decoders could attempt
 * to reference an entry beyond the end of this array (if the decoded
 * zero run length reaches past the end of the block).  To prevent
 * wild stores without adding an inner-loop test, we put some extra
 * &quot;63&quot;s after the real entries.  This will cause the extra coefficient
 * to be stored in location 63 of the block, not somewhere random.
 * The worst case would be a run-length of 15, which means we need 16
 * fake entries.
 */</doc>
