<def f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='82' ll='173'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='120' c='_ZN7QShaderC1ERKS_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='121' c='_ZN7QShaderaSERKS_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='121' c='_ZN7QShaderaSERKS_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='139' c='_ZN7QShader14fromSerializedERK10QByteArray'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='168' c='_ZeqRK7QShaderS1_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='168' c='_ZeqRK7QShaderS1_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='169' c='_Z5qHashRK7QShaderm'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='171' c='_Zls6QDebugRK7QShader'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='200' c='_ZeqRK7QShaderS1_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='200' c='_ZeqRK7QShaderS1_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='201' c='_Z5qHashRK7QShaderm'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='203' c='_ZneRK7QShaderS1_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='203' c='_ZneRK7QShaderS1_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='232' c='_Zls6QDebugRK7QShader'/>
<size>8</size>
<fun r='_ZN7QShaderC1Ev'/>
<fun r='_ZN7QShaderC1ERKS_'/>
<fun r='_ZN7QShaderaSERKS_'/>
<fun r='_ZN7QShaderD1Ev'/>
<fun r='_ZN7QShader6detachEv'/>
<fun r='_ZNK7QShader7isValidEv'/>
<fun r='_ZNK7QShader5stageEv'/>
<fun r='_ZN7QShader8setStageENS_5StageE'/>
<fun r='_ZNK7QShader11descriptionEv'/>
<fun r='_ZN7QShader14setDescriptionERK18QShaderDescription'/>
<fun r='_ZNK7QShader16availableShadersEv'/>
<fun r='_ZNK7QShader6shaderERK10QShaderKey'/>
<fun r='_ZN7QShader9setShaderERK10QShaderKeyRK11QShaderCode'/>
<fun r='_ZN7QShader12removeShaderERK10QShaderKey'/>
<fun r='_ZNK7QShader10serializedENS_23SerializedFormatVersionE'/>
<fun r='_ZN7QShader14fromSerializedERK10QByteArray'/>
<fun r='_ZNK7QShader24nativeResourceBindingMapERK10QShaderKey'/>
<fun r='_ZN7QShader21setResourceBindingMapERK10QShaderKeyRK4QMapIiSt4pairIiiEE'/>
<fun r='_ZN7QShader24removeResourceBindingMapERK10QShaderKey'/>
<fun r='_ZNK7QShader41separateToCombinedImageSamplerMappingListERK10QShaderKey'/>
<fun r='_ZN7QShader44setSeparateToCombinedImageSamplerMappingListERK10QShaderKeyRK5QListINS_37SeparateToCombinedImageSamplerMappingEE'/>
<fun r='_ZN7QShader47removeSeparateToCombinedImageSamplerMappingListERK10QShaderKey'/>
<fun r='_ZNK7QShader16nativeShaderInfoERK10QShaderKey'/>
<fun r='_ZN7QShader19setNativeShaderInfoERK10QShaderKeyRKNS_16NativeShaderInfoE'/>
<fun r='_ZN7QShader22removeNativeShaderInfoERK10QShaderKey'/>
<mbr r='QShader::d' o='0' t='QShaderPrivate *'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='272' c='_ZN15QRhiShaderStageC1ENS_4TypeERK7QShaderNS1_7VariantE'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='278' c='_ZNK15QRhiShaderStage6shaderEv'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='279' c='_ZN15QRhiShaderStage9setShaderERK7QShader'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='286'/>
<use f='qtbase-6.5.0/src/gui/painting/qbackingstoredefaultcompositor.cpp' l='247' c='_ZL9getShaderRK7QString'/>
<use f='qtbase-6.5.0/src/gui/painting/qbackingstoredefaultcompositor.cpp' l='256' c='_ZL9getShaderRK7QString'/>
<size>8</size>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='1596' c='_ZN15QRhiShaderStageC1ENS_4TypeERK7QShaderNS1_7VariantE'/>
<size>8</size>
<use f='qtbase-6.5.0/src/gui/rhi/qrhigles2.cpp' l='4402' c='_ZN9QRhiGles212shaderSourceERK15QRhiShaderStageP14QShaderVersion'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhigles2.cpp' l='5692' c='_ZN22QGles2GraphicsPipeline6createEv'/>
<size>8</size>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p_p.h' l='62' c='_ZN14QShaderPrivate3getEP7QShader'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p_p.h' l='63' c='_ZN14QShaderPrivate3getEPK7QShader'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader.cpp' l='231' c='_ZN7QShaderC1ERKS_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader.cpp' l='241' c='_ZN7QShaderaSERKS_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader.cpp' l='241' c='_ZN7QShaderaSERKS_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader.cpp' l='460' c='_ZN7QShader14fromSerializedERK10QByteArray'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader.cpp' l='467' c='_ZN7QShader14fromSerializedERK10QByteArray'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader.cpp' l='469' c='_ZN7QShader14fromSerializedERK10QByteArray'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader.cpp' l='486' c='_ZN7QShader14fromSerializedERK10QByteArray'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader.cpp' l='605' c='_ZeqRK7QShaderS1_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader.cpp' l='605' c='_ZeqRK7QShaderS1_'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader.cpp' l='630' c='_Z5qHashRK7QShaderm'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader.cpp' l='775' c='_Zls6QDebugRK7QShader'/>
<size>8</size>
<doc f='qtbase-6.5.0/src/gui/rhi/qshader.cpp' l='10'>/*!
    \class QShader
    \internal
    \inmodule QtGui

    \brief Contains multiple versions of a shader translated to multiple shading languages,
    together with reflection metadata.

    QShader is the entry point to shader code in the graphics API agnostic
    Qt world. Instead of using GLSL shader sources, as was the custom with Qt
    5.x, new graphics systems with backends for multiple graphics APIs, such
    as, Vulkan, Metal, Direct3D, and OpenGL, take QShader as their input
    whenever a shader needs to be specified.

    A QShader instance is empty and thus invalid by default. To get a useful
    instance, the two typical methods are:

    \list

    \li Generate the contents offline, during build time or earlier, using the
    \c qsb command line tool. The result is a binary file that is shipped with
    the application, read via QIODevice::readAll(), and then deserialized via
    fromSerialized(). For more information, see QShaderBaker.

    \li Generate at run time via QShaderBaker. This is an expensive operation,
    but allows applications to use user-provided or dynamically generated
    shader source strings.

    \endlist

    When used together with the Qt Rendering Hardware Interface and its
    classes, like QRhiGraphicsPipeline, no further action is needed from the
    application&apos;s side as these classes are prepared to consume a QShader
    whenever a shader needs to be specified for a given stage of the graphics
    pipeline.

    Alternatively, applications can access

    \list

    \li the source or byte code for any of the shading language versions that
    are included in the QShader,

    \li the name of the entry point for the shader,

    \li the reflection metadata containing a description of the shader&apos;s
    inputs, outputs and resources like uniform blocks. This is essential when
    an application or framework needs to discover the inputs of a shader at
    runtime due to not having advance knowledge of the vertex attributes or the
    layout of the uniform buffers used by the shader.

    \endlist

    QShader makes no assumption about the shading language that was used
    as the source for generating the various versions and variants that are
    included in it.

    QShader uses implicit sharing similarly to many core Qt types, and so
    can be returned or passed by value. Detach happens implicitly when calling
    a setter.

    For reference, QRhi expects that a QShader suitable for all its
    backends contains at least the following:

    \list

    \li SPIR-V 1.0 bytecode suitable for Vulkan 1.0 or newer

    \li GLSL/ES 100 source code suitable for OpenGL ES 2.0 or newer

    \li GLSL 120 source code suitable for OpenGL 2.1

    \li HLSL Shader Model 5.0 source code or the corresponding DXBC bytecode suitable for Direct3D 11

    \li Metal Shading Language 1.2 source code or the corresponding bytecode suitable for Metal

    \endlist

    \sa QShaderBaker
 */</doc>
<fun r='_ZN7QShaderC1Ev'/>
<fun r='_ZN7QShader6detachEv'/>
<fun r='_ZN7QShaderC1ERKS_'/>
<fun r='_ZN7QShaderaSERKS_'/>
<fun r='_ZN7QShaderD1Ev'/>
<fun r='_ZNK7QShader7isValidEv'/>
<fun r='_ZNK7QShader5stageEv'/>
<fun r='_ZN7QShader8setStageENS_5StageE'/>
<fun r='_ZNK7QShader11descriptionEv'/>
<fun r='_ZN7QShader14setDescriptionERK18QShaderDescription'/>
<fun r='_ZNK7QShader16availableShadersEv'/>
<fun r='_ZNK7QShader6shaderERK10QShaderKey'/>
<fun r='_ZN7QShader9setShaderERK10QShaderKeyRK11QShaderCode'/>
<fun r='_ZN7QShader12removeShaderERK10QShaderKey'/>
<fun r='_ZNK7QShader10serializedENS_23SerializedFormatVersionE'/>
<fun r='_ZN7QShader14fromSerializedERK10QByteArray'/>
<fun r='_ZNK7QShader24nativeResourceBindingMapERK10QShaderKey'/>
<fun r='_ZN7QShader21setResourceBindingMapERK10QShaderKeyRK4QMapIiSt4pairIiiEE'/>
<fun r='_ZN7QShader24removeResourceBindingMapERK10QShaderKey'/>
<fun r='_ZNK7QShader41separateToCombinedImageSamplerMappingListERK10QShaderKey'/>
<fun r='_ZN7QShader44setSeparateToCombinedImageSamplerMappingListERK10QShaderKeyRK5QListINS_37SeparateToCombinedImageSamplerMappingEE'/>
<fun r='_ZN7QShader47removeSeparateToCombinedImageSamplerMappingListERK10QShaderKey'/>
<fun r='_ZNK7QShader16nativeShaderInfoERK10QShaderKey'/>
<fun r='_ZN7QShader19setNativeShaderInfoERK10QShaderKeyRKNS_16NativeShaderInfoE'/>
<fun r='_ZN7QShader22removeNativeShaderInfoERK10QShaderKey'/>
