<dec f='qtbase-6.5.0/src/gui/util/qundostack.h' l='102' type='void QUndoStack::setActive(bool active = true)'/>
<def f='qtbase-6.5.0/src/gui/util/qundostack.cpp' l='1268' ll='1282' type='void QUndoStack::setActive(bool active = true)'/>
<doc f='qtbase-6.5.0/src/gui/util/qundostack.cpp' l='1251'>/*!
    \property QUndoStack::active
    \brief the active status of this stack.

    An application often has multiple undo stacks, one for each opened document. The active
    stack is the one associated with the currently active document. If the stack belongs
    to a QUndoGroup, calls to QUndoGroup::undo() or QUndoGroup::redo() will be forwarded
    to this stack when it is active. If the QUndoGroup is watched by a QUndoView, the view
    will display the contents of this stack when it is active. If the stack does not belong to
    a QUndoGroup, making it active has no effect.

    It is the programmer&apos;s responsibility to specify which stack is active by
    calling setActive(), usually when the associated document window receives focus.

    \sa QUndoGroup
*/</doc>
