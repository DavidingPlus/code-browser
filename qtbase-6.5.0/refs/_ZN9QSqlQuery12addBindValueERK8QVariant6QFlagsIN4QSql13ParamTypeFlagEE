<dec f='qtbase-6.5.0/src/sql/kernel/qsqlquery.h' l='88' type='void QSqlQuery::addBindValue(const QVariant &amp; val, QSql::ParamType type = QSql::In)'/>
<def f='qtbase-6.5.0/src/sql/kernel/qsqlquery.cpp' l='1122' ll='1125' type='void QSqlQuery::addBindValue(const QVariant &amp; val, QSql::ParamType paramType = QSql::In)'/>
<doc f='qtbase-6.5.0/src/sql/kernel/qsqlquery.cpp' l='1110'>/*!
  Adds the value \a val to the list of values when using positional
  value binding. The order of the addBindValue() calls determines
  which placeholder a value will be bound to in the prepared query.
  If \a paramType is QSql::Out or QSql::InOut, the placeholder will be
  overwritten with data from the database after the exec() call.

  To bind a NULL value, use a null QVariant; for example, use \c
  {QVariant(QMetaType::fromType&lt;QString&gt;())} if you are binding a string.

  \sa bindValue(), prepare(), exec(), boundValue(), boundValues()
*/</doc>
<use f='qtbase-6.5.0/src/sql/models/qsqltablemodel.cpp' l='149' u='c' c='_ZN21QSqlTableModelPrivate4execERK7QStringbRK10QSqlRecordS5_'/>
<use f='qtbase-6.5.0/src/sql/models/qsqltablemodel.cpp' l='152' u='c' c='_ZN21QSqlTableModelPrivate4execERK7QStringbRK10QSqlRecordS5_'/>
