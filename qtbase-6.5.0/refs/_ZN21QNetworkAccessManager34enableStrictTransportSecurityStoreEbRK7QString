<dec f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.h' l='76' type='void QNetworkAccessManager::enableStrictTransportSecurityStore(bool enabled, const QString &amp; storeDir = QString())'/>
<def f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='683' ll='694' type='void QNetworkAccessManager::enableStrictTransportSecurityStore(bool enabled, const QString &amp; storeDir = QString())'/>
<doc f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='663'>/*!
    \since 5.10

    If \a enabled is \c true, the internal HSTS cache will use a persistent store
    to read and write HSTS policies. \a storeDir defines where this store will be
    located. The default location is defined by QStandardPaths::CacheLocation.
    If there is no writable QStandartPaths::CacheLocation and \a storeDir is an
    empty string, the store will be located in the program&apos;s working directory.

    \note If HSTS cache already contains HSTS policies by the time persistent
    store is enabled, these policies will be preserved in the store. In case both
    cache and store contain the same known hosts, policies from cache are considered
    to be more up-to-date (and thus will overwrite the previous values in the store).
    If this behavior is undesired, enable HSTS store before enabling Strict Transport
    Security. By default, the persistent store of HSTS policies is disabled.

    \sa isStrictTransportSecurityStoreEnabled(), setStrictTransportSecurityEnabled(),
    QStandardPaths::standardLocations()
*/</doc>
