<def f='qtbase-6.5.0/src/gui/painting/qpainter.h' l='97' ll='140'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.h' l='141' c='_ZN8QPainter18setCompositionModeENS_15CompositionModeE'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.h' l='142' c='_ZNK8QPainter15compositionModeEv'/>
<use f='qtbase-6.5.0/src/gui/painting/qpaintengine.h' l='250' c='_ZNK17QPaintEngineState15compositionModeEv'/>
<use f='qtbase-6.5.0/src/gui/painting/qdrawhelper_p.h' l='194'/>
<use f='qtbase-6.5.0/src/gui/painting/qdrawhelper_p.h' l='337' c='_ZN9QSpanData5setupERK6QBrushiN8QPainter15CompositionModeEb'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter_p.h' l='143'/>
<use f='qtbase-6.5.0/src/gui/painting/qpaintengine_raster_p.h' l='272' c='_ZNK25QRasterPaintEnginePrivate23canUseFastImageBlendingEN8QPainter15CompositionModeERK6QImage'/>
<use f='qtbase-6.5.0/src/gui/painting/qpaintengine_raster_p.h' l='273' c='_ZNK25QRasterPaintEnginePrivate19canUseImageBlittingEN8QPainter15CompositionModeERK6QImageRK7QPointFRK6QRectF'/>
<use f='qtbase-6.5.0/src/gui/painting/qpaintengine_raster_p.h' l='416'/>
<use f='qtbase-6.5.0/src/gui/image/qpaintengine_pic_p.h' l='49' c='_ZN19QPicturePaintEngine21updateCompositionModeEN8QPainter15CompositionModeE'/>
<use f='qtbase-6.5.0/src/gui/image/qpaintengine_pic.cpp' l='140' c='_ZN19QPicturePaintEngine21updateCompositionModeEN8QPainter15CompositionModeE'/>
<use f='qtbase-6.5.0/src/gui/image/qpicture.cpp' l='822' c='_ZN8QPicture4execEP8QPainterR11QDataStreami'/>
<use f='qtbase-6.5.0/src/gui/painting/qblittable_p.h' l='58' c='_ZN10QBlittable13alphaFillRectERK6QRectFRK6QColorN8QPainter15CompositionModeE'/>
<use f='qtbase-6.5.0/src/gui/painting/qblittable_p.h' l='64' c='_ZN10QBlittable17drawPixmapOpacityERK6QRectFRK7QPixmapS2_N8QPainter15CompositionModeEd'/>
<use f='qtbase-6.5.0/src/gui/painting/qdrawhelper.cpp' l='4439' c='_ZL26blend_untransformed_rgb565iPK11QT_FT_Span_Pv'/>
<use f='qtbase-6.5.0/src/gui/painting/qdrawhelper.cpp' l='4768' c='_ZL18blend_tiled_rgb565iPK11QT_FT_Span_Pv'/>
<use f='qtbase-6.5.0/src/gui/painting/qpaintengine_raster.cpp' l='732' c='_ZN18QRasterPaintEngine17updateRasterStateEv'/>
<use f='qtbase-6.5.0/src/gui/painting/qpaintengine_raster.cpp' l='1399' c='_ZL19fillRect_normalizedRK5QRectP9QSpanDataP25QRasterPaintEnginePrivate'/>
<use f='qtbase-6.5.0/src/gui/painting/qpaintengine_raster.cpp' l='3677' c='_ZNK25QRasterPaintEnginePrivate23canUseFastImageBlendingEN8QPainter15CompositionModeERK6QImage'/>
<use f='qtbase-6.5.0/src/gui/painting/qpaintengine_raster.cpp' l='3688' c='_ZNK25QRasterPaintEnginePrivate19canUseImageBlittingEN8QPainter15CompositionModeERK6QImageRK7QPointFRK6QRectF'/>
<use f='qtbase-6.5.0/src/gui/painting/qpaintengine_raster.cpp' l='4471' c='_ZN9QSpanData5setupERK6QBrushiN8QPainter15CompositionModeEb'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='2325' c='_ZN8QPainter18setCompositionModeENS_15CompositionModeE'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='2369' c='_ZNK8QPainter15compositionModeEv'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='7799' c='_ZNK17QPaintEngineState15compositionModeEv'/>
<doc f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='2132'>/*!
    \enum QPainter::CompositionMode

    Defines the modes supported for digital image compositing.
    Composition modes are used to specify how the pixels in one image,
    the source, are merged with the pixel in another image, the
    destination.

    Please note that the bitwise raster operation modes, denoted with
    a RasterOp prefix, are only natively supported in the X11 and
    raster paint engines. This means that the only way to utilize
    these modes on the Mac is via a QImage. The RasterOp denoted blend
    modes are \e not supported for pens and brushes with alpha
    components. Also, turning on the QPainter::Antialiasing render
    hint will effectively disable the RasterOp modes.


     \image qpainter-compositionmode1.png
     \image qpainter-compositionmode2.png

    The most common type is SourceOver (often referred to as just
    alpha blending) where the source pixel is blended on top of the
    destination pixel in such a way that the alpha component of the
    source defines the translucency of the pixel.

    Several composition modes require an alpha channel in the source or
    target images to have an effect. For optimal performance the
    image format \l {QImage::Format}{Format_ARGB32_Premultiplied} is
    preferred.

    When a composition mode is set it applies to all painting
    operator, pens, brushes, gradients and pixmap/image drawing.

    \value CompositionMode_SourceOver This is the default mode. The
    alpha of the source is used to blend the pixel on top of the
    destination.

    \value CompositionMode_DestinationOver The alpha of the
    destination is used to blend it on top of the source pixels. This
    mode is the inverse of CompositionMode_SourceOver.

    \value CompositionMode_Clear The pixels in the destination are
    cleared (set to fully transparent) independent of the source.

    \value CompositionMode_Source The output is the source
    pixel. (This means a basic copy operation and is identical to
    SourceOver when the source pixel is opaque).

    \value CompositionMode_Destination The output is the destination
    pixel. This means that the blending has no effect. This mode is
    the inverse of CompositionMode_Source.

    \value CompositionMode_SourceIn The output is the source, where
    the alpha is reduced by that of the destination.

    \value CompositionMode_DestinationIn The output is the
    destination, where the alpha is reduced by that of the
    source. This mode is the inverse of CompositionMode_SourceIn.

    \value CompositionMode_SourceOut The output is the source, where
    the alpha is reduced by the inverse of destination.

    \value CompositionMode_DestinationOut The output is the
    destination, where the alpha is reduced by the inverse of the
    source. This mode is the inverse of CompositionMode_SourceOut.

    \value CompositionMode_SourceAtop The source pixel is blended on
    top of the destination, with the alpha of the source pixel reduced
    by the alpha of the destination pixel.

    \value CompositionMode_DestinationAtop The destination pixel is
    blended on top of the source, with the alpha of the destination
    pixel is reduced by the alpha of the destination pixel. This mode
    is the inverse of CompositionMode_SourceAtop.

    \value CompositionMode_Xor The source, whose alpha is reduced with
    the inverse of the destination alpha, is merged with the
    destination, whose alpha is reduced by the inverse of the source
    alpha. CompositionMode_Xor is not the same as the bitwise Xor.

    \value CompositionMode_Plus Both the alpha and color of the source
    and destination pixels are added together.

    \value CompositionMode_Multiply The output is the source color
    multiplied by the destination. Multiplying a color with white
    leaves the color unchanged, while multiplying a color
    with black produces black.

    \value CompositionMode_Screen The source and destination colors
    are inverted and then multiplied. Screening a color with white
    produces white, whereas screening a color with black leaves the
    color unchanged.

    \value CompositionMode_Overlay Multiplies or screens the colors
    depending on the destination color. The destination color is mixed
    with the source color to reflect the lightness or darkness of the
    destination.

    \value CompositionMode_Darken The darker of the source and
    destination colors is selected.

    \value CompositionMode_Lighten The lighter of the source and
    destination colors is selected.

    \value CompositionMode_ColorDodge The destination color is
    brightened to reflect the source color. A black source color
    leaves the destination color unchanged.

    \value CompositionMode_ColorBurn The destination color is darkened
    to reflect the source color. A white source color leaves the
    destination color unchanged.

    \value CompositionMode_HardLight Multiplies or screens the colors
    depending on the source color. A light source color will lighten
    the destination color, whereas a dark source color will darken the
    destination color.

    \value CompositionMode_SoftLight Darkens or lightens the colors
    depending on the source color. Similar to
    CompositionMode_HardLight.

    \value CompositionMode_Difference Subtracts the darker of the
    colors from the lighter.  Painting with white inverts the
    destination color, whereas painting with black leaves the
    destination color unchanged.

    \value CompositionMode_Exclusion Similar to
    CompositionMode_Difference, but with a lower contrast. Painting
    with white inverts the destination color, whereas painting with
    black leaves the destination color unchanged.

    \value RasterOp_SourceOrDestination Does a bitwise OR operation on
    the source and destination pixels (src OR dst).

    \value RasterOp_SourceAndDestination Does a bitwise AND operation
    on the source and destination pixels (src AND dst).

    \value RasterOp_SourceXorDestination Does a bitwise XOR operation
    on the source and destination pixels (src XOR dst).

    \value RasterOp_NotSourceAndNotDestination Does a bitwise NOR
    operation on the source and destination pixels ((NOT src) AND (NOT
    dst)).

    \value RasterOp_NotSourceOrNotDestination Does a bitwise NAND
    operation on the source and destination pixels ((NOT src) OR (NOT
    dst)).

    \value RasterOp_NotSourceXorDestination Does a bitwise operation
    where the source pixels are inverted and then XOR&apos;ed with the
    destination ((NOT src) XOR dst).

    \value RasterOp_NotSource Does a bitwise operation where the
    source pixels are inverted (NOT src).

    \value RasterOp_NotSourceAndDestination Does a bitwise operation
    where the source is inverted and then AND&apos;ed with the destination
    ((NOT src) AND dst).

    \value RasterOp_SourceAndNotDestination Does a bitwise operation
    where the source is AND&apos;ed with the inverted destination pixels
    (src AND (NOT dst)).

    \value RasterOp_NotSourceOrDestination Does a bitwise operation
    where the source is inverted and then OR&apos;ed with the destination
    ((NOT src) OR dst).

    \value RasterOp_ClearDestination The pixels in the destination are
    cleared (set to 0) independent of the source.

    \value RasterOp_SetDestination The pixels in the destination are
    set (set to 1) independent of the source.

    \value RasterOp_NotDestination Does a bitwise operation
    where the destination pixels are inverted (NOT dst).

    \value RasterOp_SourceOrNotDestination Does a bitwise operation
    where the source is OR&apos;ed with the inverted destination pixels
    (src OR (NOT dst)).

    \sa compositionMode(), setCompositionMode(), {QPainter#Composition
    Modes}{Composition Modes}, {Image Composition Example}
*/</doc>
<use f='qtbase-6.5.0/src/gui/text/qtextlayout.cpp' l='1353' c='_ZNK11QTextLayout10drawCursorEP8QPainterRK7QPointFii'/>
<use f='qtbase-6.5.0/src/opengl/qopenglengineshadermanager_p.h' l='425' c='_ZN26QOpenGLEngineShaderManager18setCompositionModeEN8QPainter15CompositionModeE'/>
<use f='qtbase-6.5.0/src/opengl/qopenglengineshadermanager_p.h' l='462'/>
<use f='qtbase-6.5.0/src/opengl/qopenglengineshadermanager.cpp' l='567' c='_ZN26QOpenGLEngineShaderManager18setCompositionModeEN8QPainter15CompositionModeE'/>
<use f='qtbase-6.5.0/src/opengl/qopenglpaintengine.cpp' l='1951' c='_ZN28QOpenGL2PaintEngineExPrivate16drawCachedGlyphsEN11QFontEngine11GlyphFormatEP15QStaticTextItem'/>
<use f='qtbase-6.5.0/src/widgets/effects/qpixmapfilter.cpp' l='280' c='_ZL9convoluteP6QImageRK7QPointFRKS_RK6QRectFN8QPainter15CompositionModeEPdii'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='2281' c='_ZNK14QWidgetPrivate15paintBackgroundEP8QPainterRK7QRegion6QFlagsINS_14DrawWidgetFlagEE'/>
