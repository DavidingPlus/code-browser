<dec f='qtbase-6.5.0/src/corelib/io/qabstractfileengine_p.h' l='165' type='bool QAbstractFileEngine::extension(QAbstractFileEngine::Extension extension, const QAbstractFileEngine::ExtensionOption * option = nullptr, QAbstractFileEngine::ExtensionReturn * output = nullptr)'/>
<use f='qtbase-6.5.0/src/corelib/io/qabstractfileengine.cpp' l='754' u='c' c='_ZNK19QAbstractFileEngine5atEndEv'/>
<use f='qtbase-6.5.0/src/corelib/io/qabstractfileengine.cpp' l='780' u='c' c='_ZN19QAbstractFileEngine3mapExx6QFlagsIN11QFileDevice13MemoryMapFlagEE'/>
<use f='qtbase-6.5.0/src/corelib/io/qabstractfileengine.cpp' l='801' u='c' c='_ZN19QAbstractFileEngine5unmapEPh'/>
<def f='qtbase-6.5.0/src/corelib/io/qabstractfileengine.cpp' l='1189' ll='1195' type='bool QAbstractFileEngine::extension(QAbstractFileEngine::Extension extension, const QAbstractFileEngine::ExtensionOption * option = nullptr, QAbstractFileEngine::ExtensionReturn * output = nullptr)'/>
<doc f='qtbase-6.5.0/src/corelib/io/qabstractfileengine.cpp' l='1171'>/*!
    \since 4.3

    This virtual function can be reimplemented in a QAbstractFileEngine
    subclass to provide support for extensions. The \a option argument is
    provided as input to the extension, and this function can store output
    results in \a output.

    The behavior of this function is determined by \a extension; see the
    Extension documentation for details.

    You can call supportsExtension() to check if an extension is supported by
    the file engine.

    By default, no extensions are supported, and this function returns \c false.

    \sa supportsExtension(), Extension
*/</doc>
<ovr f='qtbase-6.5.0/src/corelib/io/qfsfileengine.cpp' l='843' c='_ZN13QFSFileEngine9extensionEN19QAbstractFileEngine9ExtensionEPKNS0_15ExtensionOptionEPNS0_15ExtensionReturnE'/>
