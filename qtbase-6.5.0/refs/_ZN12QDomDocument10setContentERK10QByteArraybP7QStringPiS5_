<dec f='qtbase-6.5.0/src/xml/dom/qdom.h' l='318' type='bool QDomDocument::setContent(const QByteArray &amp; text, bool namespaceProcessing, QString * errorMsg = nullptr, int * errorLine = nullptr, int * errorColumn = nullptr)'/>
<def f='qtbase-6.5.0/src/xml/dom/qdom.cpp' l='6157' ll='6163' type='bool QDomDocument::setContent(const QByteArray &amp; data, bool namespaceProcessing, QString * errorMsg = nullptr, int * errorLine = nullptr, int * errorColumn = nullptr)'/>
<use f='qtbase-6.5.0/src/xml/dom/qdom.cpp' l='6232' u='c' c='_ZN12QDomDocument10setContentERK10QByteArrayP7QStringPiS5_'/>
<doc f='qtbase-6.5.0/src/xml/dom/qdom.cpp' l='6106'>/*!
    \deprecated [6.8] Use the overload taking ParseOptions instead.

    This function parses the XML document from the byte array \a
    data and sets it as the content of the document. It tries to
    detect the encoding of the document as required by the XML
    specification.

    If \a namespaceProcessing is true, the parser recognizes
    namespaces in the XML file and sets the prefix name, local name
    and namespace URI to appropriate values. If \a namespaceProcessing
    is false, the parser does no namespace processing when it reads
    the XML file.

    If a parse error occurs, this function returns \c false and the error
    message is placed in \c{*}\a{errorMsg}, the line number in
    \c{*}\a{errorLine} and the column number in \c{*}\a{errorColumn}
    (unless the associated pointer is set to \c nullptr); otherwise this
    function returns \c true.

    If \a namespaceProcessing is true, the function QDomNode::prefix()
    returns a string for all elements and attributes. It returns an
    empty string if the element or attribute has no prefix.

    Text nodes consisting only of whitespace are stripped and won&apos;t
    appear in the QDomDocument.

    If \a namespaceProcessing is false, the functions
    QDomNode::prefix(), QDomNode::localName() and
    QDomNode::namespaceURI() return an empty string.

//! [entity-refs]
    Entity references are handled as follows:
    \list
    \li References to internal general entities and character entities occurring in the
        content are included. The result is a QDomText node with the references replaced
        by their corresponding entity values.
    \li References to parameter entities occurring in the internal subset are included.
        The result is a QDomDocumentType node which contains entity and notation declarations
        with the references replaced by their corresponding entity values.
    \li Any general parsed entity reference which is not defined in the internal subset and
        which occurs in the content is represented as a QDomEntityReference node.
    \li Any parsed entity reference which is not defined in the internal subset and which
        occurs outside of the content is replaced with an empty string.
    \li Any unparsed entity reference is replaced with an empty string.
    \endlist
//! [entity-refs]

    \sa QDomNode::namespaceURI(), QDomNode::localName(),
        QDomNode::prefix(), QString::isNull(), QString::isEmpty()
*/</doc>
