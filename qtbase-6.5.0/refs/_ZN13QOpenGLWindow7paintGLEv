<dec f='qtbase-6.5.0/src/opengl/qopenglwindow.h' l='54' type='void QOpenGLWindow::paintGL()'/>
<def f='qtbase-6.5.0/src/opengl/qopenglwindow.cpp' l='563' ll='565' type='void QOpenGLWindow::paintGL()'/>
<use f='qtbase-6.5.0/src/opengl/qopenglwindow.cpp' l='617' u='c' c='_ZN13QOpenGLWindow10paintEventEP11QPaintEvent'/>
<doc f='qtbase-6.5.0/src/opengl/qopenglwindow.cpp' l='544'>/*!
  This virtual function is called whenever the window contents needs to be
  painted. Reimplement it in a subclass.

  There is no need to call makeCurrent() because this has already
  been done when this function is called.

  Before invoking this function, the context and the framebuffer, if there is
  one, are bound, and the viewport is set up by a call to glViewport(). No
  other state is set and no clearing or drawing is performed by the framework.

  \note When using a partial update behavior, like \c PartialUpdateBlend, the
  output of the previous paintGL() call is preserved and, after the additional
  drawing performed in the current invocation of the function, the content is
  blitted or blended over the content drawn directly to the window in
  paintUnderGL().

  \sa initializeGL(), resizeGL(), paintUnderGL(), paintOverGL(), UpdateBehavior
 */</doc>
