<dec f='qtbase-6.5.0/src/widgets/kernel/qlayout.h' l='80' type='Qt::Orientations QLayout::expandingDirections() const'/>
<ovr f='qtbase-6.5.0/src/widgets/kernel/qboxlayout.cpp' l='722' c='_ZNK10QBoxLayout19expandingDirectionsEv'/>
<ovr f='qtbase-6.5.0/src/widgets/kernel/qformlayout.cpp' l='1699' c='_ZNK11QFormLayout19expandingDirectionsEv'/>
<ovr f='qtbase-6.5.0/src/widgets/kernel/qgridlayout.cpp' l='1614' c='_ZNK11QGridLayout19expandingDirectionsEv'/>
<inh f='qtbase-6.5.0/src/widgets/kernel/qlayoutitem.h' l='32' c='_ZNK11QLayoutItem19expandingDirectionsEv'/>
<def f='qtbase-6.5.0/src/widgets/kernel/qlayout.cpp' l='944' ll='947' type='Qt::Orientations QLayout::expandingDirections() const'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qlayout.cpp' l='1280' u='c' c='_ZNK7QLayout13alignmentRectERK5QRect'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qlayout.cpp' l='1284' u='c' c='_ZNK7QLayout13alignmentRectERK5QRect'/>
<doc f='qtbase-6.5.0/src/widgets/kernel/qlayout.cpp' l='932'>/*!
    Returns whether this layout can make use of more space than
    sizeHint(). A value of Qt::Vertical or Qt::Horizontal means that
    it wants to grow in only one dimension, whereas Qt::Vertical |
    Qt::Horizontal means that it wants to grow in both dimensions.

    The default implementation returns Qt::Horizontal | Qt::Vertical.
    Subclasses reimplement it to return a meaningful value based on
    their child widgets&apos;s \l{QSizePolicy}{size policies}.

    \sa sizeHint()
*/</doc>
<use f='qtbase-6.5.0/src/widgets/kernel/qlayoutitem.cpp' l='595' u='c' c='_ZNK11QWidgetItem19expandingDirectionsEv'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qlayoutitem.cpp' l='598' u='c' c='_ZNK11QWidgetItem19expandingDirectionsEv'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='8676' u='c' c='_ZNK14QWidgetPrivate12adjustedSizeEv'/>
<ovr f='qtbase-6.5.0/src/widgets/widgets/qtoolbarlayout.cpp' l='201' c='_ZNK14QToolBarLayout19expandingDirectionsEv'/>
