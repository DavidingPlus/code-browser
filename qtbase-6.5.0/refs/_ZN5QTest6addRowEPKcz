<dec f='qtbase-6.5.0/src/testlib/qtestcase.h' l='459' type='QTestData &amp; QTest::addRow(const char * format)'/>
<def f='qtbase-6.5.0/src/testlib/qtestcase.cpp' l='2965' ll='2984' type='QTestData &amp; QTest::addRow(const char * format)'/>
<doc f='qtbase-6.5.0/src/testlib/qtestcase.cpp' l='2939'>/*!
    \since 5.9

    Appends a new row to the current test data.

    The function&apos;s arguments are passed to qsnprintf() for formatting according
    to \a format. See the qvsnprintf() documentation for caveats and
    limitations.

    The test output will identify the test run with this test data using the
    name that results from this formatting.

    Returns a QTestData reference that can be used to stream in data, one value
    for each column in the table.

    Example:
    \snippet code/src_qtestlib_qtestcase.cpp addRow

    \note This function can only be called as part of a test&apos;s data function
    that is invoked by the test framework.

    See \l {Chapter 2: Data Driven Testing}{Data Driven Testing} for
    a more extensive example.

    \sa newRow(), addColumn(), QFETCH()
*/</doc>
