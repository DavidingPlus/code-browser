<dec f='qtbase-6.5.0/src/network/socket/qabstractsocket.h' l='130' type='bool QAbstractSocket::bind(const QHostAddress &amp; address, quint16 port = 0, QAbstractSocket::BindMode mode = DefaultForPlatform)'/>
<use f='qtbase-6.5.0/src/network/socket/qtcpsocket.h' l='28' u='c' c='_ZN10QTcpSocket4bindEN12QHostAddress14SpecialAddressEt6QFlagsIN15QAbstractSocket8BindFlagEE'/>
<def f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='1486' ll='1490' type='bool QAbstractSocket::bind(const QHostAddress &amp; address, quint16 port = 0, QAbstractSocket::BindMode mode = DefaultForPlatform)'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='1573' u='c' c='_ZN15QAbstractSocket4bindEt6QFlagsINS_8BindFlagEE'/>
<doc f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='1466'>/*!
    \since 5.0

    Binds to \a address on port \a port, using the BindMode \a mode.

    For UDP sockets, after binding, the signal QUdpSocket::readyRead() is emitted
    whenever a UDP datagram arrives on the specified address and port.
    Thus, this function is useful to write UDP servers.

    For TCP sockets, this function may be used to specify which interface to use
    for an outgoing connection, which is useful in case of multiple network
    interfaces.

    By default, the socket is bound using the DefaultForPlatform BindMode.
    If a port is not specified, a random port is chosen.

    On success, the function returns \c true and the socket enters
    BoundState; otherwise it returns \c false.

*/</doc>
<use f='qtbase-6.5.0/src/network/socket/qudpsocket.h' l='31' u='c' c='_ZN10QUdpSocket4bindEN12QHostAddress14SpecialAddressEt6QFlagsIN15QAbstractSocket8BindFlagEE'/>
<use f='qtbase-6.5.0/src/network/socket/qsocks5socketengine.cpp' l='1311' u='c' c='_ZN19QSocks5SocketEngine4bindERK12QHostAddresst'/>
