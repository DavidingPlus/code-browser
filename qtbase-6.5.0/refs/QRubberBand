<inh f='qtbase-6.5.0/src/widgets/kernel/qwidget.h' l='98' c='QWidget'/>
<def f='qtbase-6.5.0/src/widgets/widgets/qrubberband.h' l='17' ll='50'/>
<size>40</size>
<smbr r='QRubberBand::staticMetaObject' t='const QMetaObject'/>
<fun r='_ZNK11QRubberBand10metaObjectEv'/>
<fun r='_ZN11QRubberBand11qt_metacastEPKc'/>
<fun r='_ZN11QRubberBand11qt_metacallEN11QMetaObject4CallEiPPv'/>
<fun r='_ZN11QRubberBand2trEPKcS1_i'/>
<fun r='_ZN11QRubberBand18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv'/>
<fun r='_ZN11QRubberBandC1ENS_5ShapeEP7QWidget'/>
<fun r='_ZN11QRubberBandD1Ev'/>
<fun r='_ZNK11QRubberBand5shapeEv'/>
<fun r='_ZN11QRubberBand11setGeometryERK5QRect'/>
<fun r='_ZN11QRubberBand11setGeometryEiiii'/>
<fun r='_ZN11QRubberBand4moveEii'/>
<fun r='_ZN11QRubberBand4moveERK6QPoint'/>
<fun r='_ZN11QRubberBand6resizeEii'/>
<fun r='_ZN11QRubberBand6resizeERK5QSize'/>
<fun r='_ZN11QRubberBand5eventEP6QEvent'/>
<fun r='_ZN11QRubberBand10paintEventEP11QPaintEvent'/>
<fun r='_ZN11QRubberBand11changeEventEP6QEvent'/>
<fun r='_ZN11QRubberBand9showEventEP10QShowEvent'/>
<fun r='_ZN11QRubberBand11resizeEventEP12QResizeEvent'/>
<fun r='_ZN11QRubberBand9moveEventEP10QMoveEvent'/>
<fun r='_ZNK11QRubberBand15initStyleOptionEP22QStyleOptionRubberBand'/>
<fun r='_ZN11QRubberBand6d_funcEv'/>
<fun r='_ZNK11QRubberBand6d_funcEv'/>
<fun r='_ZN11QRubberBand11setGeometryEiiii'/>
<fun r='_ZN11QRubberBand4moveEii'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qmainwindowlayout_p.h' l='558'/>
<size>40</size>
<use f='qtbase-6.5.0/src/widgets/widgets/qmainwindowlayout.cpp' l='2714' c='_ZN17QMainWindowLayout18updateGapIndicatorEv'/>
<size>40</size>
<use f='qtbase-6.5.0/src/widgets/widgets/qmdisubwindow_p.h' l='151'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qmdiarea_p.h' l='114'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qmdiarea.cpp' l='1469' c='_ZN15QMdiAreaPrivate22highlightNextSubWindowEi'/>
<size>40</size>
<use f='qtbase-6.5.0/src/widgets/widgets/qmdisubwindow.cpp' l='1886' c='_ZN20QMdiSubWindowPrivate19enterRubberBandModeEv'/>
<size>40</size>
<use f='qtbase-6.5.0/src/widgets/widgets/qrubberband.cpp' l='24' c='_ZN18QRubberBandPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qrubberband.cpp' l='24' c='_ZN18QRubberBandPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qrubberband.cpp' l='24' c='_ZNK18QRubberBandPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qrubberband.cpp' l='24' c='_ZNK18QRubberBandPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qrubberband.cpp' l='24'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qrubberband.cpp' l='147' c='_ZN18QRubberBandPrivate10updateMaskEv'/>
<size>40</size>
<doc f='qtbase-6.5.0/src/widgets/widgets/qrubberband.cpp' l='52'>/*!
    \class QRubberBand
    \brief The QRubberBand class provides a rectangle or line that can
    indicate a selection or a boundary.

    \inmodule QtWidgets

    A rubber band is often used to show a new bounding area (as in a
    QSplitter or a QDockWidget that is undocking). Historically this has
    been implemented using a QPainter and XOR, but this approach
    doesn&apos;t always work properly since rendering can happen in the
    window below the rubber band, but before the rubber band has been
    &quot;erased&quot;.

    You can create a QRubberBand whenever you need to render a rubber band
    around a given area (or to represent a single line), then call
    setGeometry(), move() or resize() to position and size it. A common
    pattern is to do this in conjunction with mouse events. For example:

    \snippet code/src_gui_widgets_qrubberband.cpp 0

    If you pass a parent to QRubberBand&apos;s constructor, the rubber band will
    display only inside its parent, but stays on top of other child widgets.
    If no parent is passed, QRubberBand will act as a top-level widget.

    Call show() to make the rubber band visible; also when the
    rubber band is not a top-level. Hiding or destroying
    the widget will make the rubber band disappear. The rubber band
    can be a \l Rectangle or a \l Line (vertical or horizontal),
    depending on the shape() it was given when constructed.
*/

// ### DOC: How about some nice convenience constructors?
//QRubberBand::QRubberBand(QRubberBand::Type t, const QRect &amp;rect, QWidget *p)
//QRubberBand::QRubberBand(QRubberBand::Type t, int x, int y, int w, int h, QWidget *p)</doc>
<fun r='_ZNK11QRubberBand15initStyleOptionEP22QStyleOptionRubberBand'/>
<fun r='_ZN11QRubberBandC1ENS_5ShapeEP7QWidget'/>
<fun r='_ZN11QRubberBandD1Ev'/>
<fun r='_ZNK11QRubberBand5shapeEv'/>
<fun r='_ZN11QRubberBand10paintEventEP11QPaintEvent'/>
<fun r='_ZN11QRubberBand11changeEventEP6QEvent'/>
<fun r='_ZN11QRubberBand9showEventEP10QShowEvent'/>
<fun r='_ZN11QRubberBand11resizeEventEP12QResizeEvent'/>
<fun r='_ZN11QRubberBand9moveEventEP10QMoveEvent'/>
<fun r='_ZN11QRubberBand11setGeometryERK5QRect'/>
<fun r='_ZN11QRubberBand5eventEP6QEvent'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter_p.h' l='58'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.cpp' l='1315' c='_ZN9QSplitter13setRubberBandEi'/>
<size>40</size>
