<dec f='include/unicode/unistr.h' l='669' type='int8_t icu_66::UnicodeString::compareCodePointOrderBetween(int32_t start, int32_t limit, const icu_66::UnicodeString &amp; srcText, int32_t srcStart, int32_t srcLimit) const'/>
<def f='include/unicode/unistr.h' l='4078' ll='4085' type='int8_t icu_66::UnicodeString::compareCodePointOrderBetween(int32_t start, int32_t limit, const icu_66::UnicodeString &amp; srcText, int32_t srcStart, int32_t srcLimit) const'/>
<doc f='include/unicode/unistr.h' l='648'>/**
   * Compare two Unicode strings in code point order.
   * The result may be different from the results of compare(), operator&lt;, etc.
   * if supplementary characters are present:
   *
   * In UTF-16, supplementary characters (with code points U+10000 and above) are
   * stored with pairs of surrogate code units. These have values from 0xd800 to 0xdfff,
   * which means that they compare as less than some other BMP characters like U+feff.
   * This function compares Unicode strings in code point order.
   * If either of the UTF-16 strings is malformed (i.e., it contains unpaired surrogates), then the result is not defined.
   *
   * @param start The start offset in this string at which the compare operation begins.
   * @param limit The offset after the last code unit from this string to compare.
   * @param srcText Another string to compare this one to.
   * @param srcStart The start offset in that string at which the compare operation begins.
   * @param srcLimit The offset after the last code unit from that string to compare.
   * @return a negative/zero/positive integer corresponding to whether
   * this string is less than/equal to/greater than the second one
   * in code point order
   * @stable ICU 2.0
   */</doc>
