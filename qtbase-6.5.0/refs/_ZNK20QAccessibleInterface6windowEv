<dec f='qtbase-6.5.0/src/gui/accessible/qaccessible.h' l='57' type='QWindow * QAccessibleInterface::window() const'/>
<def f='qtbase-6.5.0/src/gui/accessible/qaccessible.cpp' l='1766' ll='1769' type='QWindow * QAccessibleInterface::window() const'/>
<doc f='qtbase-6.5.0/src/gui/accessible/qaccessible.cpp' l='1753'>/*!
    Returns the window associated with the underlying object.
    For instance, QAccessibleWidget reimplements this and returns
    the windowHandle() of the QWidget.

    It is used on some platforms to be able to notify the AT client about
    state changes.
    The backend will traverse up all ancestors until it finds a window.
    (This means that at least one interface among the ancestors should
    return a valid QWindow pointer).

    The default implementation returns \nullptr.
  */</doc>
<ovr f='qtbase-6.5.0/src/gui/accessible/qaccessibleobject.cpp' l='115' c='_ZNK22QAccessibleApplication6windowEv'/>
<ovr f='qtbase-6.5.0/src/widgets/accessible/qaccessiblemenu.cpp' l='209' c='_ZNK19QAccessibleMenuItem6windowEv'/>
<ovr f='qtbase-6.5.0/src/widgets/accessible/qaccessiblewidget.cpp' l='177' c='_ZNK17QAccessibleWidget6windowEv'/>
