<dec f='qtbase-6.5.0/src/corelib/global/qrandom.h' l='175' type='static QRandomGenerator QRandomGenerator::securelySeeded()'/>
<def f='qtbase-6.5.0/src/corelib/global/qrandom.h' l='280' ll='283' type='static QRandomGenerator QRandomGenerator::securelySeeded()'/>
<doc f='qtbase-6.5.0/src/corelib/global/qrandom.cpp' l='1045'>/*!
    \fn QRandomGenerator QRandomGenerator::securelySeeded()

    Returns a new QRandomGenerator object that was securely seeded with
    QRandomGenerator::system(). This function will obtain the ideal seed size
    for the algorithm that QRandomGenerator uses and is therefore the
    recommended way for creating a new QRandomGenerator object that will be
    kept for some time.

    Given the amount of data required to securely seed the deterministic
    engine, this function is somewhat expensive and should not be used for
    short-term uses of QRandomGenerator (using it to generate fewer than 2600
    bytes of random data is effectively a waste of resources). If the use
    doesn&apos;t require that much data, consider using QRandomGenerator::global()
    and not storing a QRandomGenerator object instead.

    \sa global(), system()
 */</doc>
