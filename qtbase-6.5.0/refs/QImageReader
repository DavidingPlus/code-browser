<use f='qtbase-6.5.0/src/gui/image/qpixmap.h' l='90' c='_ZN7QPixmap15fromImageReaderEP12QImageReader6QFlagsIN2Qt19ImageConversionFlagEE'/>
<def f='qtbase-6.5.0/src/gui/image/qimagereader.h' l='22' ll='114'/>
<use f='qtbase-6.5.0/src/gui/image/qimagereader.h' l='112' c='_ZN12QImageReaderC1ERKS_'/>
<use f='qtbase-6.5.0/src/gui/image/qimagereader.h' l='112' c='_ZN12QImageReaderaSERKS_'/>
<use f='qtbase-6.5.0/src/gui/image/qimagereader.h' l='112' c='_ZN12QImageReaderaSERKS_'/>
<size>8</size>
<fun r='_ZN12QImageReader2trEPKcS1_i'/>
<fun r='_ZN12QImageReaderC1Ev'/>
<fun r='_ZN12QImageReaderC1EP9QIODeviceRK10QByteArray'/>
<fun r='_ZN12QImageReaderC1ERK7QStringRK10QByteArray'/>
<fun r='_ZN12QImageReaderD1Ev'/>
<fun r='_ZN12QImageReader9setFormatERK10QByteArray'/>
<fun r='_ZNK12QImageReader6formatEv'/>
<fun r='_ZN12QImageReader24setAutoDetectImageFormatEb'/>
<fun r='_ZNK12QImageReader21autoDetectImageFormatEv'/>
<fun r='_ZN12QImageReader26setDecideFormatFromContentEb'/>
<fun r='_ZNK12QImageReader23decideFormatFromContentEv'/>
<fun r='_ZN12QImageReader9setDeviceEP9QIODevice'/>
<fun r='_ZNK12QImageReader6deviceEv'/>
<fun r='_ZN12QImageReader11setFileNameERK7QString'/>
<fun r='_ZNK12QImageReader8fileNameEv'/>
<fun r='_ZNK12QImageReader4sizeEv'/>
<fun r='_ZNK12QImageReader11imageFormatEv'/>
<fun r='_ZNK12QImageReader8textKeysEv'/>
<fun r='_ZNK12QImageReader4textERK7QString'/>
<fun r='_ZN12QImageReader11setClipRectERK5QRect'/>
<fun r='_ZNK12QImageReader8clipRectEv'/>
<fun r='_ZN12QImageReader13setScaledSizeERK5QSize'/>
<fun r='_ZNK12QImageReader10scaledSizeEv'/>
<fun r='_ZN12QImageReader10setQualityEi'/>
<fun r='_ZNK12QImageReader7qualityEv'/>
<fun r='_ZN12QImageReader17setScaledClipRectERK5QRect'/>
<fun r='_ZNK12QImageReader14scaledClipRectEv'/>
<fun r='_ZN12QImageReader18setBackgroundColorERK6QColor'/>
<fun r='_ZNK12QImageReader15backgroundColorEv'/>
<fun r='_ZNK12QImageReader17supportsAnimationEv'/>
<fun r='_ZNK12QImageReader14transformationEv'/>
<fun r='_ZN12QImageReader16setAutoTransformEb'/>
<fun r='_ZNK12QImageReader13autoTransformEv'/>
<fun r='_ZNK12QImageReader7subTypeEv'/>
<fun r='_ZNK12QImageReader17supportedSubTypesEv'/>
<fun r='_ZNK12QImageReader7canReadEv'/>
<fun r='_ZN12QImageReader4readEv'/>
<fun r='_ZN12QImageReader4readEP6QImage'/>
<fun r='_ZN12QImageReader15jumpToNextImageEv'/>
<fun r='_ZN12QImageReader11jumpToImageEi'/>
<fun r='_ZNK12QImageReader9loopCountEv'/>
<fun r='_ZNK12QImageReader10imageCountEv'/>
<fun r='_ZNK12QImageReader14nextImageDelayEv'/>
<fun r='_ZNK12QImageReader18currentImageNumberEv'/>
<fun r='_ZNK12QImageReader16currentImageRectEv'/>
<fun r='_ZNK12QImageReader5errorEv'/>
<fun r='_ZNK12QImageReader11errorStringEv'/>
<fun r='_ZNK12QImageReader14supportsOptionEN15QImageIOHandler11ImageOptionE'/>
<fun r='_ZN12QImageReader11imageFormatERK7QString'/>
<fun r='_ZN12QImageReader11imageFormatEP9QIODevice'/>
<fun r='_ZN12QImageReader21supportedImageFormatsEv'/>
<fun r='_ZN12QImageReader18supportedMimeTypesEv'/>
<fun r='_ZN12QImageReader23imageFormatsForMimeTypeERK10QByteArray'/>
<fun r='_ZN12QImageReader15allocationLimitEv'/>
<fun r='_ZN12QImageReader18setAllocationLimitEi'/>
<fun r='_ZN12QImageReaderC1ERKS_'/>
<mbr r='QImageReader::d' o='0' t='QImageReaderPrivate *'/>
<use f='qtbase-6.5.0/src/gui/image/qplatformpixmap.h' l='52' c='_ZN15QPlatformPixmap15fromImageReaderEP12QImageReader6QFlagsIN2Qt19ImageConversionFlagEE'/>
<use f='qtbase-6.5.0/src/gui/image/qicon.cpp' l='410'/>
<size>8</size>
<use f='qtbase-6.5.0/src/gui/image/qimage.cpp' l='3751' c='_ZN6QImage4loadERK7QStringPKc'/>
<use f='qtbase-6.5.0/src/gui/image/qimage.cpp' l='3764' c='_ZN6QImage4loadEP9QIODevicePKc'/>
<use f='qtbase-6.5.0/src/gui/image/qimage.cpp' l='3829' c='_ZN6QImage8fromDataE14QByteArrayViewPKc'/>
<use f='qtbase-6.5.0/src/gui/image/qimage.cpp' l='3960' c='_ZrsR11QDataStreamR6QImage'/>
<size>8</size>
<use f='qtbase-6.5.0/src/gui/image/qimagereader.cpp' l='432' c='_ZN19QImageReaderPrivateC1EP12QImageReader'/>
<use f='qtbase-6.5.0/src/gui/image/qimagereader.cpp' l='461'/>
<use f='qtbase-6.5.0/src/gui/image/qimagereader.cpp' l='471' c='_ZN19QImageReaderPrivateC1EP12QImageReader'/>
<use f='qtbase-6.5.0/src/gui/image/qimagereader.cpp' l='592' c='_ZN12QImageReaderC1ERK7QStringRK10QByteArray'/>
<size>8</size>
<doc f='qtbase-6.5.0/src/gui/image/qimagereader.cpp' l='6'>/*!
    \class QImageReader
    \brief The QImageReader class provides a format independent interface
    for reading images from files or other devices.

    \inmodule QtGui
    \reentrant
    \ingroup painting

    The most common way to read images is through QImage and QPixmap&apos;s
    constructors, or by calling QImage::load() and
    QPixmap::load(). QImageReader is a specialized class which gives
    you more control when reading images. For example, you can read an
    image into a specific size by calling setScaledSize(), and you can
    select a clip rect, effectively loading only parts of an image, by
    calling setClipRect(). Depending on the underlying support in the
    image format, this can save memory and speed up loading of images.

    To read an image, you start by constructing a QImageReader object.
    Pass either a file name or a device pointer, and the image format
    to QImageReader&apos;s constructor. You can then set several options,
    such as the clip rect (by calling setClipRect()) and scaled size
    (by calling setScaledSize()). canRead() returns the image if the
    QImageReader can read the image (i.e., the image format is
    supported and the device is open for reading). Call read() to read
    the image.

    If any error occurs when reading the image, read() will return a
    null QImage. You can then call error() to find the type of error
    that occurred, or errorString() to get a human readable
    description of what went wrong.

    \note QImageReader assumes exclusive control over the file or
    device that is assigned. Any attempts to modify the assigned file
    or device during the lifetime of the QImageReader object will
    yield undefined results.

    \section1 Formats

    Call supportedImageFormats() for a list of formats that
    QImageReader can read. QImageReader supports all built-in image
    formats, in addition to any image format plugins that support
    reading. Call supportedMimeTypes() to obtain a list of supported MIME
    types, which for example can be passed to QFileDialog::setMimeTypeFilters().

    QImageReader autodetects the image format by default, by looking at the
    provided (optional) format string, the file name suffix, and the data
    stream contents. You can enable or disable this feature, by calling
    setAutoDetectImageFormat().

    \section1 High Resolution Versions of Images

    It is possible to provide high resolution versions of images should a scaling
    between \e{device pixels} and \e{device independent pixels} be in effect.

    The high resolution version is marked by the suffix \c @2x on the base name.
    The image read will have its \e{device pixel ratio} set to a value of 2.

    This can be disabled by setting the environment variable
    \c QT_HIGHDPI_DISABLE_2X_IMAGE_LOADING.

    \sa QImageWriter, QImageIOHandler, QImageIOPlugin, QMimeDatabase, QColorSpace
    \sa QImage::devicePixelRatio(), QPixmap::devicePixelRatio(), QIcon, QPainter::drawPixmap(), QPainter::drawImage()
*/</doc>
<fun r='_ZN12QImageReaderC1Ev'/>
<fun r='_ZN12QImageReaderC1EP9QIODeviceRK10QByteArray'/>
<fun r='_ZN12QImageReaderC1ERK7QStringRK10QByteArray'/>
<fun r='_ZN12QImageReaderD1Ev'/>
<fun r='_ZN12QImageReader9setFormatERK10QByteArray'/>
<fun r='_ZNK12QImageReader6formatEv'/>
<fun r='_ZN12QImageReader24setAutoDetectImageFormatEb'/>
<fun r='_ZNK12QImageReader21autoDetectImageFormatEv'/>
<fun r='_ZN12QImageReader26setDecideFormatFromContentEb'/>
<fun r='_ZNK12QImageReader23decideFormatFromContentEv'/>
<fun r='_ZN12QImageReader9setDeviceEP9QIODevice'/>
<fun r='_ZNK12QImageReader6deviceEv'/>
<fun r='_ZN12QImageReader11setFileNameERK7QString'/>
<fun r='_ZNK12QImageReader8fileNameEv'/>
<fun r='_ZN12QImageReader10setQualityEi'/>
<fun r='_ZNK12QImageReader7qualityEv'/>
<fun r='_ZNK12QImageReader4sizeEv'/>
<fun r='_ZNK12QImageReader11imageFormatEv'/>
<fun r='_ZNK12QImageReader8textKeysEv'/>
<fun r='_ZNK12QImageReader4textERK7QString'/>
<fun r='_ZN12QImageReader11setClipRectERK5QRect'/>
<fun r='_ZNK12QImageReader8clipRectEv'/>
<fun r='_ZN12QImageReader13setScaledSizeERK5QSize'/>
<fun r='_ZNK12QImageReader10scaledSizeEv'/>
<fun r='_ZN12QImageReader17setScaledClipRectERK5QRect'/>
<fun r='_ZNK12QImageReader14scaledClipRectEv'/>
<fun r='_ZN12QImageReader18setBackgroundColorERK6QColor'/>
<fun r='_ZNK12QImageReader15backgroundColorEv'/>
<fun r='_ZNK12QImageReader17supportsAnimationEv'/>
<fun r='_ZNK12QImageReader7subTypeEv'/>
<fun r='_ZNK12QImageReader17supportedSubTypesEv'/>
<fun r='_ZNK12QImageReader14transformationEv'/>
<fun r='_ZN12QImageReader16setAutoTransformEb'/>
<fun r='_ZNK12QImageReader13autoTransformEv'/>
<fun r='_ZNK12QImageReader7canReadEv'/>
<fun r='_ZN12QImageReader4readEv'/>
<fun r='_ZN12QImageReader4readEP6QImage'/>
<fun r='_ZN12QImageReader15jumpToNextImageEv'/>
<fun r='_ZN12QImageReader11jumpToImageEi'/>
<fun r='_ZNK12QImageReader9loopCountEv'/>
<fun r='_ZNK12QImageReader10imageCountEv'/>
<fun r='_ZNK12QImageReader14nextImageDelayEv'/>
<fun r='_ZNK12QImageReader18currentImageNumberEv'/>
<fun r='_ZNK12QImageReader16currentImageRectEv'/>
<fun r='_ZNK12QImageReader5errorEv'/>
<fun r='_ZNK12QImageReader11errorStringEv'/>
<fun r='_ZNK12QImageReader14supportsOptionEN15QImageIOHandler11ImageOptionE'/>
<fun r='_ZN12QImageReader11imageFormatERK7QString'/>
<fun r='_ZN12QImageReader11imageFormatEP9QIODevice'/>
<fun r='_ZN12QImageReader21supportedImageFormatsEv'/>
<fun r='_ZN12QImageReader18supportedMimeTypesEv'/>
<fun r='_ZN12QImageReader23imageFormatsForMimeTypeERK10QByteArray'/>
<fun r='_ZN12QImageReader15allocationLimitEv'/>
<fun r='_ZN12QImageReader18setAllocationLimitEi'/>
<use f='qtbase-6.5.0/src/gui/image/qmovie.cpp' l='215'/>
<use f='qtbase-6.5.0/src/gui/image/qmovie.cpp' l='325' c='_ZN13QMoviePrivate12infoForFrameEi'/>
<use f='qtbase-6.5.0/src/gui/image/qmovie.cpp' l='327' c='_ZN13QMoviePrivate12infoForFrameEi'/>
<use f='qtbase-6.5.0/src/gui/image/qmovie.cpp' l='559' c='_ZN6QMovieC1EP7QObject'/>
<use f='qtbase-6.5.0/src/gui/image/qmovie.cpp' l='575' c='_ZN6QMovieC1EP9QIODeviceRK10QByteArrayP7QObject'/>
<use f='qtbase-6.5.0/src/gui/image/qmovie.cpp' l='593' c='_ZN6QMovieC1ERK7QStringRK10QByteArrayP7QObject'/>
<use f='qtbase-6.5.0/src/gui/image/qmovie.cpp' l='998' c='_ZN6QMovie16supportedFormatsEv'/>
<size>8</size>
<use f='qtbase-6.5.0/src/gui/image/qpixmap_raster_p.h' l='36' c='_ZN21QRasterPlatformPixmap15fromImageReaderEP12QImageReader6QFlagsIN2Qt19ImageConversionFlagEE'/>
<use f='qtbase-6.5.0/src/gui/image/qpixmap.cpp' l='1499' c='_ZN7QPixmap15fromImageReaderEP12QImageReader6QFlagsIN2Qt19ImageConversionFlagEE'/>
<size>8</size>
<use f='qtbase-6.5.0/src/gui/image/qpixmap_raster.cpp' l='97' c='_ZN21QRasterPlatformPixmap8fromDataEPKhjPKc6QFlagsIN2Qt19ImageConversionFlagEE'/>
<use f='qtbase-6.5.0/src/gui/image/qpixmap_raster.cpp' l='118' c='_ZN21QRasterPlatformPixmap15fromImageReaderEP12QImageReader6QFlagsIN2Qt19ImageConversionFlagEE'/>
<size>8</size>
<use f='qtbase-6.5.0/src/gui/image/qplatformpixmap.cpp' l='88' c='_ZN15QPlatformPixmap15fromImageReaderEP12QImageReader6QFlagsIN2Qt19ImageConversionFlagEE'/>
<use f='qtbase-6.5.0/src/gui/image/qplatformpixmap.cpp' l='98' c='_ZN15QPlatformPixmap8fromFileERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE'/>
<use f='qtbase-6.5.0/src/gui/image/qplatformpixmap.cpp' l='110' c='_ZN15QPlatformPixmap8fromDataEPKhjPKc6QFlagsIN2Qt19ImageConversionFlagEE'/>
<size>8</size>
<use f='qtbase-6.5.0/src/gui/text/qcssparser.cpp' l='1380' c='_ZN4QCss14ValueExtractor12extractImageEP5QIconP6QFlagsIN2Qt13AlignmentFlagEEP5QSize'/>
<use f='qtbase-6.5.0/src/gui/text/qcssparser.cpp' l='1417' c='_ZN4QCss14ValueExtractor11extractIconEP5QIconP5QSize'/>
<size>8</size>
<use f='qtbase-6.5.0/src/gui/text/qtextodfwriter.cpp' l='385' c='_ZL14probeImageDataP9QIODeviceP6QImageP7QStringPdS5_'/>
<size>8</size>
