<def f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='157' ll='160'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='161' c='_ZNK7QShader16nativeShaderInfoERK10QShaderKey'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p.h' l='162' c='_ZN7QShader19setNativeShaderInfoERK10QShaderKeyRKNS_16NativeShaderInfoE'/>
<size>16</size>
<mbr r='QShader::NativeShaderInfo::flags' o='0' t='int'/>
<mbr r='QShader::NativeShaderInfo::extraBufferBindings' o='64' t='QMap&lt;int, int&gt;'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader_p_p.h' l='83'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader.cpp' l='978' c='_ZNK7QShader16nativeShaderInfoERK10QShaderKey'/>
<use f='qtbase-6.5.0/src/gui/rhi/qshader.cpp' l='995' c='_ZN7QShader19setNativeShaderInfoERK10QShaderKeyRKNS_16NativeShaderInfoE'/>
<size>16</size>
<doc f='qtbase-6.5.0/src/gui/rhi/qshader.cpp' l='953'>/*!
    \struct QShader::NativeShaderInfo

    Describes information about the native shader code, if applicable. This
    becomes relevant with certain shader languages for certain shader stages,
    in case the translation from SPIR-V involves the introduction of
    additional, &quot;magic&quot; inputs, outputs, or resources in the generated shader.
    Such additions may be dependent on the original source code (i.e. the usage
    of various GLSL language constructs or built-ins), and therefore it needs
    to be indicated in a dynamic manner if certain features got added to the
    generated shader code.

    As an example, consider a tessellation control shader with a per-patch (not
    per-vertex) output variable. This is translated to a Metal compute shader
    outputting (among others) into an spvPatchOut buffer. But this buffer would
    not be present at all if per-patch output variables were not used. The fact
    that the shader code relies on such a buffer present can be indicated by
    the data in this struct.
 */</doc>
