<dec f='qtbase-6.5.0/src/widgets/dialogs/qinputdialog.h' l='134' type='static QString QInputDialog::getItem(QWidget * parent, const QString &amp; title, const QString &amp; label, const QStringList &amp; items, int current = 0, bool editable = true, bool * ok = nullptr, Qt::WindowFlags flags = Qt::WindowFlags(), Qt::InputMethodHints inputMethodHints = Qt::ImhNone)'/>
<def f='qtbase-6.5.0/src/widgets/dialogs/qinputdialog.cpp' l='1361' ll='1383' type='static QString QInputDialog::getItem(QWidget * parent, const QString &amp; title, const QString &amp; label, const QStringList &amp; items, int current = 0, bool editable = true, bool * ok = nullptr, Qt::WindowFlags flags = Qt::WindowFlags(), Qt::InputMethodHints inputMethodHints = Qt::ImhNone)'/>
<doc f='qtbase-6.5.0/src/widgets/dialogs/qinputdialog.cpp' l='1332'>/*!
    Static convenience function to let the user select an item from a string
    list.

    \a title is the text which is displayed in the title bar of the dialog.
    \a label is the text which is shown to the user (it should say what should
    be entered).
    \a items is the string list which is inserted into the combo box.
    \a current is the number  of the item which should be the current item.
    \a inputMethodHints is the input method hints that will be used if the
    combo box is editable and an input method is active.

    If \a editable is true the user can enter their own text; otherwise, the
    user may only select one of the existing items.

    If \a ok is nonnull \e {*ok} will be set to true if the user pressed
    \uicontrol OK and to false if the user pressed \uicontrol Cancel. The dialog&apos;s parent
    is \a parent. The dialog will be modal and uses the widget \a flags.

    This function returns the text of the current item, or if \a editable is
    true, the current text of the combo box.

    Use this static function like this:

    \snippet dialogs/standarddialogs/dialog.cpp 2

    \sa getText(), getInt(), getDouble(), getMultiLineText()
*/</doc>
