<def f='include/freetype2/freetype/ftimage.h' l='337' ll='348'/>
<use f='include/freetype2/freetype/ftimage.h' l='337'/>
<size>40</size>
<doc f='include/freetype2/freetype/ftimage.h' l='283'>/**************************************************************************
   *
   * @struct:
   *   FT_Outline
   *
   * @description:
   *   This structure is used to describe an outline to the scan-line
   *   converter.
   *
   * @fields:
   *   n_contours ::
   *     The number of contours in the outline.
   *
   *   n_points ::
   *     The number of points in the outline.
   *
   *   points ::
   *     A pointer to an array of `n_points` @FT_Vector elements, giving the
   *     outline&apos;s point coordinates.
   *
   *   tags ::
   *     A pointer to an array of `n_points` chars, giving each outline
   *     point&apos;s type.
   *
   *     If bit~0 is unset, the point is &apos;off&apos; the curve, i.e., a Bezier
   *     control point, while it is &apos;on&apos; if set.
   *
   *     Bit~1 is meaningful for &apos;off&apos; points only.  If set, it indicates a
   *     third-order Bezier arc control point; and a second-order control
   *     point if unset.
   *
   *     If bit~2 is set, bits 5-7 contain the drop-out mode (as defined in
   *     the OpenType specification; the value is the same as the argument to
   *     the &apos;SCANMODE&apos; instruction).
   *
   *     Bits 3 and~4 are reserved for internal purposes.
   *
   *   contours ::
   *     An array of `n_contours` shorts, giving the end point of each
   *     contour within the outline.  For example, the first contour is
   *     defined by the points &apos;0&apos; to `contours[0]`, the second one is
   *     defined by the points `contours[0]+1` to `contours[1]`, etc.
   *
   *   flags ::
   *     A set of bit flags used to characterize the outline and give hints
   *     to the scan-converter and hinter on how to convert/grid-fit it.  See
   *     @FT_OUTLINE_XXX.
   *
   * @note:
   *   The B/W rasterizer only checks bit~2 in the `tags` array for the first
   *   point of each contour.  The drop-out mode as given with
   *   @FT_OUTLINE_IGNORE_DROPOUTS, @FT_OUTLINE_SMART_DROPOUTS, and
   *   @FT_OUTLINE_INCLUDE_STUBS in `flags` is then overridden.
   */</doc>
<mbr r='FT_Outline_::n_contours' o='0' t='short'/>
<mbr r='FT_Outline_::n_points' o='16' t='short'/>
<mbr r='FT_Outline_::points' o='64' t='FT_Vector *'/>
<mbr r='FT_Outline_::tags' o='128' t='char *'/>
<mbr r='FT_Outline_::contours' o='192' t='short *'/>
<mbr r='FT_Outline_::flags' o='256' t='int'/>
