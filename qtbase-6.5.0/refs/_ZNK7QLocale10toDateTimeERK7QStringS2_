<dec f='qtbase-6.5.0/src/corelib/text/qlocale.h' l='1006' type='QDateTime QLocale::toDateTime(const QString &amp; string, const QString &amp; format) const'/>
<use f='qtbase-6.5.0/src/corelib/text/qlocale.cpp' l='2393' u='c' c='_ZNK7QLocale10toDateTimeERK7QStringNS_10FormatTypeE'/>
<def f='qtbase-6.5.0/src/corelib/text/qlocale.cpp' l='2496' ll='2499' type='QDateTime QLocale::toDateTime(const QString &amp; string, const QString &amp; format) const'/>
<doc f='qtbase-6.5.0/src/corelib/text/qlocale.cpp' l='2475'>/*!
    \since 4.4

    Reads \a string as a date-time in the given \a format.

    Parses \a string and returns the date-time it represents.  See
    QDateTime::fromString() for the interpretation of \a format.

    \note Month and day names, where used, must be given in the locale&apos;s
    language. Any am/pm indicators used must match \l amText() or \l pmText(),
    ignoring case.

    If the string could not be parsed, returns an invalid QDateTime.  If the
    string can be parsed and represents an invalid date-time (e.g. in a gap
    skipped by a time-zone transition), an invalid QDateTime is returned, whose
    toMSecsSinceEpoch() represents a near-by date-time that is valid. Passing
    that to fromMSecsSinceEpoch() will produce a valid date-time that isn&apos;t
    faithfully represented by the string parsed.

    \sa dateTimeFormat(), toTime(), toDate(), QDateTime::fromString()
*/</doc>
<use f='qtbase-6.5.0/src/network/access/qnetworkrequest.cpp' l='1521' u='c' c='_ZN22QNetworkHeadersPrivate12fromHttpDateERK10QByteArray'/>
