<dec f='qtbase-6.5.0/src/corelib/text/qstring.h' l='870' type='QString &amp; QString::setRawData(const QChar * unicode, qsizetype size)'/>
<use f='qtbase-6.5.0/qmake/library/qmakeparser.cpp' l='1034' u='c' c='_ZN11QMakeParser12finalizeCondERPtS0_S0_i'/>
<use f='qtbase-6.5.0/qmake/library/qmakeparser.cpp' l='1078' u='c' c='_ZN11QMakeParser12finalizeCallERPtS0_S0_i'/>
<use f='qtbase-6.5.0/qmake/library/qmakeparser.cpp' l='1217' u='c' c='_ZN11QMakeParser12finalizeCallERPtS0_S0_i'/>
<use f='qtbase-6.5.0/qmake/library/qmakeparser.cpp' l='1241' u='c' c='_ZN11QMakeParser15resolveVariableEPtiiPS0_S1_P7QStringS1_S3_PKt11QStringView'/>
<def f='qtbase-6.5.0/src/corelib/text/qstring.cpp' l='9085' ll='9092' type='QString &amp; QString::setRawData(const QChar * unicode, qsizetype size)'/>
<doc f='qtbase-6.5.0/src/corelib/text/qstring.cpp' l='9071'>/*!
    \since 4.7

    Resets the QString to use the first \a size Unicode characters
    in the array \a unicode. The data in \a unicode is \e not
    copied. The caller must be able to guarantee that \a unicode will
    not be deleted or modified as long as the QString (or an
    unmodified copy of it) exists.

    This function can be used instead of fromRawData() to re-use
    existings QString objects to save memory re-allocations.

    \sa fromRawData()
*/</doc>
