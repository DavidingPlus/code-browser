<dec f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout_p.h' l='430' type='void QGraphicsAnchorLayoutPrivate::correctEdgeDirection(QGraphicsLayoutItem *&amp; firstItem, Qt::AnchorPoint &amp; firstEdge, QGraphicsLayoutItem *&amp; secondItem, Qt::AnchorPoint &amp; secondEdge)'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout_p.cpp' l='1641' u='c' c='_ZN28QGraphicsAnchorLayoutPrivate9addAnchorEP19QGraphicsLayoutItemN2Qt11AnchorPointES1_S3_Pd'/>
<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout_p.cpp' l='1941' ll='1968' type='void QGraphicsAnchorLayoutPrivate::correctEdgeDirection(QGraphicsLayoutItem *&amp; firstItem, Qt::AnchorPoint &amp; firstEdge, QGraphicsLayoutItem *&amp; secondItem, Qt::AnchorPoint &amp; secondEdge)'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout_p.cpp' l='1917'>/*!
  \internal

  Use heuristics to determine the correct orientation of a given anchor.

  After API discussions, we decided we would like expressions like
  anchor(A, Left, B, Right) to mean the same as anchor(B, Right, A, Left).
  The problem with this is that anchors could become ambiguous, for
  instance, what does the anchor A, B of size X mean?

     &quot;pos(B) = pos(A) + X&quot;  or  &quot;pos(A) = pos(B) + X&quot; ?

  To keep the API user friendly and at the same time, keep our algorithm
  deterministic, we use an heuristic to determine a direction for each
  added anchor and then keep it. The heuristic is based on the fact
  that people usually avoid overlapping items, therefore:

     &quot;A, RIGHT to B, LEFT&quot; means that B is to the LEFT of A.
     &quot;B, LEFT to A, RIGHT&quot; is corrected to the above anchor.

  Special correction is also applied when one of the items is the
  layout. We handle Layout Left as if it was another items&apos;s Right
  and Layout Right as another item&apos;s Left.
*/</doc>
