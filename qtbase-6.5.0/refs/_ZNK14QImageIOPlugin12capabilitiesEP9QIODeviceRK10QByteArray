<dec f='qtbase-6.5.0/src/gui/image/qimageiohandler.h' l='115' type='QImageIOPlugin::Capabilities QImageIOPlugin::capabilities(QIODevice * device, const QByteArray &amp; format) const'/>
<doc f='qtbase-6.5.0/src/gui/image/qimageiohandler.cpp' l='580'>/*! \fn QImageIOPlugin::capabilities(QIODevice *device, const QByteArray &amp;format) const

    Returns the capabilities of the plugin, based on the data in \a
    device and the format \a format.  If \a device is \c 0, it should
    simply report whether the format can be read or written.  Otherwise,
    it should attempt to determine whether the given format (or any
    format supported by the plugin if \a format is empty) can be read
    from or written to \a device.  It should do this without changing
    the state of \a device (typically by using QIODevice::peek()).

    For example, if the QImageIOPlugin supports the BMP format, \a format
    is either empty or \c &quot;bmp&quot;, and the data in the device starts with the
    characters \c &quot;BM&quot;, this function should return \l CanRead. If \a format
    is \c &quot;bmp&quot;, \a device is \c 0 and the handler supports both reading and
    writing, this function should return \l CanRead | \l CanWrite.

    Format names are always given in lower case.
*/</doc>
<use f='qtbase-6.5.0/src/gui/image/qimagereader.cpp' l='209' u='c' c='_ZL23createReadHandlerHelperP9QIODeviceRK10QByteArraybb'/>
<use f='qtbase-6.5.0/src/gui/image/qimagereader.cpp' l='231' u='c' c='_ZL23createReadHandlerHelperP9QIODeviceRK10QByteArraybb'/>
<use f='qtbase-6.5.0/src/gui/image/qimagereader.cpp' l='244' u='c' c='_ZL23createReadHandlerHelperP9QIODeviceRK10QByteArraybb'/>
<use f='qtbase-6.5.0/src/gui/image/qimagereader.cpp' l='326' u='c' c='_ZL23createReadHandlerHelperP9QIODeviceRK10QByteArraybb'/>
<use f='qtbase-6.5.0/src/gui/image/qimagereaderwriterhelpers.cpp' l='40' u='c' c='_ZN25QImageReaderWriterHelpersL24appendImagePluginFormatsEP14QFactoryLoaderN14QImageIOPlugin10CapabilityEP5QListI10QByteArrayE'/>
<use f='qtbase-6.5.0/src/gui/image/qimagereaderwriterhelpers.cpp' l='60' u='c' c='_ZN25QImageReaderWriterHelpersL26appendImagePluginMimeTypesEP14QFactoryLoaderN14QImageIOPlugin10CapabilityEP5QListI10QByteArrayES7_'/>
<use f='qtbase-6.5.0/src/gui/image/qimagewriter.cpp' l='141' u='c' c='_ZL24createWriteHandlerHelperP9QIODeviceRK10QByteArray'/>
<use f='qtbase-6.5.0/src/gui/image/qimagewriter.cpp' l='183' u='c' c='_ZL24createWriteHandlerHelperP9QIODeviceRK10QByteArray'/>
<ovr f='qtbase-6.5.0/src/plugins/imageformats/gif/main.cpp' l='34' c='_ZNK10QGifPlugin12capabilitiesEP9QIODeviceRK10QByteArray'/>
<ovr f='qtbase-6.5.0/src/plugins/imageformats/ico/main.cpp' l='23' c='_ZNK10QICOPlugin12capabilitiesEP9QIODeviceRK10QByteArray'/>
<ovr f='qtbase-6.5.0/src/plugins/imageformats/jpeg/main.cpp' l='23' c='_ZNK11QJpegPlugin12capabilitiesEP9QIODeviceRK10QByteArray'/>
