<dec f='qtbase-6.5.0/src/corelib/io/qprocess.h' l='194' type='bool QProcess::waitForFinished(int msecs = 30000)'/>
<use f='qtbase-6.5.0/qmake/library/qmakebuiltins.cpp' l='480' u='c' c='_ZNK14QMakeEvaluator10runProcessEP8QProcessRK7QString'/>
<use f='qtbase-6.5.0/src/corelib/io/qprocess.cpp' l='1233' u='c' c='_ZN8QProcessD1Ev'/>
<use f='qtbase-6.5.0/src/corelib/io/qprocess.cpp' l='1666' u='c' c='_ZN8QProcess5closeEv'/>
<def f='qtbase-6.5.0/src/corelib/io/qprocess.cpp' l='1870' ll='1884' type='bool QProcess::waitForFinished(int msecs = 30000)'/>
<use f='qtbase-6.5.0/src/corelib/io/qprocess.cpp' l='2405' u='c' c='_ZN8QProcess7executeERK7QStringRK5QListIS0_E'/>
<doc f='qtbase-6.5.0/src/corelib/io/qprocess.cpp' l='1851'>/*!
    Blocks until the process has finished and the finished() signal
    has been emitted, or until \a msecs milliseconds have passed.

    Returns \c true if the process finished; otherwise returns \c false (if
    the operation timed out, if an error occurred, or if this QProcess
    is already finished).

    This function can operate without an event loop. It is
    useful when writing non-GUI applications and when performing
    I/O operations in a non-GUI thread.

    \warning Calling this function from the main (GUI) thread
    might cause your user interface to freeze.

    If msecs is -1, this function will not time out.

    \sa finished(), waitForStarted(), waitForReadyRead(), waitForBytesWritten()
*/</doc>
<use f='qtbase-6.5.0/src/testlib/qbenchmarkvalgrind.cpp' l='30' u='c' c='_ZN23QBenchmarkValgrindUtils12haveValgrindEv'/>
<use f='qtbase-6.5.0/src/testlib/qbenchmarkvalgrind.cpp' l='159' u='c' c='_ZN23QBenchmarkValgrindUtils22runCallgrindSubProcessERK5QListI7QStringERi'/>
