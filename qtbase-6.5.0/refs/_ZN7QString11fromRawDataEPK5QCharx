<dec f='qtbase-6.5.0/src/corelib/text/qstring.h' l='856' type='static QString QString::fromRawData(const QChar * , qsizetype size)'/>
<use f='qtbase-6.5.0/src/corelib/text/qlocale_p.h' l='284' u='c' c='_ZNK11QLocaleData9DataRange7getDataEPKDs'/>
<use f='qtbase-6.5.0/src/corelib/serialization/qcborvalue_p.h' l='85' u='c' c='_ZNK6QtCbor8ByteData12asQStringRawEv'/>
<use f='qtbase-6.5.0/src/corelib/text/qstring.cpp' l='6498' u='c' c='_ZN7QString25localeAwareCompare_helperEPK5QCharxS2_x'/>
<use f='qtbase-6.5.0/src/corelib/text/qstring.cpp' l='6499' u='c' c='_ZN7QString25localeAwareCompare_helperEPK5QCharxS2_x'/>
<def f='qtbase-6.5.0/src/corelib/text/qstring.cpp' l='9066' ll='9069' type='static QString QString::fromRawData(const QChar * unicode, qsizetype size)'/>
<use f='qtbase-6.5.0/src/corelib/text/qstring.cpp' l='9090' u='c' c='_ZN7QString10setRawDataEPK5QCharx'/>
<doc f='qtbase-6.5.0/src/corelib/text/qstring.cpp' l='9041'>/*!
    Constructs a QString that uses the first \a size Unicode characters
    in the array \a unicode. The data in \a unicode is \e not
    copied. The caller must be able to guarantee that \a unicode will
    not be deleted or modified as long as the QString (or an
    unmodified copy of it) exists.

    Any attempts to modify the QString or copies of it will cause it
    to create a deep copy of the data, ensuring that the raw data
    isn&apos;t modified.

    Here is an example of how we can use a QRegularExpression on raw data in
    memory without requiring to copy the data into a QString:

    \snippet qstring/main.cpp 22
    \snippet qstring/main.cpp 23

    \warning A string created with fromRawData() is \e not
    &apos;\\0&apos;-terminated, unless the raw data contains a &apos;\\0&apos; character
    at position \a size. This means unicode() will \e not return a
    &apos;\\0&apos;-terminated string (although utf16() does, at the cost of
    copying the raw data).

    \sa fromUtf16(), setRawData()
*/</doc>
