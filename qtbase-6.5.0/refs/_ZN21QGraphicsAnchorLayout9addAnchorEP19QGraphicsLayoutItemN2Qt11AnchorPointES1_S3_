<dec f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout.h' l='45' type='QGraphicsAnchor * QGraphicsAnchorLayout::addAnchor(QGraphicsLayoutItem * firstItem, Qt::AnchorPoint firstEdge, QGraphicsLayoutItem * secondItem, Qt::AnchorPoint secondEdge)'/>
<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout.cpp' l='233' ll='241' type='QGraphicsAnchor * QGraphicsAnchorLayout::addAnchor(QGraphicsLayoutItem * firstItem, Qt::AnchorPoint firstEdge, QGraphicsLayoutItem * secondItem, Qt::AnchorPoint secondEdge)'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout.cpp' l='320' u='c' c='_ZN21QGraphicsAnchorLayout10addAnchorsEP19QGraphicsLayoutItemS1_6QFlagsIN2Qt11OrientationEE'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout.cpp' l='322' u='c' c='_ZN21QGraphicsAnchorLayout10addAnchorsEP19QGraphicsLayoutItemS1_6QFlagsIN2Qt11OrientationEE'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout.cpp' l='325' u='c' c='_ZN21QGraphicsAnchorLayout10addAnchorsEP19QGraphicsLayoutItemS1_6QFlagsIN2Qt11OrientationEE'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout.cpp' l='326' u='c' c='_ZN21QGraphicsAnchorLayout10addAnchorsEP19QGraphicsLayoutItemS1_6QFlagsIN2Qt11OrientationEE'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout.cpp' l='211'>/*!
    Creates an anchor between the edge \a firstEdge of item \a firstItem and the edge \a secondEdge
    of item \a secondItem. The spacing of the anchor is picked up from the style. Anchors
    between a layout edge and an item edge will have a size of 0.
    If there is already an anchor between the edges, the new anchor will replace the old one.

    \a firstItem and \a secondItem are automatically added to the layout if they are not part
    of the layout. This means that count() can increase by up to 2.

    The spacing an anchor will get depends on the type of anchor. For instance, anchors from the
    Right edge of one item to the Left edge of another (or vice versa) will use the default
    horizontal spacing. The same behaviour applies to Bottom to Top anchors, (but they will use
    the default vertical spacing). For all other anchor combinations, the spacing will be 0.
    All anchoring functions will follow this rule.

    The spacing can also be set manually by using QGraphicsAnchor::setSpacing() method.

    Calling this function where \a firstItem or \a secondItem are ancestors of the layout have
    undefined behaviour.

    \sa addAnchors(), addCornerAnchors()
 */</doc>
