<dec f='qtbase-6.5.0/src/corelib/global/qsysinfo.h' l='40' type='static QString QSysInfo::buildAbi()'/>
<def f='qtbase-6.5.0/src/corelib/global/qsysinfo.cpp' l='657' ll='664' type='static QString QSysInfo::buildAbi()'/>
<doc f='qtbase-6.5.0/src/corelib/global/qsysinfo.cpp' l='623'>/*!
    \since 5.4

    Returns the full architecture string that Qt was compiled for. This string
    is useful for identifying different, incompatible builds. For example, it
    can be used as an identifier to request an upgrade package from a server.

    The values returned from this function are kept stable as follows: the
    mandatory components of the result will not change in future versions of
    Qt, but optional suffixes may be added.

    The returned value is composed of three or more parts, separated by dashes
    (&quot;-&quot;). They are:

    \table
    \header \li Component           \li Value
    \row    \li CPU Architecture    \li The same as QSysInfo::buildCpuArchitecture(), such as &quot;arm&quot;, &quot;i386&quot;, &quot;mips&quot; or &quot;x86_64&quot;
    \row    \li Endianness          \li &quot;little_endian&quot; or &quot;big_endian&quot;
    \row    \li Word size           \li Whether it&apos;s a 32- or 64-bit application. Possible values are:
                                        &quot;llp64&quot; (Windows 64-bit), &quot;lp64&quot; (Unix 64-bit), &quot;ilp32&quot; (32-bit)
    \row    \li (Optional) ABI      \li Zero or more components identifying different ABIs possible in this architecture.
                                        Currently, Qt has optional ABI components for ARM and MIPS processors: one
                                        component is the main ABI (such as &quot;eabi&quot;, &quot;o32&quot;, &quot;n32&quot;, &quot;o64&quot;); another is
                                        whether the calling convention is using hardware floating point registers (&quot;hardfloat&quot;
                                        is present).

                                        Additionally, if Qt was configured with \c{-qreal float}, the ABI option tag &quot;qreal_float&quot;
                                        will be present. If Qt was configured with another type as qreal, that type is present after
                                        &quot;qreal_&quot;, with all characters other than letters and digits escaped by an underscore, followed
                                        by two hex digits. For example, \c{-qreal long double} becomes &quot;qreal_long_20double&quot;.
    \endtable

    \sa QSysInfo::buildCpuArchitecture()
*/</doc>
<use f='qtbase-6.5.0/src/gui/opengl/qopenglprogrambinarycache.cpp' l='86' u='c' c='_ZN25QOpenGLProgramBinaryCacheC1Ev'/>
