<dec f='qtbase-6.5.0/src/corelib/text/qstring.h' l='769' type='QStringList QString::split(const QRegularExpression &amp; sep, Qt::SplitBehavior behavior = Qt::KeepEmptyParts) const'/>
<use f='qtbase-6.5.0/qmake/generators/win32/msvc_objectmodel.cpp' l='305' u='c' c='_ZN10VCToolBase14fixCommandLineERK7QString'/>
<def f='qtbase-6.5.0/src/corelib/text/qstring.cpp' l='7879' ll='7890' type='QStringList QString::split(const QRegularExpression &amp; re, Qt::SplitBehavior behavior = Qt::KeepEmptyParts) const'/>
<doc f='qtbase-6.5.0/src/corelib/text/qstring.cpp' l='7852'>/*!
    \overload
    \since 5.14

    Splits the string into substrings wherever the regular expression
    \a re matches, and returns the list of those strings. If \a re
    does not match anywhere in the string, split() returns a
    single-element list containing this string.

    Here is an example where we extract the words in a sentence
    using one or more whitespace characters as the separator:

    \snippet qstring/main.cpp 90

    Here is a similar example, but this time we use any sequence of
    non-word characters as the separator:

    \snippet qstring/main.cpp 91

    Here is a third example where we use a zero-length assertion,
    \b{\\b} (word boundary), to split the string into an
    alternating sequence of non-word and word tokens:

    \snippet qstring/main.cpp 92

    \sa QStringList::join(), section()
*/</doc>
