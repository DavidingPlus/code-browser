<dec f='qtbase-6.5.0/src/gui/util/qvalidator.h' l='66' type='QValidator::State QIntValidator::validate(QString &amp; , int &amp; ) const'/>
<inh f='qtbase-6.5.0/src/gui/util/qvalidator.h' l='40' c='_ZNK10QValidator8validateER7QStringRi'/>
<def f='qtbase-6.5.0/src/gui/util/qvalidator.cpp' l='365' ll='412' type='QValidator::State QIntValidator::validate(QString &amp; input, int &amp; ) const'/>
<doc f='qtbase-6.5.0/src/gui/util/qvalidator.cpp' l='326'>/*!
    \fn QValidator::State QIntValidator::validate(QString &amp;input, int &amp;pos) const

    Returns \l Acceptable if the \a input is an integer within the
    valid range. If \a input has at most as many digits as the top of the range,
    or is a prefix of an integer in the valid range, returns \l Intermediate.
    Otherwise, returns \l Invalid.

    If the valid range consists of just positive integers (e.g., 32 to 100) and
    \a input is a negative integer, then Invalid is returned. (On the other
    hand, if the range consists of negative integers (e.g., -100 to -32) and \a
    input is a positive integer without leading plus sign, then Intermediate is
    returned, because the user might be just about to type the minus (especially
    for right-to-left languages).

    Similarly, if the valid range is between 46 and 53, then 41 and 59 will be
    evaluated as \l Intermediate, as otherwise the user wouldn&apos;t be able to
    change a value from 49 to 51.

    \snippet code/src_gui_util_qvalidator.cpp 2

    By default, the \a pos parameter is not used by this validator.
*/</doc>
