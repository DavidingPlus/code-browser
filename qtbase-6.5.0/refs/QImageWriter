<use f='qtbase-6.5.0/src/gui/image/qpixmap.h' l='128' c='_ZNK7QPixmap9doImageIOEP12QImageWriteri'/>
<def f='qtbase-6.5.0/src/gui/image/qimagewriter.h' l='20' ll='81'/>
<use f='qtbase-6.5.0/src/gui/image/qimagewriter.h' l='79' c='_ZN12QImageWriterC1ERKS_'/>
<use f='qtbase-6.5.0/src/gui/image/qimagewriter.h' l='79' c='_ZN12QImageWriteraSERKS_'/>
<use f='qtbase-6.5.0/src/gui/image/qimagewriter.h' l='79' c='_ZN12QImageWriteraSERKS_'/>
<size>8</size>
<fun r='_ZN12QImageWriter2trEPKcS1_i'/>
<fun r='_ZN12QImageWriterC1Ev'/>
<fun r='_ZN12QImageWriterC1EP9QIODeviceRK10QByteArray'/>
<fun r='_ZN12QImageWriterC1ERK7QStringRK10QByteArray'/>
<fun r='_ZN12QImageWriterD1Ev'/>
<fun r='_ZN12QImageWriter9setFormatERK10QByteArray'/>
<fun r='_ZNK12QImageWriter6formatEv'/>
<fun r='_ZN12QImageWriter9setDeviceEP9QIODevice'/>
<fun r='_ZNK12QImageWriter6deviceEv'/>
<fun r='_ZN12QImageWriter11setFileNameERK7QString'/>
<fun r='_ZNK12QImageWriter8fileNameEv'/>
<fun r='_ZN12QImageWriter10setQualityEi'/>
<fun r='_ZNK12QImageWriter7qualityEv'/>
<fun r='_ZN12QImageWriter14setCompressionEi'/>
<fun r='_ZNK12QImageWriter11compressionEv'/>
<fun r='_ZN12QImageWriter10setSubTypeERK10QByteArray'/>
<fun r='_ZNK12QImageWriter7subTypeEv'/>
<fun r='_ZNK12QImageWriter17supportedSubTypesEv'/>
<fun r='_ZN12QImageWriter17setOptimizedWriteEb'/>
<fun r='_ZNK12QImageWriter14optimizedWriteEv'/>
<fun r='_ZN12QImageWriter23setProgressiveScanWriteEb'/>
<fun r='_ZNK12QImageWriter20progressiveScanWriteEv'/>
<fun r='_ZNK12QImageWriter14transformationEv'/>
<fun r='_ZN12QImageWriter17setTransformationE6QFlagsIN15QImageIOHandler14TransformationEE'/>
<fun r='_ZN12QImageWriter7setTextERK7QStringS2_'/>
<fun r='_ZNK12QImageWriter8canWriteEv'/>
<fun r='_ZN12QImageWriter5writeERK6QImage'/>
<fun r='_ZNK12QImageWriter5errorEv'/>
<fun r='_ZNK12QImageWriter11errorStringEv'/>
<fun r='_ZNK12QImageWriter14supportsOptionEN15QImageIOHandler11ImageOptionE'/>
<fun r='_ZN12QImageWriter21supportedImageFormatsEv'/>
<fun r='_ZN12QImageWriter18supportedMimeTypesEv'/>
<fun r='_ZN12QImageWriter23imageFormatsForMimeTypeERK10QByteArray'/>
<fun r='_ZN12QImageWriterC1ERKS_'/>
<mbr r='QImageWriter::d' o='0' t='QImageWriterPrivate *'/>
<use f='qtbase-6.5.0/src/gui/image/qimage_p.h' l='72' c='_ZNK10QImageData9doImageIOEPK6QImageP12QImageWriteri'/>
<use f='qtbase-6.5.0/src/gui/image/qimage.cpp' l='3874' c='_ZNK6QImage4saveERK7QStringPKci'/>
<use f='qtbase-6.5.0/src/gui/image/qimage.cpp' l='3893' c='_ZNK6QImage4saveEP9QIODevicePKci'/>
<use f='qtbase-6.5.0/src/gui/image/qimage.cpp' l='3900' c='_ZNK10QImageData9doImageIOEPK6QImageP12QImageWriteri'/>
<use f='qtbase-6.5.0/src/gui/image/qimage.cpp' l='3935' c='_ZlsR11QDataStreamRK6QImage'/>
<size>8</size>
<use f='qtbase-6.5.0/src/gui/image/qimagewriter.cpp' l='204' c='_ZN19QImageWriterPrivateC1EP12QImageWriter'/>
<use f='qtbase-6.5.0/src/gui/image/qimagewriter.cpp' l='229'/>
<use f='qtbase-6.5.0/src/gui/image/qimagewriter.cpp' l='235' c='_ZN19QImageWriterPrivateC1EP12QImageWriter'/>
<use f='qtbase-6.5.0/src/gui/image/qimagewriter.cpp' l='307' c='_ZN12QImageWriterC1ERK7QStringRK10QByteArray'/>
<size>8</size>
<doc f='qtbase-6.5.0/src/gui/image/qimagewriter.cpp' l='4'>/*!
    \class QImageWriter
    \brief The QImageWriter class provides a format independent interface
    for writing images to files or other devices.

    \inmodule QtGui
    \reentrant
    \ingroup painting

    QImageWriter supports setting format specific options, such as
    compression level and quality, prior to storing the
    image. If you do not need such options, you can use QImage::save()
    or QPixmap::save() instead.

    To store an image, you start by constructing a QImageWriter
    object.  Pass either a file name or a device pointer, and the
    image format to QImageWriter&apos;s constructor. You can then set
    several options, such as quality (by calling setQuality()).
    canWrite() returns \c true if QImageWriter can write the image
    (i.e., the image format is supported and the device is open for
    writing). Call write() to write the image to the device.

    If any error occurs when writing the image, write() will return
    false. You can then call error() to find the type of error that
    occurred, or errorString() to get a human readable description of
    what went wrong.

    Call supportedImageFormats() for a list of formats that
    QImageWriter can write. QImageWriter supports all built-in image
    formats, in addition to any image format plugins that support
    writing.

    \note QImageWriter assumes exclusive control over the file or
    device that is assigned. Any attempts to modify the assigned file
    or device during the lifetime of the QImageWriter object will
    yield undefined results. If immediate access to a resource is
    desired, the use of a scope is the recommended method.

    For example:

    \snippet qimagewriter/main.cpp 0

    \sa QImageReader, QImageIOHandler, QImageIOPlugin, QColorSpace
*/</doc>
<fun r='_ZN12QImageWriterC1Ev'/>
<fun r='_ZN12QImageWriterC1EP9QIODeviceRK10QByteArray'/>
<fun r='_ZN12QImageWriterC1ERK7QStringRK10QByteArray'/>
<fun r='_ZN12QImageWriterD1Ev'/>
<fun r='_ZN12QImageWriter9setFormatERK10QByteArray'/>
<fun r='_ZNK12QImageWriter6formatEv'/>
<fun r='_ZN12QImageWriter9setDeviceEP9QIODevice'/>
<fun r='_ZNK12QImageWriter6deviceEv'/>
<fun r='_ZN12QImageWriter11setFileNameERK7QString'/>
<fun r='_ZNK12QImageWriter8fileNameEv'/>
<fun r='_ZN12QImageWriter10setQualityEi'/>
<fun r='_ZNK12QImageWriter7qualityEv'/>
<fun r='_ZN12QImageWriter14setCompressionEi'/>
<fun r='_ZNK12QImageWriter11compressionEv'/>
<fun r='_ZN12QImageWriter10setSubTypeERK10QByteArray'/>
<fun r='_ZNK12QImageWriter7subTypeEv'/>
<fun r='_ZNK12QImageWriter17supportedSubTypesEv'/>
<fun r='_ZN12QImageWriter17setOptimizedWriteEb'/>
<fun r='_ZNK12QImageWriter14optimizedWriteEv'/>
<fun r='_ZN12QImageWriter23setProgressiveScanWriteEb'/>
<fun r='_ZNK12QImageWriter20progressiveScanWriteEv'/>
<fun r='_ZN12QImageWriter17setTransformationE6QFlagsIN15QImageIOHandler14TransformationEE'/>
<fun r='_ZNK12QImageWriter14transformationEv'/>
<fun r='_ZN12QImageWriter7setTextERK7QStringS2_'/>
<fun r='_ZNK12QImageWriter8canWriteEv'/>
<fun r='_ZN12QImageWriter5writeERK6QImage'/>
<fun r='_ZNK12QImageWriter5errorEv'/>
<fun r='_ZNK12QImageWriter11errorStringEv'/>
<fun r='_ZNK12QImageWriter14supportsOptionEN15QImageIOHandler11ImageOptionE'/>
<fun r='_ZN12QImageWriter21supportedImageFormatsEv'/>
<fun r='_ZN12QImageWriter18supportedMimeTypesEv'/>
<fun r='_ZN12QImageWriter23imageFormatsForMimeTypeERK10QByteArray'/>
<use f='qtbase-6.5.0/src/gui/image/qpixmap.cpp' l='811' c='_ZNK7QPixmap4saveERK7QStringPKci'/>
<use f='qtbase-6.5.0/src/gui/image/qpixmap.cpp' l='829' c='_ZNK7QPixmap4saveEP9QIODevicePKci'/>
<use f='qtbase-6.5.0/src/gui/image/qpixmap.cpp' l='835' c='_ZNK7QPixmap9doImageIOEP12QImageWriteri'/>
<size>8</size>
<use f='qtbase-6.5.0/src/gui/painting/qpdf.cpp' l='2911' c='_ZN17QPdfEnginePrivate8addImageERK6QImagePbbx'/>
<size>8</size>
<use f='qtbase-6.5.0/src/gui/text/qtextodfwriter.cpp' l='449' c='_ZNK14QTextOdfWriter20writeInlineCharacterER16QXmlStreamWriterRK13QTextFragment'/>
<use f='qtbase-6.5.0/src/gui/text/qtextodfwriter.cpp' l='456' c='_ZNK14QTextOdfWriter20writeInlineCharacterER16QXmlStreamWriterRK13QTextFragment'/>
<size>8</size>
