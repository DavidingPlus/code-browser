<dec f='qtbase-6.5.0/src/widgets/widgets/qcheckbox.h' l='36' type='void QCheckBox::setCheckState(Qt::CheckState state)'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qerrormessage.cpp' l='68' u='c' c='_ZN20QErrorMessagePrivate10initHelperEP21QPlatformDialogHelper'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qmessagebox.cpp' l='2690' u='c' c='_ZN18QMessageBoxPrivate10initHelperEP21QPlatformDialogHelper'/>
<def f='qtbase-6.5.0/src/widgets/widgets/qcheckbox.cpp' l='211' ll='240' type='void QCheckBox::setCheckState(Qt::CheckState state)'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qcheckbox.cpp' l='335' u='c' c='_ZN9QCheckBox14nextCheckStateEv'/>
<doc f='qtbase-6.5.0/src/widgets/widgets/qcheckbox.cpp' l='204'>/*!
    Sets the checkbox&apos;s check state to \a state. If you do not need tristate
    support, you can also use \l QAbstractButton::setChecked(), which takes a
    boolean.

    \sa checkState(), Qt::CheckState
*/</doc>
