<def f='qtbase-6.5.0/src/3rdparty/harfbuzz-ng/src/hb-buffer.h' l='62' ll='72'/>
<use f='qtbase-6.5.0/src/3rdparty/harfbuzz-ng/src/hb-buffer.h' l='62'/>
<size>20</size>
<doc f='qtbase-6.5.0/src/3rdparty/harfbuzz-ng/src/hb-buffer.h' l='43'>/**
 * hb_glyph_info_t:
 * @codepoint: either a Unicode code point (before shaping) or a glyph index
 *             (after shaping).
 * @cluster: the index of the character in the original text that corresponds
 *           to this #hb_glyph_info_t, or whatever the client passes to
 *           hb_buffer_add(). More than one #hb_glyph_info_t can have the same
 *           @cluster value, if they resulted from the same character (e.g. one
 *           to many glyph substitution), and when more than one character gets
 *           merged in the same glyph (e.g. many to one glyph substitution) the
 *           #hb_glyph_info_t will have the smallest cluster value of them.
 *           By default some characters are merged into the same cluster
 *           (e.g. combining marks have the same cluster as their bases)
 *           even if they are separate glyphs, hb_buffer_set_cluster_level()
 *           allow selecting more fine-grained cluster handling.
 *
 * The #hb_glyph_info_t is the structure that holds information about the
 * glyphs and their relation to input text.
 */</doc>
<mbr r='hb_glyph_info_t::codepoint' o='0' t='hb_codepoint_t'/>
<mbr r='hb_glyph_info_t::mask' o='32' t='hb_mask_t'/>
<mbr r='hb_glyph_info_t::cluster' o='64' t='uint32_t'/>
<mbr r='hb_glyph_info_t::var1' o='96' t='hb_var_int_t'/>
<mbr r='hb_glyph_info_t::var2' o='128' t='hb_var_int_t'/>
