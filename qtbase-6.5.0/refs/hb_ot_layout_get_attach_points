<dec f='qtbase-6.5.0/src/3rdparty/harfbuzz-ng/src/hb-ot-layout.h' l='168' type='unsigned int hb_ot_layout_get_attach_points(hb_face_t * face, hb_codepoint_t glyph, unsigned int start_offset, unsigned int * point_count, unsigned int * point_array)'/>
<doc f='qtbase-6.5.0/src/3rdparty/harfbuzz-ng/src/hb-ot-layout.h' l='165'>/* Not that useful.  Provides list of attach points for a glyph that a
 * client may want to cache */</doc>
<def f='qtbase-6.5.0/src/3rdparty/harfbuzz-ng/src/hb-ot-layout.cc' l='341' ll='352' type='unsigned int hb_ot_layout_get_attach_points(hb_face_t * face, hb_codepoint_t glyph, unsigned int start_offset, unsigned int * point_count, unsigned int * point_array)'/>
<doc f='qtbase-6.5.0/src/3rdparty/harfbuzz-ng/src/hb-ot-layout.cc' l='324'>/**
 * hb_ot_layout_get_attach_points:
 * @face: The #hb_face_t to work on
 * @glyph: The #hb_codepoint_t code point to query
 * @start_offset: offset of the first attachment point to retrieve
 * @point_count: (inout) (optional): Input = the maximum number of attachment points to return;
 *               Output = the actual number of attachment points returned (may be zero)
 * @point_array: (out) (array length=point_count): The array of attachment points found for the query
 *
 * Fetches a list of all attachment points for the specified glyph in the GDEF
 * table of the face. The list returned will begin at the offset provided.
 *
 * Useful if the client program wishes to cache the list.
 *
 * Return value: Total number of attachment points for @glyph.
 *
 **/</doc>
