<dec f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='6473' type='int sqlite3_collation_needed(sqlite3 * , void * , void (*)(void *, sqlite3 *, int, const char *) )'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='132893'/>
<def f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='177616' ll='177630' type='int sqlite3_collation_needed(sqlite3 * db, void * pCollNeededArg, void (*)(void *, sqlite3 *, int, const char *) xCollNeeded)'/>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='6446'>/*
** CAPI3REF: Collation Needed Callbacks
** METHOD: sqlite3
**
** ^To avoid having to register all collation sequences before a database
** can be used, a single callback function may be registered with the
** [database connection] to be invoked whenever an undefined collation
** sequence is required.
**
** ^If the function is registered using the sqlite3_collation_needed() API,
** then it is passed the names of undefined collation sequences as strings
** encoded in UTF-8. ^If sqlite3_collation_needed16() is used,
** the names are passed as UTF-16 in machine native byte order.
** ^A call to either function replaces the existing collation-needed callback.
**
** ^(When the callback is invoked, the first argument passed is a copy
** of the second argument to sqlite3_collation_needed() or
** sqlite3_collation_needed16().  The second argument is the database
** connection.  The third argument is one of [SQLITE_UTF8], [SQLITE_UTF16BE],
** or [SQLITE_UTF16LE], indicating the most desirable form of the collation
** sequence function required.  The fourth parameter is the name of the
** required collation sequence.)^
**
** The callback function should register the desired collation using
** [sqlite3_create_collation()], [sqlite3_create_collation16()], or
** [sqlite3_create_collation_v2()].
*/</doc>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='177612'>/*
** Register a collation sequence factory callback with the database handle
** db. Replace any previously installed collation sequence factory.
*/</doc>
<dec f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='6167' type='int sqlite3_collation_needed(sqlite3 * , void * , void (*)(void *, sqlite3 *, int, const char *) )'/>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='6140'>/*
** CAPI3REF: Collation Needed Callbacks
** METHOD: sqlite3
**
** ^To avoid having to register all collation sequences before a database
** can be used, a single callback function may be registered with the
** [database connection] to be invoked whenever an undefined collation
** sequence is required.
**
** ^If the function is registered using the sqlite3_collation_needed() API,
** then it is passed the names of undefined collation sequences as strings
** encoded in UTF-8. ^If sqlite3_collation_needed16() is used,
** the names are passed as UTF-16 in machine native byte order.
** ^A call to either function replaces the existing collation-needed callback.
**
** ^(When the callback is invoked, the first argument passed is a copy
** of the second argument to sqlite3_collation_needed() or
** sqlite3_collation_needed16().  The second argument is the database
** connection.  The third argument is one of [SQLITE_UTF8], [SQLITE_UTF16BE],
** or [SQLITE_UTF16LE], indicating the most desirable form of the collation
** sequence function required.  The fourth parameter is the name of the
** required collation sequence.)^
**
** The callback function should register the desired collation using
** [sqlite3_create_collation()], [sqlite3_create_collation16()], or
** [sqlite3_create_collation_v2()].
*/</doc>
