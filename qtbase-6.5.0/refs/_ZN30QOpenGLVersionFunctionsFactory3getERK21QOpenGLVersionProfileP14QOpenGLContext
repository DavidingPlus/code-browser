<dec f='qtbase-6.5.0/src/opengl/qopenglversionfunctionsfactory.h' l='28' type='static QAbstractOpenGLFunctions * QOpenGLVersionFunctionsFactory::get(const QOpenGLVersionProfile &amp; versionProfile = QOpenGLVersionProfile(), QOpenGLContext * context = nullptr)'/>
<use f='qtbase-6.5.0/src/opengl/qopenglversionfunctionsfactory.h' l='33' u='c' c='_ZN30QOpenGLVersionFunctionsFactory3getEP14QOpenGLContext'/>
<def f='qtbase-6.5.0/src/opengl/qopenglversionfunctionsfactory.cpp' l='197' ll='251' type='static QAbstractOpenGLFunctions * QOpenGLVersionFunctionsFactory::get(const QOpenGLVersionProfile &amp; versionProfile = QOpenGLVersionProfile(), QOpenGLContext * context = nullptr)'/>
<doc f='qtbase-6.5.0/src/opengl/qopenglversionfunctionsfactory.cpp' l='185'>/*!
    Returns a pointer to an object that provides access to all functions for the
    \a versionProfile of the \a context. There is no need to call
    QAbstractOpenGLFunctions::initializeOpenGLFunctions() as long as the \a context
    is current. It is also possible to call this function when the \a context is not
    current, but in that case it is the caller&apos;s responsibility to ensure proper
    initialization by calling QAbstractOpenGLFunctions::initializeOpenGLFunctions()
    afterwards.

    Usually one would use the template version of this function to automatically
    have the result cast to the correct type.
*/</doc>
