<dec f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicswidget.h' l='101' type='Qt::FocusPolicy QGraphicsWidget::focusPolicy() const'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicswidget.h' l='100'>// Focus handling</doc>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsscene.cpp' l='768' u='c' c='_ZN21QGraphicsScenePrivate20setActivePanelHelperEP13QGraphicsItemb'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsscene.cpp' l='1354' u='c' c='_ZN21QGraphicsScenePrivate22mousePressEventHandlerEP24QGraphicsSceneMouseEvent'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsscene.cpp' l='4093' u='c' c='_ZN14QGraphicsScene10wheelEventEP24QGraphicsSceneWheelEvent'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsscene.cpp' l='5350' u='c' c='_ZN14QGraphicsScene18focusNextPrevChildEb'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsscene.cpp' l='5382' u='c' c='_ZN14QGraphicsScene18focusNextPrevChildEb'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsscene.cpp' l='5976' u='c' c='_ZN21QGraphicsScenePrivate19sendTouchBeginEventEP13QGraphicsItemP11QTouchEvent'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicswidget.cpp' l='1494' u='c' c='_ZN15QGraphicsWidget12focusInEventEP11QFocusEvent'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicswidget.cpp' l='1542' u='c' c='_ZN15QGraphicsWidget13focusOutEventEP11QFocusEvent'/>
<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicswidget.cpp' l='1813' ll='1817' type='Qt::FocusPolicy QGraphicsWidget::focusPolicy() const'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicswidget.cpp' l='1793'>/*!
    \property QGraphicsWidget::focusPolicy
    \brief the way the widget accepts keyboard focus

    The focus policy is Qt::TabFocus if the widget accepts keyboard focus by
    tabbing, Qt::ClickFocus if the widget accepts focus by clicking,
    Qt::StrongFocus if it accepts both, and Qt::NoFocus (the default) if it
    does not accept focus at all.

    You must enable keyboard focus for a widget if it processes keyboard
    events. This is normally done from the widget&apos;s constructor. For instance,
    the QLineEdit constructor calls setFocusPolicy(Qt::StrongFocus).

    If you enable a focus policy (i.e., not Qt::NoFocus), QGraphicsWidget will
    automatically enable the ItemIsFocusable flag.  Setting Qt::NoFocus on a
    widget will clear the ItemIsFocusable flag. If the widget currently has
    keyboard focus, the widget will automatically lose focus.

    \sa focusInEvent(), focusOutEvent(), keyPressEvent(), keyReleaseEvent(), enabled
*/</doc>
