<dec f='qtbase-6.5.0/src/testlib/qtestcase.h' l='404' type='void QTest::failOnWarning(const QRegularExpression &amp; messagePattern)'/>
<def f='qtbase-6.5.0/src/testlib/qtestcase.cpp' l='2644' ll='2647' type='void QTest::failOnWarning(const QRegularExpression &amp; messagePattern)'/>
<doc f='qtbase-6.5.0/src/testlib/qtestcase.cpp' l='2602'>/*!
    \since 6.3

    Appends a test failure to the test log for each warning that matches
    \a messagePattern.

    The test function will continue execution when a failure is added. To abort
    the test instead, you can check \l currentTestFailed() and return early if
    it&apos;s \c true.

    For each warning, the first pattern that matches will cause a failure,
    and the remaining patterns will be ignored.

    All patterns are cleared at the end of each test function.

    \code
    void FileTest::loadFiles()
    {
        QTest::failOnWarning(QRegularExpression(&quot;^Failed to load&quot;));

        // Each of these will cause a test failure:
        qWarning() &lt;&lt; &quot;Failed to load image&quot;;
        qWarning() &lt;&lt; &quot;Failed to load video&quot;;
    }
    \endcode

    To fail every test that triggers a given warning, pass a suitable regular
    expression to this function in \l {Creating a Test}{init()}:

    \code
    void FileTest::init()
    {
        QTest::failOnWarning(QRegularExpression(&quot;.?&quot;));
    }
    \endcode

    \note \l ignoreMessage() takes precedence over this function, so any
    warnings that match a pattern given to both \c ignoreMessage() and
    \c failOnWarning() will be ignored.

    \sa {Qt Test Environment Variables}{QTEST_FATAL_FAIL}
*/</doc>
