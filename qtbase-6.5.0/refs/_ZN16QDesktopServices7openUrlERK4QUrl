<dec f='qtbase-6.5.0/src/gui/util/qdesktopservices.h' l='21' type='static bool QDesktopServices::openUrl(const QUrl &amp; url)'/>
<def f='qtbase-6.5.0/src/gui/util/qdesktopservices.cpp' l='167' ll='206' type='static bool QDesktopServices::openUrl(const QUrl &amp; url)'/>
<doc f='qtbase-6.5.0/src/gui/util/qdesktopservices.cpp' l='127'>/*!
    Opens the given \a url in the appropriate Web browser for the user&apos;s desktop
    environment, and returns \c true if successful; otherwise returns \c false.

    If the URL is a reference to a local file (i.e., the URL scheme is &quot;file&quot;) then
    it will be opened with a suitable application instead of a Web browser.

    The following example opens a file on the Windows file system residing on a path
    that contains spaces:

    \snippet code/src_gui_util_qdesktopservices.cpp 2

    If a \c mailto URL is specified, the user&apos;s e-mail client will be used to open a
    composer window containing the options specified in the URL, similar to the way
    \c mailto links are handled by a Web browser.

    For example, the following URL contains a recipient (\c{user@foo.com}), a
    subject (\c{Test}), and a message body (\c{Just a test}):

    \snippet code/src_gui_util_qdesktopservices.cpp 1

    \warning Although many e-mail clients can send attachments and are
    Unicode-aware, the user may have configured their client without these features.
    Also, certain e-mail clients (e.g., Lotus Notes) have problems with long URLs.

    \warning A return value of \c true indicates that the application has successfully requested
    the operating system to open the URL in an external application. The external application may
    still fail to launch or fail to open the requested URL. This result will not be reported back
    to the application.

    \warning URLs passed to this function on iOS will not load unless their schemes are
    listed in the \c LSApplicationQueriesSchemes key of the application&apos;s Info.plist file.
    For more information, see the Apple Developer Documentation for
    \l {iOS: canOpenURL:}{canOpenURL:}.
    For example, the following lines enable URLs with the HTTPS scheme:

    \snippet code/src_gui_util_qdesktopservices.cpp 3

    \sa setUrlHandler()
*/</doc>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextbrowser.cpp' l='221' u='c' c='_ZN19QTextBrowserPrivate17_q_activateAnchorERK7QString'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qwidgettextcontrol.cpp' l='2950' u='c' c='_ZN25QWidgetTextControlPrivate23activateLinkUnderCursorE7QString'/>
