<dec f='qtbase-6.5.0/src/corelib/io/qiodevice.h' l='93' type='QByteArray QIODevice::peek(qint64 maxlen)'/>
<def f='qtbase-6.5.0/src/corelib/io/qiodevice.cpp' l='1909' ll='1918' type='QByteArray QIODevice::peek(qint64 maxSize)'/>
<doc f='qtbase-6.5.0/src/corelib/io/qiodevice.cpp' l='1892'>/*!
    \since 4.1
    \overload

    Peeks at most \a maxSize bytes from the device, returning the data peeked
    as a QByteArray.

    Example:

    \snippet code/src_corelib_io_qiodevice.cpp 5

    This function has no way of reporting errors; returning an empty
    QByteArray can mean either that no data was currently available
    for peeking, or that an error occurred.

    \sa read()
*/</doc>
<use f='qtbase-6.5.0/src/corelib/mimetypes/qmimedatabase.cpp' l='374' u='c' c='_ZN20QMimeDatabasePrivate26mimeTypeForFileNameAndDataERK7QStringP9QIODevice'/>
<use f='qtbase-6.5.0/src/corelib/mimetypes/qmimedatabase.cpp' l='437' u='c' c='_ZN20QMimeDatabasePrivate15mimeTypeForDataEP9QIODevice'/>
<use f='qtbase-6.5.0/src/gui/image/qpnghandler.cpp' l='1180' u='c' c='_ZN11QPngHandler7canReadEP9QIODevice'/>
<use f='qtbase-6.5.0/src/gui/util/qtexturefilereader.cpp' l='40' u='c' c='_ZN18QTextureFileReader7canReadEv'/>
