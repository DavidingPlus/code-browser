<dec f='qtbase-6.5.0/src/gui/util/qvalidator.h' l='106' type='QValidator::State QDoubleValidator::validate(QString &amp; , int &amp; ) const'/>
<inh f='qtbase-6.5.0/src/gui/util/qvalidator.h' l='40' c='_ZNK10QValidator8validateER7QStringRi'/>
<def f='qtbase-6.5.0/src/gui/util/qvalidator.cpp' l='629' ll='644' type='QValidator::State QDoubleValidator::validate(QString &amp; input, int &amp; ) const'/>
<doc f='qtbase-6.5.0/src/gui/util/qvalidator.cpp' l='603'>/*!
    \fn QValidator::State QDoubleValidator::validate(QString &amp;input, int &amp;pos) const

    Returns \l Acceptable if the string \a input is in the correct format and
    contains a double within the valid range.

    Returns \l Intermediate if \a input is in the wrong format or contains a
    double outside the range.

    Returns \l Invalid if the \a input doesn&apos;t represent a double or has too
    many digits after the decimal point.

    Note: If the valid range consists of just positive doubles (e.g. 0.0 to 100.0)
    and \a input is a negative double then \l Invalid is returned. If notation()
    is set to StandardNotation, and the input contains more digits before the
    decimal point than a double in the valid range may have, \l Invalid is returned.
    If notation() is ScientificNotation, and the input is not in the valid range,
    \l Intermediate is returned. The value may yet become valid by changing the exponent.

    By default, the \a pos parameter is not used by this validator.
*/</doc>
<ovr f='qtbase-6.5.0/src/printsupport/dialogs/qprintpreviewdialog.cpp' l='60' c='_ZNK12_GLOBAL__N_119ZoomFactorValidator8validateER7QStringRi'/>
<use f='qtbase-6.5.0/src/printsupport/dialogs/qprintpreviewdialog.cpp' l='67' u='c' c='_ZNK12_GLOBAL__N_119ZoomFactorValidator8validateER7QStringRi'/>
