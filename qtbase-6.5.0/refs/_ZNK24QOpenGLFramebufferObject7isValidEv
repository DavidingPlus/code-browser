<dec f='qtbase-6.5.0/src/opengl/qopenglframebufferobject.h' l='58' type='bool QOpenGLFramebufferObject::isValid() const'/>
<def f='qtbase-6.5.0/src/opengl/qopenglframebufferobject.cpp' l='1108' ll='1112' type='bool QOpenGLFramebufferObject::isValid() const'/>
<use f='qtbase-6.5.0/src/opengl/qopenglframebufferobject.cpp' l='1129' u='c' c='_ZN24QOpenGLFramebufferObject4bindEv'/>
<use f='qtbase-6.5.0/src/opengl/qopenglframebufferobject.cpp' l='1167' u='c' c='_ZN24QOpenGLFramebufferObject7releaseEv'/>
<use f='qtbase-6.5.0/src/opengl/qopenglframebufferobject.cpp' l='1279' u='c' c='_ZN24QOpenGLFramebufferObject11takeTextureEi'/>
<use f='qtbase-6.5.0/src/opengl/qopenglframebufferobject.cpp' l='1629' u='c' c='_ZN24QOpenGLFramebufferObject13setAttachmentENS_10AttachmentE'/>
<doc f='qtbase-6.5.0/src/opengl/qopenglframebufferobject.cpp' l='1090'>/*!
    \fn bool QOpenGLFramebufferObject::isValid() const

    Returns \c true if the framebuffer object is valid.

    The framebuffer can become invalid if the initialization process
    fails, the user attaches an invalid buffer to the framebuffer
    object, or a non-power of two width/height is specified as the
    texture size if the texture target is \c{GL_TEXTURE_2D}.
    The non-power of two limitation does not apply if the OpenGL version
    is 2.0 or higher, or if the GL_ARB_texture_non_power_of_two extension
    is present.

    The framebuffer can also become invalid if the QOpenGLContext that
    the framebuffer was created within is destroyed and there are
    no other shared contexts that can take over ownership of the
    framebuffer.
*/</doc>
