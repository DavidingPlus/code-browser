<def f='qtbase-6.5.0/src/corelib/thread/qrunnable.h' l='25' type='void QRunnable::setAutoDelete(bool autoDelete)'/>
<use f='qtbase-6.5.0/src/concurrent/qtconcurrentthreadengine.cpp' l='136' u='c' c='_ZN12QtConcurrent16ThreadEngineBaseC1EP11QThreadPool'/>
<doc f='qtbase-6.5.0/src/corelib/thread/qrunnable.cpp' l='64'>/*! \fn bool QRunnable::setAutoDelete(bool autoDelete)

    Enables auto-deletion if \a autoDelete is true; otherwise
    auto-deletion is disabled.

    If auto-deletion is enabled, QThreadPool will automatically delete
    this runnable after calling run(); otherwise, ownership remains
    with the application programmer.

    Note that this flag must be set before calling
    QThreadPool::start(). Calling this function after
    QThreadPool::start() results in undefined behavior.

    \sa autoDelete(), QThreadPool
*/</doc>
<use f='qtbase-6.5.0/src/network/kernel/qhostinfo.cpp' l='825' u='c' c='_ZN17QHostInfoRunnableC1ERK7QStringiPK7QObjectPN9QtPrivate15QSlotObjectBaseE'/>
