<dec f='qtbase-6.5.0/src/corelib/thread/qthread.h' l='61' type='bool QThread::isInterruptionRequested() const'/>
<def f='qtbase-6.5.0/src/corelib/thread/qthread.cpp' l='1161' ll='1170' type='bool QThread::isInterruptionRequested() const'/>
<doc f='qtbase-6.5.0/src/corelib/thread/qthread.cpp' l='1135'>/*!
    \since 5.2

    Return true if the task running on this thread should be stopped.
    An interruption can be requested by requestInterruption().

    This function can be used to make long running tasks cleanly interruptible.
    Never checking or acting on the value returned by this function is safe,
    however it is advisable do so regularly in long running functions.
    Take care not to call it too often, to keep the overhead low.

    \code
    void long_task() {
         forever {
            if ( QThread::currentThread()-&gt;isInterruptionRequested() ) {
                return;
            }
        }
    }
    \endcode

    \note This can only be called within the thread itself, i.e. when
    it is the current thread.

    \sa currentThread() requestInterruption()
*/</doc>
