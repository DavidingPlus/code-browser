<dec f='qtbase-6.5.0/src/3rdparty/double-conversion/double-conversion/double-to-string.h' l='294' type='bool double_conversion::DoubleToStringConverter::ToExponential(double value, int requested_digits, double_conversion::StringBuilder * result_builder) const'/>
<def f='qtbase-6.5.0/src/3rdparty/double-conversion/double-conversion/double-to-string.cc' l='241' ll='293' type='bool double_conversion::DoubleToStringConverter::ToExponential(double value, int requested_digits, double_conversion::StringBuilder * result_builder) const'/>
<doc f='qtbase-6.5.0/src/3rdparty/double-conversion/double-conversion/double-to-string.h' l='264'>// Computes a representation in exponential format with requested_digits
  // after the decimal point. The last emitted digit is rounded.
  // If requested_digits equals -1, then the shortest exponential representation
  // is computed.
  //
  // Examples with EMIT_POSITIVE_EXPONENT_SIGN deactivated, and
  //               exponent_character set to &apos;e&apos;.
  //   ToExponential(3.12, 1) -&gt; &quot;3.1e0&quot;
  //   ToExponential(5.0, 3) -&gt; &quot;5.000e0&quot;
  //   ToExponential(0.001, 2) -&gt; &quot;1.00e-3&quot;
  //   ToExponential(3.1415, -1) -&gt; &quot;3.1415e0&quot;
  //   ToExponential(3.1415, 4) -&gt; &quot;3.1415e0&quot;
  //   ToExponential(3.1415, 3) -&gt; &quot;3.142e0&quot;
  //   ToExponential(123456789000000, 3) -&gt; &quot;1.235e14&quot;
  //   ToExponential(1000000000000000019884624838656.0, -1) -&gt; &quot;1e30&quot;
  //   ToExponential(1000000000000000019884624838656.0, 32) -&gt;
  //                     &quot;1.00000000000000001988462483865600e30&quot;
  //   ToExponential(1234, 0) -&gt; &quot;1e3&quot;
  //
  // Returns true if the conversion succeeds. The conversion always succeeds
  // except for the following cases:
  //   - the input value is special and no infinity_symbol or nan_symbol has
  //     been provided to the constructor,
  //   - &apos;requested_digits&apos; &gt; kMaxExponentialDigits.
  //
  // The last condition implies that the result never contains more than
  // kMaxExponentialDigits + 8 characters (the sign, the digit before the
  // decimal point, the decimal point, the exponent character, the
  // exponent&apos;s sign, and at most 3 exponent digits).
  // In addition, the buffer must be able to hold the trailing &apos;\0&apos; character.</doc>
