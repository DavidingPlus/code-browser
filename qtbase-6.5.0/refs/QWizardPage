<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.h' l='90' c='_ZN7QWizard7addPageEP11QWizardPage'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.h' l='91' c='_ZN7QWizard7setPageEiP11QWizardPage'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.h' l='93' c='_ZNK7QWizard4pageEi'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.h' l='99' c='_ZNK7QWizard11currentPageEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.h' l='169'/>
<inh f='qtbase-6.5.0/src/widgets/kernel/qwidget.h' l='98' c='QWidget'/>
<def f='qtbase-6.5.0/src/widgets/dialogs/qwizard.h' l='176' ll='223'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.h' l='216' c='_ZN11QWizardPageC1ERKS_'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.h' l='216' c='_ZN11QWizardPageaSERKS_'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.h' l='216' c='_ZN11QWizardPageaSERKS_'/>
<size>40</size>
<smbr r='QWizardPage::staticMetaObject' t='const QMetaObject'/>
<fun r='_ZNK11QWizardPage10metaObjectEv'/>
<fun r='_ZN11QWizardPage11qt_metacastEPKc'/>
<fun r='_ZN11QWizardPage11qt_metacallEN11QMetaObject4CallEiPPv'/>
<fun r='_ZN11QWizardPage2trEPKcS1_i'/>
<fun r='_ZN11QWizardPage18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv'/>
<fun r='_ZN11QWizardPageC1EP7QWidget'/>
<fun r='_ZN11QWizardPageD1Ev'/>
<fun r='_ZN11QWizardPage8setTitleERK7QString'/>
<fun r='_ZNK11QWizardPage5titleEv'/>
<fun r='_ZN11QWizardPage11setSubTitleERK7QString'/>
<fun r='_ZNK11QWizardPage8subTitleEv'/>
<fun r='_ZN11QWizardPage9setPixmapEN7QWizard12WizardPixmapERK7QPixmap'/>
<fun r='_ZNK11QWizardPage6pixmapEN7QWizard12WizardPixmapE'/>
<fun r='_ZN11QWizardPage12setFinalPageEb'/>
<fun r='_ZNK11QWizardPage11isFinalPageEv'/>
<fun r='_ZN11QWizardPage13setCommitPageEb'/>
<fun r='_ZNK11QWizardPage12isCommitPageEv'/>
<fun r='_ZN11QWizardPage13setButtonTextEN7QWizard12WizardButtonERK7QString'/>
<fun r='_ZNK11QWizardPage10buttonTextEN7QWizard12WizardButtonE'/>
<fun r='_ZN11QWizardPage14initializePageEv'/>
<fun r='_ZN11QWizardPage11cleanupPageEv'/>
<fun r='_ZN11QWizardPage12validatePageEv'/>
<fun r='_ZNK11QWizardPage10isCompleteEv'/>
<fun r='_ZNK11QWizardPage6nextIdEv'/>
<fun r='_ZN11QWizardPage15completeChangedEv'/>
<fun r='_ZN11QWizardPage8setFieldERK7QStringRK8QVariant'/>
<fun r='_ZNK11QWizardPage5fieldERK7QString'/>
<fun r='_ZN11QWizardPage13registerFieldERK7QStringP7QWidgetPKcS6_'/>
<fun r='_ZNK11QWizardPage6wizardEv'/>
<fun r='_ZN11QWizardPageC1ERKS_'/>
<fun r='_ZN11QWizardPage6d_funcEv'/>
<fun r='_ZNK11QWizardPage6d_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='152' c='_ZN12QWizardFieldC1EP11QWizardPageRK7QStringP7QObjectPKcS8_'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='158'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='168' c='_ZN12QWizardFieldC1EP11QWizardPageRK7QStringP7QObjectPKcS8_'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='444' c='_ZN18QWizardPagePrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='444' c='_ZN18QWizardPagePrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='444' c='_ZNK18QWizardPagePrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='444' c='_ZNK18QWizardPagePrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='444'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='467' c='_ZNK18QWizardPagePrivate16cachedIsCompleteEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='475' c='_ZN18QWizardPagePrivate27_q_maybeEmitCompleteChangedEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='483' c='_ZN18QWizardPagePrivate28_q_updateCachedCompleteStateEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='509'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='699' c='_ZN14QWizardPrivate5resetEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='765' c='_ZN14QWizardPrivate12switchToPageEiNS_9DirectionE'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='781' c='_ZN14QWizardPrivate12switchToPageEiNS_9DirectionE'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='900' c='_ZN14QWizardPrivate24layoutInfoForCurrentPageEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='1202' c='_ZN14QWizardPrivate12updateLayoutEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='1642' c='_ZN14QWizardPrivate21_q_updateButtonStatesEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='2182' c='_ZN7QWizard7addPageEP11QWizardPage'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='2202' c='_ZN7QWizard7setPageEiP11QWizardPage'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='2262' c='_ZN7QWizard10removePageEi'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='2332' c='_ZNK7QWizard4pageEi'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='2422' c='_ZNK7QWizard11currentPageEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='3310' c='_ZN7QWizard14initializePageEi'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='3328' c='_ZN7QWizard11cleanupPageEi'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='3351' c='_ZN7QWizard19validateCurrentPageEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='3374' c='_ZNK7QWizard6nextIdEv'/>
<size>40</size>
<doc f='qtbase-6.5.0/src/widgets/dialogs/qwizard.cpp' l='3381'>/*!
    \class QWizardPage
    \since 4.3
    \brief The QWizardPage class is the base class for wizard pages.

    \inmodule QtWidgets

    QWizard represents a wizard. Each page is a QWizardPage. When
    you create your own wizards, you can use QWizardPage directly,
    or you can subclass it for more control.

    A page has the following attributes, which are rendered by
    QWizard: a \l title, a \l subTitle, and a \l{setPixmap()}{set of
    pixmaps}. See \l{Elements of a Wizard Page} for details. Once a
    page is added to the wizard (using QWizard::addPage() or
    QWizard::setPage()), wizard() returns a pointer to the
    associated QWizard object.

    Page provides five virtual functions that can be reimplemented to
    provide custom behavior:

    \list
    \li initializePage() is called to initialize the page&apos;s contents
       when the user clicks the wizard&apos;s \uicontrol Next button. If you
       want to derive the page&apos;s default from what the user entered
       on previous pages, this is the function to reimplement.
    \li cleanupPage() is called to reset the page&apos;s contents when the
       user clicks the wizard&apos;s \uicontrol Back button.
    \li validatePage() validates the page when the user clicks \uicontrol
       Next or \uicontrol Finish. It is often used to show an error message
       if the user has entered incomplete or invalid information.
    \li nextId() returns the ID of the next page. It is useful when
       \l{creating non-linear wizards}, which allow different
       traversal paths based on the information provided by the user.
    \li isComplete() is called to determine whether the \uicontrol Next
       and/or \uicontrol Finish button should be enabled or disabled. If
       you reimplement isComplete(), also make sure that
       completeChanged() is emitted whenever the complete state
       changes.
    \endlist

    Normally, the \uicontrol Next button and the \uicontrol Finish button of a
    wizard are mutually exclusive. If isFinalPage() returns \c true, \uicontrol
    Finish is available; otherwise, \uicontrol Next is available. By
    default, isFinalPage() is true only when nextId() returns -1. If
    you want to show \uicontrol Next and \uicontrol Final simultaneously for a
    page (letting the user perform an &quot;early finish&quot;), call
    setFinalPage(true) on that page. For wizards that support early
    finishes, you might also want to set the
    \l{QWizard::}{HaveNextButtonOnLastPage} and
    \l{QWizard::}{HaveFinishButtonOnEarlyPages} options on the
    wizard.

    In many wizards, the contents of a page may affect the default
    values of the fields of a later page. To make it easy to
    communicate between pages, QWizard supports a \l{Registering and
    Using Fields}{&quot;field&quot; mechanism} that allows you to register a
    field (e.g., a QLineEdit) on a page and to access its value from
    any page. Fields are global to the entire wizard and make it easy
    for any single page to access information stored by another page,
    without having to put all the logic in QWizard or having the
    pages know explicitly about each other. Fields are registered
    using registerField() and can be accessed at any time using
    field() and setField().

    \sa QWizard, {Class Wizard Example}, {License Wizard Example}
*/</doc>
<fun r='_ZN11QWizardPageC1EP7QWidget'/>
<fun r='_ZN11QWizardPageD1Ev'/>
<fun r='_ZN11QWizardPage8setTitleERK7QString'/>
<fun r='_ZNK11QWizardPage5titleEv'/>
<fun r='_ZN11QWizardPage11setSubTitleERK7QString'/>
<fun r='_ZNK11QWizardPage8subTitleEv'/>
<fun r='_ZN11QWizardPage9setPixmapEN7QWizard12WizardPixmapERK7QPixmap'/>
<fun r='_ZNK11QWizardPage6pixmapEN7QWizard12WizardPixmapE'/>
<fun r='_ZN11QWizardPage14initializePageEv'/>
<fun r='_ZN11QWizardPage11cleanupPageEv'/>
<fun r='_ZN11QWizardPage12validatePageEv'/>
<fun r='_ZNK11QWizardPage10isCompleteEv'/>
<fun r='_ZN11QWizardPage12setFinalPageEb'/>
<fun r='_ZNK11QWizardPage11isFinalPageEv'/>
<fun r='_ZN11QWizardPage13setCommitPageEb'/>
<fun r='_ZNK11QWizardPage12isCommitPageEv'/>
<fun r='_ZN11QWizardPage13setButtonTextEN7QWizard12WizardButtonERK7QString'/>
<fun r='_ZNK11QWizardPage10buttonTextEN7QWizard12WizardButtonE'/>
<fun r='_ZNK11QWizardPage6nextIdEv'/>
<fun r='_ZN11QWizardPage8setFieldERK7QStringRK8QVariant'/>
<fun r='_ZNK11QWizardPage5fieldERK7QString'/>
<fun r='_ZN11QWizardPage13registerFieldERK7QStringP7QWidgetPKcS6_'/>
<fun r='_ZNK11QWizardPage6wizardEv'/>
