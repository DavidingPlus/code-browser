<inh f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='14' c='QOperatingSystemVersionBase'/>
<def f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='104' ll='242'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='126'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='127'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='128'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='129'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='131'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='132'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='133'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='134'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='135'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='136'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='137'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='138'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='139'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='141'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='142'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='143'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='144'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='145'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='146'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='147'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='148'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='149'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='150'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='151'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='152'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='153'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='154'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='214' c='_ZN23QOperatingSystemVersion7currentEv'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='243'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='243'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='243'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='243'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='243'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='247' c='_Zls6QDebugRK23QOperatingSystemVersion'/>
<size>16</size>
<doc f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.h' l='103'>// ### Qt 7: Un-export the class, export relevant functions. Remove the enum.</doc>
<smbr r='QOperatingSystemVersion::Windows7' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::Windows8' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::Windows8_1' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::Windows10' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::OSXMavericks' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::OSXYosemite' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::OSXElCapitan' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::MacOSSierra' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::MacOSHighSierra' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::MacOSMojave' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::MacOSCatalina' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::MacOSBigSur' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::MacOSMonterey' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::AndroidJellyBean' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::AndroidJellyBean_MR1' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::AndroidJellyBean_MR2' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::AndroidKitKat' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::AndroidLollipop' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::AndroidLollipop_MR1' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::AndroidMarshmallow' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::AndroidNougat' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::AndroidNougat_MR1' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::AndroidOreo' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::AndroidOreo_MR1' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::AndroidPie' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::Android10' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::Android11' t='const QOperatingSystemVersion'/>
<smbr r='QOperatingSystemVersion::Windows10_1809' t='const QOperatingSystemVersionBase'/>
<smbr r='QOperatingSystemVersion::Windows10_1903' t='const QOperatingSystemVersionBase'/>
<smbr r='QOperatingSystemVersion::Windows10_1909' t='const QOperatingSystemVersionBase'/>
<smbr r='QOperatingSystemVersion::Windows10_2004' t='const QOperatingSystemVersionBase'/>
<smbr r='QOperatingSystemVersion::Windows10_20H2' t='const QOperatingSystemVersionBase'/>
<smbr r='QOperatingSystemVersion::Windows10_21H1' t='const QOperatingSystemVersionBase'/>
<smbr r='QOperatingSystemVersion::Windows10_21H2' t='const QOperatingSystemVersionBase'/>
<smbr r='QOperatingSystemVersion::Windows10_22H2' t='const QOperatingSystemVersionBase'/>
<smbr r='QOperatingSystemVersion::Windows11' t='const QOperatingSystemVersionBase'/>
<smbr r='QOperatingSystemVersion::Windows11_21H2' t='const QOperatingSystemVersionBase'/>
<smbr r='QOperatingSystemVersion::Windows11_22H2' t='const QOperatingSystemVersionBase'/>
<smbr r='QOperatingSystemVersion::Android12' t='const QOperatingSystemVersionBase'/>
<smbr r='QOperatingSystemVersion::Android12L' t='const QOperatingSystemVersionBase'/>
<smbr r='QOperatingSystemVersion::Android13' t='const QOperatingSystemVersionBase'/>
<smbr r='QOperatingSystemVersion::MacOSVentura' t='const QOperatingSystemVersionBase'/>
<fun r='_ZN23QOperatingSystemVersionC1ERK27QOperatingSystemVersionBase'/>
<fun r='_ZN23QOperatingSystemVersionC1ENS_6OSTypeEiii'/>
<fun r='_ZN23QOperatingSystemVersion7currentEv'/>
<fun r='_ZN23QOperatingSystemVersion11currentTypeEv'/>
<fun r='_ZNK23QOperatingSystemVersion7versionEv'/>
<fun r='_ZNK23QOperatingSystemVersion12majorVersionEv'/>
<fun r='_ZNK23QOperatingSystemVersion12minorVersionEv'/>
<fun r='_ZNK23QOperatingSystemVersion12microVersionEv'/>
<fun r='_ZNK23QOperatingSystemVersion12segmentCountEv'/>
<fun r='_ZNK23QOperatingSystemVersion4typeEv'/>
<fun r='_ZNK23QOperatingSystemVersion11isAnyOfTypeESt16initializer_listINS_6OSTypeEE'/>
<fun r='_ZNK23QOperatingSystemVersion4nameEv'/>
<fun r='_ZN23QOperatingSystemVersionC1Ev'/>
<use f='qtbase-6.5.0/src/corelib/compat/removed_api.cpp' l='142' c='_ZN23QOperatingSystemVersion7compareERKS_S1_'/>
<use f='qtbase-6.5.0/src/corelib/compat/removed_api.cpp' l='143' c='_ZN23QOperatingSystemVersion7compareERKS_S1_'/>
<size>16</size>
<fun r='_ZN23QOperatingSystemVersion7compareERKS_S1_'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.cpp' l='118' c='_ZN23QOperatingSystemVersion7currentEv'/>
<use f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.cpp' l='701' c='_Zls6QDebugRK23QOperatingSystemVersion'/>
<size>16</size>
<doc f='qtbase-6.5.0/src/corelib/global/qoperatingsystemversion.cpp' l='24'>/*!
    \class QOperatingSystemVersion
    \inmodule QtCore
    \since 5.9
    \brief The QOperatingSystemVersion class provides information about the
    operating system version.

    Unlike other version functions in QSysInfo, QOperatingSystemVersion provides
    access to the full version number that \a developers typically use to vary
    behavior or determine whether to enable APIs or features based on the
    operating system version (as opposed to the kernel version number or
    marketing version).

    Presently, Android, Apple Platforms (iOS, macOS, tvOS, and watchOS),
    and Windows are supported.

    The \a majorVersion(), \a minorVersion(), and \a microVersion() functions
    return the parts of the operating system version number based on:

    \table
        \header
            \li Platforms
            \li Value
        \row
            \li Android
            \li result of parsing
                \l{https://developer.android.com/reference/android/os/Build.VERSION.html#RELEASE}{android.os.Build.VERSION.RELEASE}
                using QVersionNumber, with a fallback to
                \l{https://developer.android.com/reference/android/os/Build.VERSION.html#SDK_INT}{android.os.Build.VERSION.SDK_INT}
                to determine the major and minor version component if the former
                fails
        \row
            \li Apple Platforms
            \li majorVersion, minorVersion, and patchVersion from
                \l{https://developer.apple.com/reference/foundation/nsprocessinfo/1410906-operatingsystemversion?language=objc}{NSProcessInfo.operatingSystemVersion}
        \row
            \li Windows
            \li dwMajorVersion, dwMinorVersion, and dwBuildNumber from
                \l{https://docs.microsoft.com/en-us/windows/win32/devnotes/rtlgetversion}
                {RtlGetVersion} -
                note that this function ALWAYS return the version number of the
                underlying operating system, as opposed to the shim underneath
                GetVersionEx that hides the real version number if the
                application is not manifested for that version of the OS
    \endtable

    Because QOperatingSystemVersion stores both a version number and an OS type, the OS type
    can be taken into account when performing comparisons. For example, on a macOS system running
    macOS Sierra (v10.12), the following expression will return \c false even though the
    major version number component of the object on the left hand side of the expression (10) is
    greater than that of the object on the right (9):

    \snippet code/src_corelib_global_qoperatingsystemversion.cpp 0

    This allows expressions for multiple operating systems to be joined with a logical OR operator
    and still work as expected. For example:

    \snippet code/src_corelib_global_qoperatingsystemversion.cpp 1

    A more naive comparison algorithm might incorrectly return true on all versions of macOS,
    including Mac OS 9. This behavior is achieved by overloading the comparison operators to return
    \c false whenever the OS types of the QOperatingSystemVersion instances being compared do not
    match. Be aware that due to this it can be the case \c x &gt;= y and \c x &lt; y are BOTH \c false
    for the same instances of \c x and \c y.
*/</doc>
<fun r='_ZN23QOperatingSystemVersion7currentEv'/>
<fun r='_ZNK23QOperatingSystemVersion4nameEv'/>
<fun r='_ZNK23QOperatingSystemVersion11isAnyOfTypeESt16initializer_listIN27QOperatingSystemVersionBase6OSTypeEE'/>
