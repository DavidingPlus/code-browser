<dec f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsproxywidget.h' l='23' type='void QGraphicsProxyWidget::setWidget(QWidget * widget)'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsproxywidget.cpp' l='468' u='c' c='_ZN27QGraphicsProxyWidgetPrivate16unembedSubWindowEP7QWidget'/>
<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsproxywidget.cpp' l='554' ll='558' type='void QGraphicsProxyWidget::setWidget(QWidget * widget)'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsproxywidget.cpp' l='586' u='c' c='_ZN27QGraphicsProxyWidgetPrivate16setWidget_helperEP7QWidgetb'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsproxywidget.cpp' l='1598' u='c' c='_ZN20QGraphicsProxyWidget25createProxyForChildWidgetEP7QWidget'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsproxywidget.cpp' l='522'>/*!
    Embeds \a widget into this proxy widget. The embedded widget must reside
    exclusively either inside or outside of Graphics View. You cannot embed a
    widget as long as it is is visible elsewhere in the UI, at the same time.

    \a widget must be a top-level widget whose parent is \nullptr.

    When the widget is embedded, its state (e.g., visible, enabled, geometry,
    size hints) is copied into the proxy widget. If the embedded widget is
    explicitly hidden or disabled, the proxy widget will become explicitly
    hidden or disabled after embedding is complete. The class documentation
    has a full overview over the shared state.

    QGraphicsProxyWidget&apos;s window flags determine whether the widget, after
    embedding, will be given window decorations or not.

    After this function returns, QGraphicsProxyWidget will keep its state
    synchronized with that of \a widget whenever possible.

    If a widget is already embedded by this proxy when this function is called,
    that widget will first be automatically unembedded. Passing \nullptr for
    the \a widget argument will only unembed the widget, and the ownership of
    the currently embedded widget will be passed on to the caller.
    Every child widget that are embedded will also be embedded and their proxy
    widget destroyed.

    Note that widgets with the Qt::WA_PaintOnScreen widget attribute
    set and widgets that wrap an external application or controller
    cannot be embedded. Examples are QOpenGLWidget and QAxWidget.

    \sa widget()
*/</doc>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsscene.cpp' l='2802' u='c' c='_ZN14QGraphicsScene9addWidgetEP7QWidget6QFlagsIN2Qt10WindowTypeEE'/>
