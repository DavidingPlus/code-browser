<doc f='qtbase-6.5.0/src/corelib/global/qtypes.cpp' l='147'>/*!
    \typedef qintptr
    \relates &lt;QtTypes&gt;

    Integral type for representing pointers in a signed integer (useful for
    hashing, etc.).

    Typedef for either qint32 or qint64. This type is guaranteed to
    be the same size as a pointer on all platforms supported by Qt. On
    a system with 32-bit pointers, qintptr is a typedef for qint32;
    on a system with 64-bit pointers, qintptr is a typedef for
    qint64.

    Note that qintptr is signed. Use quintptr for unsigned values.

    In order to print values of this type by using formatted-output
    facilities such as \c{printf()}, qDebug(), QString::asprintf() and
    so on, you can use the \c{PRIdQINTPTR} and \c{PRIiQINTPTR}
    macros as format specifiers. They will both print the value as a
    base 10 number.

    \code
    qintptr p = 123;
    printf(&quot;The pointer is %&quot; PRIdQINTPTR &quot;\n&quot;, p);
    \endcode

    \sa qptrdiff, qint32, qint64
*/</doc>
