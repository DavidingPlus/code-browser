<inh f='qtbase-6.5.0/src/gui/painting/qplatformbackingstore.h' l='126' c='QPlatformBackingStore'/>
<def f='qtbase-6.5.0/src/opengl/qopenglcompositorbackingstore_p.h' l='31' ll='69'/>
<size>104</size>
<doc f='qtbase-6.5.0/src/opengl/qopenglcompositorbackingstore.cpp' l='20'>/*!
    \class QOpenGLCompositorBackingStore
    \brief A backing store implementation for OpenGL
    \since 5.4
    \internal
    \ingroup qpa

    This implementation uploads raster-rendered widget windows into
    textures. It is meant to be used with QOpenGLCompositor that
    composites the textures onto a single native window using OpenGL.
    This means that multiple top-level widgets are supported without
    creating actual native windows for each of them.

    \note It is important to call notifyComposited() from the
    corresponding platform window&apos;s endCompositing() callback
    (inherited from QOpenGLCompositorWindow).

    \note When implementing QOpenGLCompositorWindow::textures() for
    windows of type RasterSurface or RasterGLSurface, simply return
    the list provided by this class&apos; textures().
*/</doc>
<fun r='_ZN29QOpenGLCompositorBackingStoreC1EP7QWindow'/>
<fun r='_ZN29QOpenGLCompositorBackingStoreD1Ev'/>
<fun r='_ZN29QOpenGLCompositorBackingStore11paintDeviceEv'/>
<fun r='_ZN29QOpenGLCompositorBackingStore10beginPaintERK7QRegion'/>
<fun r='_ZN29QOpenGLCompositorBackingStore5flushEP7QWindowRK7QRegionRK6QPoint'/>
<fun r='_ZN29QOpenGLCompositorBackingStore6resizeERK5QSizeRK7QRegion'/>
<fun r='_ZNK29QOpenGLCompositorBackingStore7toImageEv'/>
<fun r='_ZN29QOpenGLCompositorBackingStore8rhiFlushEP7QWindowdRK7QRegionRK6QPointP20QPlatformTextureListb'/>
<fun r='_ZNK29QOpenGLCompositorBackingStore8texturesEv'/>
<fun r='_ZN29QOpenGLCompositorBackingStore16notifyCompositedEv'/>
<fun r='_ZN29QOpenGLCompositorBackingStore13updateTextureEv'/>
<mbr r='QOpenGLCompositorBackingStore::m_window' o='128' t='QWindow *'/>
<mbr r='QOpenGLCompositorBackingStore::m_image' o='192' t='QImage'/>
<mbr r='QOpenGLCompositorBackingStore::m_dirty' o='384' t='QRegion'/>
<mbr r='QOpenGLCompositorBackingStore::m_bsTexture' o='448' t='uint'/>
<mbr r='QOpenGLCompositorBackingStore::m_bsTextureWrapper' o='512' t='QRhiTexture *'/>
<mbr r='QOpenGLCompositorBackingStore::m_bsTextureContext' o='576' t='QOpenGLContext *'/>
<mbr r='QOpenGLCompositorBackingStore::m_textures' o='640' t='QPlatformTextureList *'/>
<mbr r='QOpenGLCompositorBackingStore::m_lockedWidgetTextures' o='704' t='QPlatformTextureList *'/>
<mbr r='QOpenGLCompositorBackingStore::m_rhi' o='768' t='QRhi *'/>
<fun r='_ZN29QOpenGLCompositorBackingStoreC1EP7QWindow'/>
<fun r='_ZN29QOpenGLCompositorBackingStoreD1Ev'/>
<fun r='_ZN29QOpenGLCompositorBackingStore11paintDeviceEv'/>
<fun r='_ZN29QOpenGLCompositorBackingStore13updateTextureEv'/>
<fun r='_ZN29QOpenGLCompositorBackingStore5flushEP7QWindowRK7QRegionRK6QPoint'/>
<fun r='_ZN29QOpenGLCompositorBackingStore8rhiFlushEP7QWindowdRK7QRegionRK6QPointP20QPlatformTextureListb'/>
<fun r='_ZN29QOpenGLCompositorBackingStore16notifyCompositedEv'/>
<fun r='_ZN29QOpenGLCompositorBackingStore10beginPaintERK7QRegion'/>
<fun r='_ZN29QOpenGLCompositorBackingStore6resizeERK5QSizeRK7QRegion'/>
<fun r='_ZNK29QOpenGLCompositorBackingStore7toImageEv'/>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfswindow_p.h' l='73' c='_ZN12QEglFSWindow12backingStoreEv'/>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfswindow_p.h' l='74' c='_ZN12QEglFSWindow15setBackingStoreEP29QOpenGLCompositorBackingStore'/>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfswindow_p.h' l='82'/>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfsintegration.cpp' l='147' c='_ZNK17QEglFSIntegration26createPlatformBackingStoreEP7QWindow'/>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfsintegration.cpp' l='147' c='_ZNK17QEglFSIntegration26createPlatformBackingStoreEP7QWindow'/>
<size>104</size>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfswindow.cpp' l='111' c='_ZN12QEglFSWindow15setBackingStoreEP29QOpenGLCompositorBackingStore'/>
<size>104</size>
