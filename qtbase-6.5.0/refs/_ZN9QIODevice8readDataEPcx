<dec f='qtbase-6.5.0/src/corelib/io/qiodevice.h' l='121' type='qint64 QIODevice::readData(char * data, qint64 maxlen)'/>
<ovr f='qtbase-6.5.0/src/corelib/io/qbuffer.cpp' l='385' c='_ZN7QBuffer8readDataEPcx'/>
<ovr f='qtbase-6.5.0/src/corelib/io/qfiledevice.cpp' l='418' c='_ZN11QFileDevice8readDataEPcx'/>
<use f='qtbase-6.5.0/src/corelib/io/qiodevice.cpp' l='1017' u='c' c='_ZN9QIODevice4readEPcx'/>
<use f='qtbase-6.5.0/src/corelib/io/qiodevice.cpp' l='1078' u='c' c='_ZN16QIODevicePrivate4readEPcxb'/>
<use f='qtbase-6.5.0/src/corelib/io/qiodevice.cpp' l='1099' u='c' c='_ZN16QIODevicePrivate4readEPcxb'/>
<use f='qtbase-6.5.0/src/corelib/io/qiodevice.cpp' l='1165' u='c' c='_ZN16QIODevicePrivate4readEPcxb'/>
<use f='qtbase-6.5.0/src/corelib/io/qiodevice.cpp' l='1200' u='c' c='_ZN9QIODevice4readEx'/>
<use f='qtbase-6.5.0/src/corelib/io/qiodevice.cpp' l='1360' u='c' c='_ZN16QIODevicePrivate8readLineEPcx'/>
<use f='qtbase-6.5.0/src/corelib/io/qiodevice.cpp' l='1366' u='c' c='_ZN16QIODevicePrivate8readLineEPcx'/>
<use f='qtbase-6.5.0/src/corelib/io/qiodevice.cpp' l='1967' u='c' c='_ZN9QIODevice4skipEx'/>
<doc f='qtbase-6.5.0/src/corelib/io/qiodevice.cpp' l='2142'>/*!
    \fn qint64 QIODevice::readData(char *data, qint64 maxSize)

    Reads up to \a maxSize bytes from the device into \a data, and
    returns the number of bytes read or -1 if an error occurred.

    If there are no bytes to be read and there can never be more bytes
    available (examples include socket closed, pipe closed, sub-process
    finished), this function returns -1.

    This function is called by QIODevice. Reimplement this function
    when creating a subclass of QIODevice.

    When reimplementing this function it is important that this function
    reads all the required data before returning. This is required in order
    for QDataStream to be able to operate on the class. QDataStream assumes
    all the requested information was read and therefore does not retry reading
    if there was a problem.

    This function might be called with a maxSize of 0, which can be used to
    perform post-reading operations.

    \sa read(), readLine(), writeData()
*/</doc>
<ovr f='qtbase-6.5.0/src/corelib/io/qnoncontiguousbytedevice.cpp' l='406' c='_ZN27QByteDeviceWrappingIoDevice8readDataEPcx'/>
<ovr f='qtbase-6.5.0/src/corelib/io/qprocess.cpp' l='1912' c='_ZN8QProcess8readDataEPcx'/>
<ovr f='qtbase-6.5.0/src/network/access/qhttpmultipart.cpp' l='451' c='_ZN22QHttpMultiPartIODevice8readDataEPcx'/>
<ovr f='qtbase-6.5.0/src/network/access/qnetworkreplydataimpl.cpp' l='91' c='_ZN21QNetworkReplyDataImpl8readDataEPcx'/>
<ovr f='qtbase-6.5.0/src/network/access/qnetworkreplyfileimpl.cpp' l='182' c='_ZN21QNetworkReplyFileImpl8readDataEPcx'/>
<ovr f='qtbase-6.5.0/src/network/access/qnetworkreplyhttpimpl.cpp' l='300' c='_ZN21QNetworkReplyHttpImpl8readDataEPcx'/>
<ovr f='qtbase-6.5.0/src/network/access/qnetworkreplyimpl.cpp' l='840' c='_ZN17QNetworkReplyImpl8readDataEPcx'/>
<ovr f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='2380' c='_ZN15QAbstractSocket8readDataEPcx'/>
<ovr f='qtbase-6.5.0/src/network/socket/qlocalsocket_unix.cpp' l='444' c='_ZN12QLocalSocket8readDataEPcx'/>
