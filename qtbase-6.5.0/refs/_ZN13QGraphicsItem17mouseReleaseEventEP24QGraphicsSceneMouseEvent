<dec f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.h' l='383' type='void QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent * event)'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='6692' u='c' c='_ZN13QGraphicsItem10sceneEventEP6QEvent'/>
<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='7178' ll='7215' type='void QGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent * event)'/>
<ovr f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='10121' c='_ZN17QGraphicsTextItem17mouseReleaseEventEP24QGraphicsSceneMouseEvent'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='10124' u='c' c='_ZN17QGraphicsTextItem17mouseReleaseEventEP24QGraphicsSceneMouseEvent'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='7159'>/*!
    This event handler, for event \a event, can be reimplemented to
    receive mouse release events for this item.

    Calling QEvent::ignore() or QEvent::accept() on \a event has no
    effect.

    The default implementation handles basic item interaction, such as
    selection and moving. If you want to keep the base implementation
    when reimplementing this function, call
    QGraphicsItem::mouseReleaseEvent() in your reimplementation.

    Please note that mousePressEvent() decides which graphics item it
    is that receives mouse events. See the mousePressEvent()
    description for details.

    \sa mousePressEvent(), mouseMoveEvent(), mouseDoubleClickEvent(),
    sceneEvent()
*/</doc>
<ovr f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsproxywidget.cpp' l='1312' c='_ZN20QGraphicsProxyWidget17mouseReleaseEventEP24QGraphicsSceneMouseEvent'/>
