<dec f='qtbase-6.5.0/src/gui/kernel/qevent.h' l='95' type='void QPointerEvent::setExclusiveGrabber(const QEventPoint &amp; point, QObject * exclusiveGrabber)'/>
<use f='qtbase-6.5.0/src/gui/kernel/qevent.h' l='132' u='c' c='_ZN17QSinglePointEvent24setExclusivePointGrabberEP7QObject'/>
<def f='qtbase-6.5.0/src/gui/kernel/qevent.cpp' l='366' ll='371' type='void QPointerEvent::setExclusiveGrabber(const QEventPoint &amp; point, QObject * exclusiveGrabber)'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qevent.cpp' l='359'>/*!
    Informs the delivery logic that the given \a exclusiveGrabber is to
    receive all future update events and the release event containing
    the given \a point, and that delivery to other items can be skipped.

    It&apos;s mainly for use in Qt Quick at this time.
*/</doc>
<use f='qtbase-6.5.0/src/gui/kernel/qguiapplication.cpp' l='2322' u='c' c='_ZN22QGuiApplicationPrivate17processMouseEventEPN29QWindowSystemInterfacePrivate10MouseEventE'/>
<use f='qtbase-6.5.0/src/gui/kernel/qpointingdevice.cpp' l='417' u='c' c='_ZN22QPointingDevicePrivate20sendTouchCancelEventEP11QTouchEvent'/>
