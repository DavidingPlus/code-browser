<dec f='qtbase-6.5.0/src/gui/text/qtextmarkdownimporter_p.h' l='72' type='void QTextMarkdownImporter::insertBlock()'/>
<use f='qtbase-6.5.0/src/gui/text/qtextmarkdownimporter.cpp' l='431' u='c' c='_ZN21QTextMarkdownImporter6cbTextEiPKcj'/>
<def f='qtbase-6.5.0/src/gui/text/qtextmarkdownimporter.cpp' l='561' ll='612' type='void QTextMarkdownImporter::insertBlock()'/>
<doc f='qtbase-6.5.0/src/gui/text/qtextmarkdownimporter.cpp' l='550'>/*!
    Insert a new block based on stored state.

    m_cursor cannot store the state for the _next_ block ahead of time, because
    m_cursor-&gt;setBlockFormat() controls the format of the block that the cursor
    is already in; so cbLeaveBlock() cannot call setBlockFormat() without
    altering the block that was just added. Therefore cbLeaveBlock() and the
    following cbEnterBlock() set variables to remember what formatting should
    come next, and insertBlock() is called just before the actual text
    insertion, to create a new block with the right formatting.
*/</doc>
