<dec f='qtbase-6.5.0/src/gui/kernel/qsurfaceformat.h' l='117' type='void QSurfaceFormat::setColorSpace(const QColorSpace &amp; colorSpace)'/>
<def f='qtbase-6.5.0/src/gui/kernel/qsurfaceformat.cpp' l='712' ll='718' type='void QSurfaceFormat::setColorSpace(const QColorSpace &amp; colorSpace)'/>
<use f='qtbase-6.5.0/src/gui/kernel/qsurfaceformat.cpp' l='735' u='c' c='_ZN14QSurfaceFormat13setColorSpaceENS_10ColorSpaceE'/>
<use f='qtbase-6.5.0/src/gui/kernel/qsurfaceformat.cpp' l='738' u='c' c='_ZN14QSurfaceFormat13setColorSpaceENS_10ColorSpaceE'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qsurfaceformat.cpp' l='691'>/*!
    Sets the preferred \a colorSpace.

    For example, this allows requesting windows with default framebuffers that
    are sRGB-capable on platforms that support it.

    \note When the requested color space is not supported by the platform, the
    request is ignored. Query the QSurfaceFormat after window creation to verify
    if the color space request could be honored or not.

    \note This setting controls if the default framebuffer of the window is
    capable of updates and blending in a given color space. It does not change
    applications&apos; output by itself. The applications&apos; rendering code will still
    have to opt in via the appropriate OpenGL calls to enable updates and
    blending to be performed in the given color space instead of using the
    standard linear operations.

    \since 6.0

    \sa colorSpace()
 */</doc>
<use f='qtbase-6.5.0/src/gui/opengl/platform/unix/qglxconvenience.cpp' l='304' u='c' c='_Z33qglx_surfaceFormatFromGLXFBConfigP14QSurfaceFormatP9_XDisplayP16__GLXFBConfigReci'/>
<use f='qtbase-6.5.0/src/gui/opengl/platform/unix/qglxconvenience.cpp' l='306' u='c' c='_Z33qglx_surfaceFormatFromGLXFBConfigP14QSurfaceFormatP9_XDisplayP16__GLXFBConfigReci'/>
<use f='qtbase-6.5.0/src/gui/opengl/platform/unix/qglxconvenience.cpp' l='346' u='c' c='_Z32qglx_surfaceFormatFromVisualInfoP14QSurfaceFormatP9_XDisplayP11XVisualInfoi'/>
<use f='qtbase-6.5.0/src/gui/opengl/platform/unix/qglxconvenience.cpp' l='348' u='c' c='_Z32qglx_surfaceFormatFromVisualInfoP14QSurfaceFormatP9_XDisplayP11XVisualInfoi'/>
<use f='qtbase-6.5.0/src/gui/opengl/platform/unix/qglxconvenience.cpp' l='430' u='c' c='_Z17qglx_reduceFormatP14QSurfaceFormat'/>
