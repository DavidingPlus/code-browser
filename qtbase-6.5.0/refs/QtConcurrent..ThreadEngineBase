<inh f='qtbase-6.5.0/src/corelib/thread/qrunnable.h' l='12' c='QRunnable'/>
<def f='qtbase-6.5.0/src/concurrent/qtconcurrentthreadengine.h' l='51' ll='94'/>
<ovr f='qtbase-6.5.0/src/concurrent/qtconcurrentthreadengine.h' l='98' c='QtConcurrent::ThreadEngine'/>
<use f='qtbase-6.5.0/src/concurrent/qtconcurrentthreadengine.h' l='98'/>
<use f='qtbase-6.5.0/src/concurrent/qtconcurrentthreadengine.h' l='103' c='_ZN12QtConcurrent12ThreadEngineC1EP11QThreadPool'/>
<size>64</size>
<doc f='qtbase-6.5.0/src/concurrent/qtconcurrentthreadengine.h' l='47'>// The ThreadEngine controls the threads used in the computation.
// Can be run in three modes: single threaded, multi-threaded blocking
// and multi-threaded asynchronous.
// The code for the single threaded mode is</doc>
<fun r='_ZN12QtConcurrent16ThreadEngineBaseC1EP11QThreadPool'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBaseD1Ev'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase19startSingleThreadedEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase11startThreadEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase10isCanceledEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase13waitForResumeEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase26isProgressReportingEnabledEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase16setProgressValueEi'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase16setProgressRangeEii'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase23acquireBarrierSemaphoreEv'/>
<fun r='_ZNK12QtConcurrent16ThreadEngineBase22reportIfSuspensionDoneEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase5startEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase6finishEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase14threadFunctionEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase17shouldStartThreadEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase20shouldThrottleThreadEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase19startThreadInternalEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase12startThreadsEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase10threadExitEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase18threadThrottleExitEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase3runEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase18asynchronousFinishEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase15handleExceptionERK10QException'/>
<mbr r='QtConcurrent::ThreadEngineBase::futureInterface' o='128' t='QFutureInterfaceBase *'/>
<mbr r='QtConcurrent::ThreadEngineBase::threadPool' o='192' t='QThreadPool *'/>
<mbr r='QtConcurrent::ThreadEngineBase::barrier' o='256' t='QtConcurrent::ThreadEngineBarrier'/>
<mbr r='QtConcurrent::ThreadEngineBase::exceptionStore' o='384' t='QtPrivate::ExceptionStore'/>
<mbr r='QtConcurrent::ThreadEngineBase::mutex' o='448' t='QBasicMutex'/>
<doc f='qtbase-6.5.0/src/concurrent/qtconcurrentthreadengine.cpp' l='25'>/*!
  \class QtConcurrent::ThreadEngineBase
  \inmodule QtConcurrent
  \internal
*/</doc>
<fun r='_ZN12QtConcurrent16ThreadEngineBaseC1EP11QThreadPool'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBaseD1Ev'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase19startSingleThreadedEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase11startThreadEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase23acquireBarrierSemaphoreEv'/>
<fun r='_ZNK12QtConcurrent16ThreadEngineBase22reportIfSuspensionDoneEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase10isCanceledEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase13waitForResumeEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase26isProgressReportingEnabledEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase16setProgressValueEi'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase16setProgressRangeEii'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase19startThreadInternalEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase12startThreadsEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase10threadExitEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase18threadThrottleExitEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase3runEv'/>
<fun r='_ZN12QtConcurrent16ThreadEngineBase15handleExceptionERK10QException'/>
