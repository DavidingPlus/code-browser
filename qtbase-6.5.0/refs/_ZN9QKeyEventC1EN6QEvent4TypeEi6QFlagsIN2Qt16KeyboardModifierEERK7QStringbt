<dec f='qtbase-6.5.0/src/gui/kernel/qevent.h' l='426' type='void QKeyEvent::QKeyEvent(QEvent::Type type, int key, Qt::KeyboardModifiers modifiers, const QString &amp; text = QString(), bool autorep = false, quint16 count = 1)'/>
<def f='qtbase-6.5.0/src/gui/kernel/qevent.cpp' l='1346' ll='1354' type='void QKeyEvent::QKeyEvent(QEvent::Type type, int key, Qt::KeyboardModifiers modifiers, const QString &amp; text = QString(), bool autorep = false, quint16 count = 1)'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qevent.cpp' l='1332'>/*!
    Constructs a key event object.

    The \a type parameter must be QEvent::KeyPress, QEvent::KeyRelease,
    or QEvent::ShortcutOverride.

    Int \a key is the code for the Qt::Key that the event loop should listen
    for. If \a key is 0, the event is not a result of a known key; for
    example, it may be the result of a compose sequence or keyboard macro.
    The \a modifiers holds the keyboard modifiers, and the given \a text
    is the Unicode text that the key generated. If \a autorep is true,
    isAutoRepeat() will be true. \a count is the number of keys involved
    in the event.
*/</doc>
<use f='qtbase-6.5.0/src/gui/kernel/qshortcutmap.cpp' l='346' u='c' c='_ZN12QShortcutMap9nextStateEP9QKeyEvent'/>
<use f='qtbase-6.5.0/src/gui/kernel/qwindowsysteminterface.cpp' l='1168' u='c' c='_Z28qt_sendShortcutOverrideEventP7QObjectmi6QFlagsIN2Qt16KeyboardModifierEERK7QStringbt'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qabstractitemview.cpp' l='1642' u='c' c='_ZN17QAbstractItemView18focusNextPrevChildEb'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qmenu.cpp' l='3038' u='c' c='_ZN5QMenu18focusNextPrevChildEb'/>
