<dec f='qtbase-6.5.0/src/network/socket/qabstractsocket.h' l='178' type='bool QAbstractSocket::waitForConnected(int msecs = 30000)'/>
<doc f='qtbase-6.5.0/src/network/socket/qabstractsocket.h' l='177'>// for synchronous access</doc>
<def f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='2039' ll='2114' type='bool QAbstractSocket::waitForConnected(int msecs = 30000)'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='2151' u='c' c='_ZN15QAbstractSocket16waitForReadyReadEi'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='2222' u='c' c='_ZN15QAbstractSocket19waitForBytesWrittenEi'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='2301' u='c' c='_ZN15QAbstractSocket19waitForDisconnectedEi'/>
<doc f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='2014'>/*!
    Waits until the socket is connected, up to \a msecs
    milliseconds. If the connection has been established, this
    function returns \c true; otherwise it returns \c false. In the case
    where it returns \c false, you can call error() to determine
    the cause of the error.

    The following example waits up to one second for a connection
    to be established:

    \snippet code/src_network_socket_qabstractsocket.cpp 0

    If msecs is -1, this function will not time out.

    \note This function may wait slightly longer than \a msecs,
    depending on the time it takes to complete the host lookup.

    \note Multiple calls to this functions do not accumulate the time.
    If the function times out, the connecting process will be aborted.

    \note This function may fail randomly on Windows. Consider using the event
    loop and the connected() signal if your software will run on Windows.

    \sa connectToHost(), connected()
*/</doc>
