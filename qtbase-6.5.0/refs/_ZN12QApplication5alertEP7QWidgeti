<dec f='qtbase-6.5.0/src/widgets/kernel/qapplication.h' l='93' type='static void QApplication::alert(QWidget * widget, int duration = 0)'/>
<def f='qtbase-6.5.0/src/widgets/kernel/qapplication.cpp' l='3477' ll='3489' type='static void QApplication::alert(QWidget * widget, int duration = 0)'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qapplication.cpp' l='3487' u='c' c='_ZN12QApplication5alertEP7QWidgeti'/>
<doc f='qtbase-6.5.0/src/widgets/kernel/qapplication.cpp' l='3455'>/*!
    \fn void QApplication::alert(QWidget *widget, int msec)
    \since 4.3

    Causes an alert to be shown for \a widget if the window is not the active
    window. The alert is shown for \a msec milliseconds. If \a msec is zero (the
    default), then the alert is shown indefinitely until the window becomes
    active again.

    Currently this function does nothing on Qt for Embedded Linux.

    On \macos, this works more at the application level and will cause the
    application icon to bounce in the dock.

    On Windows, this causes the window&apos;s taskbar entry to flash for a time. If
    \a msec is zero, the flashing will stop and the taskbar entry will turn a
    different color (currently orange).

    On X11, this will cause the window to be marked as &quot;demands attention&quot;, the
    window must not be hidden (i.e. not have hide() called on it, but be
    visible in some sort of way) in order for this to work.
*/</doc>
