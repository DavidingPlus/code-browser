<use f='include/xkbcommon/xkbcommon-compose.h' l='313' c='xkb_compose_state_new'/>
<use f='include/xkbcommon/xkbcommon-compose.h' l='324' c='xkb_compose_state_ref'/>
<use f='include/xkbcommon/xkbcommon-compose.h' l='325' c='xkb_compose_state_ref'/>
<use f='include/xkbcommon/xkbcommon-compose.h' l='335' c='xkb_compose_state_unref'/>
<use f='include/xkbcommon/xkbcommon-compose.h' l='350' c='xkb_compose_state_get_compose_table'/>
<use f='include/xkbcommon/xkbcommon-compose.h' l='418' c='xkb_compose_state_feed'/>
<use f='include/xkbcommon/xkbcommon-compose.h' l='430' c='xkb_compose_state_reset'/>
<use f='include/xkbcommon/xkbcommon-compose.h' l='439' c='xkb_compose_state_get_status'/>
<use f='include/xkbcommon/xkbcommon-compose.h' l='470' c='xkb_compose_state_get_utf8'/>
<use f='include/xkbcommon/xkbcommon-compose.h' l='485' c='xkb_compose_state_get_one_sym'/>
<use f='qtbase-6.5.0/src/plugins/platforminputcontexts/compose/qcomposeplatforminputcontext.h' l='42'/>
<doc f='include/xkbcommon/xkbcommon-compose.h' l='128'>/**
 * @struct xkb_compose_state
 * Opaque Compose state object.
 *
 * The compose state maintains state for compose sequence matching, such
 * as which possible sequences are being matched, and the position within
 * these sequences.  It acts as a simple state machine wherein keysyms are
 * the input, and composed keysyms and strings are the output.
 *
 * The compose state is usually associated with a keyboard device.
 */</doc>
