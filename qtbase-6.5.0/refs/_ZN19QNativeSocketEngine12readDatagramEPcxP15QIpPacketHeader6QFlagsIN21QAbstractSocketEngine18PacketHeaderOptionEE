<dec f='qtbase-6.5.0/src/network/socket/qnativesocketengine_p.h' l='89' type='qint64 QNativeSocketEngine::readDatagram(char * data, qint64 maxlen, QIpPacketHeader *  = nullptr, QAbstractSocketEngine::PacketHeaderOptions  = WantNone)'/>
<inh f='qtbase-6.5.0/src/network/socket/qabstractsocketengine_p.h' l='123' c='_ZN21QAbstractSocketEngine12readDatagramEPcxP15QIpPacketHeader6QFlagsINS_18PacketHeaderOptionEE'/>
<def f='qtbase-6.5.0/src/network/socket/qnativesocketengine.cpp' l='826' ll='835' type='qint64 QNativeSocketEngine::readDatagram(char * data, qint64 maxSize, QIpPacketHeader * header = nullptr, QAbstractSocketEngine::PacketHeaderOptions options = WantNone)'/>
<doc f='qtbase-6.5.0/src/network/socket/qnativesocketengine.cpp' l='811'>/*!
    Reads up to \a maxSize bytes of a datagram from the socket,
    stores it in \a data and returns the number of bytes read. The
    address, port, and other IP header fields are stored in \a header
    according to the request in \a options.

    For UDP sockets, to avoid unnecessarily loss of data, call
    pendingDatagramSize() to determine the size of the pending message
    before reading it. If \a maxSize is too small, the rest of the
    datagram will be lost.

    Returns -1 if an error occurred.

    \sa hasPendingDatagrams()
*/</doc>
