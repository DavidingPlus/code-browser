<dec f='qtbase-6.5.0/src/opengl/qopengltexture.h' l='378' type='bool QOpenGLTexture::create()'/>
<doc f='qtbase-6.5.0/src/opengl/qopengltexture.h' l='377'>// Creation and destruction</doc>
<use f='qtbase-6.5.0/src/opengl/qopengltexture.cpp' l='2028' u='c' c='_ZNK21QOpenGLTexturePrivate17createTextureViewEN14QOpenGLTexture6TargetENS0_13TextureFormatEiiii'/>
<def f='qtbase-6.5.0/src/opengl/qopengltexture.cpp' l='2498' ll='2502' type='bool QOpenGLTexture::create()'/>
<doc f='qtbase-6.5.0/src/opengl/qopengltexture.cpp' l='2481'>/*!
    Creates the underlying OpenGL texture object. This requires a current valid
    OpenGL context. If the texture object already exists, this function does
    nothing.

    Once the texture object is created you can obtain the object
    name from the textureId() function. This may be useful if you wish to make
    some raw OpenGL calls related to this texture.

    Normally it should not be necessary to call this function directly as all
    functions that set properties of the texture object implicitly call create()
    on your behalf.

    Returns \c true if the creation succeeded, otherwise returns \c false.

    \sa destroy(), isCreated(), textureId()
*/</doc>
