<dec f='qtbase-6.5.0/src/sql/kernel/qsqldriver.h' l='75' type='QVariant QSqlDriver::handle() const'/>
<ovr f='qtbase-6.5.0/src/plugins/sqldrivers/sqlite/qsql_sqlite.cpp' l='955' c='_ZNK13QSQLiteDriver6handleEv'/>
<def f='qtbase-6.5.0/src/sql/kernel/qsqldriver.cpp' l='661' ll='664' type='QVariant QSqlDriver::handle() const'/>
<doc f='qtbase-6.5.0/src/sql/kernel/qsqldriver.cpp' l='637'>/*!
    Returns the low-level database handle wrapped in a QVariant or an
    invalid variant if there is no handle.

    \warning Use this with uttermost care and only if you know what you&apos;re doing.

    \warning The handle returned here can become a stale pointer if the connection
    is modified (for example, if you close the connection).

    \warning The handle can be NULL if the connection is not open yet.

    The handle returned here is database-dependent, you should query the type
    name of the variant before accessing it.

    This example retrieves the handle for a connection to sqlite:

    \snippet code/src_sql_kernel_qsqldriver.cpp 0

    This snippet returns the handle for PostgreSQL or MySQL:

    \snippet code/src_sql_kernel_qsqldriver.cpp 1

    \sa QSqlResult::handle()
*/</doc>
