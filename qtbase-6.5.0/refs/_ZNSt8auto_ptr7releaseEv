<def f='include/c++/9/backward/auto_ptr.h' l='226' ll='232' type='std::auto_ptr::element_type * std::auto_ptr::release()'/>
<doc f='include/c++/9/backward/auto_ptr.h' l='215'>/**
       *  @brief  Bypassing the smart pointer.
       *  @return  The raw pointer being managed.
       *
       *  You can get a copy of the pointer that this object owns, for
       *  situations such as passing to a function which only accepts
       *  a raw pointer.
       *
       *  @note  This %auto_ptr no longer owns the memory.  When this object
       *  goes out of scope, nothing will happen.
       */</doc>
