<dec f='qtbase-6.5.0/src/corelib/io/qdiriterator.h' l='25' type='void QDirIterator::QDirIterator(const QString &amp; path, QDir::Filters filter, QDirIterator::IteratorFlags flags = NoIteratorFlags)'/>
<use f='qtbase-6.5.0/qmake/main.cpp' l='317' u='c' c='_ZL22installFileOrDirectoryRK7QStringS1_b'/>
<use f='qtbase-6.5.0/src/corelib/io/qdir.cpp' l='1598' u='c' c='_ZN4QDir17removeRecursivelyEv'/>
<def f='qtbase-6.5.0/src/corelib/io/qdiriterator.cpp' l='401' ll='404' type='void QDirIterator::QDirIterator(const QString &amp; path, QDir::Filters filters, QDirIterator::IteratorFlags flags = NoIteratorFlags)'/>
<doc f='qtbase-6.5.0/src/corelib/io/qdiriterator.cpp' l='388'>/*!
    Constructs a QDirIterator that can iterate over \a path, with no name
    filtering and \a filters for entry filtering. You can pass options via \a
    flags to decide how the directory should be iterated.

    By default, \a filters is QDir::NoFilter, and \a flags is NoIteratorFlags,
    which provides the same behavior as in QDir::entryList().

    \note To list symlinks that point to non existing files, QDir::System must be
     passed to the flags.

    \sa hasNext(), next(), IteratorFlags
*/</doc>
<use f='qtbase-6.5.0/src/corelib/io/qstorageinfo_unix.cpp' l='770' u='c' c='_ZL13retrieveLabelRK10QByteArray'/>
<use f='qtbase-6.5.0/src/corelib/plugin/qfactoryloader.cpp' l='154' u='c' c='_ZN21QFactoryLoaderPrivate16updateSinglePathERK7QString'/>
<use f='qtbase-6.5.0/src/gui/itemmodels/qfileinfogatherer.cpp' l='372' u='c' c='_ZN17QFileInfoGatherer12getFileInfosERK7QStringRK5QListIS0_E'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkdiskcache.cpp' l='487' u='c' c='_ZN17QNetworkDiskCache6expireEv'/>
<use f='qtbase-6.5.0/src/network/ssl/qsslcertificate.cpp' l='681' u='c' c='_ZN15QSslCertificate8fromPathERK7QStringN4QSsl14EncodingFormatENS_13PatternSyntaxE'/>
