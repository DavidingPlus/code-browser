<dec f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='1562' type='bool QRhiResourceUpdateBatch::hasOptimalCapacity() const'/>
<def f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='5969' ll='5972' type='bool QRhiResourceUpdateBatch::hasOptimalCapacity() const'/>
<doc f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='5956'>/*!
    \return true until the number of buffer and texture operations enqueued
    onto this batch is below a reasonable limit.

    The return value is false when the number of buffer and/or texture
    operations added to this batch have reached, or are about to reach, a
    certain limit. The batch is fully functional afterwards as well, but may
    need to allocate additional memory. Therefore, a renderer that collects
    lots of buffer and texture updates in a single batch when preparing a frame
    may want to consider \l{QRhiCommandBuffer::resourceUpdate()}{submitting the
    batch} and \l{QRhi::nextResourceUpdateBatch()}{starting a new one} when
    this function returns false.
 */</doc>
