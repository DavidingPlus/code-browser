<def f='qtbase-6.5.0/src/gui/text/qfont.h' l='36' ll='49'/>
<use f='qtbase-6.5.0/src/gui/text/qfont.h' l='50' c='_Z20qt_getEnumMetaObjectN5QFont13StyleStrategyE'/>
<use f='qtbase-6.5.0/src/gui/text/qfont.h' l='50' c='_Z14qt_getEnumNameN5QFont13StyleStrategyE'/>
<use f='qtbase-6.5.0/src/gui/text/qfont.h' l='189' c='_ZNK5QFont13styleStrategyEv'/>
<use f='qtbase-6.5.0/src/gui/text/qfont.h' l='190' c='_ZN5QFont12setStyleHintENS_9StyleHintENS_13StyleStrategyE'/>
<use f='qtbase-6.5.0/src/gui/text/qfont.h' l='191' c='_ZN5QFont16setStyleStrategyENS_13StyleStrategyE'/>
<use f='qtbase-6.5.0/src/gui/text/qtextformat.h' l='500' c='_ZN15QTextCharFormat16setFontStyleHintEN5QFont9StyleHintENS0_13StyleStrategyE'/>
<use f='qtbase-6.5.0/src/gui/text/qtextformat.h' l='502' c='_ZN15QTextCharFormat20setFontStyleStrategyEN5QFont13StyleStrategyE'/>
<use f='qtbase-6.5.0/src/gui/text/qtextformat.h' l='506' c='_ZNK15QTextCharFormat17fontStyleStrategyEv'/>
<use f='qtbase-6.5.0/src/gui/text/qtextformat.h' l='507' c='_ZNK15QTextCharFormat17fontStyleStrategyEv'/>
<use f='qtbase-6.5.0/src/gui/text/qfont.cpp' l='1370' c='_ZNK5QFont13styleStrategyEv'/>
<use f='qtbase-6.5.0/src/gui/text/qfont.cpp' l='1372' c='_ZNK5QFont13styleStrategyEv'/>
<use f='qtbase-6.5.0/src/gui/text/qfont.cpp' l='1473' c='_ZN5QFont12setStyleHintENS_9StyleHintENS_13StyleStrategyE'/>
<use f='qtbase-6.5.0/src/gui/text/qfont.cpp' l='1477' c='_ZN5QFont12setStyleHintENS_9StyleHintENS_13StyleStrategyE'/>
<use f='qtbase-6.5.0/src/gui/text/qfont.cpp' l='1494' c='_ZN5QFont16setStyleStrategyENS_13StyleStrategyE'/>
<use f='qtbase-6.5.0/src/gui/text/qfont.cpp' l='1497' c='_ZN5QFont16setStyleStrategyENS_13StyleStrategyE'/>
<use f='qtbase-6.5.0/src/gui/text/qfont.cpp' l='2166' c='_ZN5QFont10fromStringERK7QString'/>
<doc f='qtbase-6.5.0/src/gui/text/qfont.cpp' l='1422'>/*!
    \enum QFont::StyleStrategy

    The style strategy tells the \l{QFont}{font matching} algorithm
    what type of fonts should be used to find an appropriate default
    family.

    The following strategies are available:

    \value PreferDefault the default style strategy. It does not prefer
           any type of font.
    \value PreferBitmap prefers bitmap fonts (as opposed to outline
           fonts).
    \value PreferDevice prefers device fonts.
    \value PreferOutline prefers outline fonts (as opposed to bitmap fonts).
    \value ForceOutline forces the use of outline fonts.
    \value NoAntialias don&apos;t antialias the fonts.
    \value NoSubpixelAntialias avoid subpixel antialiasing on the fonts if possible.
    \value PreferAntialias antialias if possible.
    \value NoFontMerging If the font selected for a certain writing system
           does not contain a character requested to draw, then Qt automatically chooses a similar
           looking font that contains the character. The NoFontMerging flag disables this feature.
           Please note that enabling this flag will not prevent Qt from automatically picking a
           suitable font when the selected font does not support the writing system of the text.
    \value PreferNoShaping Sometimes, a font will apply complex rules to a set of characters in
           order to display them correctly. In some writing systems, such as Brahmic scripts, this is
           required in order for the text to be legible, but in e.g. Latin script, it is merely
           a cosmetic feature. The PreferNoShaping flag will disable all such features when they
           are not required, which will improve performance in most cases (since Qt 5.10).

    Any of these may be OR-ed with one of these flags:

    \value PreferMatch prefer an exact match. The font matcher will try to
           use the exact font size that has been specified.
    \value PreferQuality prefer the best quality font. The font matcher
           will use the nearest standard point size that the font
           supports.
*/</doc>
<use f='qtbase-6.5.0/src/gui/text/qtextformat.cpp' l='386' c='_ZNK18QTextFormatPrivate10recalcFontEv'/>
