<dec f='qtbase-6.5.0/src/gui/kernel/qplatformgraphicsbuffer.h' l='50' type='bool QPlatformGraphicsBuffer::lock(QPlatformGraphicsBuffer::AccessTypes access, const QRect &amp; rect = QRect())'/>
<def f='qtbase-6.5.0/src/gui/kernel/qplatformgraphicsbuffer.cpp' l='117' ll='124' type='bool QPlatformGraphicsBuffer::lock(QPlatformGraphicsBuffer::AccessTypes access, const QRect &amp; rect = QRect())'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qplatformgraphicsbuffer.cpp' l='102'>/*!
    Before the data can be retrieved or before a buffer can be bound to a
    texture it needs to be locked. This is a separate function call since this
    operation might be time consuming, and it would not be satisfactory to do
    it per function call.

    \a access is the access type wanted.

    \a rect is the subrect which is desired to be locked. This
    argument has a no less than semantic, meaning more (if not all) of the buffer
    can be locked. An empty QRect is interpreted as entire buffer should be locked.

    Return true on successfully locking all AccessTypes specified \a access
    otherwise returns false and no locks have been granted.
*/</doc>
<use f='qtbase-6.5.0/src/gui/kernel/qplatformgraphicsbufferhelper.cpp' l='62' u='c' c='_ZN29QPlatformGraphicsBufferHelper20lockAndBindToTextureEP23QPlatformGraphicsBufferPbS2_RK5QRect'/>
<use f='qtbase-6.5.0/src/gui/kernel/qplatformgraphicsbufferhelper.cpp' l='71' u='c' c='_ZN29QPlatformGraphicsBufferHelper20lockAndBindToTextureEP23QPlatformGraphicsBufferPbS2_RK5QRect'/>
<use f='qtbase-6.5.0/src/gui/painting/qbackingstoredefaultcompositor.cpp' l='496' u='c' c='_ZN30QBackingStoreDefaultCompositor5flushEP21QPlatformBackingStoreP4QRhiP13QRhiSwapChainP7QWindowdRK7QRegionRK6QPointP20QPlatformTextureListb'/>
