<dec f='qtbase-6.5.0/src/testlib/qtestcase.h' l='423' type='bool QTest::currentTestResolved()'/>
<def f='qtbase-6.5.0/src/testlib/qtestcase.cpp' l='3062' ll='3065' type='bool QTest::currentTestResolved()'/>
<doc f='qtbase-6.5.0/src/testlib/qtestcase.cpp' l='3049'>/*!
    \since 6.5
    Returns \c true if the current test function has failed or skipped.

    This applies if the test has failed or exercised a skip. When it is true,
    the test function should return early. In particular, the \c{QTRY_*} macros
    and the test event loop terminate their loops early if executed during the
    test function (but not its cleanup()). After a test has called a helper
    function that uses this module&apos;s macros, it can use this function to test
    whether to return early.

    \sa QTest::currentTestFailed()
*/</doc>
<use f='qtbase-6.5.0/src/testlib/qtesteventloop.h' l='63' u='c' c='_ZN14QTestEventLoop14enterLoopMSecsEi'/>
