<dec f='qtbase-6.5.0/src/gui/image/qimage.h' l='251' type='static QImage QImage::fromData(QByteArrayView data, const char * format = nullptr)'/>
<use f='qtbase-6.5.0/src/gui/image/qimage.h' l='254' u='c' c='_ZN6QImage8fromDataERK10QByteArrayPKc'/>
<use f='qtbase-6.5.0/src/gui/image/qimage.cpp' l='3783' u='c' c='_ZN6QImage12loadFromDataE14QByteArrayViewPKc'/>
<def f='qtbase-6.5.0/src/gui/image/qimage.cpp' l='3823' ll='3830' type='static QImage QImage::fromData(QByteArrayView data, const char * format = nullptr)'/>
<use f='qtbase-6.5.0/src/gui/image/qimage.cpp' l='3842' u='c' c='_ZN6QImage8fromDataEPKhiPKc'/>
<doc f='qtbase-6.5.0/src/gui/image/qimage.cpp' l='3808'>/*!
    \since 6.2

    Constructs an image from the given QByteArrayView \a data. The loader attempts to read the image
    using the specified \a format. If \a format is not specified (which is the default), the loader
    probes the data for a header to guess the file format.

    If \a format is specified, it must be one of the values returned by
    QImageReader::supportedImageFormats().

    If the loading of the image fails, the image returned will be a null image.

    \sa load(), save(), {QImage#Reading and Writing Image Files}{Reading and Writing Image Files}
 */</doc>
