<dec f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='1567' type='void QRhiResourceUpdateBatch::readBackBuffer(QRhiBuffer * buf, quint32 offset, quint32 size, QRhiBufferReadbackResult * result)'/>
<def f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='6063' ll='6070' type='void QRhiResourceUpdateBatch::readBackBuffer(QRhiBuffer * buf, quint32 offset, quint32 size, QRhiBufferReadbackResult * result)'/>
<doc f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='6039'>/*!
    Enqueues reading back a region of the QRhiBuffer \a buf. The size of the
    region is specified by \a size in bytes, \a offset is the offset in bytes
    to start reading from.

    A readback is asynchronous. \a result contains a callback that is invoked
    when the operation has completed. The data is provided in
    QRhiBufferReadbackResult::data. Upon successful completion that QByteArray
    will have a size equal to \a size. On failure the QByteArray will be empty.

    \note Reading buffers with a usage different than QRhiBuffer::UniformBuffer
    is supported only when the QRhi::ReadBackNonUniformBuffer feature is
    reported as supported.

   \note The asynchronous readback is guaranteed to have completed when one of
   the following conditions is met: \l{QRhi::finish()}{finish()} has been
   called; or, at least \c N frames have been \l{QRhi::endFrame()}{submitted},
   including the frame that issued the readback operation, and the
   \l{QRhi::beginFrame()}{recording of a new frame} has been started, where \c
   N is the \l{QRhi::resourceLimit()}{resource limit value} returned for
   QRhi::MaxAsyncReadbackFrames.

   \sa readBackTexture(), QRhi::isFeatureSupported(), QRhi::resourceLimit()
 */</doc>
