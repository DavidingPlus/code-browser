<dec f='qtbase-6.5.0/src/corelib/itemmodels/qabstractitemmodel.h' l='276' type='bool QAbstractItemModel::insertRows(int row, int count, const QModelIndex &amp; parent = QModelIndex())'/>
<use f='qtbase-6.5.0/src/corelib/itemmodels/qabstractitemmodel.h' l='407' u='c' c='_ZN18QAbstractItemModel9insertRowEiRK11QModelIndex'/>
<def f='qtbase-6.5.0/src/corelib/itemmodels/qabstractitemmodel.cpp' l='2284' ll='2287' type='bool QAbstractItemModel::insertRows(int , int , const QModelIndex &amp;  = QModelIndex())'/>
<use f='qtbase-6.5.0/src/corelib/itemmodels/qabstractitemmodel.cpp' l='2797' u='c' c='_ZN18QAbstractItemModel10decodeDataEiiRK11QModelIndexR11QDataStream'/>
<use f='qtbase-6.5.0/src/corelib/itemmodels/qabstractitemmodel.cpp' l='2814' u='c' c='_ZN18QAbstractItemModel10decodeDataEiiRK11QModelIndexR11QDataStream'/>
<doc f='qtbase-6.5.0/src/corelib/itemmodels/qabstractitemmodel.cpp' l='2257'>/*!
    \note The base class implementation of this function does nothing and
    returns \c{false}.

    On models that support this, inserts \a count rows into the model before
    the given \a row. Items in the new row will be children of the item
    represented by the \a parent model index.

    If \a row is 0, the rows are prepended to any existing rows in the parent.

    If \a row is rowCount(), the rows are appended to any existing rows in the
    parent.

    If \a parent has no children, a single column with \a count rows is
    inserted.

    Returns \c{true} if the rows were successfully inserted; otherwise returns
    \c{false}.

    If you implement your own model, you can reimplement this function if you
    want to support insertions. Alternatively, you can provide your own API for
    altering the data. In either case, you will need to call
    beginInsertRows() and endInsertRows() to notify other components that the
    model has changed.

    \sa insertColumns(), removeRows(), beginInsertRows(), endInsertRows()
*/</doc>
<ovr f='qtbase-6.5.0/src/corelib/itemmodels/qidentityproxymodel.cpp' l='114' c='_ZN19QIdentityProxyModel10insertRowsEiiRK11QModelIndex'/>
<use f='qtbase-6.5.0/src/corelib/itemmodels/qidentityproxymodel.cpp' l='118' u='c' c='_ZN19QIdentityProxyModel10insertRowsEiiRK11QModelIndex'/>
<ovr f='qtbase-6.5.0/src/corelib/itemmodels/qsortfilterproxymodel.cpp' l='2353' c='_ZN21QSortFilterProxyModel10insertRowsEiiRK11QModelIndex'/>
<use f='qtbase-6.5.0/src/corelib/itemmodels/qsortfilterproxymodel.cpp' l='2367' u='c' c='_ZN21QSortFilterProxyModel10insertRowsEiiRK11QModelIndex'/>
<ovr f='qtbase-6.5.0/src/corelib/itemmodels/qstringlistmodel.cpp' l='221' c='_ZN16QStringListModel10insertRowsEiiRK11QModelIndex'/>
<ovr f='qtbase-6.5.0/src/corelib/itemmodels/qtransposeproxymodel.cpp' l='339' c='_ZN20QTransposeProxyModel10insertRowsEiiRK11QModelIndex'/>
<use f='qtbase-6.5.0/src/corelib/itemmodels/qtransposeproxymodel.cpp' l='382' u='c' c='_ZN20QTransposeProxyModel13insertColumnsEiiRK11QModelIndex'/>
<ovr f='qtbase-6.5.0/src/gui/itemmodels/qstandarditemmodel.cpp' l='2936' c='_ZN18QStandardItemModel10insertRowsEiiRK11QModelIndex'/>
<ovr f='qtbase-6.5.0/src/sql/models/qsqltablemodel.cpp' l='1106' c='_ZN14QSqlTableModel10insertRowsEiiRK11QModelIndex'/>
<ovr f='qtbase-6.5.0/src/widgets/itemviews/qlistwidget.cpp' l='221' c='_ZN10QListModel10insertRowsEiiRK11QModelIndex'/>
<ovr f='qtbase-6.5.0/src/widgets/itemviews/qtablewidget.cpp' l='28' c='_ZN11QTableModel10insertRowsEiiRK11QModelIndex'/>
<ovr f='qtbase-6.5.0/src/widgets/itemviews/qtreewidget.cpp' l='407' c='_ZN10QTreeModel10insertRowsEiiRK11QModelIndex'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qcombobox.cpp' l='2253' u='c' c='_ZN9QComboBox10insertItemEiRK5QIconRK7QStringRK8QVariant'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qcombobox.cpp' l='2306' u='c' c='_ZN9QComboBox11insertItemsEiRK5QListI7QStringE'/>
