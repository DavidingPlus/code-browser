<inh f='qtbase-6.5.0/src/widgets/widgets/qabstractspinbox.h' l='20' c='QAbstractSpinBox'/>
<def f='qtbase-6.5.0/src/widgets/widgets/qspinbox.h' l='15' ll='78'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qspinbox.h' l='76' c='_ZN8QSpinBoxC1ERKS_'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qspinbox.h' l='76' c='_ZN8QSpinBoxaSERKS_'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qspinbox.h' l='76' c='_ZN8QSpinBoxaSERKS_'/>
<size>40</size>
<smbr r='QSpinBox::staticMetaObject' t='const QMetaObject'/>
<fun r='_ZNK8QSpinBox10metaObjectEv'/>
<fun r='_ZN8QSpinBox11qt_metacastEPKc'/>
<fun r='_ZN8QSpinBox11qt_metacallEN11QMetaObject4CallEiPPv'/>
<fun r='_ZN8QSpinBox2trEPKcS1_i'/>
<fun r='_ZN8QSpinBox18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv'/>
<fun r='_ZN8QSpinBoxC1EP7QWidget'/>
<fun r='_ZN8QSpinBoxD1Ev'/>
<fun r='_ZNK8QSpinBox5valueEv'/>
<fun r='_ZNK8QSpinBox6prefixEv'/>
<fun r='_ZN8QSpinBox9setPrefixERK7QString'/>
<fun r='_ZNK8QSpinBox6suffixEv'/>
<fun r='_ZN8QSpinBox9setSuffixERK7QString'/>
<fun r='_ZNK8QSpinBox9cleanTextEv'/>
<fun r='_ZNK8QSpinBox10singleStepEv'/>
<fun r='_ZN8QSpinBox13setSingleStepEi'/>
<fun r='_ZNK8QSpinBox7minimumEv'/>
<fun r='_ZN8QSpinBox10setMinimumEi'/>
<fun r='_ZNK8QSpinBox7maximumEv'/>
<fun r='_ZN8QSpinBox10setMaximumEi'/>
<fun r='_ZN8QSpinBox8setRangeEii'/>
<fun r='_ZNK8QSpinBox8stepTypeEv'/>
<fun r='_ZN8QSpinBox11setStepTypeEN16QAbstractSpinBox8StepTypeE'/>
<fun r='_ZNK8QSpinBox18displayIntegerBaseEv'/>
<fun r='_ZN8QSpinBox21setDisplayIntegerBaseEi'/>
<fun r='_ZN8QSpinBox5eventEP6QEvent'/>
<fun r='_ZNK8QSpinBox8validateER7QStringRi'/>
<fun r='_ZNK8QSpinBox13valueFromTextERK7QString'/>
<fun r='_ZNK8QSpinBox13textFromValueEi'/>
<fun r='_ZNK8QSpinBox5fixupER7QString'/>
<fun r='_ZN8QSpinBox8setValueEi'/>
<fun r='_ZN8QSpinBox12valueChangedEi'/>
<fun r='_ZN8QSpinBox11textChangedERK7QString'/>
<fun r='_ZN8QSpinBoxC1ERKS_'/>
<fun r='_ZN8QSpinBox6d_funcEv'/>
<fun r='_ZNK8QSpinBox6d_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/accessible/rangecontrols_p.h' l='94' c='_ZNK18QAccessibleSpinBox7spinBoxEv'/>
<use f='qtbase-6.5.0/src/widgets/accessible/rangecontrols.cpp' l='228' c='_ZNK18QAccessibleSpinBox7spinBoxEv'/>
<use f='qtbase-6.5.0/src/widgets/accessible/rangecontrols.cpp' l='230' c='_ZNK18QAccessibleSpinBox7spinBoxEv'/>
<size>40</size>
<ovr f='qtbase-6.5.0/src/widgets/dialogs/qcolordialog.cpp' l='969' c='QtPrivate::QColSpinBox'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qcolordialog.cpp' l='969'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qcolordialog.cpp' l='973' c='_ZN9QtPrivate11QColSpinBoxC1EP7QWidget'/>
<size>40</size>
<ovr f='qtbase-6.5.0/src/widgets/dialogs/qinputdialog.cpp' l='64' c='QInputDialogSpinBox'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qinputdialog.cpp' l='64'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qinputdialog.cpp' l='70' c='_ZN19QInputDialogSpinBoxC1EP7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qinputdialog.cpp' l='172'/>
<size>40</size>
<use f='qtbase-6.5.0/src/widgets/itemviews/qabstractitemview.cpp' l='4415' c='_ZN24QAbstractItemViewPrivate17selectAllInEditorEP7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qabstractitemview.cpp' l='4415' c='_ZN24QAbstractItemViewPrivate17selectAllInEditorEP7QWidget'/>
<size>40</size>
<ovr f='qtbase-6.5.0/src/widgets/itemviews/qitemeditorfactory.cpp' l='53' c='QUIntSpinBox'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qitemeditorfactory.cpp' l='53'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qitemeditorfactory.cpp' l='59' c='_ZN12QUIntSpinBoxC1EP7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qitemeditorfactory.cpp' l='216' c='_ZNK25QDefaultItemEditorFactory12createEditorEiP7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qitemeditorfactory.cpp' l='223' c='_ZNK25QDefaultItemEditorFactory12createEditorEiP7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qitemeditorfactory.cpp' l='223' c='_ZNK25QDefaultItemEditorFactory12createEditorEiP7QWidget'/>
<size>40</size>
<use f='qtbase-6.5.0/src/widgets/widgets/qcalendarwidget.cpp' l='1668'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qcalendarwidget.cpp' l='1772' c='_ZN22QCalendarWidgetPrivate19createNavigationBarEP7QWidget'/>
<size>40</size>
<use f='qtbase-6.5.0/src/widgets/widgets/qspinbox.cpp' l='29' c='_ZN15QSpinBoxPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qspinbox.cpp' l='29' c='_ZN15QSpinBoxPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qspinbox.cpp' l='29' c='_ZNK15QSpinBoxPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qspinbox.cpp' l='29' c='_ZNK15QSpinBoxPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qspinbox.cpp' l='29'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qspinbox.cpp' l='40' c='_ZN15QSpinBoxPrivate4initEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qspinbox.cpp' l='1037' c='_ZN15QSpinBoxPrivate11emitSignalsE10EmitPolicyRK8QVariant'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qspinbox.cpp' l='1054' c='_ZNK15QSpinBoxPrivate13textFromValueERK8QVariant'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qspinbox.cpp' l='1064' c='_ZNK15QSpinBoxPrivate13valueFromTextERK7QString'/>
<size>40</size>
<doc f='qtbase-6.5.0/src/widgets/widgets/qspinbox.cpp' l='78'>/*!
    \class QSpinBox
    \brief The QSpinBox class provides a spin box widget.

    \ingroup basicwidgets
    \inmodule QtWidgets

    \image windows-spinbox.png

    QSpinBox is designed to handle integers and discrete sets of
    values (e.g., month names); use QDoubleSpinBox for floating point
    values.

    QSpinBox allows the user to choose a value by clicking the up/down
    buttons or pressing up/down on the keyboard to increase/decrease
    the value currently displayed. The user can also type the value in
    manually. The spin box supports integer values but can be extended to
    use different strings with validate(), textFromValue() and valueFromText().

    Every time the value changes QSpinBox emits valueChanged() and
    textChanged() signals, the former providing a int and the latter
    a QString. The textChanged() signal provides the value with both
    prefix() and suffix().
    The current value can be fetched with value() and set with setValue().

    Clicking the up/down buttons or using the keyboard accelerator&apos;s
    up and down arrows will increase or decrease the current value in
    steps of size singleStep(). If you want to change this behaviour you
    can reimplement the virtual function stepBy(). The minimum and
    maximum value and the step size can be set using one of the
    constructors, and can be changed later with setMinimum(),
    setMaximum() and setSingleStep().

    Most spin boxes are directional, but QSpinBox can also operate as
    a circular spin box, i.e. if the range is 0-99 and the current
    value is 99, clicking &quot;up&quot; will give 0 if wrapping() is set to
    true. Use setWrapping() if you want circular behavior.

    The displayed value can be prepended and appended with arbitrary
    strings indicating, for example, currency or the unit of
    measurement. See setPrefix() and setSuffix(). The text in the spin
    box is retrieved with text() (which includes any prefix() and
    suffix()), or with cleanText() (which has no prefix(), no suffix()
    and no leading or trailing whitespace).

    It is often desirable to give the user a special (often default)
    choice in addition to the range of numeric values. See
    setSpecialValueText() for how to do this with QSpinBox.

    \section1 Subclassing QSpinBox

    If using prefix(), suffix(), and specialValueText() don&apos;t provide
    enough control, you subclass QSpinBox and reimplement
    valueFromText() and textFromValue(). For example, here&apos;s the code
    for a custom spin box that allows the user to enter icon sizes
    (e.g., &quot;32 x 32&quot;):

    \snippet widgets/icons/iconsizespinbox.cpp 1
    \codeline
    \snippet widgets/icons/iconsizespinbox.cpp 2

    See the \l{widgets/icons}{Icons} example for the full source
    code.

    \sa QDoubleSpinBox, QDateTimeEdit, QSlider, {Spin Boxes Example}
*/</doc>
<fun r='_ZN8QSpinBoxC1EP7QWidget'/>
<fun r='_ZN8QSpinBoxD1Ev'/>
<fun r='_ZNK8QSpinBox5valueEv'/>
<fun r='_ZN8QSpinBox8setValueEi'/>
<fun r='_ZNK8QSpinBox6prefixEv'/>
<fun r='_ZN8QSpinBox9setPrefixERK7QString'/>
<fun r='_ZNK8QSpinBox6suffixEv'/>
<fun r='_ZN8QSpinBox9setSuffixERK7QString'/>
<fun r='_ZNK8QSpinBox9cleanTextEv'/>
<fun r='_ZNK8QSpinBox10singleStepEv'/>
<fun r='_ZN8QSpinBox13setSingleStepEi'/>
<fun r='_ZNK8QSpinBox7minimumEv'/>
<fun r='_ZN8QSpinBox10setMinimumEi'/>
<fun r='_ZNK8QSpinBox7maximumEv'/>
<fun r='_ZN8QSpinBox10setMaximumEi'/>
<fun r='_ZN8QSpinBox8setRangeEii'/>
<fun r='_ZN8QSpinBox11setStepTypeEN16QAbstractSpinBox8StepTypeE'/>
<fun r='_ZNK8QSpinBox8stepTypeEv'/>
<fun r='_ZNK8QSpinBox18displayIntegerBaseEv'/>
<fun r='_ZN8QSpinBox21setDisplayIntegerBaseEi'/>
<fun r='_ZNK8QSpinBox13textFromValueEi'/>
<fun r='_ZNK8QSpinBox13valueFromTextERK7QString'/>
<fun r='_ZNK8QSpinBox8validateER7QStringRi'/>
<fun r='_ZNK8QSpinBox5fixupER7QString'/>
<fun r='_ZN8QSpinBox5eventEP6QEvent'/>
