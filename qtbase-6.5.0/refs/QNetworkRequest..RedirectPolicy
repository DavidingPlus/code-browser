<def f='qtbase-6.5.0/src/network/access/qnetworkrequest.h' l='89' ll='94'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkrequest.h' l='172' c='_Z27qRegisterNormalizedMetaTypeRK10QByteArray'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkrequest.h' l='172'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkrequest.h' l='172'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkrequest.h' l='172' c='_ZN11QMetaTypeIdIN15QNetworkRequest14RedirectPolicyEE14qt_metatype_idEv'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkrequest.h' l='172' c='_ZN11QMetaTypeIdIN15QNetworkRequest14RedirectPolicyEE14qt_metatype_idEv'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkrequest.h' l='172' c='_ZN11QMetaTypeIdIN15QNetworkRequest14RedirectPolicyEE14qt_metatype_idEv'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.h' l='106' c='_ZN21QNetworkAccessManager17setRedirectPolicyEN15QNetworkRequest14RedirectPolicyE'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.h' l='107' c='_ZNK21QNetworkAccessManager14redirectPolicyEv'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkrequest_p.h' l='105' c='_ZN19QHttpNetworkRequest17setRedirectPolicyEN15QNetworkRequest14RedirectPolicyE'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkrequest_p.h' l='106' c='_ZNK19QHttpNetworkRequest14redirectPolicyEv'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkrequest_p.h' l='155'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkrequest.cpp' l='210' c='_ZN19QHttpNetworkRequest17setRedirectPolicyEN15QNetworkRequest14RedirectPolicyE'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkrequest.cpp' l='215' c='_ZNK19QHttpNetworkRequest14redirectPolicyEv'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager_p.h' l='114'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='1021' c='_ZN21QNetworkAccessManager17setRedirectPolicyEN15QNetworkRequest14RedirectPolicyE'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='1034' c='_ZNK21QNetworkAccessManager14redirectPolicyEv'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyhttpimpl.cpp' l='677' c='_ZN28QNetworkReplyHttpImplPrivate11postRequestERK15QNetworkRequest'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkrequest.cpp' l='33' c='_Z59qRegisterNormalizedMetaType_QNetworkRequest__RedirectPolicyRK10QByteArray'/>
<doc f='qtbase-6.5.0/src/network/access/qnetworkrequest.cpp' l='366'>/*!
    \enum QNetworkRequest::RedirectPolicy
    \since 5.9

    Indicates whether the Network Access API should automatically follow a
    HTTP redirect response or not.

    \value ManualRedirectPolicy        Not following any redirects.

    \value NoLessSafeRedirectPolicy    Default value: Only &quot;http&quot;-&gt;&quot;http&quot;,
                                       &quot;http&quot; -&gt; &quot;https&quot; or &quot;https&quot; -&gt; &quot;https&quot; redirects
                                       are allowed.

    \value SameOriginRedirectPolicy    Require the same protocol, host and port.
                                       Note, http://example.com and http://example.com:80
                                       will fail with this policy (implicit/explicit ports
                                       are considered to be a mismatch).

    \value UserVerifiedRedirectPolicy  Client decides whether to follow each
                                       redirect by handling the redirected()
                                       signal, emitting redirectAllowed() on
                                       the QNetworkReply object to allow
                                       the redirect or aborting/finishing it to
                                       reject the redirect.  This can be used,
                                       for example, to ask the user whether to
                                       accept the redirect, or to decide
                                       based on some app-specific configuration.

    \note When Qt handles redirects it will, for legacy and compatibility
    reasons, issue the redirected request using GET when the server returns
    a 301 or 302 response, regardless of the original method used, unless it was
    HEAD.
*/</doc>
