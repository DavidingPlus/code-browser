<dec f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jpeglib.h' l='1041' type='jvirt_barray_ptr * jpeg_read_coefficients(j_decompress_ptr cinfo)'/>
<def f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdtrans.c' l='48' ll='92' macro='1' type='jvirt_barray_ptr * jpeg_read_coefficients(j_decompress_ptr cinfo)'/>
<doc f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdtrans.c' l='26'>/*
 * Read the coefficient arrays from a JPEG file.
 * jpeg_read_header must be completed before calling this.
 *
 * The entire image is read into a set of virtual coefficient-block arrays,
 * one per component.  The return value is a pointer to the array of
 * virtual-array descriptors.  These can be manipulated directly via the
 * JPEG memory manager, or handed off to jpeg_write_coefficients().
 * To release the memory occupied by the virtual arrays, call
 * jpeg_finish_decompress() when done with the data.
 *
 * An alternative usage is to simply obtain access to the coefficient arrays
 * during a buffered-image-mode decompression operation.  This is allowed
 * after any jpeg_finish_output() call.  The arrays can be accessed until
 * jpeg_finish_decompress() is called.  (Note that any call to the library
 * may reposition the arrays, so don&apos;t rely on access_virt_barray() results
 * to stay valid across library calls.)
 *
 * Returns NULL if suspended.  This case need be checked only if
 * a suspending data source is used.
 */</doc>
