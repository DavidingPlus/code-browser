<dec f='qtbase-6.5.0/src/corelib/io/qprocess.h' l='218' type='void QProcess::terminate()'/>
<def f='qtbase-6.5.0/src/corelib/io/qprocess.cpp' l='2337' ll='2341' type='void QProcess::terminate()'/>
<doc f='qtbase-6.5.0/src/corelib/io/qprocess.cpp' l='2321'>/*!
    Attempts to terminate the process.

    The process may not exit as a result of calling this function (it is given
    the chance to prompt the user for any unsaved files, etc).

    On Windows, terminate() posts a WM_CLOSE message to all top-level windows
    of the process and then to the main thread of the process itself. On Unix
    and \macos the \c SIGTERM signal is sent.

    Console applications on Windows that do not run an event loop, or whose
    event loop does not handle the WM_CLOSE message, can only be terminated by
    calling kill().

    \sa kill()
*/</doc>
