<dec f='qtbase-6.5.0/src/widgets/widgets/qlabel.h' l='41' type='QString QLabel::text() const'/>
<use f='qtbase-6.5.0/src/widgets/accessible/qaccessiblewidget.cpp' l='50' u='c' c='_ZL11buddyStringPK7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/accessible/simplewidgets.cpp' l='447' u='c' c='_ZNK18QAccessibleDisplay4textEN11QAccessible4TextE'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qinputdialog.cpp' l='576' u='c' c='_ZNK12QInputDialog9labelTextEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qmessagebox.cpp' l='1246' u='c' c='_ZNK11QMessageBox4textEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qmessagebox.cpp' l='1365' u='c' c='_ZN11QMessageBox13setTextFormatEN2Qt10TextFormatE'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qmessagebox.cpp' l='2578' u='c' c='_ZNK11QMessageBox15informativeTextEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qprogressdialog.cpp' l='332' u='c' c='_ZNK15QProgressDialog9labelTextEv'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qtooltip.cpp' l='161' u='c' c='_ZN9QTipLabel18restartExpireTimerEi'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qtooltip.cpp' l='193' u='c' c='_ZN9QTipLabel10updateSizeERK6QPoint'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qtooltip.cpp' l='392' u='c' c='_ZN9QTipLabel10tipChangedERK6QPointRK7QStringP7QObject'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qtooltip.cpp' l='510' u='c' c='_ZN8QToolTip4textEv'/>
<def f='qtbase-6.5.0/src/widgets/widgets/qlabel.cpp' l='315' ll='319' type='QString QLabel::text() const'/>
<doc f='qtbase-6.5.0/src/widgets/widgets/qlabel.cpp' l='234'>/*!
    \property QLabel::text
    \brief the label&apos;s text

    If no text has been set this will return an empty string. Setting
    the text clears any previous content.

    The text will be interpreted either as plain text or as rich
    text, depending on the text format setting; see setTextFormat().
    The default setting is Qt::AutoText; i.e. QLabel will try to
    auto-detect the format of the text set.
    See \l {Supported HTML Subset} for the definition of rich text.

    If a buddy has been set, the buddy mnemonic key is updated
    from the new text.

    Note that QLabel is well-suited to display small rich text
    documents, such as small documents that get their document
    specific settings (font, text color, link color) from the label&apos;s
    palette and font properties. For large documents, use QTextEdit
    in read-only mode instead. QTextEdit can also provide a scroll bar
    when necessary.

    \note This function enables mouse tracking if \a text contains rich
    text.

    \sa setTextFormat(), setBuddy(), alignment
*/</doc>
