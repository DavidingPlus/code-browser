<dec f='qtbase-6.5.0/src/dbus/qdbusservicewatcher.h' l='53' type='void QDBusServiceWatcher::setConnection(const QDBusConnection &amp; connection)'/>
<def f='qtbase-6.5.0/src/dbus/qdbusservicewatcher.cpp' l='366' ll='372' type='void QDBusServiceWatcher::setConnection(const QDBusConnection &amp; connection)'/>
<doc f='qtbase-6.5.0/src/dbus/qdbusservicewatcher.cpp' l='354'>/*!
    Sets the D-Bus connection that this object is attached to be \a
    connection. All services watched will be transferred to this connection.

    Note that QDBusConnection objects are reference counted:
    QDBusServiceWatcher will keep a reference for this connection while it
    exists. The connection is not closed until the reference count drops to
    zero, so this will ensure that any notifications are received while this
    QDBusServiceWatcher object exists.

    \sa connection()
*/</doc>
<use f='qtbase-6.5.0/src/plugins/platforminputcontexts/ibus/qibusplatforminputcontext.cpp' l='57' u='c' c='_ZN32QIBusPlatformInputContextPrivateD1Ev'/>
<use f='qtbase-6.5.0/src/plugins/platforminputcontexts/ibus/qibusplatforminputcontext.cpp' l='527' u='c' c='_ZN25QIBusPlatformInputContext13socketChangedERK7QString'/>
<use f='qtbase-6.5.0/src/plugins/platforminputcontexts/ibus/qibusplatforminputcontext.cpp' l='670' u='c' c='_ZN32QIBusPlatformInputContextPrivate14createBusProxyEv'/>
