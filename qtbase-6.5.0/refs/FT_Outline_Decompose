<dec f='include/freetype2/freetype/ftoutln.h' l='124' type='FT_Error FT_Outline_Decompose(FT_Outline * outline, const FT_Outline_Funcs * func_interface, void * user)'/>
<doc f='include/freetype2/freetype/ftoutln.h' l='85'>/**************************************************************************
   *
   * @function:
   *   FT_Outline_Decompose
   *
   * @description:
   *   Walk over an outline&apos;s structure to decompose it into individual
   *   segments and Bezier arcs.  This function also emits &apos;move to&apos;
   *   operations to indicate the start of new contours in the outline.
   *
   * @input:
   *   outline ::
   *     A pointer to the source target.
   *
   *   func_interface ::
   *     A table of &apos;emitters&apos;, i.e., function pointers called during
   *     decomposition to indicate path operations.
   *
   * @inout:
   *   user ::
   *     A typeless pointer that is passed to each emitter during the
   *     decomposition.  It can be used to store the state during the
   *     decomposition.
   *
   * @return:
   *   FreeType error code.  0~means success.
   *
   * @note:
   *   A contour that contains a single point only is represented by a &apos;move
   *   to&apos; operation followed by &apos;line to&apos; to the same point.  In most cases,
   *   it is best to filter this out before using the outline for stroking
   *   purposes (otherwise it would result in a visible dot when round caps
   *   are used).
   *
   *   Similarly, the function returns success for an empty outline also
   *   (doing nothing, this is, not calling any emitter); if necessary, you
   *   should filter this out, too.
   */</doc>
