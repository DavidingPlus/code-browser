<dec f='qtbase-6.5.0/src/sql/kernel/qsqlresult.h' l='57' type='void QSqlResult::setForwardOnly(bool forward)'/>
<ovr f='qtbase-6.5.0/src/sql/kernel/qsqlnulldriver_p.h' l='47' c='_ZN14QSqlNullResult14setForwardOnlyEb'/>
<use f='qtbase-6.5.0/src/sql/kernel/qsqlquery.cpp' l='895' u='c' c='_ZN9QSqlQuery14setForwardOnlyEb'/>
<def f='qtbase-6.5.0/src/sql/kernel/qsqlresult.cpp' l='538' ll='542' type='void QSqlResult::setForwardOnly(bool forward)'/>
<doc f='qtbase-6.5.0/src/sql/kernel/qsqlresult.cpp' l='514'>/*!
    Sets forward only mode to \a forward. If \a forward is true, only
    fetchNext() is allowed for navigating the results. Forward only
    mode needs much less memory since results do not have to be
    cached. By default, this feature is disabled.

    Setting forward only to false is a suggestion to the database engine,
    which has the final say on whether a result set is forward only or
    scrollable. isForwardOnly() will always return the correct status of
    the result set.

    \note Calling setForwardOnly after execution of the query will result
    in unexpected results at best, and crashes at worst.

    \note To make sure the forward-only query completed successfully,
    the application should check lastError() for an error not only after
    executing the query, but also after navigating the query results.

    \warning PostgreSQL: While navigating the query results in forward-only
    mode, do not execute any other SQL command on the same database
    connection. This will cause the query results to be lost.

    \sa isForwardOnly(), fetchNext(), QSqlQuery::setForwardOnly()
*/</doc>
