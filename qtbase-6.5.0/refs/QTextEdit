<inh f='qtbase-6.5.0/src/widgets/widgets/qabstractscrollarea.h' l='19' c='QAbstractScrollArea'/>
<def f='qtbase-6.5.0/src/widgets/widgets/qtextedit.h' l='26' ll='294'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit.h' l='282' c='_ZN9QTextEditC1ERKS_'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit.h' l='282' c='_ZN9QTextEditaSERKS_'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit.h' l='282' c='_ZN9QTextEditaSERKS_'/>
<ovr f='qtbase-6.5.0/src/widgets/widgets/qtextbrowser.h' l='17' c='QTextBrowser'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextbrowser.h' l='17'/>
<size>40</size>
<smbr r='QTextEdit::staticMetaObject' t='const QMetaObject'/>
<fun r='_ZNK9QTextEdit10metaObjectEv'/>
<fun r='_ZN9QTextEdit11qt_metacastEPKc'/>
<fun r='_ZN9QTextEdit11qt_metacallEN11QMetaObject4CallEiPPv'/>
<fun r='_ZN9QTextEdit2trEPKcS1_i'/>
<fun r='_ZN9QTextEdit18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv'/>
<fun r='_ZN9QTextEdit6d_funcEv'/>
<fun r='_ZNK9QTextEdit6d_funcEv'/>
<fun r='_ZN9QTextEditC1EP7QWidget'/>
<fun r='_ZN9QTextEditC1ERK7QStringP7QWidget'/>
<fun r='_ZN9QTextEditD1Ev'/>
<fun r='_ZN9QTextEdit11setDocumentEP13QTextDocument'/>
<fun r='_ZNK9QTextEdit8documentEv'/>
<fun r='_ZN9QTextEdit18setPlaceholderTextERK7QString'/>
<fun r='_ZNK9QTextEdit15placeholderTextEv'/>
<fun r='_ZN9QTextEdit13setTextCursorERK11QTextCursor'/>
<fun r='_ZNK9QTextEdit10textCursorEv'/>
<fun r='_ZNK9QTextEdit10isReadOnlyEv'/>
<fun r='_ZN9QTextEdit11setReadOnlyEb'/>
<fun r='_ZN9QTextEdit23setTextInteractionFlagsE6QFlagsIN2Qt19TextInteractionFlagEE'/>
<fun r='_ZNK9QTextEdit20textInteractionFlagsEv'/>
<fun r='_ZNK9QTextEdit13fontPointSizeEv'/>
<fun r='_ZNK9QTextEdit10fontFamilyEv'/>
<fun r='_ZNK9QTextEdit10fontWeightEv'/>
<fun r='_ZNK9QTextEdit13fontUnderlineEv'/>
<fun r='_ZNK9QTextEdit10fontItalicEv'/>
<fun r='_ZNK9QTextEdit9textColorEv'/>
<fun r='_ZNK9QTextEdit19textBackgroundColorEv'/>
<fun r='_ZNK9QTextEdit11currentFontEv'/>
<fun r='_ZNK9QTextEdit9alignmentEv'/>
<fun r='_ZN9QTextEdit22mergeCurrentCharFormatERK15QTextCharFormat'/>
<fun r='_ZN9QTextEdit20setCurrentCharFormatERK15QTextCharFormat'/>
<fun r='_ZNK9QTextEdit17currentCharFormatEv'/>
<fun r='_ZNK9QTextEdit14autoFormattingEv'/>
<fun r='_ZN9QTextEdit17setAutoFormattingE6QFlagsINS_18AutoFormattingFlagEE'/>
<fun r='_ZNK9QTextEdit15tabChangesFocusEv'/>
<fun r='_ZN9QTextEdit18setTabChangesFocusEb'/>
<fun r='_ZN9QTextEdit16setDocumentTitleERK7QString'/>
<fun r='_ZNK9QTextEdit13documentTitleEv'/>
<fun r='_ZNK9QTextEdit17isUndoRedoEnabledEv'/>
<fun r='_ZN9QTextEdit18setUndoRedoEnabledEb'/>
<fun r='_ZNK9QTextEdit12lineWrapModeEv'/>
<fun r='_ZN9QTextEdit15setLineWrapModeENS_12LineWrapModeE'/>
<fun r='_ZNK9QTextEdit21lineWrapColumnOrWidthEv'/>
<fun r='_ZN9QTextEdit24setLineWrapColumnOrWidthEi'/>
<fun r='_ZNK9QTextEdit12wordWrapModeEv'/>
<fun r='_ZN9QTextEdit15setWordWrapModeEN11QTextOption8WrapModeE'/>
<fun r='_ZN9QTextEdit4findERK7QString6QFlagsIN13QTextDocument8FindFlagEE'/>
<fun r='_ZN9QTextEdit4findERK18QRegularExpression6QFlagsIN13QTextDocument8FindFlagEE'/>
<fun r='_ZNK9QTextEdit11toPlainTextEv'/>
<fun r='_ZNK9QTextEdit6toHtmlEv'/>
<fun r='_ZNK9QTextEdit10toMarkdownE6QFlagsIN13QTextDocument15MarkdownFeatureEE'/>
<fun r='_ZN9QTextEdit19ensureCursorVisibleEv'/>
<fun r='_ZN9QTextEdit12loadResourceEiRK4QUrl'/>
<fun r='_ZN9QTextEdit25createStandardContextMenuEv'/>
<fun r='_ZN9QTextEdit25createStandardContextMenuERK6QPoint'/>
<fun r='_ZNK9QTextEdit17cursorForPositionERK6QPoint'/>
<fun r='_ZNK9QTextEdit10cursorRectERK11QTextCursor'/>
<fun r='_ZNK9QTextEdit10cursorRectEv'/>
<fun r='_ZNK9QTextEdit8anchorAtERK6QPoint'/>
<fun r='_ZNK9QTextEdit13overwriteModeEv'/>
<fun r='_ZN9QTextEdit16setOverwriteModeEb'/>
<fun r='_ZNK9QTextEdit15tabStopDistanceEv'/>
<fun r='_ZN9QTextEdit18setTabStopDistanceEd'/>
<fun r='_ZNK9QTextEdit11cursorWidthEv'/>
<fun r='_ZN9QTextEdit14setCursorWidthEi'/>
<fun r='_ZNK9QTextEdit14acceptRichTextEv'/>
<fun r='_ZN9QTextEdit17setAcceptRichTextEb'/>
<fun r='_ZN9QTextEdit18setExtraSelectionsERK5QListINS_14ExtraSelectionEE'/>
<fun r='_ZNK9QTextEdit15extraSelectionsEv'/>
<fun r='_ZN9QTextEdit10moveCursorEN11QTextCursor13MoveOperationENS0_8MoveModeE'/>
<fun r='_ZNK9QTextEdit8canPasteEv'/>
<fun r='_ZNK9QTextEdit5printEP17QPagedPaintDevice'/>
<fun r='_ZNK9QTextEdit16inputMethodQueryEN2Qt16InputMethodQueryE'/>
<fun r='_ZNK9QTextEdit16inputMethodQueryEN2Qt16InputMethodQueryE8QVariant'/>
<fun r='_ZN9QTextEdit16setFontPointSizeEd'/>
<fun r='_ZN9QTextEdit13setFontFamilyERK7QString'/>
<fun r='_ZN9QTextEdit13setFontWeightEi'/>
<fun r='_ZN9QTextEdit16setFontUnderlineEb'/>
<fun r='_ZN9QTextEdit13setFontItalicEb'/>
<fun r='_ZN9QTextEdit12setTextColorERK6QColor'/>
<fun r='_ZN9QTextEdit22setTextBackgroundColorERK6QColor'/>
<fun r='_ZN9QTextEdit14setCurrentFontERK5QFont'/>
<fun r='_ZN9QTextEdit12setAlignmentE6QFlagsIN2Qt13AlignmentFlagEE'/>
<fun r='_ZN9QTextEdit12setPlainTextERK7QString'/>
<fun r='_ZN9QTextEdit7setHtmlERK7QString'/>
<fun r='_ZN9QTextEdit11setMarkdownERK7QString'/>
<fun r='_ZN9QTextEdit7setTextERK7QString'/>
<fun r='_ZN9QTextEdit3cutEv'/>
<fun r='_ZN9QTextEdit4copyEv'/>
<fun r='_ZN9QTextEdit5pasteEv'/>
<fun r='_ZN9QTextEdit4undoEv'/>
<fun r='_ZN9QTextEdit4redoEv'/>
<fun r='_ZN9QTextEdit5clearEv'/>
<fun r='_ZN9QTextEdit9selectAllEv'/>
<fun r='_ZN9QTextEdit15insertPlainTextERK7QString'/>
<fun r='_ZN9QTextEdit10insertHtmlERK7QString'/>
<fun r='_ZN9QTextEdit6appendERK7QString'/>
<fun r='_ZN9QTextEdit14scrollToAnchorERK7QString'/>
<fun r='_ZN9QTextEdit6zoomInEi'/>
<fun r='_ZN9QTextEdit7zoomOutEi'/>
<fun r='_ZN9QTextEdit11textChangedEv'/>
<fun r='_ZN9QTextEdit13undoAvailableEb'/>
<fun r='_ZN9QTextEdit13redoAvailableEb'/>
<fun r='_ZN9QTextEdit24currentCharFormatChangedERK15QTextCharFormat'/>
<fun r='_ZN9QTextEdit13copyAvailableEb'/>
<fun r='_ZN9QTextEdit16selectionChangedEv'/>
<fun r='_ZN9QTextEdit21cursorPositionChangedEv'/>
<fun r='_ZN9QTextEdit5eventEP6QEvent'/>
<fun r='_ZN9QTextEdit10timerEventEP11QTimerEvent'/>
<fun r='_ZN9QTextEdit13keyPressEventEP9QKeyEvent'/>
<fun r='_ZN9QTextEdit15keyReleaseEventEP9QKeyEvent'/>
<fun r='_ZN9QTextEdit11resizeEventEP12QResizeEvent'/>
<fun r='_ZN9QTextEdit10paintEventEP11QPaintEvent'/>
<fun r='_ZN9QTextEdit15mousePressEventEP11QMouseEvent'/>
<fun r='_ZN9QTextEdit14mouseMoveEventEP11QMouseEvent'/>
<fun r='_ZN9QTextEdit17mouseReleaseEventEP11QMouseEvent'/>
<fun r='_ZN9QTextEdit21mouseDoubleClickEventEP11QMouseEvent'/>
<fun r='_ZN9QTextEdit18focusNextPrevChildEb'/>
<fun r='_ZN9QTextEdit16contextMenuEventEP17QContextMenuEvent'/>
<fun r='_ZN9QTextEdit14dragEnterEventEP15QDragEnterEvent'/>
<fun r='_ZN9QTextEdit14dragLeaveEventEP15QDragLeaveEvent'/>
<fun r='_ZN9QTextEdit13dragMoveEventEP14QDragMoveEvent'/>
<fun r='_ZN9QTextEdit9dropEventEP10QDropEvent'/>
<fun r='_ZN9QTextEdit12focusInEventEP11QFocusEvent'/>
<fun r='_ZN9QTextEdit13focusOutEventEP11QFocusEvent'/>
<fun r='_ZN9QTextEdit9showEventEP10QShowEvent'/>
<fun r='_ZN9QTextEdit11changeEventEP6QEvent'/>
<fun r='_ZN9QTextEdit10wheelEventEP11QWheelEvent'/>
<fun r='_ZNK9QTextEdit27createMimeDataFromSelectionEv'/>
<fun r='_ZNK9QTextEdit21canInsertFromMimeDataEPK9QMimeData'/>
<fun r='_ZN9QTextEdit18insertFromMimeDataEPK9QMimeData'/>
<fun r='_ZN9QTextEdit16inputMethodEventEP17QInputMethodEvent'/>
<fun r='_ZN9QTextEditC1ER16QTextEditPrivateP7QWidget'/>
<fun r='_ZN9QTextEdit16scrollContentsByEii'/>
<fun r='_ZN9QTextEdit15doSetTextCursorERK11QTextCursor'/>
<fun r='_ZN9QTextEdit7zoomInFEf'/>
<fun r='_ZN9QTextEditC1ERKS_'/>
<use f='qtbase-6.5.0/src/widgets/accessible/qaccessiblewidgets_p.h' l='143' c='_ZNK19QAccessibleTextEdit8textEditEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit_p.h' l='43' c='_ZN16QTextEditPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit_p.h' l='43' c='_ZN16QTextEditPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit_p.h' l='43' c='_ZNK16QTextEditPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit_p.h' l='43' c='_ZNK16QTextEditPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit_p.h' l='43'/>
<use f='qtbase-6.5.0/src/widgets/accessible/qaccessiblewidgets.cpp' l='199' c='_ZNK19QAccessibleTextEdit8textEditEv'/>
<use f='qtbase-6.5.0/src/widgets/accessible/qaccessiblewidgets.cpp' l='201' c='_ZNK19QAccessibleTextEdit8textEditEv'/>
<use f='qtbase-6.5.0/src/widgets/accessible/qaccessiblewidgets.cpp' l='273' c='_ZN19QAccessibleTextEdit17scrollToSubstringEii'/>
<size>40</size>
<use f='qtbase-6.5.0/src/widgets/dialogs/qerrormessage.cpp' l='42'/>
<ovr f='qtbase-6.5.0/src/widgets/dialogs/qerrormessage.cpp' l='94' c='(anonymousnamespace)::QErrorMessageTextView'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qerrormessage.cpp' l='94'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qerrormessage.cpp' l='98' c='_ZN12_GLOBAL__N_121QErrorMessageTextViewC1EP7QWidget'/>
<size>40</size>
<ovr f='qtbase-6.5.0/src/widgets/dialogs/qmessagebox.cpp' l='62' c='QMessageBoxDetailsText::TextEdit'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qmessagebox.cpp' l='62'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qmessagebox.cpp' l='65' c='_ZN22QMessageBoxDetailsText8TextEditC1EP7QWidget'/>
<size>40</size>
<use f='qtbase-6.5.0/src/widgets/itemviews/qabstractitemdelegate.cpp' l='394' c='_ZL21editorHandlesKeyEventP7QWidgetPK9QKeyEvent'/>
<size>40</size>
<use f='qtbase-6.5.0/src/widgets/styles/qpixmapstyle.cpp' l='108' c='_ZN12QPixmapStyle6polishEP7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/styles/qpixmapstyle.cpp' l='239' c='_ZNK12QPixmapStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/styles/qpixmapstyle.cpp' l='401' c='_ZNK12QPixmapStyle11pixelMetricEN6QStyle11PixelMetricEPK12QStyleOptionPK7QWidget'/>
<size>40</size>
<use f='qtbase-6.5.0/src/widgets/styles/qstylesheetstyle.cpp' l='2132' c='_ZNK16QStyleSheetStyle10renderRuleEPK7QObjectPK12QStyleOptioni'/>
<use f='qtbase-6.5.0/src/widgets/styles/qstylesheetstyle.cpp' l='2132' c='_ZNK16QStyleSheetStyle10renderRuleEPK7QObjectPK12QStyleOptioni'/>
<use f='qtbase-6.5.0/src/widgets/styles/qstylesheetstyle.cpp' l='2569' c='_ZL19extendedPseudoClassPK7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/styles/qstylesheetstyle.cpp' l='2569' c='_ZL19extendedPseudoClassPK7QWidget'/>
<size>40</size>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextbrowser.cpp' l='684' c='_ZN12QTextBrowserC1EP7QWidget'/>
<size>40</size>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit.cpp' l='44' c='_ZL23shouldEnableInputMethodP9QTextEdit'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit.cpp' l='59' c='_ZNK16QTextEditControl27createMimeDataFromSelectionEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit.cpp' l='59' c='_ZNK16QTextEditControl27createMimeDataFromSelectionEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit.cpp' l='65' c='_ZNK16QTextEditControl21canInsertFromMimeDataEPK9QMimeData'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit.cpp' l='65' c='_ZNK16QTextEditControl21canInsertFromMimeDataEPK9QMimeData'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit.cpp' l='71' c='_ZN16QTextEditControl18insertFromMimeDataEPK9QMimeData'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit.cpp' l='71' c='_ZN16QTextEditControl18insertFromMimeDataEPK9QMimeData'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit.cpp' l='78' c='_ZN16QTextEditControl12loadResourceEiRK4QUrl'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit.cpp' l='122' c='_ZN16QTextEditPrivate4initERK7QString'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit.cpp' l='193' c='_ZN16QTextEditPrivate24_q_cursorPositionChangedEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit.cpp' l='204' c='_ZN16QTextEditPrivate32_q_hoveredBlockWithMarkerChangedERK10QTextBlock'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit.cpp' l='1614' c='_ZN16QTextEditPrivate27_q_currentCharFormatChangedERK15QTextCharFormat'/>
<size>40</size>
<doc f='qtbase-6.5.0/src/widgets/widgets/qtextedit.cpp' l='343'>/*!
    \class QTextEdit
    \brief The QTextEdit class provides a widget that is used to edit and display
    both plain and rich text.

    \ingroup richtext-processing
    \inmodule QtWidgets

    \tableofcontents

    \section1 Introduction and Concepts

    QTextEdit is an advanced WYSIWYG viewer/editor supporting rich
    text formatting using HTML-style tags, or Markdown format. It is optimized
    to handle large documents and to respond quickly to user input.

    QTextEdit works on paragraphs and characters. A paragraph is a
    formatted string which is word-wrapped to fit into the width of
    the widget. By default when reading plain text, one newline
    signifies a paragraph. A document consists of zero or more
    paragraphs. The words in the paragraph are aligned in accordance
    with the paragraph&apos;s alignment. Paragraphs are separated by hard
    line breaks. Each character within a paragraph has its own
    attributes, for example, font and color.

    QTextEdit can display images, lists and tables. If the text is
    too large to view within the text edit&apos;s viewport, scroll bars will
    appear. The text edit can load both plain text and rich text files.
    Rich text can be described using a subset of HTML 4 markup; refer to the
    \l {Supported HTML Subset} page for more information.

    If you just need to display a small piece of rich text use QLabel.

    The rich text support in Qt is designed to provide a fast, portable and
    efficient way to add reasonable online help facilities to
    applications, and to provide a basis for rich text editors. If
    you find the HTML support insufficient for your needs you may consider
    the use of Qt WebKit, which provides a full-featured web browser
    widget.

    The shape of the mouse cursor on a QTextEdit is Qt::IBeamCursor by default.
    It can be changed through the viewport()&apos;s cursor property.

    \section1 Using QTextEdit as a Display Widget

    QTextEdit can display a large HTML subset, including tables and
    images.

    The text can be set or replaced using \l setHtml() which deletes any
    existing text and replaces it with the text passed in the
    setHtml() call. If you call setHtml() with legacy HTML, and then
    call toHtml(), the text that is returned may have different markup,
    but will render the same. The entire text can be deleted with clear().

    Text can also be set or replaced using \l setMarkdown(), and the same
    caveats apply: if you then call \l toMarkdown(), the text that is returned
    may be different, but the meaning is preserved as much as possible.
    Markdown with some embedded HTML can be parsed, with the same limitations
    that \l setHtml() has; but \l toMarkdown() only writes &quot;pure&quot; Markdown,
    without any embedded HTML.

    Text itself can be inserted using the QTextCursor class or using the
    convenience functions insertHtml(), insertPlainText(), append() or
    paste(). QTextCursor is also able to insert complex objects like tables
    or lists into the document, and it deals with creating selections
    and applying changes to selected text.

    By default the text edit wraps words at whitespace to fit within
    the text edit widget. The setLineWrapMode() function is used to
    specify the kind of line wrap you want, or \l NoWrap if you don&apos;t
    want any wrapping. Call setLineWrapMode() to set a fixed pixel width
    \l FixedPixelWidth, or character column (e.g. 80 column) \l
    FixedColumnWidth with the pixels or columns specified with
    setLineWrapColumnOrWidth(). If you use word wrap to the widget&apos;s width
    \l WidgetWidth, you can specify whether to break on whitespace or
    anywhere with setWordWrapMode().

    The find() function can be used to find and select a given string
    within the text.

    If you want to limit the total number of paragraphs in a QTextEdit,
    as for example it is often useful in a log viewer, then you can use
    QTextDocument&apos;s maximumBlockCount property for that.

    \section2 Read-only Key Bindings

    When QTextEdit is used read-only the key bindings are limited to
    navigation, and text may only be selected with the mouse:
    \table
    \header \li Keypresses \li Action
    \row \li Up        \li Moves one line up.
    \row \li Down        \li Moves one line down.
    \row \li Left        \li Moves one character to the left.
    \row \li Right        \li Moves one character to the right.
    \row \li PageUp        \li Moves one (viewport) page up.
    \row \li PageDown        \li Moves one (viewport) page down.
    \row \li Home        \li Moves to the beginning of the text.
    \row \li End                \li Moves to the end of the text.
    \row \li Alt+Wheel
         \li Scrolls the page horizontally (the Wheel is the mouse wheel).
    \row \li Ctrl+Wheel        \li Zooms the text.
    \row \li Ctrl+A            \li Selects all text.
    \endtable

    The text edit may be able to provide some meta-information. For
    example, the documentTitle() function will return the text from
    within HTML \c{&lt;title&gt;} tags.

    \note Zooming into HTML documents only works if the font-size is not set to a fixed size.

    \section1 Using QTextEdit as an Editor

    All the information about using QTextEdit as a display widget also
    applies here.

    The current char format&apos;s attributes are set with setFontItalic(),
    setFontWeight(), setFontUnderline(), setFontFamily(),
    setFontPointSize(), setTextColor() and setCurrentFont(). The current
    paragraph&apos;s alignment is set with setAlignment().

    Selection of text is handled by the QTextCursor class, which provides
    functionality for creating selections, retrieving the text contents or
    deleting selections. You can retrieve the object that corresponds with
    the user-visible cursor using the textCursor() method. If you want to set
    a selection in QTextEdit just create one on a QTextCursor object and
    then make that cursor the visible cursor using setTextCursor(). The selection
    can be copied to the clipboard with copy(), or cut to the clipboard with
    cut(). The entire text can be selected using selectAll().

    When the cursor is moved and the underlying formatting attributes change,
    the currentCharFormatChanged() signal is emitted to reflect the new attributes
    at the new cursor position.

    The textChanged() signal is emitted whenever the text changes (as a result
    of setText() or through the editor itself).

    QTextEdit holds a QTextDocument object which can be retrieved using the
    document() method. You can also set your own document object using setDocument().

    QTextDocument provides an \l {QTextDocument::isModified()}{isModified()}
    function which will return true if the text has been modified since it was
    either loaded or since the last call to setModified with false as argument.
    In addition it provides methods for undo and redo.

    \section2 Drag and Drop

    QTextEdit also supports custom drag and drop behavior. By default,
    QTextEdit will insert plain text, HTML and rich text when the user drops
    data of these MIME types onto a document. Reimplement
    canInsertFromMimeData() and insertFromMimeData() to add support for
    additional MIME types.

    For example, to allow the user to drag and drop an image onto a QTextEdit,
    you could the implement these functions in the following way:

    \snippet textdocument-imagedrop/textedit.cpp 0

    We add support for image MIME types by returning true. For all other
    MIME types, we use the default implementation.

    \snippet textdocument-imagedrop/textedit.cpp 1

    We unpack the image from the QVariant held by the MIME source and insert
    it into the document as a resource.

    \section2 Editing Key Bindings

    The list of key bindings which are implemented for editing:
    \table
    \header \li Keypresses \li Action
    \row \li Backspace \li Deletes the character to the left of the cursor.
    \row \li Delete \li Deletes the character to the right of the cursor.
    \row \li Ctrl+C \li Copy the selected text to the clipboard.
    \row \li Ctrl+Insert \li Copy the selected text to the clipboard.
    \row \li Ctrl+K \li Deletes to the end of the line.
    \row \li Ctrl+V \li Pastes the clipboard text into text edit.
    \row \li Shift+Insert \li Pastes the clipboard text into text edit.
    \row \li Ctrl+X \li Deletes the selected text and copies it to the clipboard.
    \row \li Shift+Delete \li Deletes the selected text and copies it to the clipboard.
    \row \li Ctrl+Z \li Undoes the last operation.
    \row \li Ctrl+Y \li Redoes the last operation.
    \row \li Left \li Moves the cursor one character to the left.
    \row \li Ctrl+Left \li Moves the cursor one word to the left.
    \row \li Right \li Moves the cursor one character to the right.
    \row \li Ctrl+Right \li Moves the cursor one word to the right.
    \row \li Up \li Moves the cursor one line up.
    \row \li Down \li Moves the cursor one line down.
    \row \li PageUp \li Moves the cursor one page up.
    \row \li PageDown \li Moves the cursor one page down.
    \row \li Home \li Moves the cursor to the beginning of the line.
    \row \li Ctrl+Home \li Moves the cursor to the beginning of the text.
    \row \li End \li Moves the cursor to the end of the line.
    \row \li Ctrl+End \li Moves the cursor to the end of the text.
    \row \li Alt+Wheel \li Scrolls the page horizontally (the Wheel is the mouse wheel).
    \endtable

    To select (mark) text hold down the Shift key whilst pressing one
    of the movement keystrokes, for example, \e{Shift+Right}
    will select the character to the right, and \e{Shift+Ctrl+Right} will select the word to the right, etc.

    \sa QTextDocument, QTextCursor, {Qt Widgets - Application Example},
        {Syntax Highlighter Example}, {Rich Text Processing}
*/</doc>
<fun r='_ZN9QTextEditC1EP7QWidget'/>
<fun r='_ZN9QTextEditC1ER16QTextEditPrivateP7QWidget'/>
<fun r='_ZN9QTextEditC1ERK7QStringP7QWidget'/>
<fun r='_ZN9QTextEditD1Ev'/>
<fun r='_ZNK9QTextEdit13fontPointSizeEv'/>
<fun r='_ZNK9QTextEdit10fontFamilyEv'/>
<fun r='_ZNK9QTextEdit10fontWeightEv'/>
<fun r='_ZNK9QTextEdit13fontUnderlineEv'/>
<fun r='_ZNK9QTextEdit10fontItalicEv'/>
<fun r='_ZNK9QTextEdit9textColorEv'/>
<fun r='_ZNK9QTextEdit19textBackgroundColorEv'/>
<fun r='_ZNK9QTextEdit11currentFontEv'/>
<fun r='_ZN9QTextEdit12setAlignmentE6QFlagsIN2Qt13AlignmentFlagEE'/>
<fun r='_ZNK9QTextEdit9alignmentEv'/>
<fun r='_ZN9QTextEdit11setDocumentEP13QTextDocument'/>
<fun r='_ZNK9QTextEdit8documentEv'/>
<fun r='_ZNK9QTextEdit15placeholderTextEv'/>
<fun r='_ZN9QTextEdit18setPlaceholderTextERK7QString'/>
<fun r='_ZN9QTextEdit13setTextCursorERK11QTextCursor'/>
<fun r='_ZN9QTextEdit15doSetTextCursorERK11QTextCursor'/>
<fun r='_ZNK9QTextEdit10textCursorEv'/>
<fun r='_ZN9QTextEdit13setFontFamilyERK7QString'/>
<fun r='_ZN9QTextEdit16setFontPointSizeEd'/>
<fun r='_ZN9QTextEdit13setFontWeightEi'/>
<fun r='_ZN9QTextEdit16setFontUnderlineEb'/>
<fun r='_ZN9QTextEdit13setFontItalicEb'/>
<fun r='_ZN9QTextEdit12setTextColorERK6QColor'/>
<fun r='_ZN9QTextEdit22setTextBackgroundColorERK6QColor'/>
<fun r='_ZN9QTextEdit14setCurrentFontERK5QFont'/>
<fun r='_ZN9QTextEdit4undoEv'/>
<fun r='_ZN9QTextEdit4redoEv'/>
<fun r='_ZN9QTextEdit3cutEv'/>
<fun r='_ZN9QTextEdit4copyEv'/>
<fun r='_ZN9QTextEdit5pasteEv'/>
<fun r='_ZN9QTextEdit5clearEv'/>
<fun r='_ZN9QTextEdit9selectAllEv'/>
<fun r='_ZN9QTextEdit5eventEP6QEvent'/>
<fun r='_ZN9QTextEdit10timerEventEP11QTimerEvent'/>
<fun r='_ZN9QTextEdit12setPlainTextERK7QString'/>
<fun r='_ZNK9QTextEdit11toPlainTextEv'/>
<fun r='_ZN9QTextEdit7setHtmlERK7QString'/>
<fun r='_ZNK9QTextEdit6toHtmlEv'/>
<fun r='_ZN9QTextEdit11setMarkdownERK7QString'/>
<fun r='_ZNK9QTextEdit10toMarkdownE6QFlagsIN13QTextDocument15MarkdownFeatureEE'/>
<fun r='_ZN9QTextEdit13keyPressEventEP9QKeyEvent'/>
<fun r='_ZN9QTextEdit15keyReleaseEventEP9QKeyEvent'/>
<fun r='_ZN9QTextEdit12loadResourceEiRK4QUrl'/>
<fun r='_ZN9QTextEdit11resizeEventEP12QResizeEvent'/>
<fun r='_ZN9QTextEdit10paintEventEP11QPaintEvent'/>
<fun r='_ZN9QTextEdit15mousePressEventEP11QMouseEvent'/>
<fun r='_ZN9QTextEdit14mouseMoveEventEP11QMouseEvent'/>
<fun r='_ZN9QTextEdit17mouseReleaseEventEP11QMouseEvent'/>
<fun r='_ZN9QTextEdit21mouseDoubleClickEventEP11QMouseEvent'/>
<fun r='_ZN9QTextEdit18focusNextPrevChildEb'/>
<fun r='_ZN9QTextEdit16contextMenuEventEP17QContextMenuEvent'/>
<fun r='_ZN9QTextEdit14dragEnterEventEP15QDragEnterEvent'/>
<fun r='_ZN9QTextEdit14dragLeaveEventEP15QDragLeaveEvent'/>
<fun r='_ZN9QTextEdit13dragMoveEventEP14QDragMoveEvent'/>
<fun r='_ZN9QTextEdit9dropEventEP10QDropEvent'/>
<fun r='_ZN9QTextEdit16inputMethodEventEP17QInputMethodEvent'/>
<fun r='_ZN9QTextEdit16scrollContentsByEii'/>
<fun r='_ZNK9QTextEdit16inputMethodQueryEN2Qt16InputMethodQueryE'/>
<fun r='_ZNK9QTextEdit16inputMethodQueryEN2Qt16InputMethodQueryE8QVariant'/>
<fun r='_ZN9QTextEdit12focusInEventEP11QFocusEvent'/>
<fun r='_ZN9QTextEdit13focusOutEventEP11QFocusEvent'/>
<fun r='_ZN9QTextEdit9showEventEP10QShowEvent'/>
<fun r='_ZN9QTextEdit11changeEventEP6QEvent'/>
<fun r='_ZN9QTextEdit10wheelEventEP11QWheelEvent'/>
<fun r='_ZN9QTextEdit25createStandardContextMenuEv'/>
<fun r='_ZN9QTextEdit25createStandardContextMenuERK6QPoint'/>
<fun r='_ZNK9QTextEdit17cursorForPositionERK6QPoint'/>
<fun r='_ZNK9QTextEdit10cursorRectERK11QTextCursor'/>
<fun r='_ZNK9QTextEdit10cursorRectEv'/>
<fun r='_ZNK9QTextEdit8anchorAtERK6QPoint'/>
<fun r='_ZNK9QTextEdit13overwriteModeEv'/>
<fun r='_ZN9QTextEdit16setOverwriteModeEb'/>
<fun r='_ZNK9QTextEdit15tabStopDistanceEv'/>
<fun r='_ZN9QTextEdit18setTabStopDistanceEd'/>
<fun r='_ZNK9QTextEdit11cursorWidthEv'/>
<fun r='_ZN9QTextEdit14setCursorWidthEi'/>
<fun r='_ZNK9QTextEdit14acceptRichTextEv'/>
<fun r='_ZN9QTextEdit17setAcceptRichTextEb'/>
<fun r='_ZN9QTextEdit18setExtraSelectionsERK5QListINS_14ExtraSelectionEE'/>
<fun r='_ZNK9QTextEdit15extraSelectionsEv'/>
<fun r='_ZNK9QTextEdit27createMimeDataFromSelectionEv'/>
<fun r='_ZNK9QTextEdit21canInsertFromMimeDataEPK9QMimeData'/>
<fun r='_ZN9QTextEdit18insertFromMimeDataEPK9QMimeData'/>
<fun r='_ZNK9QTextEdit10isReadOnlyEv'/>
<fun r='_ZN9QTextEdit11setReadOnlyEb'/>
<fun r='_ZN9QTextEdit23setTextInteractionFlagsE6QFlagsIN2Qt19TextInteractionFlagEE'/>
<fun r='_ZNK9QTextEdit20textInteractionFlagsEv'/>
<fun r='_ZN9QTextEdit22mergeCurrentCharFormatERK15QTextCharFormat'/>
<fun r='_ZN9QTextEdit20setCurrentCharFormatERK15QTextCharFormat'/>
<fun r='_ZNK9QTextEdit17currentCharFormatEv'/>
<fun r='_ZNK9QTextEdit14autoFormattingEv'/>
<fun r='_ZN9QTextEdit17setAutoFormattingE6QFlagsINS_18AutoFormattingFlagEE'/>
<fun r='_ZN9QTextEdit15insertPlainTextERK7QString'/>
<fun r='_ZN9QTextEdit10insertHtmlERK7QString'/>
<fun r='_ZN9QTextEdit14scrollToAnchorERK7QString'/>
<fun r='_ZN9QTextEdit6zoomInEi'/>
<fun r='_ZN9QTextEdit7zoomOutEi'/>
<fun r='_ZN9QTextEdit7zoomInFEf'/>
<fun r='_ZN9QTextEdit10moveCursorEN11QTextCursor13MoveOperationENS0_8MoveModeE'/>
<fun r='_ZNK9QTextEdit8canPasteEv'/>
<fun r='_ZNK9QTextEdit5printEP17QPagedPaintDevice'/>
<fun r='_ZNK9QTextEdit15tabChangesFocusEv'/>
<fun r='_ZN9QTextEdit18setTabChangesFocusEb'/>
<fun r='_ZNK9QTextEdit12lineWrapModeEv'/>
<fun r='_ZN9QTextEdit15setLineWrapModeENS_12LineWrapModeE'/>
<fun r='_ZNK9QTextEdit21lineWrapColumnOrWidthEv'/>
<fun r='_ZN9QTextEdit24setLineWrapColumnOrWidthEi'/>
<fun r='_ZNK9QTextEdit12wordWrapModeEv'/>
<fun r='_ZN9QTextEdit15setWordWrapModeEN11QTextOption8WrapModeE'/>
<fun r='_ZN9QTextEdit4findERK7QString6QFlagsIN13QTextDocument8FindFlagEE'/>
<fun r='_ZN9QTextEdit4findERK18QRegularExpression6QFlagsIN13QTextDocument8FindFlagEE'/>
<fun r='_ZN9QTextEdit7setTextERK7QString'/>
<fun r='_ZN9QTextEdit6appendERK7QString'/>
<fun r='_ZN9QTextEdit19ensureCursorVisibleEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qwidgettextcontrol.cpp' l='3435' c='_ZN28QUnicodeControlCharacterMenu19menuActionTriggeredEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qwidgettextcontrol.cpp' l='3435' c='_ZN28QUnicodeControlCharacterMenu19menuActionTriggeredEv'/>
<size>40</size>
