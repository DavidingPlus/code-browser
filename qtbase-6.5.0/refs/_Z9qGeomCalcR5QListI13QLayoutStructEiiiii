<dec f='qtbase-6.5.0/src/widgets/kernel/qlayoutengine_p.h' l='61' type='void qGeomCalc(QList&lt;QLayoutStruct&gt; &amp; chain, int start, int count, int pos, int space, int spacer = -1)'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qboxlayout.cpp' l='375' u='c' c='_ZN17QBoxLayoutPrivate7calcHfwEi'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qboxlayout.cpp' l='773' u='c' c='_ZN10QBoxLayout11setGeometryERK5QRect'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qformlayout.cpp' l='1768' u='c' c='_ZN11QFormLayout11setGeometryERK5QRect'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qformlayout.cpp' l='1771' u='c' c='_ZN11QFormLayout11setGeometryERK5QRect'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qgridlayout.cpp' l='384' u='c' c='_ZN18QGridLayoutPrivate14heightForWidthEiii'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qgridlayout.cpp' l='624' u='c' c='_ZL18distributeMultiBoxR5QListI13QLayoutStructEiiiiRS_IiEi'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qgridlayout.cpp' l='639' u='c' c='_ZL18distributeMultiBoxR5QListI13QLayoutStructEiiiiRS_IiEi'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qgridlayout.cpp' l='648' u='c' c='_ZL18distributeMultiBoxR5QListI13QLayoutStructEiiiiRS_IiEi'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qgridlayout.cpp' l='909' u='c' c='_ZN18QGridLayoutPrivate10distributeE5QRectii'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qgridlayout.cpp' l='913' u='c' c='_ZN18QGridLayoutPrivate10distributeE5QRectii'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qgridlayout.cpp' l='916' u='c' c='_ZN18QGridLayoutPrivate10distributeE5QRectii'/>
<def f='qtbase-6.5.0/src/widgets/kernel/qlayoutengine.cpp' l='40' ll='306' type='void qGeomCalc(QList&lt;QLayoutStruct&gt; &amp; chain, int start, int count, int pos, int space, int spacer = -1)'/>
<doc f='qtbase-6.5.0/src/widgets/kernel/qlayoutengine.cpp' l='25'>/*
  This is the main workhorse of the QGridLayout. It portions out
  available space to the chain&apos;s children.

  The calculation is done in fixed point: &quot;fixed&quot; variables are
  scaled by a factor of 256.

  If the layout runs &quot;backwards&quot; (i.e. RightToLeft or Up) the layout
  is computed mirror-reversed, and it&apos;s the caller&apos;s responsibility
  do reverse the values before use.

  chain contains input and output parameters describing the geometry.
  count is the count of items in the chain; pos and space give the
  interval (relative to parentWidget topLeft).
*/</doc>
<use f='qtbase-6.5.0/src/widgets/widgets/qdockarealayout.cpp' l='586' u='c' c='_ZN19QDockAreaLayoutInfo8fitItemsEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qdockarealayout.cpp' l='2890' u='c' c='_ZN15QDockAreaLayout9fitLayoutEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qdockarealayout.cpp' l='2891' u='c' c='_ZN15QDockAreaLayout9fitLayoutEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplitter.cpp' l='510' u='c' c='_ZN16QSplitterPrivate8doResizeEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtabbar.cpp' l='517' u='c' c='_ZN14QTabBarPrivate10layoutTabsEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtoolbarlayout.cpp' l='481' u='c' c='_ZN14QToolBarLayout13layoutActionsERK5QSize'/>
