<dec f='qtbase-6.5.0/src/corelib/io/qabstractfileengine_p.h' l='105' type='bool QAbstractFileEngine::mkdir(const QString &amp; dirName, bool createParentDirectories, std::optional&lt;QFile::Permissions&gt; permissions = std::nullopt) const'/>
<def f='qtbase-6.5.0/src/corelib/io/qabstractfileengine.cpp' l='516' ll='523' type='bool QAbstractFileEngine::mkdir(const QString &amp; dirName, bool createParentDirectories, std::optional&lt;QFile::Permissions&gt; permissions = std::nullopt) const'/>
<doc f='qtbase-6.5.0/src/corelib/io/qabstractfileengine.cpp' l='503'>/*!
    Requests that the directory \a dirName be created with the specified \a permissions.
    If \a createParentDirectories is true, then any sub-directories in \a dirName
    that don&apos;t exist must be created. If \a createParentDirectories is false then
    any sub-directories in \a dirName must already exist for the function to
    succeed. If the operation succeeds return true; otherwise return
    false.

    If \a permissions is null then implementation-specific default permissions are
    used.

    \sa setFileName(), rmdir(), isRelativePath()
 */</doc>
<use f='qtbase-6.5.0/src/corelib/io/qdir.cpp' l='1467' u='c' c='_ZNK4QDir5mkdirERK7QString6QFlagsIN11QFileDevice10PermissionEE'/>
<use f='qtbase-6.5.0/src/corelib/io/qdir.cpp' l='1489' u='c' c='_ZNK4QDir5mkdirERK7QString'/>
<use f='qtbase-6.5.0/src/corelib/io/qdir.cpp' l='1541' u='c' c='_ZNK4QDir6mkpathERK7QString'/>
<ovr f='qtbase-6.5.0/src/corelib/io/qfsfileengine.cpp' l='1027' c='_ZNK13QFSFileEngine5mkdirERK7QStringbSt8optionalI6QFlagsIN11QFileDevice10PermissionEEE'/>
