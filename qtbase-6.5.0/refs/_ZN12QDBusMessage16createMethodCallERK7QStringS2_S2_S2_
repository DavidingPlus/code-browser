<dec f='qtbase-6.5.0/src/dbus/qdbusmessage.h' l='44' type='static QDBusMessage QDBusMessage::createMethodCall(const QString &amp; destination, const QString &amp; path, const QString &amp; interface, const QString &amp; method)'/>
<use f='qtbase-6.5.0/src/dbus/qdbusabstractinterface.cpp' l='139' u='c' c='_ZNK29QDBusAbstractInterfacePrivate8propertyERK13QMetaPropertyPv'/>
<use f='qtbase-6.5.0/src/dbus/qdbusabstractinterface.cpp' l='206' u='c' c='_ZN29QDBusAbstractInterfacePrivate11setPropertyERK13QMetaPropertyRK8QVariant'/>
<use f='qtbase-6.5.0/src/dbus/qdbusabstractinterface.cpp' l='455' u='c' c='_ZN22QDBusAbstractInterface20callWithArgumentListEN5QDBus8CallModeERK7QStringRK5QListI8QVariantE'/>
<use f='qtbase-6.5.0/src/dbus/qdbusabstractinterface.cpp' l='489' u='c' c='_ZN22QDBusAbstractInterface25asyncCallWithArgumentListERK7QStringRK5QListI8QVariantE'/>
<use f='qtbase-6.5.0/src/dbus/qdbusabstractinterface.cpp' l='527' u='c' c='_ZN22QDBusAbstractInterface16callWithCallbackERK7QStringRK5QListI8QVariantEP7QObjectPKcSB_'/>
<use f='qtbase-6.5.0/src/dbus/qdbusintegrator.cpp' l='2565' u='c' c='_ZN22QDBusConnectionPrivate19getNameOwnerNoCacheERK7QString'/>
<use f='qtbase-6.5.0/src/dbus/qdbusintegrator.cpp' l='2606' u='c' c='_ZN22QDBusConnectionPrivate14findMetaObjectERK7QStringS2_S2_R10QDBusError'/>
<def f='qtbase-6.5.0/src/dbus/qdbusmessage.cpp' l='400' ll='411' type='static QDBusMessage QDBusMessage::createMethodCall(const QString &amp; service, const QString &amp; path, const QString &amp; interface, const QString &amp; method)'/>
<doc f='qtbase-6.5.0/src/dbus/qdbusmessage.cpp' l='381'>/*!
    Constructs a new DBus message representing a method call.
    A method call always informs its destination address
    (\a service, \a path, \a interface and \a method).

    The DBus bus allows calling a method on a given remote object without specifying the
    destination interface, if the method name is unique. However, if two interfaces on the
    remote object export the same method name, the result is undefined (one of the two may be
    called or an error may be returned).

    When using DBus in a peer-to-peer context (i.e., not on a bus), the \a service parameter is
    optional.

    The QDBusInterface class provides a simpler abstraction to synchronous
    method calling.

    This function returns a QDBusMessage object that can be sent with
    QDBusConnection::call().
*/</doc>
<use f='qtbase-6.5.0/src/gui/platform/unix/dbusmenu/qdbusmenuconnection.cpp' l='98' u='c' c='_ZN19QDBusMenuConnection27registerTrayIconWithWatcherEP13QDBusTrayIcon'/>
<use f='qtbase-6.5.0/src/gui/platform/unix/qgenericunixservices.cpp' l='183' u='c' c='_ZL24xdgDesktopPortalOpenFileRK4QUrlRK7QStringS4_'/>
<use f='qtbase-6.5.0/src/gui/platform/unix/qgenericunixservices.cpp' l='224' u='c' c='_ZL23xdgDesktopPortalOpenUrlRK4QUrlRK7QStringS4_'/>
<use f='qtbase-6.5.0/src/gui/platform/unix/qgenericunixservices.cpp' l='280' u='c' c='_ZL25xdgDesktopPortalSendEmailRK4QUrlRK7QStringS4_'/>
<use f='qtbase-6.5.0/src/gui/platform/unix/qgenericunixservices.cpp' l='331' u='c' c='_ZN12_GLOBAL__N_127XdgDesktopPortalColorPicker9pickColorEv'/>
<use f='qtbase-6.5.0/src/gui/platform/unix/qgenericunixservices.cpp' l='382' u='c' c='_ZN20QGenericUnixServicesC1Ev'/>
<use f='qtbase-6.5.0/src/plugins/platforminputcontexts/ibus/qibusproxy.h' l='78' u='c' c='_ZN10QIBusProxy11GetPropertyE7QString'/>
<use f='qtbase-6.5.0/src/plugins/platformthemes/xdgdesktopportal/qxdgdesktopportalfiledialog.cpp' l='160' u='c' c='_ZN27QXdgDesktopPortalFileDialog10openPortalE6QFlagsIN2Qt10WindowTypeEENS1_14WindowModalityEP7QWindow'/>
<use f='qtbase-6.5.0/src/plugins/platformthemes/xdgdesktopportal/qxdgdesktopportaltheme.cpp' l='100' u='c' c='_ZN22QXdgDesktopPortalThemeC1Ev'/>
<use f='qtbase-6.5.0/src/plugins/platformthemes/xdgdesktopportal/qxdgdesktopportaltheme.cpp' l='116' u='c' c='_ZN22QXdgDesktopPortalThemeC1Ev'/>
