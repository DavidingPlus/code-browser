<dec f='qtbase-6.5.0/src/gui/math3d/qquaternion.h' l='57' type='QQuaternion QQuaternion::normalized() const'/>
<def f='qtbase-6.5.0/src/gui/math3d/qquaternion.cpp' l='227' ll='235' type='QQuaternion QQuaternion::normalized() const'/>
<use f='qtbase-6.5.0/src/gui/math3d/qquaternion.cpp' l='360' u='c' c='_ZN11QQuaternion16fromAxisAndAngleERK9QVector3Df'/>
<use f='qtbase-6.5.0/src/gui/math3d/qquaternion.cpp' l='416' u='c' c='_ZN11QQuaternion16fromAxisAndAngleEffff'/>
<use f='qtbase-6.5.0/src/gui/math3d/qquaternion.cpp' l='737' u='c' c='_ZN11QQuaternion10rotationToERK9QVector3DS2_'/>
<use f='qtbase-6.5.0/src/gui/math3d/qquaternion.cpp' l='924' u='c' c='_ZN11QQuaternion5nlerpERKS_S1_f'/>
<doc f='qtbase-6.5.0/src/gui/math3d/qquaternion.cpp' l='217'>/*!
    Returns the normalized unit form of this quaternion.

    If this quaternion is null, then a null quaternion is returned.
    If the length of the quaternion is very close to 1, then the quaternion
    will be returned as-is.  Otherwise the normalized form of the
    quaternion of length 1 will be returned.

    \sa normalize(), length(), dotProduct()
*/</doc>
