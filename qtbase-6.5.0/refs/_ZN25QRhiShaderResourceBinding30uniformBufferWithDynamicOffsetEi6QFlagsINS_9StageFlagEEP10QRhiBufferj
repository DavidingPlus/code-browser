<dec f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='333' type='static QRhiShaderResourceBinding QRhiShaderResourceBinding::uniformBufferWithDynamicOffset(int binding, QRhiShaderResourceBinding::StageFlags stage, QRhiBuffer * buf, quint32 size)'/>
<def f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='3537' ll='3550' type='static QRhiShaderResourceBinding QRhiShaderResourceBinding::uniformBufferWithDynamicOffset(int binding, QRhiShaderResourceBinding::StageFlags stage, QRhiBuffer * buf, quint32 size)'/>
<doc f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='3515'>/*!
    \return a shader resource binding for the given binding number, pipeline
    stages, and buffer specified by \a binding, \a stage, and \a buf. The
    uniform buffer is assumed to have dynamic offset. The dynamic offset can be
    specified in QRhiCommandBuffer::setShaderResources(), thus allowing using
    varying offset values without creating new bindings for the buffer. The
    size of the bound region is specified by \a size. Like with non-dynamic
    offsets, \c{offset + size} cannot exceed the size of \a buf.

    \note When \a buf is not null, it must have been created with
    QRhiBuffer::UniformBuffer.

    \note \a buf can be null. It is valid to create a
    QRhiShaderResourceBindings with unspecified resources, but such an object
    cannot be used with QRhiCommandBuffer::setShaderResources(). It is however
    suitable for creating pipelines. Such a pipeline must then always be used
    together with another, layout compatible QRhiShaderResourceBindings with
    resources present passed to QRhiCommandBuffer::setShaderResources().

    \note If \a size exceeds the limit reported for QRhi::MaxUniformBufferRange,
    unexpected errors may occur.
 */</doc>
