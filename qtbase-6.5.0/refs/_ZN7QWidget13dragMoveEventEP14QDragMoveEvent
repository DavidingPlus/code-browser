<dec f='qtbase-6.5.0/src/widgets/kernel/qwidget.h' l='690' type='void QWidget::dragMoveEvent(QDragMoveEvent * event)'/>
<ovr f='qtbase-6.5.0/src/widgets/dialogs/qcolordialog.cpp' l='650' c='_ZN9QtPrivate10QColorWell13dragMoveEventEP14QDragMoveEvent'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='9121' u='c' c='_ZN7QWidget5eventEP6QEvent'/>
<def f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='10007' ll='10009' type='void QWidget::dragMoveEvent(QDragMoveEvent * )'/>
<doc f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='9993'>/*!
    \fn void QWidget::dragMoveEvent(QDragMoveEvent *event)

    This event handler is called if a drag is in progress, and when
    any of the following conditions occur: the cursor enters this widget,
    the cursor moves within this widget, or a modifier key is pressed on
    the keyboard while this widget has the focus. The event is passed
    in the \a event parameter.

    See the \l{dnd.html}{Drag-and-drop documentation} for an
    overview of how to provide drag-and-drop in your application.

    \sa QDrag, QDragMoveEvent
*/</doc>
<ovr f='qtbase-6.5.0/src/widgets/widgets/qabstractscrollarea.cpp' l='1281' c='_ZN19QAbstractScrollArea13dragMoveEventEP14QDragMoveEvent'/>
<ovr f='qtbase-6.5.0/src/widgets/widgets/qlineedit.cpp' l='2079' c='_ZN9QLineEdit13dragMoveEventEP14QDragMoveEvent'/>
