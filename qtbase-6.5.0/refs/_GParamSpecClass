<use f='include/glib-2.0/gobject/gparam.h' l='193'/>
<def f='include/glib-2.0/gobject/gparam.h' l='242' ll='260'/>
<size>80</size>
<doc f='include/glib-2.0/gobject/gparam.h' l='223'>/**
 * GParamSpecClass:
 * @g_type_class: the parent class
 * @value_type: the #GValue type for this parameter
 * @finalize: The instance finalization function (optional), should chain 
 *  up to the finalize method of the parent class.
 * @value_set_default: Resets a @value to the default value for this type
 *  (recommended, the default is g_value_reset()), see 
 *  g_param_value_set_default().
 * @value_validate: Ensures that the contents of @value comply with the 
 *  specifications set out by this type (optional), see 
 *  g_param_value_validate().
 * @values_cmp: Compares @value1 with @value2 according to this type
 *  (recommended, the default is memcmp()), see g_param_values_cmp().
 * 
 * The class structure for the GParamSpec type.
 * Normally, GParamSpec classes are filled by
 * g_param_type_register_static().
 */</doc>
<mbr r='_GParamSpecClass::g_type_class' o='0' t='GTypeClass'/>
<mbr r='_GParamSpecClass::value_type' o='64' t='GType'/>
<mbr r='_GParamSpecClass::finalize' o='128' t='void (*)(GParamSpec *)'/>
<mbr r='_GParamSpecClass::value_set_default' o='192' t='void (*)(GParamSpec *, GValue *)'/>
<mbr r='_GParamSpecClass::value_validate' o='256' t='gboolean (*)(GParamSpec *, GValue *)'/>
<mbr r='_GParamSpecClass::values_cmp' o='320' t='gint (*)(GParamSpec *, const GValue *, const GValue *)'/>
<mbr r='_GParamSpecClass::dummy' o='384' t='gpointer[4]'/>
