<dec f='qtbase-6.5.0/src/opengl/qopengltextureblitter.h' l='44' type='static QMatrix4x4 QOpenGLTextureBlitter::targetTransform(const QRectF &amp; target, const QRect &amp; viewport)'/>
<use f='qtbase-6.5.0/src/opengl/qopenglcompositor.cpp' l='171' u='c' c='_ZL11clippedBlitPK20QPlatformTextureListiRK5QRectS4_P21QOpenGLTextureBlitterP10QMatrix4x4'/>
<use f='qtbase-6.5.0/src/opengl/qopenglcompositor.cpp' l='203' u='c' c='_ZN17QOpenGLCompositor6renderEP23QOpenGLCompositorWindow'/>
<use f='qtbase-6.5.0/src/opengl/qopenglcompositor.cpp' l='211' u='c' c='_ZN17QOpenGLCompositor6renderEP23QOpenGLCompositorWindow'/>
<def f='qtbase-6.5.0/src/opengl/qopengltextureblitter.cpp' l='722' ll='740' type='static QMatrix4x4 QOpenGLTextureBlitter::targetTransform(const QRectF &amp; target, const QRect &amp; viewport)'/>
<doc f='qtbase-6.5.0/src/opengl/qopengltextureblitter.cpp' l='710'>/*!
    Calculates a target transform suitable for blit().

    \a target is the target rectangle in pixels. \a viewport describes
    the source dimensions and will in most cases be set to (0, 0,
    image width, image height).

    For unscaled output the size of \a target and \a viewport should
    match.

    \sa blit()
 */</doc>
<use f='qtbase-6.5.0/src/opengl/qopenglwindow.cpp' l='277' u='c' c='_ZN20QOpenGLWindowPrivate8endPaintEv'/>
