<dec f='qtbase-6.5.0/src/gui/painting/qpainter.h' l='277' type='void QPainter::drawPolygon(const QPointF * points, int pointCount, Qt::FillRule fillRule = Qt::OddEvenFill)'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.h' l='501' u='c' c='_ZN8QPainter11drawPolygonERK9QPolygonFN2Qt8FillRuleE'/>
<def f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='4547' ll='4579' type='void QPainter::drawPolygon(const QPointF * points, int pointCount, Qt::FillRule fillRule = Qt::OddEvenFill)'/>
<doc f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='4525'>/*!
    Draws the polygon defined by the first \a pointCount points in the
    array \a points using the current pen and brush.

    \table 100%
    \row
    \li \inlineimage qpainter-polygon.png
    \li
    \snippet code/src_gui_painting_qpainter.cpp 14
    \endtable

    The first point is implicitly connected to the last point, and the
    polygon is filled with the current brush().

    If \a fillRule is Qt::WindingFill, the polygon is filled using the
    winding fill algorithm.  If \a fillRule is Qt::OddEvenFill, the
    polygon is filled using the odd-even fill algorithm. See
    \l{Qt::FillRule} for a more detailed description of these fill
    rules.

    \sa drawConvexPolygon(), drawPolyline(), {Coordinate System}
*/</doc>
<use f='qtbase-6.5.0/src/widgets/styles/qcommonstyle.cpp' l='3714' u='c' c='_ZNK12QCommonStyle18drawComplexControlEN6QStyle14ComplexControlEPK19QStyleOptionComplexP8QPainterPK7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/styles/qwindowsstyle.cpp' l='824' u='c' c='_ZNK13QWindowsStyle13drawPrimitiveEN6QStyle16PrimitiveElementEPK12QStyleOptionP8QPainterPK7QWidget'/>
