<dec f='qtbase-6.5.0/src/network/access/qabstractnetworkcache.h' l='84' type='QIODevice * QAbstractNetworkCache::data(const QUrl &amp; url)'/>
<doc f='qtbase-6.5.0/src/network/access/qabstractnetworkcache.cpp' l='437'>/*!
    \fn QIODevice *QAbstractNetworkCache::data(const QUrl &amp;url) = 0
    Returns the data associated with \a url.

    It is up to the application that requests the data to delete
    the QIODevice when done with it.

    If there is no cache for \a url, the url is invalid, or if there
    is an internal cache error \nullptr is returned.

    In the base class this is a pure virtual function.

    \sa metaData(), prepare()
*/</doc>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccesscachebackend.cpp' l='75' u='c' c='_ZN26QNetworkAccessCacheBackend17sendCacheContentsEv'/>
<ovr f='qtbase-6.5.0/src/network/access/qnetworkdiskcache.cpp' l='359' c='_ZN17QNetworkDiskCache4dataERK4QUrl'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyhttpimpl.cpp' l='1619' u='c' c='_ZN28QNetworkReplyHttpImplPrivate17sendCacheContentsERK21QNetworkCacheMetaData'/>
