<dec f='qtbase-6.5.0/src/3rdparty/harfbuzz-ng/src/hb-subset-cff-common.hh' l='1147' type='bool hb_plan_subset_cff_fdselect(const hb_subset_plan_t * plan, unsigned int fdCount, const CFF::FDSelect &amp; src, unsigned int &amp; subset_fd_count, unsigned int &amp; subset_fdselect_size, unsigned int &amp; subset_fdselect_format, hb_vector_t&lt;CFF::code_pair_t&gt; &amp; fdselect_ranges, hb_inc_bimap_t &amp; fdmap)'/>
<def f='qtbase-6.5.0/src/3rdparty/harfbuzz-ng/src/hb-subset-cff-common.cc' l='48' ll='145' type='bool hb_plan_subset_cff_fdselect(const hb_subset_plan_t * plan, unsigned int fdCount, const CFF::FDSelect &amp; src, unsigned int &amp; subset_fd_count, unsigned int &amp; subset_fdselect_size, unsigned int &amp; subset_fdselect_format, hb_vector_t&lt;CFF::code_pair_t&gt; &amp; fdselect_ranges, hb_inc_bimap_t &amp; fdmap)'/>
<doc f='qtbase-6.5.0/src/3rdparty/harfbuzz-ng/src/hb-subset-cff-common.cc' l='42'>/* Determine an optimal FDSelect format according to a provided plan.
 *
 * Return value: FDSelect format, size, and ranges for the most compact subset FDSelect
 * along with a font index remapping table
 */</doc>
<use f='qtbase-6.5.0/src/3rdparty/harfbuzz-ng/src/hb-subset-cff1.cc' l='600' u='c' c='_ZN15cff_subset_plan6createERKN2OT4cff120accelerator_subset_tEP16hb_subset_plan_t'/>
<use f='qtbase-6.5.0/src/3rdparty/harfbuzz-ng/src/hb-subset-cff2.cc' l='474' u='c' c='_ZN16cff2_subset_plan6createERKN2OT4cff219accelerator_templ_tIN3CFF32cff2_private_dict_opset_subset_tENS3_31cff2_private_dict_values_base_tINS3_8op_st14919146'/>
