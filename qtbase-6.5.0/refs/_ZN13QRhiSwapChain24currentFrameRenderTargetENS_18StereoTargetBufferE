<dec f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='1420' type='QRhiRenderTarget * QRhiSwapChain::currentFrameRenderTarget(QRhiSwapChain::StereoTargetBuffer targetBuffer)'/>
<use f='qtbase-6.5.0/src/gui/painting/qbackingstoredefaultcompositor.cpp' l='581' u='c' c='_ZN30QBackingStoreDefaultCompositor5flushEP21QPlatformBackingStoreP4QRhiP13QRhiSwapChainP7QWindowdRK7QRegionRK6QPointP20QPlatformTextureListb'/>
<def f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='4894' ll='4898' type='QRhiRenderTarget * QRhiSwapChain::currentFrameRenderTarget(QRhiSwapChain::StereoTargetBuffer targetBuffer)'/>
<doc f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='4879'>/*!
    \return a render target that can be used with beginPass() in order to
    render to the swapchain&apos;s left or right backbuffer. This overload should be
    used only with stereoscopic rendering, that is, when the associated QWindow
    is backed by two color buffers, one for each eye, instead of just one.

    When stereoscopic rendering is not supported, the return value will be
    the default target. For the time being the only backend and 3D API where traditional
    stereoscopic rendering is supported is OpenGL (excluding OpenGL ES), in
    combination with \l QSurfaceFormat::StereoBuffers, assuming it is supported
    by the graphics and display driver stack at run time. All other backends
    are going to return the default render target from this overload.

    \note the value must not be cached and reused between frames
 */</doc>
<ovr f='qtbase-6.5.0/src/gui/rhi/qrhigles2.cpp' l='5932' c='_ZN15QGles2SwapChain24currentFrameRenderTargetEN13QRhiSwapChain18StereoTargetBufferE'/>
