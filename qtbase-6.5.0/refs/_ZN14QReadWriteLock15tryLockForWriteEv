<dec f='qtbase-6.5.0/src/corelib/thread/qreadwritelock.h' l='29' type='bool QReadWriteLock::tryLockForWrite()'/>
<def f='qtbase-6.5.0/src/corelib/thread/qreadwritelock.cpp' l='281' ll='284' type='bool QReadWriteLock::tryLockForWrite()'/>
<doc f='qtbase-6.5.0/src/corelib/thread/qreadwritelock.cpp' l='266'>/*!
    Attempts to lock for writing. If the lock was obtained, this
    function returns \c true; otherwise, it returns \c false immediately.

    The lock attempt will fail if another thread has locked for
    reading or writing.

    If the lock was obtained, the lock must be unlocked with unlock()
    before another thread can successfully lock it.

    It is not possible to lock for write if the thread already has
    locked for read.

    \sa unlock(), lockForWrite()
*/</doc>
