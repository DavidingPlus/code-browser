<use f='qtbase-6.5.0/src/corelib/kernel/qmetatype.h' l='76'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qmetatype.h' l='76'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qmetatype.h' l='76'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qvariant.h' l='245' c='_ZN8QVariantC1ERK12QEasingCurve'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qvariant.h' l='349' c='_ZNK8QVariant13toEasingCurveEv'/>
<def f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='18' ll='84'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='40' c='_ZN12QEasingCurveC1ERKS_'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='43' c='_ZN12QEasingCurveaSERKS_'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='43' c='_ZN12QEasingCurveaSERKS_'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='44' c='_ZN12QEasingCurveaSERKS_'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='45' c='_ZN12QEasingCurveC1EOS_'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='46' c='_ZN12QEasingCurveaSEOS_'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='46' c='_ZN12QEasingCurveaSEOS_'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='48' c='_ZN12QEasingCurve4swapERS_'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='50' c='_ZNK12QEasingCurveeqERKS_'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='51' c='_ZNK12QEasingCurveneERKS_'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='78' c='_Zls6QDebugRK12QEasingCurve'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='81' c='_ZlsR11QDataStreamRK12QEasingCurve'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='82' c='_ZrsR11QDataStreamR12QEasingCurve'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='85'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='85'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='85'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='85'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='85'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='85' c='_Z4swapR12QEasingCurveS0_'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='85' c='_Z4swapR12QEasingCurveS0_'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='88' c='_Zls6QDebugRK12QEasingCurve'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='92' c='_ZlsR11QDataStreamRK12QEasingCurve'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.h' l='93' c='_ZrsR11QDataStreamR12QEasingCurve'/>
<use f='qtbase-6.5.0/src/corelib/animation/qvariantanimation.h' l='53' c='_ZNK17QVariantAnimation11easingCurveEv'/>
<use f='qtbase-6.5.0/src/corelib/animation/qvariantanimation.h' l='54' c='_ZN17QVariantAnimation14setEasingCurveERK12QEasingCurve'/>
<use f='qtbase-6.5.0/src/corelib/animation/qvariantanimation.h' l='55' c='_ZN17QVariantAnimation19bindableEasingCurveEv'/>
<use f='qtbase-6.5.0/src/corelib/tools/qtimeline.h' l='67' c='_ZNK9QTimeLine11easingCurveEv'/>
<use f='qtbase-6.5.0/src/corelib/tools/qtimeline.h' l='68' c='_ZN9QTimeLine14setEasingCurveERK12QEasingCurve'/>
<use f='qtbase-6.5.0/src/corelib/tools/qtimeline.h' l='69' c='_ZN9QTimeLine19bindableEasingCurveEv'/>
<size>8</size>
<smbr r='QEasingCurve::staticMetaObject' t='const QMetaObject'/>
<fun r='_ZN12QEasingCurve26qt_check_for_QGADGET_macroEv'/>
<fun r='_ZN12QEasingCurve18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv'/>
<fun r='_ZN12QEasingCurveC1ENS_4TypeE'/>
<fun r='_ZN12QEasingCurveC1ERKS_'/>
<fun r='_ZN12QEasingCurveD1Ev'/>
<fun r='_ZN12QEasingCurveaSERKS_'/>
<fun r='_ZN12QEasingCurveC1EOS_'/>
<fun r='_ZN12QEasingCurve4swapERS_'/>
<fun r='_ZNK12QEasingCurveeqERKS_'/>
<fun r='_ZNK12QEasingCurveneERKS_'/>
<fun r='_ZNK12QEasingCurve9amplitudeEv'/>
<fun r='_ZN12QEasingCurve12setAmplitudeEd'/>
<fun r='_ZNK12QEasingCurve6periodEv'/>
<fun r='_ZN12QEasingCurve9setPeriodEd'/>
<fun r='_ZNK12QEasingCurve9overshootEv'/>
<fun r='_ZN12QEasingCurve12setOvershootEd'/>
<fun r='_ZN12QEasingCurve21addCubicBezierSegmentERK7QPointFS2_S2_'/>
<fun r='_ZN12QEasingCurve13addTCBSegmentERK7QPointFddd'/>
<fun r='_ZNK12QEasingCurve13toCubicSplineEv'/>
<fun r='_ZNK12QEasingCurve4typeEv'/>
<fun r='_ZN12QEasingCurve7setTypeENS_4TypeE'/>
<fun r='_ZN12QEasingCurve13setCustomTypeEPFddE'/>
<fun r='_ZNK12QEasingCurve10customTypeEv'/>
<fun r='_ZNK12QEasingCurve16valueForProgressEd'/>
<mbr r='QEasingCurve::d_ptr' o='0' t='QEasingCurvePrivate *'/>
<use f='qtbase-6.5.0/src/corelib/animation/qvariantanimation_p.h' l='55' c='_ZN24QVariantAnimationPrivate14setEasingCurveERK12QEasingCurve'/>
<use f='qtbase-6.5.0/src/corelib/animation/qvariantanimation_p.h' l='56'/>
<size>8</size>
<use f='qtbase-6.5.0/src/corelib/animation/qvariantanimation.cpp' l='347' c='_ZNK17QVariantAnimation11easingCurveEv'/>
<use f='qtbase-6.5.0/src/corelib/animation/qvariantanimation.cpp' l='353' c='_ZN17QVariantAnimation14setEasingCurveERK12QEasingCurve'/>
<use f='qtbase-6.5.0/src/corelib/animation/qvariantanimation.cpp' l='363' c='_ZN17QVariantAnimation19bindableEasingCurveEv'/>
<size>8</size>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.cpp' l='1119' c='_ZN12QEasingCurveC1ERKS_'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.cpp' l='1159' c='_ZNK12QEasingCurveeqERKS_'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.cpp' l='1471' c='_Zls6QDebugRK12QEasingCurve'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.cpp' l='1496' c='_ZlsR11QDataStreamRK12QEasingCurve'/>
<use f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.cpp' l='1519' c='_ZrsR11QDataStreamR12QEasingCurve'/>
<size>8</size>
<doc f='qtbase-6.5.0/src/corelib/tools/qeasingcurve.cpp' l='16'>/*!
    \class QEasingCurve
    \inmodule QtCore
    \since 4.6
    \ingroup animation
    \brief The QEasingCurve class provides easing curves for controlling animation.

    Easing curves describe a function that controls how the speed of the interpolation
    between 0 and 1 should be. Easing curves allow transitions from
    one value to another to appear more natural than a simple constant speed would allow.
    The QEasingCurve class is usually used in conjunction with the QVariantAnimation and
    QPropertyAnimation classes but can be used on its own. It is usually used to accelerate
    the interpolation from zero velocity (ease in) or decelerate to zero velocity (ease out).
    Ease in and ease out can also be combined in the same easing curve.

    To calculate the speed of the interpolation, the easing curve provides the function
    valueForProgress(), where the \a progress argument specifies the progress of the
    interpolation: 0 is the start value of the interpolation, 1 is the end value of the
    interpolation. The returned value is the effective progress of the interpolation.
    If the returned value is the same as the input value for all input values the easing
    curve is a linear curve. This is the default behaviour.

    For example,

    \snippet code/src_corelib_tools_qeasingcurve.cpp 0

    will print the effective progress of the interpolation between 0 and 1.

    When using a QPropertyAnimation, the associated easing curve will be used to control the
    progress of the interpolation between startValue and endValue:

    \snippet code/src_corelib_tools_qeasingcurve.cpp 1

    The ability to set an amplitude, overshoot, or period depends on
    the QEasingCurve type. Amplitude access is available to curves
    that behave as springs such as elastic and bounce curves. Changing
    the amplitude changes the height of the curve. Period access is
    only available to elastic curves and setting a higher period slows
    the rate of bounce. Only curves that have &quot;boomerang&quot; behaviors
    such as the InBack, OutBack, InOutBack, and OutInBack have
    overshoot settings. These curves will interpolate beyond the end
    points and return to the end point, acting similar to a boomerang.

    The \l{Easing Curves Example} contains samples of QEasingCurve
    types and lets you change the curve settings.

 */</doc>
<fun r='_ZN12QEasingCurveC1ENS_4TypeE'/>
<fun r='_ZN12QEasingCurveC1ERKS_'/>
<fun r='_ZN12QEasingCurveD1Ev'/>
<fun r='_ZNK12QEasingCurveeqERKS_'/>
<fun r='_ZNK12QEasingCurve9amplitudeEv'/>
<fun r='_ZN12QEasingCurve12setAmplitudeEd'/>
<fun r='_ZNK12QEasingCurve6periodEv'/>
<fun r='_ZN12QEasingCurve9setPeriodEd'/>
<fun r='_ZNK12QEasingCurve9overshootEv'/>
<fun r='_ZN12QEasingCurve12setOvershootEd'/>
<fun r='_ZN12QEasingCurve21addCubicBezierSegmentERK7QPointFS2_S2_'/>
<fun r='_ZN12QEasingCurve13addTCBSegmentERK7QPointFddd'/>
<fun r='_ZNK12QEasingCurve13toCubicSplineEv'/>
<fun r='_ZNK12QEasingCurve4typeEv'/>
<fun r='_ZN12QEasingCurve7setTypeENS_4TypeE'/>
<fun r='_ZN12QEasingCurve13setCustomTypeEPFddE'/>
<fun r='_ZNK12QEasingCurve10customTypeEv'/>
<fun r='_ZNK12QEasingCurve16valueForProgressEd'/>
<use f='qtbase-6.5.0/src/corelib/tools/qtimeline.cpp' l='19'/>
<use f='qtbase-6.5.0/src/corelib/tools/qtimeline.cpp' l='19'/>
<use f='qtbase-6.5.0/src/corelib/tools/qtimeline.cpp' l='493' c='_ZNK9QTimeLine11easingCurveEv'/>
<use f='qtbase-6.5.0/src/corelib/tools/qtimeline.cpp' l='499' c='_ZN9QTimeLine14setEasingCurveERK12QEasingCurve'/>
<use f='qtbase-6.5.0/src/corelib/tools/qtimeline.cpp' l='505' c='_ZN9QTimeLine19bindableEasingCurveEv'/>
<size>8</size>
<use f='qtbase-6.5.0/src/widgets/util/qscrollerproperties_p.h' l='36'/>
<use f='qtbase-6.5.0/src/widgets/util/qscroller_p.h' l='68'/>
<use f='qtbase-6.5.0/src/widgets/util/qscroller.cpp' l='111' c='_ZL23differentialForProgressRK12QEasingCurved'/>
<use f='qtbase-6.5.0/src/widgets/util/qscroller.cpp' l='127' c='_ZL16progressForValueRK12QEasingCurved'/>
<size>8</size>
