<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='14815'/>
<def f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='17973' ll='17988'/>
<size>80</size>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='17945'>/*
** Each foreign key constraint is an instance of the following structure.
**
** A foreign key is associated with two tables.  The &quot;from&quot; table is
** the table that contains the REFERENCES clause that creates the foreign
** key.  The &quot;to&quot; table is the table that is named in the REFERENCES clause.
** Consider this example:
**
**     CREATE TABLE ex1(
**       a INTEGER PRIMARY KEY,
**       b INTEGER CONSTRAINT fk1 REFERENCES ex2(x)
**     );
**
** For foreign key &quot;fk1&quot;, the from-table is &quot;ex1&quot; and the to-table is &quot;ex2&quot;.
** Equivalent names:
**
**     from-table == child-table
**       to-table == parent-table
**
** Each REFERENCES clause generates an instance of the following structure
** which is attached to the from-table.  The to-table need not exist when
** the from-table is created.  The existence of the to-table is not checked.
**
** The list of all parents for child Table X is held at X.pFKey.
**
** A list of all children for a table named Z (which might not even exist)
** is held in Schema.fkeyHash with a hash key of Z.
*/</doc>
