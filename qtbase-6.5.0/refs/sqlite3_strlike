<dec f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='9567' type='int sqlite3_strlike(const char * zGlob, const char * zStr, unsigned int cEsc)'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='115659' u='c' c='analyzeOneTable'/>
<def f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='125576' ll='125584' type='int sqlite3_strlike(const char * zPattern, const char * zStr, unsigned int esc)'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='133158'/>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='9546'>/*
** CAPI3REF: String LIKE Matching
*
** ^The [sqlite3_strlike(P,X,E)] interface returns zero if and only if
** string X matches the [LIKE] pattern P with escape character E.
** ^The definition of [LIKE] pattern matching used in
** [sqlite3_strlike(P,X,E)] is the same as for the &quot;X LIKE P ESCAPE E&quot;
** operator in the SQL dialect understood by SQLite.  ^For &quot;X LIKE P&quot; without
** the ESCAPE clause, set the E parameter of [sqlite3_strlike(P,X,E)] to 0.
** ^As with the LIKE operator, the [sqlite3_strlike(P,X,E)] function is case
** insensitive - equivalent upper and lower case ASCII characters match
** one another.
**
** ^The [sqlite3_strlike(P,X,E)] function matches Unicode characters, though
** only ASCII characters are case folded.
**
** Note that this routine returns zero on a match and non-zero if the strings
** do not match, the same as [sqlite3_stricmp()] and [sqlite3_strnicmp()].
**
** See also: [sqlite3_strglob()].
*/</doc>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='125572'>/*
** The sqlite3_strlike() interface.  Return 0 on a match and non-zero for
** a miss - like strcmp().
*/</doc>
<dec f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='9261' type='int sqlite3_strlike(const char * zGlob, const char * zStr, unsigned int cEsc)'/>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='9240'>/*
** CAPI3REF: String LIKE Matching
*
** ^The [sqlite3_strlike(P,X,E)] interface returns zero if and only if
** string X matches the [LIKE] pattern P with escape character E.
** ^The definition of [LIKE] pattern matching used in
** [sqlite3_strlike(P,X,E)] is the same as for the &quot;X LIKE P ESCAPE E&quot;
** operator in the SQL dialect understood by SQLite.  ^For &quot;X LIKE P&quot; without
** the ESCAPE clause, set the E parameter of [sqlite3_strlike(P,X,E)] to 0.
** ^As with the LIKE operator, the [sqlite3_strlike(P,X,E)] function is case
** insensitive - equivalent upper and lower case ASCII characters match
** one another.
**
** ^The [sqlite3_strlike(P,X,E)] function matches Unicode characters, though
** only ASCII characters are case folded.
**
** Note that this routine returns zero on a match and non-zero if the strings
** do not match, the same as [sqlite3_stricmp()] and [sqlite3_strnicmp()].
**
** See also: [sqlite3_strglob()].
*/</doc>
