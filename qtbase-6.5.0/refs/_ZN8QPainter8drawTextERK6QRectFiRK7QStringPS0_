<dec f='qtbase-6.5.0/src/gui/painting/qpainter.h' l='364' type='void QPainter::drawText(const QRectF &amp; r, int flags, const QString &amp; text, QRectF * br = nullptr)'/>
<def f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='5727' ll='5744' type='void QPainter::drawText(const QRectF &amp; r, int flags, const QString &amp; str, QRectF * br = nullptr)'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='6326' u='c' c='_ZN8QPainter12boundingRectERK6QRectFiRK7QString'/>
<doc f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='5677'>/*!
    \fn void QPainter::drawText(const QRectF &amp;rectangle, int flags, const QString &amp;text, QRectF *boundingRect)
    \overload

    Draws the given \a text within the provided \a rectangle.
    The \a rectangle along with alignment \a flags defines the anchors for the \a text.

    \table 100%
    \row
    \li \inlineimage qpainter-text.png
    \li
    \snippet code/src_gui_painting_qpainter.cpp 17
    \endtable

    The \a boundingRect (if not null) is set to what the bounding rectangle
    should be in order to enclose the whole text. For example, in the following
    image, the dotted line represents \a boundingRect as calculated by the
    function, and the dashed line represents \a rectangle:

    \table 100%
    \row
    \li \inlineimage qpainter-text-bounds.png
    \li \snippet code/src_gui_painting_qpainter.cpp drawText
    \endtable

    The \a flags argument is a bitwise OR of the following flags:

    \list
    \li Qt::AlignLeft
    \li Qt::AlignRight
    \li Qt::AlignHCenter
    \li Qt::AlignJustify
    \li Qt::AlignTop
    \li Qt::AlignBottom
    \li Qt::AlignVCenter
    \li Qt::AlignCenter
    \li Qt::TextDontClip
    \li Qt::TextSingleLine
    \li Qt::TextExpandTabs
    \li Qt::TextShowMnemonic
    \li Qt::TextWordWrap
    \li Qt::TextIncludeTrailingSpaces
    \endlist

    \sa Qt::AlignmentFlag, Qt::TextFlag, boundingRect(), layoutDirection()

    By default, QPainter draws text anti-aliased.

    \note The y-coordinate of \a rectangle is used as the top of the font.
*/</doc>
<use f='qtbase-6.5.0/src/widgets/widgets/qplaintextedit.cpp' l='1915' u='c' c='_ZN14QPlainTextEdit10paintEventEP11QPaintEvent'/>
