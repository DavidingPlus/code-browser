<dec f='qtbase-6.5.0/src/corelib/thread/qthread.h' l='80' type='void QThread::exit(int retcode = 0)'/>
<def f='qtbase-6.5.0/src/corelib/thread/qthread.cpp' l='660' ll='671' type='void QThread::exit(int returnCode = 0)'/>
<use f='qtbase-6.5.0/src/corelib/thread/qthread.cpp' l='684' u='c' c='_ZN7QThread4quitEv'/>
<doc f='qtbase-6.5.0/src/corelib/thread/qthread.cpp' l='638'>/*!
    \threadsafe
    Tells the thread&apos;s event loop to exit with a return code.

    After calling this function, the thread leaves the event loop and
    returns from the call to QEventLoop::exec(). The
    QEventLoop::exec() function returns \a returnCode.

    By convention, a \a returnCode of 0 means success, any non-zero value
    indicates an error.

    Note that unlike the C library function of the same name, this
    function \e does return to the caller -- it is event processing
    that stops.

    No QEventLoops will be started anymore in this thread  until
    QThread::exec() has been called again. If the eventloop in QThread::exec()
    is not running then the next call to QThread::exec() will also return
    immediately.

    \sa quit(), QEventLoop
*/</doc>
