<dec f='qtbase-6.5.0/src/corelib/text/qlocale.h' l='972' type='QString QLocale::toString(double f, char format = &apos;g&apos;, int precision = 6) const'/>
<use f='qtbase-6.5.0/src/corelib/text/qlocale.h' l='974' u='c' c='_ZNK7QLocale8toStringEfci'/>
<def f='qtbase-6.5.0/src/corelib/text/qlocale.cpp' l='2642' ll='2668' type='QString QLocale::toString(double f, char format = &apos;g&apos;, int precision = 6) const'/>
<use f='qtbase-6.5.0/src/corelib/text/qlocale.cpp' l='4311' u='c' c='_ZNK7QLocale16toCurrencyStringEdRK7QStringi'/>
<use f='qtbase-6.5.0/src/corelib/text/qlocale.cpp' l='4368' u='c' c='_ZNK7QLocale17formattedDataSizeExi6QFlagsINS_14DataSizeFormatEE'/>
<doc f='qtbase-6.5.0/src/corelib/text/qlocale.cpp' l='2608'>/*!
    \overload
    Returns a string representing the floating-point number \a f.

    The form of the representation is controlled by the \a format and \a
    precision parameters.

    The \a format defaults to \c{&apos;g&apos;}. It can be any of the following:

    \table
    \header \li Format \li Meaning \li Meaning of \a precision
    \row \li \c &apos;e&apos; \li format as [-]9.9e[+|-]999 \li number of digits \e after the decimal point
    \row \li \c &apos;E&apos; \li format as [-]9.9E[+|-]999 \li &quot;
    \row \li \c &apos;f&apos; \li format as [-]9.9 \li &quot;
    \row \li \c &apos;F&apos; \li same as \c &apos;f&apos; except for INF and NAN (see below) \li &quot;
    \row \li \c &apos;g&apos; \li use \c &apos;e&apos; or \c &apos;f&apos; format, whichever is more concise \li maximum number of significant digits (trailing zeroes are omitted)
    \row \li \c &apos;G&apos; \li use \c &apos;E&apos; or \c &apos;F&apos; format, whichever is more concise \li &quot;
    \endtable

    The special \a precision value QLocale::FloatingPointShortest selects the
    shortest representation that, when read as a number, gets back the original floating-point
    value. Aside from that, any negative \a precision is ignored in favor of the
    default, 6.

    For the \c &apos;e&apos;, \c &apos;f&apos; and \c &apos;g&apos; formats, positive infinity is represented
    as &quot;inf&quot;, negative infinity as &quot;-inf&quot; and floating-point NaN (not-a-number)
    values are represented as &quot;nan&quot;. For the \c &apos;E&apos;, \c &apos;F&apos; and \c &apos;G&apos; formats,
    &quot;INF&quot; and &quot;NAN&quot; are used instead. This does not vary with locale.

    \sa toDouble(), numberOptions(), exponential(), decimalPoint(), zeroDigit(),
        positiveSign(), percent(), toCurrencyString(), formattedDataSize(),
        QLocale::FloatingPointPrecisionOption
*/</doc>
<use f='qtbase-6.5.0/src/gui/util/qvalidator.cpp' l='778' u='c' c='_ZNK23QDoubleValidatorPrivate15fixupWithLocaleER7QStringN11QLocaleData10NumberModeERK7QLocale'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qabstractitemdelegate.cpp' l='533' u='c' c='_ZNK28QAbstractItemDelegatePrivate11textForRoleEN2Qt12ItemDataRoleERK8QVariantRK7QLocalei'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qabstractitemdelegate.cpp' l='559' u='c' c='_ZNK28QAbstractItemDelegatePrivate11textForRoleEN2Qt12ItemDataRoleERK8QVariantRK7QLocalei'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qspinbox.cpp' l='963' u='c' c='_ZNK14QDoubleSpinBox13textFromValueEd'/>
