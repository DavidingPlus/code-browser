<dec f='qtbase-6.5.0/src/corelib/kernel/qvariant.h' l='331' type='QMap&lt;QString, QVariant&gt; QVariant::toMap() const'/>
<use f='qtbase-6.5.0/qmake/generators/mac/pbuilder_pbx.cpp' l='473' u='c' c='_ZL17provisioningTeamsv'/>
<use f='qtbase-6.5.0/qmake/generators/mac/pbuilder_pbx.cpp' l='481' u='c' c='_ZL17provisioningTeamsv'/>
<def f='qtbase-6.5.0/src/corelib/kernel/qvariant.cpp' l='1430' ll='1433' type='QVariantMap QVariant::toMap() const'/>
<doc f='qtbase-6.5.0/src/corelib/kernel/qvariant.cpp' l='1419'>/*!
    Returns the variant as a QVariantMap if the variant has type() \l
    QMetaType::QVariantMap. If it doesn&apos;t, QVariant will attempt to
    convert the type to a map and then return it. This will succeed for
    any type that has registered a converter to QVariantMap or which was
    declared as a associative container using
    \l{Q_DECLARE_ASSOCIATIVE_CONTAINER_METATYPE}. If none of those
    conditions are true, this function will return an empty map.

    \sa canConvert(), convert()
*/</doc>
<use f='qtbase-6.5.0/src/corelib/serialization/qjsoncbor.cpp' l='741' u='c' c='_ZN10QCborValue11fromVariantERK8QVariant'/>
<use f='qtbase-6.5.0/src/corelib/serialization/qjsondocument.cpp' l='198' u='c' c='_ZN13QJsonDocument11fromVariantERK8QVariant'/>
<use f='qtbase-6.5.0/src/corelib/serialization/qjsonvalue.cpp' l='499' u='c' c='_ZN10QJsonValue11fromVariantERK8QVariant'/>
