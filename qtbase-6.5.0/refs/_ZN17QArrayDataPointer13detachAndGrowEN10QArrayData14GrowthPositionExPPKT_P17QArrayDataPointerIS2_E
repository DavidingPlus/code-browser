<def f='qtbase-6.5.0/src/corelib/tools/qarraydatapointer.h' l='178' ll='195' type='void QArrayDataPointer::detachAndGrow(QArrayData::GrowthPosition where, qsizetype n, const T ** data, QArrayDataPointer&lt;T&gt; * old)'/>
<doc f='qtbase-6.5.0/src/corelib/tools/qarraydatapointer.h' l='155'>/*! \internal

        Detaches this (optionally) and grows to accommodate the free space for
        \a n elements at the required side. The side is determined from \a pos.

        \a data pointer can be provided when the caller knows that \a data
        points into range [this-&gt;begin(), this-&gt;end()). In case it is, *data
        would be updated so that it continues to point to the element it was
        pointing to before the data move. if \a data does not point into range,
        one can/should pass \c nullptr.

        Similarly to \a data, \a old, pointer to a default-constructed QADP, can
        be provided when the caller expects to e.g. copy the data from this to
        itself:
        \code
        QList&lt;T&gt; list(5);
        qsizetype pos = getArbitraryPos();
        list.insert(pos, list.begin(), list.end());
        \endcode

        The default rule would be: \a data and \a old must either both be valid
        pointers, or both equal to \c nullptr.
    */</doc>
<use f='qtbase-6.5.0/src/corelib/text/qbytearray.cpp' l='2108' u='c' c='_ZN10QByteArray6appendEc'/>
<use f='qtbase-6.5.0/src/corelib/text/qbytearray.cpp' l='2148' u='c' c='_ZN10QByteArray6insertEx14QByteArrayView'/>
<use f='qtbase-6.5.0/src/corelib/text/qbytearray.cpp' l='2226' u='c' c='_ZN10QByteArray6insertExxc'/>
<use f='qtbase-6.5.0/src/corelib/text/qstring.cpp' l='293' u='c' c='_ZN12_GLOBAL__N_113append_helperER7QStringT_T0_'/>
<use f='qtbase-6.5.0/src/corelib/text/qstring.cpp' l='2951' u='c' c='_ZN7QString6insertEx17QLatin1StringView'/>
<use f='qtbase-6.5.0/src/corelib/text/qstring.cpp' l='3006' u='c' c='_ZN7QString6insertExPK5QCharx'/>
<use f='qtbase-6.5.0/src/corelib/text/qstring.cpp' l='3164' u='c' c='_ZN7QString6appendE5QChar'/>
