<dec f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout_p.h' l='446' type='bool QGraphicsAnchorLayoutPrivate::simplifyGraphIteration(Qt::Orientation orientation, bool * feasible)'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout_p.cpp' l='806' u='c' c='_ZN28QGraphicsAnchorLayoutPrivate13simplifyGraphEN2Qt11OrientationE'/>
<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout_p.cpp' l='984' ll='1138' type='bool QGraphicsAnchorLayoutPrivate::simplifyGraphIteration(Qt::Orientation orientation, bool * feasible)'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout_p.cpp' l='970'>/*!
    \internal

    One iteration of the simplification algorithm. Returns \c true if another iteration is needed.

    The algorithm walks the graph in depth-first order, and only collects vertices that has two
    edges connected to it.  If the vertex does not have two edges or if it is a layout edge, it
    will take all the previously collected vertices and try to create a simplified sequential
    anchor representing all the previously collected vertices.  Once the simplified anchor is
    inserted, the collected list is cleared in order to find the next sequence to simplify.

    Note that there are some catches to this that are not covered by the above explanation, see
    the function comments for more details.
*/</doc>
