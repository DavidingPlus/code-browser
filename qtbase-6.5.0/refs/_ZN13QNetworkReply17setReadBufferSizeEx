<dec f='qtbase-6.5.0/src/network/access/qnetworkreply.h' l='86' type='void QNetworkReply::setReadBufferSize(qint64 size)'/>
<def f='qtbase-6.5.0/src/network/access/qnetworkreply.cpp' l='511' ll='515' type='void QNetworkReply::setReadBufferSize(qint64 size)'/>
<doc f='qtbase-6.5.0/src/network/access/qnetworkreply.cpp' l='493'>/*!
    Sets the size of the read buffer to be \a size bytes. The read
    buffer is the buffer that holds data that is being downloaded off
    the network, before it is read with QIODevice::read(). Setting the
    buffer size to 0 will make the buffer unlimited in size.

    QNetworkReply will try to stop reading from the network once this
    buffer is full (i.e., bytesAvailable() returns \a size or more),
    thus causing the download to throttle down as well. If the buffer
    is not limited in size, QNetworkReply will try to download as fast
    as possible from the network.

    Unlike QAbstractSocket::setReadBufferSize(), QNetworkReply cannot
    guarantee precision in the read buffer size. That is,
    bytesAvailable() can return more than \a size.

    \sa readBufferSize()
*/</doc>
<ovr f='qtbase-6.5.0/src/network/access/qnetworkreplyhttpimpl.cpp' l='360' c='_ZN21QNetworkReplyHttpImpl17setReadBufferSizeEx'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyhttpimpl.cpp' l='362' u='c' c='_ZN21QNetworkReplyHttpImpl17setReadBufferSizeEx'/>
<ovr f='qtbase-6.5.0/src/network/access/qnetworkreplyimpl.cpp' l='798' c='_ZN17QNetworkReplyImpl17setReadBufferSizeEx'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyimpl.cpp' l='802' u='c' c='_ZN17QNetworkReplyImpl17setReadBufferSizeEx'/>
