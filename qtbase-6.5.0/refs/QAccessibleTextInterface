<use f='qtbase-6.5.0/src/gui/accessible/qaccessible.h' l='82' c='_ZN20QAccessibleInterface13textInterfaceEv'/>
<use f='qtbase-6.5.0/src/gui/accessible/qaccessible.h' l='83' c='_ZN20QAccessibleInterface13textInterfaceEv'/>
<def f='qtbase-6.5.0/src/gui/accessible/qaccessible.h' l='118' ll='149'/>
<size>8</size>
<fun r='_ZN24QAccessibleTextInterfaceD1Ev'/>
<fun r='_ZNK24QAccessibleTextInterface9selectionEiPiS0_'/>
<fun r='_ZNK24QAccessibleTextInterface14selectionCountEv'/>
<fun r='_ZN24QAccessibleTextInterface12addSelectionEii'/>
<fun r='_ZN24QAccessibleTextInterface15removeSelectionEi'/>
<fun r='_ZN24QAccessibleTextInterface12setSelectionEiii'/>
<fun r='_ZNK24QAccessibleTextInterface14cursorPositionEv'/>
<fun r='_ZN24QAccessibleTextInterface17setCursorPositionEi'/>
<fun r='_ZNK24QAccessibleTextInterface4textEii'/>
<fun r='_ZNK24QAccessibleTextInterface16textBeforeOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_'/>
<fun r='_ZNK24QAccessibleTextInterface15textAfterOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_'/>
<fun r='_ZNK24QAccessibleTextInterface12textAtOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_'/>
<fun r='_ZNK24QAccessibleTextInterface14characterCountEv'/>
<fun r='_ZNK24QAccessibleTextInterface13characterRectEi'/>
<fun r='_ZNK24QAccessibleTextInterface13offsetAtPointERK6QPoint'/>
<fun r='_ZN24QAccessibleTextInterface17scrollToSubstringEii'/>
<fun r='_ZNK24QAccessibleTextInterface10attributesEiPiS0_'/>
<doc f='qtbase-6.5.0/src/gui/accessible/qaccessible.cpp' l='1919'>/*!
    \class QAccessibleTextInterface
    \inmodule QtGui

    \ingroup accessibility

    \brief The QAccessibleTextInterface class implements support for text handling.

    This interface corresponds to the IAccessibleText interface.
    It should be implemented for widgets that display more text than a plain label.
    Labels should be represented by only \l QAccessibleInterface
    and return their text as name (\l QAccessibleInterface::text() with \l QAccessible::Name as type).
    The QAccessibleTextInterface is typically for text that a screen reader
    might want to read line by line, and for widgets that support text selection and input.
    This interface is, for example, implemented for QLineEdit.

    \l{IAccessible2 Specification}
*/</doc>
<fun r='_ZN24QAccessibleTextInterfaceD1Ev'/>
<fun r='_ZNK24QAccessibleTextInterface16textBeforeOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_'/>
<fun r='_ZNK24QAccessibleTextInterface15textAfterOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_'/>
<fun r='_ZNK24QAccessibleTextInterface12textAtOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_'/>
<ovr f='qtbase-6.5.0/src/widgets/accessible/qaccessiblewidgets_p.h' l='45' c='QAccessibleTextWidget'/>
<use f='qtbase-6.5.0/src/widgets/accessible/qaccessiblewidgets_p.h' l='46'/>
<ovr f='qtbase-6.5.0/src/widgets/accessible/simplewidgets_p.h' l='120' c='QAccessibleLineEdit'/>
<use f='qtbase-6.5.0/src/widgets/accessible/simplewidgets_p.h' l='120'/>
<ovr f='qtbase-6.5.0/src/widgets/accessible/rangecontrols_p.h' l='35' c='QAccessibleAbstractSpinBox'/>
<use f='qtbase-6.5.0/src/widgets/accessible/rangecontrols_p.h' l='38'/>
<size>8</size>
<use f='qtbase-6.5.0/src/widgets/accessible/qaccessiblewidgets.cpp' l='139' c='_ZN24QAccessiblePlainTextEdit14interface_castEN11QAccessible13InterfaceTypeE'/>
<use f='qtbase-6.5.0/src/widgets/accessible/qaccessiblewidgets.cpp' l='265' c='_ZN19QAccessibleTextEdit14interface_castEN11QAccessible13InterfaceTypeE'/>
<size>8</size>
<use f='qtbase-6.5.0/src/widgets/accessible/rangecontrols.cpp' l='80' c='_ZN26QAccessibleAbstractSpinBox14interface_castEN11QAccessible13InterfaceTypeE'/>
<size>8</size>
<use f='qtbase-6.5.0/src/widgets/accessible/simplewidgets.cpp' l='726' c='_ZN19QAccessibleLineEdit14interface_castEN11QAccessible13InterfaceTypeE'/>
<size>8</size>
