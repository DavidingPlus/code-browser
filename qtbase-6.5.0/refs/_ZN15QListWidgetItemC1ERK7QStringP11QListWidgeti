<dec f='qtbase-6.5.0/src/widgets/itemviews/qlistwidget.h' l='29' type='void QListWidgetItem::QListWidgetItem(const QString &amp; text, QListWidget * listview = nullptr, int type = Type)'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qlistwidget.cpp' l='101' u='c' c='_ZN10QListModel6insertEiRK5QListI7QStringE'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qlistwidget.cpp' l='111' u='c' c='_ZN10QListModel6insertEiRK5QListI7QStringE'/>
<def f='qtbase-6.5.0/src/widgets/itemviews/qlistwidget.cpp' l='621' ll='636' type='void QListWidgetItem::QListWidgetItem(const QString &amp; text, QListWidget * listview = nullptr, int type = Type)'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qlistwidget.cpp' l='1488' u='c' c='_ZN11QListWidget10insertItemEiRK7QString'/>
<doc f='qtbase-6.5.0/src/widgets/itemviews/qlistwidget.cpp' l='605'>/*!
    \fn QListWidgetItem::QListWidgetItem(const QString &amp;text, QListWidget *parent, int type)

    Constructs an empty list widget item of the specified \a type with the
    given \a text and \a parent. If the parent is not specified, the item will
    need to be inserted into a list widget with QListWidget::insertItem().

    This constructor inserts the item into the model of the parent that is
    passed to the constructor. If the model is sorted then the behavior of the
    insert is undetermined since the model will call the \c &apos;&lt;&apos; operator method
    on the item which, at this point, is not yet constructed. To avoid the
    undetermined behavior, we recommend not to specify the parent and use
    QListWidget::insertItem() instead.

    \sa type()
*/</doc>
