<dec f='qtbase-6.5.0/src/network/access/http2/http2frames_p.h' l='139' type='bool Http2::FrameWriter::writeDATA(QAbstractSocket &amp; socket, quint32 sizeLimit, const uchar * src, quint32 size)'/>
<def f='qtbase-6.5.0/src/network/access/http2/http2frames.cpp' l='460' ll='495' type='bool Http2::FrameWriter::writeDATA(QAbstractSocket &amp; socket, quint32 sizeLimit, const uchar * src, quint32 size)'/>
<doc f='qtbase-6.5.0/src/network/access/http2/http2frames_p.h' l='136'>// With DATA frames the actual payload is never in our &apos;buffer&apos;, it&apos;s a
    // &apos;readPointer&apos; from QNonContiguousData. We split this payload as needed
    // into DATA frames with correct payload size fitting into frame size limit:</doc>
<use f='qtbase-6.5.0/src/network/access/qhttp2protocolhandler.cpp' l='509' u='c' c='_ZN21QHttp2ProtocolHandler8sendDATAERN5Http26StreamE'/>
