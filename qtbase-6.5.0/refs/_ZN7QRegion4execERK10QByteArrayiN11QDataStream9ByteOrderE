<dec f='qtbase-6.5.0/src/gui/painting/qregion.h' l='119' type='void QRegion::exec(const QByteArray &amp; ba, int ver = 0, QDataStream::ByteOrder byteOrder = QDataStream::BigEndian)'/>
<def f='qtbase-6.5.0/src/gui/painting/qregion.cpp' l='204' ll='275' type='void QRegion::exec(const QByteArray &amp; buffer, int ver = 0, QDataStream::ByteOrder byteOrder = QDataStream::BigEndian)'/>
<use f='qtbase-6.5.0/src/gui/painting/qregion.cpp' l='245' u='c' c='_ZN7QRegion4execERK10QByteArrayiN11QDataStream9ByteOrderE'/>
<use f='qtbase-6.5.0/src/gui/painting/qregion.cpp' l='247' u='c' c='_ZN7QRegion4execERK10QByteArrayiN11QDataStream9ByteOrderE'/>
<use f='qtbase-6.5.0/src/gui/painting/qregion.cpp' l='351' u='c' c='_ZrsR11QDataStreamR7QRegion'/>
<doc f='qtbase-6.5.0/src/gui/painting/qregion.cpp' l='195'>/*
    Executes region commands in the internal buffer and rebuilds the
    original region.

    We do this when we read a region from the data stream.

    If \a ver is non-0, uses the format version \a ver on reading the
    byte array.
*/</doc>
