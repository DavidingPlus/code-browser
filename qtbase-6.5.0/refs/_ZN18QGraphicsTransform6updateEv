<dec f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicstransform.h' l='30' type='void QGraphicsTransform::update()'/>
<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicstransform.cpp' l='136' ll='141' type='void QGraphicsTransform::update()'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicstransform.cpp' l='212' u='c' c='_ZN14QGraphicsScale9setOriginERK9QVector3D'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicstransform.cpp' l='238' u='c' c='_ZN14QGraphicsScale9setXScaleEd'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicstransform.cpp' l='265' u='c' c='_ZN14QGraphicsScale9setYScaleEd'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicstransform.cpp' l='292' u='c' c='_ZN14QGraphicsScale9setZScaleEd'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicstransform.cpp' l='427' u='c' c='_ZN17QGraphicsRotation9setOriginERK9QVector3D'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicstransform.cpp' l='455' u='c' c='_ZN17QGraphicsRotation8setAngleEd'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicstransform.cpp' l='498' u='c' c='_ZN17QGraphicsRotation7setAxisERK9QVector3D'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicstransform.cpp' l='126'>/*!
    Notifies that this transform operation has changed its parameters in such a
    way that applyTo() will return a different result than before.

    When implementing you own custom graphics transform, you must call this
    function every time you change a parameter, to let QGraphicsItem know that
    its transformation needs to be updated.

    \sa applyTo()
*/</doc>
