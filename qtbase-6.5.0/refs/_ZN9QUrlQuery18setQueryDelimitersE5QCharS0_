<dec f='qtbase-6.5.0/src/corelib/io/qurlquery.h' l='53' type='void QUrlQuery::setQueryDelimiters(QChar valueDelimiter, QChar pairDelimiter)'/>
<def f='qtbase-6.5.0/src/corelib/io/qurlquery.cpp' l='576' ll='580' type='void QUrlQuery::setQueryDelimiters(QChar valueDelimiter, QChar pairDelimiter)'/>
<doc f='qtbase-6.5.0/src/corelib/io/qurlquery.cpp' l='548'>/*!
    Sets the characters used for delimiting between keys and values,
    and between key-value pairs in the URL&apos;s query string. The default
    value delimiter is &apos;=&apos; and the default pair delimiter is &apos;&amp;&apos;.

    \image qurl-querystring.png

    \a valueDelimiter will be used for separating keys from values,
    and \a pairDelimiter will be used to separate key-value pairs.
    Any occurrences of these delimiting characters in the encoded
    representation of the keys and values of the query string are
    percent encoded when returned in query().

    If \a valueDelimiter is set to &apos;(&apos; and \a pairDelimiter is &apos;)&apos;,
    the above query string would instead be represented like this:

    \snippet code/src_corelib_io_qurl.cpp 4

    \note Non-standard delimiters should be chosen from among what RFC 3986 calls
    &quot;sub-delimiters&quot;. They are:

    \snippet code/src_corelib_io_qurlquery.cpp 0

    Use of other characters is not supported and may result in unexpected
    behaviour. This method does not verify that you passed a valid delimiter.

    \sa queryValueDelimiter(), queryPairDelimiter()
*/</doc>
