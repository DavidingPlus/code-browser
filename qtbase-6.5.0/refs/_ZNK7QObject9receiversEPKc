<dec f='qtbase-6.5.0/src/corelib/kernel/qobject.h' l='389' type='int QObject::receivers(const char * signal) const'/>
<def f='qtbase-6.5.0/src/corelib/kernel/qobject.cpp' l='2618' ll='2657' type='int QObject::receivers(const char * signal) const'/>
<doc f='qtbase-6.5.0/src/corelib/kernel/qobject.cpp' l='2597'>/*!
    Returns the number of receivers connected to the \a signal.

    Since both slots and signals can be used as receivers for signals,
    and the same connections can be made many times, the number of
    receivers is the same as the number of connections made from this
    signal.

    When calling this function, you can use the \c SIGNAL() macro to
    pass a specific signal:

    \snippet code/src_corelib_kernel_qobject.cpp 21

    \warning This function violates the object-oriented principle of
    modularity. However, it might be useful when you need to perform
    expensive initialization only if something is connected to a
    signal.

    \sa isSignalConnected()
*/</doc>
