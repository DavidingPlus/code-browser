<dec f='qtbase-6.5.0/src/corelib/itemmodels/qabstractitemmodel.h' l='277' type='bool QAbstractItemModel::insertColumns(int column, int count, const QModelIndex &amp; parent = QModelIndex())'/>
<use f='qtbase-6.5.0/src/corelib/itemmodels/qabstractitemmodel.h' l='409' u='c' c='_ZN18QAbstractItemModel12insertColumnEiRK11QModelIndex'/>
<def f='qtbase-6.5.0/src/corelib/itemmodels/qabstractitemmodel.cpp' l='2313' ll='2316' type='bool QAbstractItemModel::insertColumns(int , int , const QModelIndex &amp;  = QModelIndex())'/>
<use f='qtbase-6.5.0/src/corelib/itemmodels/qabstractitemmodel.cpp' l='2794' u='c' c='_ZN18QAbstractItemModel10decodeDataEiiRK11QModelIndexR11QDataStream'/>
<doc f='qtbase-6.5.0/src/corelib/itemmodels/qabstractitemmodel.cpp' l='2289'>/*!
    On models that support this, inserts \a count new columns into the model
    before the given \a column. The items in each new column will be children
    of the item represented by the \a parent model index.

    If \a column is 0, the columns are prepended to any existing columns.

    If \a column is columnCount(), the columns are appended to any existing
    columns.

    If \a parent has no children, a single row with \a count columns is
    inserted.

    Returns \c{true} if the columns were successfully inserted; otherwise returns
    \c{false}.

    The base class implementation does nothing and returns \c{false}.

    If you implement your own model, you can reimplement this function if you
    want to support insertions. Alternatively, you can provide your own API for
    altering the data.

    \sa insertRows(), removeColumns(), beginInsertColumns(), endInsertColumns()
*/</doc>
<ovr f='qtbase-6.5.0/src/corelib/itemmodels/qidentityproxymodel.cpp' l='104' c='_ZN19QIdentityProxyModel13insertColumnsEiiRK11QModelIndex'/>
<use f='qtbase-6.5.0/src/corelib/itemmodels/qidentityproxymodel.cpp' l='108' u='c' c='_ZN19QIdentityProxyModel13insertColumnsEiiRK11QModelIndex'/>
<ovr f='qtbase-6.5.0/src/corelib/itemmodels/qsortfilterproxymodel.cpp' l='2373' c='_ZN21QSortFilterProxyModel13insertColumnsEiiRK11QModelIndex'/>
<use f='qtbase-6.5.0/src/corelib/itemmodels/qsortfilterproxymodel.cpp' l='2387' u='c' c='_ZN21QSortFilterProxyModel13insertColumnsEiiRK11QModelIndex'/>
<use f='qtbase-6.5.0/src/corelib/itemmodels/qtransposeproxymodel.cpp' l='345' u='c' c='_ZN20QTransposeProxyModel10insertRowsEiiRK11QModelIndex'/>
<ovr f='qtbase-6.5.0/src/corelib/itemmodels/qtransposeproxymodel.cpp' l='376' c='_ZN20QTransposeProxyModel13insertColumnsEiiRK11QModelIndex'/>
<ovr f='qtbase-6.5.0/src/gui/itemmodels/qstandarditemmodel.cpp' l='2924' c='_ZN18QStandardItemModel13insertColumnsEiiRK11QModelIndex'/>
<ovr f='qtbase-6.5.0/src/sql/models/qsqlquerymodel.cpp' l='611' c='_ZN14QSqlQueryModel13insertColumnsEiiRK11QModelIndex'/>
<ovr f='qtbase-6.5.0/src/widgets/itemviews/qtablewidget.cpp' l='45' c='_ZN11QTableModel13insertColumnsEiiRK11QModelIndex'/>
<ovr f='qtbase-6.5.0/src/widgets/itemviews/qtreewidget.cpp' l='433' c='_ZN10QTreeModel13insertColumnsEiiRK11QModelIndex'/>
