<dec f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.h' l='274' type='QPainterPath QGraphicsItem::clipPath() const'/>
<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='4856' ll='4900' type='QPainterPath QGraphicsItem::clipPath() const'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='4916' u='c' c='_ZNK13QGraphicsItem8containsERK7QPointF'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='4973' u='c' c='_ZNK13QGraphicsItem16collidesWithItemEPKS_N2Qt17ItemSelectionModeE'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='5011' u='c' c='_ZNK13QGraphicsItem16collidesWithPathERK12QPainterPathN2Qt17ItemSelectionModeE'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='8119' u='c' c='_ZNK26QAbstractGraphicsShapeItem10opaqueAreaEv'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='4836'>/*!
    \since 4.5

    Returns this item&apos;s clip path, or an empty QPainterPath if this item is
    not clipped. The clip path constrains the item&apos;s appearance and
    interaction (i.e., restricts the area the item can draw within and receive
    events for).

    You can enable clipping by setting the ItemClipsToShape or
    ItemClipsChildrenToShape flags. The item&apos;s clip path is calculated by
    intersecting all clipping ancestors&apos; shapes. If the item sets
    ItemClipsToShape, the final clip is intersected with the item&apos;s own shape.

    \note Clipping introduces a performance penalty for all items involved;
    you should generally avoid using clipping if you can (e.g., if your items
    always draw inside boundingRect() or shape() boundaries, clipping is not
    necessary).

    \sa isClipped(), shape(), setFlags()
*/</doc>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.cpp' l='2080' u='c' c='_ZN13QGraphicsView9fitInViewEPK13QGraphicsItemN2Qt15AspectRatioModeE'/>
