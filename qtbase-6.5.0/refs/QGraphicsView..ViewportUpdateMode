<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.h' l='68' ll='74'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.h' l='75' c='_Z20qt_getEnumMetaObjectN13QGraphicsView18ViewportUpdateModeE'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.h' l='75' c='_Z14qt_getEnumNameN13QGraphicsView18ViewportUpdateModeE'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.h' l='103' c='_ZNK13QGraphicsView18viewportUpdateModeEv'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.h' l='104' c='_ZN13QGraphicsView21setViewportUpdateModeENS_18ViewportUpdateModeE'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview_p.h' l='100'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.cpp' l='1428' c='_ZNK13QGraphicsView18viewportUpdateModeEv'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.cpp' l='1433' c='_ZN13QGraphicsView21setViewportUpdateModeENS_18ViewportUpdateModeE'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.cpp' l='123'>/*!
    \enum QGraphicsView::ViewportUpdateMode

    \since 4.3

    This enum describes how QGraphicsView updates its viewport when the scene
    contents change or are exposed.

    \value FullViewportUpdate When any visible part of the scene changes or is
    reexposed, QGraphicsView will update the entire viewport. This approach is
    fastest when QGraphicsView spends more time figuring out what to draw than
    it would spend drawing (e.g., when very many small items are repeatedly
    updated). This is the preferred update mode for viewports that do not
    support partial updates, such as QOpenGLWidget, and for viewports that
    need to disable scroll optimization.

    \value MinimalViewportUpdate QGraphicsView will determine the minimal
    viewport region that requires a redraw, minimizing the time spent drawing
    by avoiding a redraw of areas that have not changed. This is
    QGraphicsView&apos;s default mode. Although this approach provides the best
    performance in general, if there are many small visible changes on the
    scene, QGraphicsView might end up spending more time finding the minimal
    approach than it will spend drawing.

    \value SmartViewportUpdate QGraphicsView will attempt to find an optimal
    update mode by analyzing the areas that require a redraw.

    \value BoundingRectViewportUpdate The bounding rectangle of all changes in
    the viewport will be redrawn. This mode has the advantage that
    QGraphicsView searches only one region for changes, minimizing time spent
    determining what needs redrawing. The disadvantage is that areas that have
    not changed also need to be redrawn.

    \value NoViewportUpdate QGraphicsView will never update its viewport when
    the scene changes; the user is expected to control all updates. This mode
    disables all (potentially slow) item visibility testing in QGraphicsView,
    and is suitable for scenes that either require a fixed frame rate, or where
    the viewport is otherwise updated externally.

    \sa viewportUpdateMode
*/</doc>
