<dec f='qtbase-6.5.0/src/gui/kernel/qcursor.h' l='49' type='void QCursor::QCursor(const QBitmap &amp; bitmap, const QBitmap &amp; mask, int hotX = -1, int hotY = -1)'/>
<use f='qtbase-6.5.0/src/gui/kernel/qcursor.cpp' l='325' u='c' c='_ZrsR11QDataStreamR7QCursor'/>
<def f='qtbase-6.5.0/src/gui/kernel/qcursor.cpp' l='409' ll='413' type='void QCursor::QCursor(const QBitmap &amp; bitmap, const QBitmap &amp; mask, int hotX = -1, int hotY = -1)'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qcursor.cpp' l='378'>/*!
    Constructs a custom bitmap cursor.

    \a bitmap and
    \a mask make up the bitmap.
    \a hotX and
    \a hotY define the cursor&apos;s hot spot.

    If \a hotX is negative, it is set to the \c{bitmap().width()/2}.
    If \a hotY is negative, it is set to the \c{bitmap().height()/2}.

    The cursor \a bitmap (B) and \a mask (M) bits are combined like this:
    \list
    \li B=1 and M=1 gives black.
    \li B=0 and M=1 gives white.
    \li B=0 and M=0 gives transparent.
    \li B=1 and M=0 gives an XOR&apos;d result under Windows, undefined
    results on all other platforms.
    \endlist

    Use the global Qt color Qt::color0 to draw 0-pixels and Qt::color1 to
    draw 1-pixels in the bitmaps.

    Valid cursor sizes depend on the display hardware (or the
    underlying window system). We recommend using 32 x 32 cursors,
    because this size is supported on all platforms. Some platforms
    also support 16 x 16, 48 x 48, and 64 x 64 cursors.

    \sa QBitmap::QBitmap(), QBitmap::setMask()
*/</doc>
