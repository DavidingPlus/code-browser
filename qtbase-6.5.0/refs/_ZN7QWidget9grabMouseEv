<dec f='qtbase-6.5.0/src/widgets/kernel/qwidget.h' l='441' type='void QWidget::grabMouse()'/>
<doc f='qtbase-6.5.0/src/widgets/kernel/qwidget.h' l='440'>// Grab functions</doc>
<def f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='12625' ll='12628' type='void QWidget::grabMouse()'/>
<doc f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='12597'>/*!
    \fn void QWidget::grabMouse()

    Grabs the mouse input.

    This widget receives all mouse events until releaseMouse() is
    called; other widgets get no mouse events at all. Keyboard
    events are not affected. Use grabKeyboard() if you want to grab
    that.

    \warning Bugs in mouse-grabbing applications very often lock the
    terminal. Use this function with extreme caution, and consider
    using the \c -nograb command line option while debugging.

    It is almost never necessary to grab the mouse when using Qt, as
    Qt grabs and releases it sensibly. In particular, Qt grabs the
    mouse when a mouse button is pressed and keeps it until the last
    button is released.

    \note Only visible widgets can grab mouse input. If isVisible()
    returns \c false for a widget, that widget cannot call grabMouse().

    \note On Windows, grabMouse() only works when the mouse is inside a window
    owned by the process.
    On \macos, grabMouse() only works when the mouse is inside the frame of that widget.

    \sa releaseMouse(), grabKeyboard(), releaseKeyboard()
*/</doc>
<use f='qtbase-6.5.0/src/widgets/widgets/qdockwidget.cpp' l='978' u='c' c='_ZN18QDockWidgetPrivate14mouseMoveEventEP11QMouseEvent'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qmdisubwindow.cpp' l='948' u='c' c='_ZN20QMdiSubWindowPrivate23_q_enterInteractiveModeEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qmdisubwindow.cpp' l='1895' u='c' c='_ZN20QMdiSubWindowPrivate19enterRubberBandModeEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtoolbar.cpp' l='293' u='c' c='_ZN15QToolBarPrivate14mouseMoveEventEP11QMouseEvent'/>
