<dec f='qtbase-6.5.0/src/network/ssl/qtlsbackend_p.h' l='320' type='static QTlsBackend * QTlsBackend::activeOrAnyBackend()'/>
<use f='qtbase-6.5.0/src/network/ssl/qsslcertificate.cpp' l='128' u='c' c='_ZN22QSslCertificatePrivateC1Ev'/>
<use f='qtbase-6.5.0/src/network/ssl/qsslcertificate.cpp' l='151' u='c' c='_ZN15QSslCertificateC1EP9QIODeviceN4QSsl14EncodingFormatE'/>
<use f='qtbase-6.5.0/src/network/ssl/qsslcertificate.cpp' l='179' u='c' c='_ZN15QSslCertificateC1ERK10QByteArrayN4QSsl14EncodingFormatE'/>
<use f='qtbase-6.5.0/src/network/ssl/qsslcertificate.cpp' l='728' u='c' c='_ZN15QSslCertificate8fromDataERK10QByteArrayN4QSsl14EncodingFormatE'/>
<def f='qtbase-6.5.0/src/network/ssl/qtlsbackend.cpp' l='632' ll='639' type='static QTlsBackend * QTlsBackend::activeOrAnyBackend()'/>
<doc f='qtbase-6.5.0/src/network/ssl/qtlsbackend.cpp' l='625'>/*!
    \internal
    Returns the backend that QSslSocket is using. If Qt was built without TLS support,
    this function returns a minimal backend that only supports QSslCertificate.

    \sa defaultBackend()
*/</doc>
