<dec f='qtbase-6.5.0/src/gui/text/qglyphrun.h' l='74' type='void QGlyphRun::setBoundingRect(const QRectF &amp; boundingRect)'/>
<def f='qtbase-6.5.0/src/gui/text/qglyphrun.cpp' l='420' ll='424' type='void QGlyphRun::setBoundingRect(const QRectF &amp; boundingRect)'/>
<doc f='qtbase-6.5.0/src/gui/text/qglyphrun.cpp' l='399'>/*!
  Sets the bounding rect of the glyphs in this QGlyphRun to be \a boundingRect. This rectangle
  will be returned by boundingRect() unless it is null, in which case the bounding rectangle of the
  glyphs in the glyph run will be returned instead.

  \note Unless you are implementing text shaping, you should not have to use this function.
  It is used specifically when the QGlyphRun should represent an area which is smaller than the
  area of the glyphs it contains. This could happen e.g. if the glyph run is retrieved by calling
  QTextLayout::glyphRuns() and the specified range only includes part of a ligature (where two or
  more characters are combined to a single glyph.) When this is the case, the bounding rect should
  only include the appropriate part of the ligature glyph, based on a calculation of the average
  width of the characters in the ligature.

  In order to support such a case (an example is selections which should be drawn with a different
  color than the main text color), it is necessary to clip the painting mechanism to the rectangle
  returned from boundingRect() to avoid drawing the entire ligature glyph.

  \sa boundingRect()

  \since 5.0
*/</doc>
<use f='qtbase-6.5.0/src/gui/text/qtextlayout.cpp' l='1075' u='c' c='_ZNK11QTextLayout9glyphRunsEii6QFlagsINS_21GlyphRunRetrievalFlagEE'/>
<use f='qtbase-6.5.0/src/gui/text/qtextlayout.cpp' l='2370' u='c' c='_ZL16glyphRunWithInfoP11QFontEngineRK7QStringRK12QGlyphLayoutRK7QPointFRK6QFlagsIN9QGlyphRun12GlyphRunFlagEESA_IN11QTextLayout21GlyphRunRetrievalFlagEE6QFixedSJ_iiPtii'/>
