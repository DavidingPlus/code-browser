<def f='qtbase-6.5.0/src/corelib/kernel/qsystemsemaphore.h' l='23' ll='27'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qsystemsemaphore.h' l='28' c='_Z20qt_getEnumMetaObjectN16QSystemSemaphore10AccessModeE'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qsystemsemaphore.h' l='28' c='_Z14qt_getEnumNameN16QSystemSemaphore10AccessModeE'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qsystemsemaphore.h' l='41' c='_ZN16QSystemSemaphoreC1ERK7QStringiNS_10AccessModeE'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qsystemsemaphore.h' l='44' c='_ZN16QSystemSemaphore6setKeyERK7QStringiNS_10AccessModeE'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qsystemsemaphore_p.h' l='53' c='_ZN23QSystemSemaphorePrivate6handleEN16QSystemSemaphore10AccessModeE'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qsystemsemaphore.cpp' l='137' c='_ZN16QSystemSemaphoreC1ERK7QStringiNS_10AccessModeE'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qsystemsemaphore.cpp' l='197' c='_ZN16QSystemSemaphore6setKeyERK7QStringiNS_10AccessModeE'/>
<doc f='qtbase-6.5.0/src/corelib/kernel/qsystemsemaphore.cpp' l='163'>/*!
  \enum QSystemSemaphore::AccessMode

  This enum is used by the constructor and setKey(). Its purpose is to
  enable handling the problem in Unix implementations of semaphores
  that survive a crash. In Unix, when a semaphore survives a crash, we
  need a way to force it to reset its resource count, when the system
  reuses the semaphore. In Windows, where semaphores can&apos;t survive a
  crash, this enum has no effect.

  \value Open If the semaphore already exists, its initial resource
  count is not reset. If the semaphore does not already exist, it is
  created and its initial resource count set.

  \value Create QSystemSemaphore takes ownership of the semaphore and
  sets its resource count to the requested value, regardless of
  whether the semaphore already exists by having survived a crash.
  This value should be passed to the constructor, when the first
  semaphore for a particular key is constructed and you know that if
  the semaphore already exists it could only be because of a crash. In
  Windows, where a semaphore can&apos;t survive a crash, Create and Open
  have the same behavior.
*/</doc>
<use f='qtbase-6.5.0/src/corelib/kernel/qsystemsemaphore_systemv.cpp' l='42' c='_ZN23QSystemSemaphorePrivate6handleEN16QSystemSemaphore10AccessModeE'/>
