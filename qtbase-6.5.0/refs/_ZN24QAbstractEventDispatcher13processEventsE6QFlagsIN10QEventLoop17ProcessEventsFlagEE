<dec f='qtbase-6.5.0/src/corelib/kernel/qabstracteventdispatcher.h' l='37' type='bool QAbstractEventDispatcher::processEvents(QEventLoop::ProcessEventsFlags flags)'/>
<doc f='qtbase-6.5.0/src/corelib/kernel/qabstracteventdispatcher.cpp' l='150'>/*!
    \fn bool QAbstractEventDispatcher::processEvents(QEventLoop::ProcessEventsFlags flags)

    Processes pending events that match \a flags until there are no
    more events to process. Returns \c true if an event was processed;
    otherwise returns \c false.

    This function is especially useful if you have a long running
    operation, and want to show its progress without allowing user
    input by using the QEventLoop::ExcludeUserInputEvents flag.

    If the QEventLoop::WaitForMoreEvents flag is set in \a flags, the
    behavior of this function is as follows:

    \list

    \li If events are available, this function returns after processing
    them.

    \li If no events are available, this function will wait until more
    are available and return after processing newly available events.

    \endlist

    If the QEventLoop::WaitForMoreEvents flag is not set in \a flags,
    and no events are available, this function will return
    immediately.

    \b{Note:} This function does not process events continuously; it
    returns after all available events are processed.
*/</doc>
<ovr f='qtbase-6.5.0/src/corelib/kernel/qeventdispatcher_glib.cpp' l='374' c='_ZN20QEventDispatcherGlib13processEventsE6QFlagsIN10QEventLoop17ProcessEventsFlagEE'/>
<ovr f='qtbase-6.5.0/src/corelib/kernel/qeventdispatcher_unix.cpp' l='423' c='_ZN20QEventDispatcherUNIX13processEventsE6QFlagsIN10QEventLoop17ProcessEventsFlagEE'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qeventloop.cpp' l='100' u='c' c='_ZN10QEventLoop13processEventsE6QFlagsINS_17ProcessEventsFlagEE'/>
