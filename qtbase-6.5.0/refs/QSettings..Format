<def f='qtbase-6.5.0/src/corelib/io/qsettings.h' l='48' ll='80'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.h' l='82' c='_Z20qt_getEnumMetaObjectN9QSettings6FormatE'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.h' l='82' c='_Z14qt_getEnumNameN9QSettings6FormatE'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.h' l='98' c='_ZN9QSettingsC1ENS_6FormatENS_5ScopeERK7QStringS4_P7QObject'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.h' l='100' c='_ZN9QSettingsC1ERK7QStringNS_6FormatEP7QObject'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.h' l='162' c='_ZNK9QSettings6formatEv'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.h' l='167' c='_ZN9QSettings16setDefaultFormatENS_6FormatE'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.h' l='168' c='_ZN9QSettings13defaultFormatEv'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.h' l='169' c='_ZN9QSettings7setPathENS_6FormatENS_5ScopeERK7QString'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.h' l='175' c='_ZN9QSettings14registerFormatERK7QStringPFbR9QIODeviceR4QMapIS0_8QVariantEEPFbS4_RKS7_EN2Qt15CaseSensitivityE'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings_p.h' l='158' c='_ZN16QSettingsPrivateC1EN9QSettings6FormatE'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings_p.h' l='159' c='_ZN16QSettingsPrivateC1EN9QSettings6FormatENS0_5ScopeERK7QStringS5_'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings_p.h' l='184' c='_ZN16QSettingsPrivate6createEN9QSettings6FormatENS0_5ScopeERK7QStringS5_'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings_p.h' l='186' c='_ZN16QSettingsPrivate6createERK7QStringN9QSettings6FormatE'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings_p.h' l='205'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings_p.h' l='222' c='_ZN24QConfFileSettingsPrivateC1EN9QSettings6FormatENS0_5ScopeERK7QStringS5_'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings_p.h' l='224' c='_ZN24QConfFileSettingsPrivateC1ERK7QStringN9QSettings6FormatE'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='103'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='183' c='_ZN16QSettingsPrivateC1EN9QSettings6FormatE'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='189' c='_ZN16QSettingsPrivateC1EN9QSettings6FormatENS0_5ScopeERK7QStringS5_'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='276' c='_ZN16QSettingsPrivate6createEN9QSettings6FormatENS0_5ScopeERK7QStringS5_'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='284' c='_ZN16QSettingsPrivate6createERK7QStringN9QSettings6FormatE'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='944' c='_ZL11pathHashKeyN9QSettings6FormatENS_5ScopeE'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='1015' c='_ZL7getPathN9QSettings6FormatENS_5ScopeE'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='1042' c='_ZN24QConfFileSettingsPrivateC1EN9QSettings6FormatENS0_5ScopeERK7QStringS5_'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='1106' c='_ZN24QConfFileSettingsPrivateC1ERK7QStringN9QSettings6FormatE'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='2526' c='_ZN9QSettingsC1ENS_6FormatENS_5ScopeERK7QStringS4_P7QObject'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='2562' c='_ZN9QSettingsC1ERK7QStringNS_6FormatEP7QObject'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='2754' c='_ZNK9QSettings6formatEv'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='3335' c='_ZN9QSettings16setDefaultFormatENS_6FormatE'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='3348' c='_ZN9QSettings13defaultFormatEv'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='3387' c='_ZN9QSettings7setPathENS_6FormatENS_5ScopeERK7QString'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='3464' c='_ZN9QSettings14registerFormatERK7QStringPFbR9QIODeviceR4QMapIS0_8QVariantEEPFbS4_RKS7_EN2Qt15CaseSensitivityE'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='3485' c='_ZN9QSettings14registerFormatERK7QStringPFbR9QIODeviceR4QMapIS0_8QVariantEEPFbS4_RKS7_EN2Qt15CaseSensitivityE'/>
<doc f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='2345'>/*! \enum QSettings::Format

    This enum type specifies the storage format used by QSettings.

    \value NativeFormat     Store the settings using the most
                            appropriate storage format for the platform.
                            On Windows, this means the system registry;
                            on \macos and iOS, this means the CFPreferences
                            API; on Unix, this means textual
                            configuration files in INI format.
    \value Registry32Format Windows only: Explicitly access the 32-bit system registry
                            from a 64-bit application running on 64-bit Windows.
                            On 32-bit Windows or from a 32-bit application on 64-bit Windows,
                            this works the same as specifying NativeFormat.
                            This enum value was added in Qt 5.7.
    \value Registry64Format Windows only: Explicitly access the 64-bit system registry
                            from a 32-bit application running on 64-bit Windows.
                            On 32-bit Windows or from a 64-bit application on 64-bit Windows,
                            this works the same as specifying NativeFormat.
                            This enum value was added in Qt 5.7.
    \value IniFormat        Store the settings in INI files. Note that INI files
                            lose the distinction between numeric data and the
                            strings used to encode them, so values written as
                            numbers shall be read back as QString.

    \value InvalidFormat    Special value returned by registerFormat().
    \omitvalue CustomFormat1
    \omitvalue CustomFormat2
    \omitvalue CustomFormat3
    \omitvalue CustomFormat4
    \omitvalue CustomFormat5
    \omitvalue CustomFormat6
    \omitvalue CustomFormat7
    \omitvalue CustomFormat8
    \omitvalue CustomFormat9
    \omitvalue CustomFormat10
    \omitvalue CustomFormat11
    \omitvalue CustomFormat12
    \omitvalue CustomFormat13
    \omitvalue CustomFormat14
    \omitvalue CustomFormat15
    \omitvalue CustomFormat16

    On Unix, NativeFormat and IniFormat mean the same thing, except
    that the file extension is different (\c .conf for NativeFormat,
    \c .ini for IniFormat).

    The INI file format is a Windows file format that Qt supports on
    all platforms. In the absence of an INI standard, we try to
    follow what Microsoft does, with the following exceptions:

    \list
    \li  If you store types that QVariant can&apos;t convert to QString
        (e.g., QPoint, QRect, and QSize), Qt uses an \c{@}-based
        syntax to encode the type. For example:

        \snippet code/src_corelib_io_qsettings.cpp 8

        To minimize compatibility issues, any \c @ that doesn&apos;t
        appear at the first position in the value or that isn&apos;t
        followed by a Qt type (\c Point, \c Rect, \c Size, etc.) is
        treated as a normal character.

    \li  Although backslash is a special character in INI files, most
        Windows applications don&apos;t escape backslashes (\c{\}) in file
        paths:

        \snippet code/src_corelib_io_qsettings.cpp 9

        QSettings always treats backslash as a special character and
        provides no API for reading or writing such entries.

    \li  The INI file format has severe restrictions on the syntax of
        a key. Qt works around this by using \c % as an escape
        character in keys. In addition, if you save a top-level
        setting (a key with no slashes in it, e.g., &quot;someKey&quot;), it
        will appear in the INI file&apos;s &quot;General&quot; section. To avoid
        overwriting other keys, if you save something using a key
        such as &quot;General/someKey&quot;, the key will be located in the
        &quot;%General&quot; section, \e not in the &quot;General&quot; section.

    \li In line with most implementations today, QSettings will assume that
        \e values in the INI file are utf-8 encoded. This means that \e values
        will be decoded as utf-8 encoded entries and written back as utf-8.
        To retain backward compatibility with older Qt versions, \e keys in the
        INI file are written in %-encoded format, but can be read in both
        %-encoded and utf-8 formats.

    \endlist

    \section2 Compatibility with older Qt versions

    Please note that this behavior is different to how QSettings behaved
    in versions of Qt prior to Qt 6. INI files written with Qt 5 or earlier are
    however fully readable by a Qt 6 based application (unless a ini codec
    different from utf8 had been set). But INI files written with Qt 6
    will only be readable by older Qt versions if you set the &quot;iniCodec&quot; to
    a utf-8 textcodec.

    \sa registerFormat(), setPath()
*/</doc>
