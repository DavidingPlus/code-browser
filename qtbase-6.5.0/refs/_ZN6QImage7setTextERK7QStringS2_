<dec f='qtbase-6.5.0/src/gui/image/qimage.h' l='270' type='void QImage::setText(const QString &amp; key, const QString &amp; value)'/>
<use f='qtbase-6.5.0/src/gui/image/qimage.cpp' l='1163' u='c' c='_ZL12copyMetadataP6QImageRKS_'/>
<def f='qtbase-6.5.0/src/gui/image/qimage.cpp' l='4217' ll='4225' type='void QImage::setText(const QString &amp; key, const QString &amp; value)'/>
<doc f='qtbase-6.5.0/src/gui/image/qimage.cpp' l='4193'>/*!
    \fn void QImage::setText(const QString &amp;key, const QString &amp;text)

    Sets the image text to the given \a text and associate it with the
    given \a key.

    If you just want to store a single text block (i.e., a &quot;comment&quot;
    or just a description), you can either pass an empty key, or use a
    generic key like &quot;Description&quot;.

    The image text is embedded into the image data when you
    call save() or QImageWriter::write().

    Not all image formats support embedded text. You can find out
    if a specific image or format supports embedding text
    by using QImageWriter::supportsOption(). We give an example:

    \snippet image/supportedformat.cpp 0

    You can use QImageWriter::supportedImageFormats() to find out
    which image formats are available to you.

    \sa text(), textKeys()
*/</doc>
<use f='qtbase-6.5.0/src/gui/image/qpnghandler.cpp' l='693' u='c' c='_ZN18QPngHandlerPrivate12readPngImageEP6QImage'/>
<use f='qtbase-6.5.0/src/plugins/imageformats/ico/qicohandler.cpp' l='447' u='c' c='_ZN9ICOReader6iconAtEi'/>
<use f='qtbase-6.5.0/src/plugins/imageformats/ico/qicohandler.cpp' l='520' u='c' c='_ZN9ICOReader6iconAtEi'/>
<use f='qtbase-6.5.0/src/plugins/imageformats/jpeg/qjpeghandler.cpp' l='981' u='c' c='_ZN19QJpegHandlerPrivate4readEP6QImage'/>
