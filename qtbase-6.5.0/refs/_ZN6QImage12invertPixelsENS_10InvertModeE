<dec f='qtbase-6.5.0/src/gui/image/qimage.h' l='230' type='void QImage::invertPixels(QImage::InvertMode  = InvertRgb)'/>
<use f='qtbase-6.5.0/src/gui/image/qbitmap.cpp' l='153' u='c' c='_ZL10makeBitmapO6QImage6QFlagsIN2Qt19ImageConversionFlagEE'/>
<def f='qtbase-6.5.0/src/gui/image/qimage.cpp' l='1970' ll='2088' type='void QImage::invertPixels(QImage::InvertMode mode = InvertRgb)'/>
<use f='qtbase-6.5.0/src/gui/image/qimage.cpp' l='3273' u='c' c='_ZNK6QImage19createMaskFromColorEjN2Qt8MaskModeE'/>
<doc f='qtbase-6.5.0/src/gui/image/qimage.cpp' l='1950'>/*!
    Inverts all pixel values in the image.

    The given invert \a mode only have a meaning when the image&apos;s
    depth is 32. The default \a mode is InvertRgb, which leaves the
    alpha channel unchanged. If the \a mode is InvertRgba, the alpha
    bits are also inverted.

    Inverting an 8-bit image means to replace all pixels using color
    index \e i with a pixel using color index 255 minus \e i. The same
    is the case for a 1-bit image. Note that the color table is \e not
    changed.

    If the image has a premultiplied alpha channel, the image is first
    converted to an unpremultiplied image format to be inverted and
    then converted back.

    \sa {QImage#Image Transformations}{Image Transformations}
*/</doc>
<use f='qtbase-6.5.0/src/gui/image/qplatformpixmap.cpp' l='78' u='c' c='_ZL27makeBitmapCompliantIfNeededP15QPlatformPixmapRK6QImage6QFlagsIN2Qt19ImageConversionFlagEE'/>
<use f='qtbase-6.5.0/src/gui/painting/qtextureglyphcache.cpp' l='329' u='c' c='_ZN23QImageTextureGlyphCache11fillTextureERKN18QTextureGlyphCache5CoordEjRK11QFixedPoint'/>
