<dec f='include/freetype2/freetype/ftoutln.h' l='501' type='FT_Error FT_Outline_Render(FT_Library library, FT_Outline * outline, FT_Raster_Params * params)'/>
<doc f='include/freetype2/freetype/ftoutln.h' l='462'>/**************************************************************************
   *
   * @function:
   *   FT_Outline_Render
   *
   * @description:
   *   Render an outline within a bitmap using the current scan-convert.
   *
   * @input:
   *   library ::
   *     A handle to a FreeType library object.
   *
   *   outline ::
   *     A pointer to the source outline descriptor.
   *
   * @inout:
   *   params ::
   *     A pointer to an @FT_Raster_Params structure used to describe the
   *     rendering operation.
   *
   * @return:
   *   FreeType error code.  0~means success.
   *
   * @note:
   *   This advanced function uses @FT_Raster_Params as an argument,
   *   allowing FreeType rasterizer to be used for direct composition,
   *   translucency, etc.  You should know how to set up @FT_Raster_Params
   *   for this function to work.
   *
   *   The field `params.source` will be set to `outline` before the scan
   *   converter is called, which means that the value you give to it is
   *   actually ignored.
   *
   *   The gray-level rasterizer always uses 256 gray levels.  If you want
   *   less gray levels, you have to provide your own span callback.  See the
   *   @FT_RASTER_FLAG_DIRECT value of the `flags` field in the
   *   @FT_Raster_Params structure for more details.
   */</doc>
