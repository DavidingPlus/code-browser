<dec f='qtbase-6.5.0/src/corelib/io/qprocess.h' l='207' type='static int QProcess::execute(const QString &amp; program, const QStringList &amp; arguments = {})'/>
<def f='qtbase-6.5.0/src/corelib/io/qprocess.cpp' l='2400' ll='2408' type='static int QProcess::execute(const QString &amp; program, const QStringList &amp; arguments = {})'/>
<doc f='qtbase-6.5.0/src/corelib/io/qprocess.cpp' l='2383'>/*!
    Starts the program \a program with the arguments \a arguments in a
    new process, waits for it to finish, and then returns the exit
    code of the process. Any data the new process writes to the
    console is forwarded to the calling process.

    The environment and working directory are inherited from the calling
    process.

    Argument handling is identical to the respective start() overload.

    If the process cannot be started, -2 is returned. If the process
    crashes, -1 is returned. Otherwise, the process&apos; exit code is
    returned.

    \sa start()
*/</doc>
