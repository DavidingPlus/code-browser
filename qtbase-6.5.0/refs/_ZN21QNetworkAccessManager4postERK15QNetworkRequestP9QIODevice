<dec f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.h' l='83' type='QNetworkReply * QNetworkAccessManager::post(const QNetworkRequest &amp; request, QIODevice * data)'/>
<def f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='796' ll='799' type='QNetworkReply * QNetworkAccessManager::post(const QNetworkRequest &amp; request, QIODevice * data)'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='813' u='c' c='_ZN21QNetworkAccessManager4postERK15QNetworkRequestRK10QByteArray'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='835' u='c' c='_ZN21QNetworkAccessManager4postERK15QNetworkRequestP14QHttpMultiPart'/>
<doc f='qtbase-6.5.0/src/network/access/qnetworkaccessmanager.cpp' l='782'>/*!
    Sends an HTTP POST request to the destination specified by \a request
    and returns a new QNetworkReply object opened for reading that will
    contain the reply sent by the server. The contents of  the \a data
    device will be uploaded to the server.

    \a data must be open for reading and must remain valid until the
    finished() signal is emitted for this reply.

    \note Sending a POST request on protocols other than HTTP and
    HTTPS is undefined and will probably fail.

    \sa get(), put(), deleteResource(), sendCustomRequest()
*/</doc>
