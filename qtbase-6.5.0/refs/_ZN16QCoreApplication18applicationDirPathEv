<dec f='qtbase-6.5.0/src/corelib/kernel/qcoreapplication.h' l='110' type='static QString QCoreApplication::applicationDirPath()'/>
<use f='qtbase-6.5.0/src/corelib/global/qlibraryinfo.cpp' l='114' u='c' c='_ZL17findConfigurationv'/>
<use f='qtbase-6.5.0/src/corelib/global/qlibraryinfo.cpp' l='284' u='c' c='_ZL22prefixFromAppDirHelperv'/>
<def f='qtbase-6.5.0/src/corelib/kernel/qcoreapplication.cpp' l='2379' ll='2390' type='static QString QCoreApplication::applicationDirPath()'/>
<doc f='qtbase-6.5.0/src/corelib/kernel/qcoreapplication.cpp' l='2360'>/*!
    Returns the directory that contains the application executable.

    For example, if you have installed Qt in the \c{C:\Qt}
    directory, and you run the \c{regexp} example, this function will
    return &quot;C:/Qt/examples/tools/regexp&quot;.

    On \macos and iOS this will point to the directory actually containing
    the executable, which may be inside an application bundle (if the
    application is bundled).

    \warning On Linux, this function will try to get the path from the
    \c {/proc} file system. If that fails, it assumes that \c
    {argv[0]} contains the absolute file name of the executable. The
    function also assumes that the current directory has not been
    changed by the application.

    \sa applicationFilePath()
*/</doc>
<use f='qtbase-6.5.0/src/testlib/qtestcase.cpp' l='2734' u='c' c='_ZN5QTest13qFindTestDataERK7QStringPKciS4_S4_'/>
<use f='qtbase-6.5.0/src/testlib/qtestcase.cpp' l='2747' u='c' c='_ZN5QTest13qFindTestDataERK7QStringPKciS4_S4_'/>
