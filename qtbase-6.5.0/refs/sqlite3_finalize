<dec f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='5500' type='int sqlite3_finalize(sqlite3_stmt * pStmt)'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='52093' u='c' c='sqlite3_serialize'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='52163' u='c' c='sqlite3_deserialize'/>
<def f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='87846' ll='87865' type='int sqlite3_finalize(sqlite3_stmt * pStmt)'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='99215' u='c' c='blobSeekToRow'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='99228' u='c' c='blobSeekToRow'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='99494' u='c' c='sqlite3_blob_close'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='132937'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='135559' u='c' c='sqlite3Pragma'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='137032' u='c' c='pragmaVtabCursorClear'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='137057' u='c' c='pragmaVtabNext'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='137359' u='c' c='sqlite3InitCallback'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='149899' u='c' c='execSql'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='180680' u='c' c='fts3DisconnectMethod'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='180682' u='c' c='fts3DisconnectMethod'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='180909' u='c' c='fts3DatabasePageSize'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='181292' u='c' c='fts3ContentColumns'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='181916' u='c' c='fts3CursorFinalizeStmt'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='186412' u='c' c='fts3auxDisconnectMethod'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='194008' u='c' c='fts3DoRebuild'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='194023' u='c' c='fts3DoRebuild'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='195764' u='c' c='fts3IntegrityCheck'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='202493' u='c' c='rtreeRelease'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='202494' u='c' c='rtreeRelease'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='202495' u='c' c='rtreeRelease'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='202496' u='c' c='rtreeRelease'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='202497' u='c' c='rtreeRelease'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='202498' u='c' c='rtreeRelease'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='202499' u='c' c='rtreeRelease'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='202500' u='c' c='rtreeRelease'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='202501' u='c' c='rtreeRelease'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='202600' u='c' c='rtreeClose'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='204683' u='c' c='rtreeConstraintError'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='204930' u='c' c='rtreeQueryStat1'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='205123' u='c' c='getIntFromStmt'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='205729' u='c' c='rtreeCheckCount'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='205768' u='c' c='rtreeCheckTable'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='205785' u='c' c='rtreeCheckTable'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='205799' u='c' c='rtreeCheckTable'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='205800' u='c' c='rtreeCheckTable'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='205801' u='c' c='rtreeCheckTable'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='226940' u='c' c='sqlite3Fts5ConfigLoad'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='236058' u='c' c='sqlite3Fts5IndexClose'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='236059' u='c' c='sqlite3Fts5IndexClose'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='236060' u='c' c='sqlite3Fts5IndexClose'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='236061' u='c' c='sqlite3Fts5IndexClose'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='236062' u='c' c='sqlite3Fts5IndexClose'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='236063' u='c' c='sqlite3Fts5IndexClose'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='236812' u='c' c='fts5IndexIntegrityCheckSegment'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='238184' u='c' c='fts5FreeCursorComponents'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='238198' u='c' c='fts5FreeCursorComponents'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='238455' u='c' c='fts5CursorFirstSorted'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='238557' u='c' c='fts5FindRankFunction'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='240711' u='c' c='sqlite3Fts5StorageClose'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='241153' u='c' c='fts5StorageCount'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='241393' u='c' c='sqlite3Fts5StorageStmtRelease'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='244432' u='c' c='fts5VocabOpenMethod'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='244456' u='c' c='fts5VocabOpenMethod'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='244483' u='c' c='fts5VocabCloseMethod'/>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='5474'>/*
** CAPI3REF: Destroy A Prepared Statement Object
** DESTRUCTOR: sqlite3_stmt
**
** ^The sqlite3_finalize() function is called to delete a [prepared statement].
** ^If the most recent evaluation of the statement encountered no errors
** or if the statement is never been evaluated, then sqlite3_finalize() returns
** SQLITE_OK.  ^If the most recent evaluation of statement S failed, then
** sqlite3_finalize(S) returns the appropriate [error code] or
** [extended error code].
**
** ^The sqlite3_finalize(S) routine can be called at any point during
** the life cycle of [prepared statement] S:
** before statement S is ever evaluated, after
** one or more calls to [sqlite3_reset()], or after any call
** to [sqlite3_step()] regardless of whether or not the statement has
** completed execution.
**
** ^Invoking sqlite3_finalize() on a NULL pointer is a harmless no-op.
**
** The application must finalize every [prepared statement] in order to avoid
** resource leaks.  It is a grievous error for the application to try to use
** a prepared statement after it has been finalized.  Any use of a prepared
** statement after it has been finalized can result in undefined and
** undesirable behavior such as segfaults and heap corruption.
*/</doc>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='87837'>/*
** The following routine destroys a virtual machine that is created by
** the sqlite3_compile() routine. The integer returned is an SQLITE_
** success/failure code that describes the result of executing the virtual
** machine.
**
** This routine sets the error code and string returned by
** sqlite3_errcode(), sqlite3_errmsg() and sqlite3_errmsg16().
*/</doc>
<dec f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='5194' type='int sqlite3_finalize(sqlite3_stmt * pStmt)'/>
<use f='qtbase-6.5.0/src/plugins/sqldrivers/sqlite/qsql_sqlite.cpp' l='160' u='c' c='_ZN20QSQLiteResultPrivate8finalizeEv'/>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='5168'>/*
** CAPI3REF: Destroy A Prepared Statement Object
** DESTRUCTOR: sqlite3_stmt
**
** ^The sqlite3_finalize() function is called to delete a [prepared statement].
** ^If the most recent evaluation of the statement encountered no errors
** or if the statement is never been evaluated, then sqlite3_finalize() returns
** SQLITE_OK.  ^If the most recent evaluation of statement S failed, then
** sqlite3_finalize(S) returns the appropriate [error code] or
** [extended error code].
**
** ^The sqlite3_finalize(S) routine can be called at any point during
** the life cycle of [prepared statement] S:
** before statement S is ever evaluated, after
** one or more calls to [sqlite3_reset()], or after any call
** to [sqlite3_step()] regardless of whether or not the statement has
** completed execution.
**
** ^Invoking sqlite3_finalize() on a NULL pointer is a harmless no-op.
**
** The application must finalize every [prepared statement] in order to avoid
** resource leaks.  It is a grievous error for the application to try to use
** a prepared statement after it has been finalized.  Any use of a prepared
** statement after it has been finalized can result in undefined and
** undesirable behavior such as segfaults and heap corruption.
*/</doc>
