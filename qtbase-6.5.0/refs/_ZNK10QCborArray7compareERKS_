<dec f='qtbase-6.5.0/src/corelib/serialization/qcborarray.h' l='183' type='int QCborArray::compare(const QCborArray &amp; other) const'/>
<use f='qtbase-6.5.0/src/corelib/serialization/qcborarray.h' l='194' u='c' c='_ZNK10QCborArrayeqERKS_'/>
<use f='qtbase-6.5.0/src/corelib/serialization/qcborarray.h' l='198' u='c' c='_ZNK10QCborArrayltERKS_'/>
<def f='qtbase-6.5.0/src/corelib/serialization/qcborvalue.cpp' l='1326' ll='1329' type='int QCborArray::compare(const QCborArray &amp; other) const'/>
<doc f='qtbase-6.5.0/src/corelib/serialization/qcborarray.cpp' l='430'>/*!
    \fn int QCborArray::compare(const QCborArray &amp;other) const

    Compares this array and \a other, comparing each element in sequence, and
    returns an integer that indicates whether this array should be sorted
    before (if the result is negative) or after \a other (if the result is
    positive). If this function returns 0, the two arrays are equal and contain
    the same elements.

    For more information on CBOR sorting order, see QCborValue::compare().

    \sa QCborValue::compare(), QCborMap::compare(), operator==()
 */</doc>
