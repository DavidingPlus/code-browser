<dec f='qtbase-6.5.0/src/corelib/io/qfileinfo.h' l='121' type='bool QFileInfo::isSymbolicLink() const'/>
<def f='qtbase-6.5.0/src/corelib/io/qfileinfo.cpp' l='1111' ll='1118' type='bool QFileInfo::isSymbolicLink() const'/>
<doc f='qtbase-6.5.0/src/corelib/io/qfileinfo.cpp' l='1090'>/*!
    Returns \c true if this object points to a symbolic link;
    otherwise returns \c false.

    Symbolic links exist on Unix (including \macos and iOS) and Windows
    (NTFS-symlink) and are typically created by the \c{ln -s} or \c{mklink}
    commands, respectively.

    Unix handles symlinks transparently. Opening a symbolic link effectively
    opens the \l{symLinkTarget()}{link&apos;s target}.

    In contrast to isSymLink(), false will be returned for shortcuts
    (\c *.lnk files) on Windows and aliases on \macos. Use QFileInfo::isShortcut()
    and QFileInfo::isAlias() instead.

    \note If the symlink points to a non existing file, exists() returns
    false.

    \sa isFile(), isDir(), isShortcut(), symLinkTarget()
*/</doc>
