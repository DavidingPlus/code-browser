<dec f='qtbase-6.5.0/src/corelib/io/qsettings.h' l='119' type='void QSettings::setAtomicSyncRequired(bool enable)'/>
<def f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='2853' ll='2857' type='void QSettings::setAtomicSyncRequired(bool enable)'/>
<doc f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='2832'>/*!
    \since 5.10

    Configures whether QSettings is required to perform atomic saving and
    reloading (synchronization) of the settings. If the \a enable argument is
    \c true (the default), sync() will only perform synchronization operations
    that are atomic. If this is not possible, sync() will fail and status()
    will be an error condition.

    Setting this property to \c false will allow QSettings to write directly to
    the configuration file and ignore any errors trying to lock it against
    other processes trying to write at the same time. Because of the potential
    for corruption, this option should be used with care, but is required in
    certain conditions, like a QSettings::IniFormat configuration file that
    exists in an otherwise non-writeable directory or NTFS Alternate Data
    Streams.

    See \l QSaveFile for more information on the feature.

    \sa isAtomicSyncRequired(), QSaveFile
*/</doc>
