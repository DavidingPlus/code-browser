<dec f='qtbase-6.5.0/src/testlib/qabstracttestlogger_p.h' l='63' type='void QAbstractTestLogger::enterTestFunction(const char * function)'/>
<doc f='qtbase-6.5.0/src/testlib/qabstracttestlogger.cpp' l='232'>/*!
    \fn void QAbstractTestLogger::enterTestFunction(const char *function)

    This virtual method is called before each test function is invoked. It is
    passed the name of the test function (without its class prefix) as \a
    function. It is likewise called for \c{initTestCase()} at the start of
    testing, after \l startLogging(), and for \c{cleanupTestCase()} at the end
    of testing, in each case passing the name of the function. It is also called
    with \nullptr as \a function after the last of these functions, or in the
    event of an early end to testing, before \l stopLogging().

    For data-driven test functions, this is called only once, before the data
    function is called to set up the table of datasets and the test is run with
    its first dataset.

    Every logging implementation must implement this method. It shall typically
    need to record the name of the function for later use in log messages.

    \sa leaveTestFunction(), enterTestData()
*/</doc>
<ovr f='qtbase-6.5.0/src/testlib/qcsvbenchmarklogger.cpp' l='35' c='_ZN19QCsvBenchmarkLogger17enterTestFunctionEPKc'/>
<ovr f='qtbase-6.5.0/src/testlib/qjunittestlogger.cpp' l='130' c='_ZN16QJUnitTestLogger17enterTestFunctionEPKc'/>
<ovr f='qtbase-6.5.0/src/testlib/qplaintestlogger.cpp' l='456' c='_ZN16QPlainTestLogger17enterTestFunctionEPKc'/>
<ovr f='qtbase-6.5.0/src/testlib/qtaptestlogger.cpp' l='131' c='_ZN14QTapTestLogger17enterTestFunctionEPKc'/>
<ovr f='qtbase-6.5.0/src/testlib/qteamcitylogger.cpp' l='107' c='_ZN15QTeamCityLogger17enterTestFunctionEPKc'/>
<use f='qtbase-6.5.0/src/testlib/qtestlog.cpp' l='262' u='c' c='_ZN8QTestLog17enterTestFunctionEPKc'/>
<ovr f='qtbase-6.5.0/src/testlib/qxmltestlogger.cpp' l='140' c='_ZN14QXmlTestLogger17enterTestFunctionEPKc'/>
