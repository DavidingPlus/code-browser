<dec f='qtbase-6.5.0/src/corelib/time/qdatetime.h' l='337' type='QTimeZone QDateTime::timeRepresentation() const'/>
<def f='qtbase-6.5.0/src/corelib/time/qdatetime.cpp' l='3603' ll='3606' type='QTimeZone QDateTime::timeRepresentation() const'/>
<use f='qtbase-6.5.0/src/corelib/time/qdatetime.cpp' l='4598' u='c' c='_ZNK9QDateTime10toTimeZoneERK9QTimeZone'/>
<doc f='qtbase-6.5.0/src/corelib/time/qdatetime.cpp' l='3589'>/*!
    \since 6.5
    Returns a QTimeZone identifying how this datetime represents time.

    The timeSpec() of the returned QTimeZone will coincide with that of this
    datetime; if it is not Qt::TimeZone then the returned QTimeZone is a time
    representation. When their timeSpec() is Qt::OffsetFromUTC, the returned
    QTimeZone&apos;s fixedSecondsAheadOfUtc() supplies the offset.  When timeSpec()
    is Qt::TimeZone, the QTimeZone object itself is the full representation of
    that time zone.

    \sa timeZone(), setTimeZone(), QTimeZone::asBackendZone()
*/</doc>
<use f='qtbase-6.5.0/src/corelib/time/qdatetimeparser.cpp' l='135' u='c' c='_ZNK15QDateTimeParser8setDigitER9QDateTimeii'/>
<use f='qtbase-6.5.0/src/corelib/time/qdatetimeparser.cpp' l='1165' u='c' c='_ZNK15QDateTimeParser10scanStringERK9QDateTimeb'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qdatetimeedit.cpp' l='236' u='c' c='_ZN13QDateTimeEdit11setDateTimeERK9QDateTime'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qdatetimeedit.cpp' l='1460' u='c' c='_ZNK13QDateTimeEdit5fixupER7QString'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qdatetimeedit.cpp' l='2143' u='c' c='_ZNK20QDateTimeEditPrivate6stepByEiib'/>
