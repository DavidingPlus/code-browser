<dec f='qtbase-6.5.0/src/network/access/qabstractnetworkcache.h' l='82' type='QNetworkCacheMetaData QAbstractNetworkCache::metaData(const QUrl &amp; url)'/>
<doc f='qtbase-6.5.0/src/network/access/qabstractnetworkcache.cpp' l='414'>/*!
    \fn QNetworkCacheMetaData QAbstractNetworkCache::metaData(const QUrl &amp;url) = 0
    Returns the meta data for the url \a url.

    If the url is valid and the cache contains the data for url,
    a valid QNetworkCacheMetaData is returned.

    In the base class this is a pure virtual function.

    \sa updateMetaData(), data()
*/</doc>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccesscachebackend.cpp' l='43' u='c' c='_ZN26QNetworkAccessCacheBackend17sendCacheContentsEv'/>
<ovr f='qtbase-6.5.0/src/network/access/qnetworkdiskcache.cpp' l='323' c='_ZN17QNetworkDiskCache8metaDataERK4QUrl'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyhttpimpl.cpp' l='493' u='c' c='_ZN28QNetworkReplyHttpImplPrivate22loadFromCacheIfAllowedER19QHttpNetworkRequest'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyhttpimpl.cpp' l='1393' u='c' c='_ZN28QNetworkReplyHttpImplPrivate21replyDownloadMetaDataERK5QListISt4pairI10QByteArrayS2_EEiRK7QStringb14QSharedPointerIcExxbb'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyhttpimpl.cpp' l='1415' u='c' c='_ZN28QNetworkReplyHttpImplPrivate21replyDownloadMetaDataERK5QListISt4pairI10QByteArrayS2_EEiRK7QStringb14QSharedPointerIcExxbb'/>
