<dec f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.h' l='235' type='void QGraphicsView::drawForeground(QPainter * painter, const QRectF &amp; rect)'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.cpp' l='2188' u='c' c='_ZN13QGraphicsView6renderEP8QPainterRK6QRectFRK5QRectN2Qt15AspectRatioModeE'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.cpp' l='3549' u='c' c='_ZN13QGraphicsView10paintEventEP11QPaintEvent'/>
<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.cpp' l='3746' ll='3755' type='void QGraphicsView::drawForeground(QPainter * painter, const QRectF &amp; rect)'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.cpp' l='3729'>/*!
    Draws the foreground of the scene using \a painter, after the background
    and all items are drawn. Reimplement this function to provide a custom
    foreground for this view.

    If all you want is to define a color, texture or gradient for the
    foreground, you can call setForegroundBrush() instead.

    All painting is done in \e scene coordinates. \a rect is the exposed
    rectangle.

    The default implementation fills \a rect using the view&apos;s foregroundBrush.
    If no such brush is defined (the default), the scene&apos;s drawForeground()
    function is called instead.

    \sa drawBackground(), QGraphicsScene::drawForeground()
*/</doc>
