<dec f='qtbase-6.5.0/src/testlib/qtestcase.h' l='375' type='int QTest::qExec(QObject * testObject, int argc = 0, char ** argv = nullptr)'/>
<def f='qtbase-6.5.0/src/testlib/qtestcase.cpp' l='2244' ll='2254' type='int QTest::qExec(QObject * testObject, int argc = 0, char ** argv = nullptr)'/>
<use f='qtbase-6.5.0/src/testlib/qtestcase.cpp' l='2464' u='c' c='_ZN5QTest5qExecEP7QObjectRK5QListI7QStringE'/>
<doc f='qtbase-6.5.0/src/testlib/qtestcase.cpp' l='2206'>/*!
    Executes tests declared in \a testObject. In addition, the private slots
    \c{initTestCase()}, \c{cleanupTestCase()}, \c{init()} and \c{cleanup()}
    are executed if they exist. See \l{Creating a Test} for more details.

    Optionally, the command line arguments \a argc and \a argv can be provided.
    For a list of recognized arguments, read \l {Qt Test Command Line Arguments}.

    The following example will run all tests in \c MyTestObject:

    \snippet code/src_qtestlib_qtestcase.cpp 18

    This function returns 0 if no tests failed, or a value other than 0 if one
    or more tests failed or in case of unhandled exceptions.  (Skipped tests do
    not influence the return value.)

    For stand-alone test applications, the convenience macro \l QTEST_MAIN() can
    be used to declare a main() function that parses the command line arguments
    and executes the tests, avoiding the need to call this function explicitly.

    The return value from this function is also the exit code of the test
    application when the \l QTEST_MAIN() macro is used.

    For stand-alone test applications, this function should not be called more
    than once, as command-line options for logging test output to files and
    executing individual test functions will not behave correctly.

    \note This function is not reentrant, only one test can run at a time. A
    test that was executed with qExec() can&apos;t run another test via qExec() and
    threads are not allowed to call qExec() simultaneously.

    If you have programmatically created the arguments, as opposed to getting them
    from the arguments in \c main(), it is likely of interest to use
    QTest::qExec(QObject *, const QStringList &amp;) since it is Unicode safe.

    \sa QTEST_MAIN(), QTEST_GUILESS_MAIN(), QTEST_APPLESS_MAIN()
*/</doc>
