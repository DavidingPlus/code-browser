<use f='qtbase-6.5.0/src/network/access/http2/http2frames_p.h' l='68' c='_ZN5Http211FrameReader4readER15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/http2/http2frames_p.h' l='75' c='_ZN5Http211FrameReader10readHeaderER15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/http2/http2frames_p.h' l='76' c='_ZN5Http211FrameReader11readPayloadER15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/http2/http2frames_p.h' l='130' c='_ZNK5Http211FrameWriter5writeER15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/http2/http2frames_p.h' l='135' c='_ZN5Http211FrameWriter12writeHEADERSER15QAbstractSocketj'/>
<use f='qtbase-6.5.0/src/network/access/http2/http2frames_p.h' l='139' c='_ZN5Http211FrameWriter9writeDATAER15QAbstractSocketjPKhj'/>
<inh f='qtbase-6.5.0/src/corelib/io/qiodevice.h' l='27' c='QIODevice'/>
<def f='qtbase-6.5.0/src/network/socket/qabstractsocket.h' l='30' ll='224'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.h' l='218' c='_ZN15QAbstractSocketC1ERKS_'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.h' l='218' c='_ZN15QAbstractSocketaSERKS_'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.h' l='218' c='_ZN15QAbstractSocketaSERKS_'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.h' l='218' c='_ZN15QAbstractSocketC1EOS_'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.h' l='218' c='_ZN15QAbstractSocketaSEOS_'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.h' l='218' c='_ZN15QAbstractSocketaSEOS_'/>
<use f='qtbase-6.5.0/src/network/access/http2/http2frames.cpp' l='261' c='_ZN5Http211FrameReader4readER15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/http2/http2frames.cpp' l='289' c='_ZN5Http211FrameReader10readHeaderER15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/http2/http2frames.cpp' l='305' c='_ZN5Http211FrameReader11readPayloadER15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/http2/http2frames.cpp' l='396' c='_ZNK5Http211FrameWriter5writeER15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/http2/http2frames.cpp' l='410' c='_ZN5Http211FrameWriter12writeHEADERSER15QAbstractSocketj'/>
<use f='qtbase-6.5.0/src/network/access/http2/http2frames.cpp' l='460' c='_ZN5Http211FrameWriter9writeDATAER15QAbstractSocketjPKhj'/>
<size>16</size>
<smbr r='QAbstractSocket::staticMetaObject' t='const QMetaObject'/>
<fun r='_ZNK15QAbstractSocket10metaObjectEv'/>
<fun r='_ZN15QAbstractSocket11qt_metacastEPKc'/>
<fun r='_ZN15QAbstractSocket11qt_metacallEN11QMetaObject4CallEiPPv'/>
<fun r='_ZN15QAbstractSocket2trEPKcS1_i'/>
<fun r='_ZN15QAbstractSocket18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv'/>
<fun r='_ZN15QAbstractSocketC1ENS_10SocketTypeEP7QObject'/>
<fun r='_ZN15QAbstractSocketD1Ev'/>
<fun r='_ZN15QAbstractSocket6resumeEv'/>
<fun r='_ZNK15QAbstractSocket9pauseModeEv'/>
<fun r='_ZN15QAbstractSocket12setPauseModeE6QFlagsINS_9PauseModeEE'/>
<fun r='_ZN15QAbstractSocket4bindERK12QHostAddresst6QFlagsINS_8BindFlagEE'/>
<fun r='_ZN15QAbstractSocket4bindEt6QFlagsINS_8BindFlagEE'/>
<fun r='_ZN15QAbstractSocket13connectToHostERK7QStringt6QFlagsIN13QIODeviceBase12OpenModeFlagEENS_20NetworkLayerProtocolE'/>
<fun r='_ZN15QAbstractSocket13connectToHostERK12QHostAddresst6QFlagsIN13QIODeviceBase12OpenModeFlagEE'/>
<fun r='_ZN15QAbstractSocket18disconnectFromHostEv'/>
<fun r='_ZNK15QAbstractSocket7isValidEv'/>
<fun r='_ZNK15QAbstractSocket14bytesAvailableEv'/>
<fun r='_ZNK15QAbstractSocket12bytesToWriteEv'/>
<fun r='_ZNK15QAbstractSocket9localPortEv'/>
<fun r='_ZNK15QAbstractSocket12localAddressEv'/>
<fun r='_ZNK15QAbstractSocket8peerPortEv'/>
<fun r='_ZNK15QAbstractSocket11peerAddressEv'/>
<fun r='_ZNK15QAbstractSocket8peerNameEv'/>
<fun r='_ZNK15QAbstractSocket14readBufferSizeEv'/>
<fun r='_ZN15QAbstractSocket17setReadBufferSizeEx'/>
<fun r='_ZN15QAbstractSocket5abortEv'/>
<fun r='_ZNK15QAbstractSocket16socketDescriptorEv'/>
<fun r='_ZN15QAbstractSocket19setSocketDescriptorExNS_11SocketStateE6QFlagsIN13QIODeviceBase12OpenModeFlagEE'/>
<fun r='_ZN15QAbstractSocket15setSocketOptionENS_12SocketOptionERK8QVariant'/>
<fun r='_ZN15QAbstractSocket12socketOptionENS_12SocketOptionE'/>
<fun r='_ZNK15QAbstractSocket10socketTypeEv'/>
<fun r='_ZNK15QAbstractSocket5stateEv'/>
<fun r='_ZNK15QAbstractSocket5errorEv'/>
<fun r='_ZN15QAbstractSocket5closeEv'/>
<fun r='_ZNK15QAbstractSocket12isSequentialEv'/>
<fun r='_ZN15QAbstractSocket5flushEv'/>
<fun r='_ZN15QAbstractSocket16waitForConnectedEi'/>
<fun r='_ZN15QAbstractSocket16waitForReadyReadEi'/>
<fun r='_ZN15QAbstractSocket19waitForBytesWrittenEi'/>
<fun r='_ZN15QAbstractSocket19waitForDisconnectedEi'/>
<fun r='_ZN15QAbstractSocket8setProxyERK13QNetworkProxy'/>
<fun r='_ZNK15QAbstractSocket5proxyEv'/>
<fun r='_ZNK15QAbstractSocket11protocolTagEv'/>
<fun r='_ZN15QAbstractSocket14setProtocolTagERK7QString'/>
<fun r='_ZN15QAbstractSocket9hostFoundEv'/>
<fun r='_ZN15QAbstractSocket9connectedEv'/>
<fun r='_ZN15QAbstractSocket12disconnectedEv'/>
<fun r='_ZN15QAbstractSocket12stateChangedENS_11SocketStateE'/>
<fun r='_ZN15QAbstractSocket13errorOccurredENS_11SocketErrorE'/>
<fun r='_ZN15QAbstractSocket27proxyAuthenticationRequiredERK13QNetworkProxyP14QAuthenticator'/>
<fun r='_ZN15QAbstractSocket8readDataEPcx'/>
<fun r='_ZN15QAbstractSocket12readLineDataEPcx'/>
<fun r='_ZN15QAbstractSocket8skipDataEx'/>
<fun r='_ZN15QAbstractSocket9writeDataEPKcx'/>
<fun r='_ZN15QAbstractSocket14setSocketStateENS_11SocketStateE'/>
<fun r='_ZN15QAbstractSocket14setSocketErrorENS_11SocketErrorE'/>
<fun r='_ZN15QAbstractSocket12setLocalPortEt'/>
<fun r='_ZN15QAbstractSocket15setLocalAddressERK12QHostAddress'/>
<fun r='_ZN15QAbstractSocket11setPeerPortEt'/>
<fun r='_ZN15QAbstractSocket14setPeerAddressERK12QHostAddress'/>
<fun r='_ZN15QAbstractSocket11setPeerNameERK7QString'/>
<fun r='_ZN15QAbstractSocketC1ENS_10SocketTypeER22QAbstractSocketPrivateP7QObject'/>
<fun r='_ZN15QAbstractSocket6d_funcEv'/>
<fun r='_ZNK15QAbstractSocket6d_funcEv'/>
<fun r='_ZN15QAbstractSocketC1ERKS_'/>
<fun r='_ZN15QAbstractSocketC1EOS_'/>
<ovr f='qtbase-6.5.0/src/network/socket/qtcpsocket.h' l='17' c='QTcpSocket'/>
<use f='qtbase-6.5.0/src/network/socket/qtcpsocket.h' l='17'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkreply_p.h' l='172' c='_ZN24QHttpNetworkReplyPrivate10readStatusEP15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkreply_p.h' l='174' c='_ZN24QHttpNetworkReplyPrivate10readHeaderEP15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkreply_p.h' l='177' c='_ZN24QHttpNetworkReplyPrivate8readBodyEP15QAbstractSocketP15QByteDataBuffer'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkreply_p.h' l='178' c='_ZN24QHttpNetworkReplyPrivate16readBodyVeryFastEP15QAbstractSocketPc'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkreply_p.h' l='179' c='_ZN24QHttpNetworkReplyPrivate12readBodyFastEP15QAbstractSocketP15QByteDataBuffer'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkreply_p.h' l='184' c='_ZN24QHttpNetworkReplyPrivate16readReplyBodyRawEP15QAbstractSocketP15QByteDataBufferx'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkreply_p.h' l='185' c='_ZN24QHttpNetworkReplyPrivate20readReplyBodyChunkedEP15QAbstractSocketP15QByteDataBuffer'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkreply_p.h' l='186' c='_ZN24QHttpNetworkReplyPrivate12getChunkSizeEP15QAbstractSocketPx'/>
<size>16</size>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnection_p.h' l='172' c='_ZNK29QHttpNetworkConnectionPrivate7indexOfEP15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnection_p.h' l='177' c='_ZN29QHttpNetworkConnectionPrivate14dequeueRequestEP15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnection_p.h' l='183' c='_ZN29QHttpNetworkConnectionPrivate12fillPipelineEP15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnection_p.h' l='201' c='_ZN29QHttpNetworkConnectionPrivate19createAuthorizationEP15QAbstractSocketR19QHttpNetworkRequest'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnection_p.h' l='203' c='_ZN29QHttpNetworkConnectionPrivate11errorDetailEN13QNetworkReply12NetworkErrorEP15QAbstractSocketRK7QString'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnection_p.h' l='219' c='_ZN29QHttpNetworkConnectionPrivate22shouldEmitChannelErrorEP15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnection_p.h' l='225' c='_ZN29QHttpNetworkConnectionPrivate14emitReplyErrorEP15QAbstractSocketP17QHttpNetworkReplyN13QNetworkReply12NetworkErrorE'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnection_p.h' l='226' c='_ZN29QHttpNetworkConnectionPrivate27handleAuthenticateChallengeEP15QAbstractSocketP17QHttpNetworkReplybRb'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnection_p.h' l='233' c='_ZN29QHttpNetworkConnectionPrivate21parseRedirectResponseEP15QAbstractSocketP17QHttpNetworkReply'/>
<use f='qtbase-6.5.0/src/network/access/qabstractprotocolhandler_p.h' l='42'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnectionchannel_p.h' l='73'/>
<size>16</size>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket_p.h' l='33' c='_ZN22QAbstractSocketPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket_p.h' l='33' c='_ZN22QAbstractSocketPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket_p.h' l='33' c='_ZNK22QAbstractSocketPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket_p.h' l='33' c='_ZNK22QAbstractSocketPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket_p.h' l='33'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket_p.h' l='46' c='_ZN22QAbstractSocketPrivate27proxyAuthenticationRequiredERK13QNetworkProxyP14QAuthenticator'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket_p.h' l='130' c='_ZN22QAbstractSocketPrivate20pauseSocketNotifiersEP15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket_p.h' l='131' c='_ZN22QAbstractSocketPrivate21resumeSocketNotifiersEP15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket_p.h' l='132' c='_ZN22QAbstractSocketPrivate15getSocketEngineEP15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnection.cpp' l='157' c='_ZNK29QHttpNetworkConnectionPrivate7indexOfEP15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnection.cpp' l='171' c='_ZN29QHttpNetworkConnectionPrivate22shouldEmitChannelErrorEP15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnection.cpp' l='339' c='_ZN29QHttpNetworkConnectionPrivate14emitReplyErrorEP15QAbstractSocketP17QHttpNetworkReplyN13QNetworkReply12NetworkErrorE'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnection.cpp' l='404' c='_ZN29QHttpNetworkConnectionPrivate27handleAuthenticateChallengeEP15QAbstractSocketP17QHttpNetworkReplybRb'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnection.cpp' l='505' c='_ZN29QHttpNetworkConnectionPrivate21parseRedirectResponseEP15QAbstractSocketP17QHttpNetworkReply'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnection.cpp' l='572' c='_ZN29QHttpNetworkConnectionPrivate19createAuthorizationEP15QAbstractSocketR19QHttpNetworkRequest'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnection.cpp' l='708' c='_ZN29QHttpNetworkConnectionPrivate14dequeueRequestEP15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnection.cpp' l='762' c='_ZN29QHttpNetworkConnectionPrivate12fillPipelineEP15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkconnection.cpp' l='884' c='_ZN29QHttpNetworkConnectionPrivate11errorDetailEN13QNetworkReply12NetworkErrorEP15QAbstractSocketRK7QString'/>
<size>16</size>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkreply.cpp' l='397' c='_ZN24QHttpNetworkReplyPrivate10readStatusEP15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkreply.cpp' l='451' c='_ZN24QHttpNetworkReplyPrivate10readHeaderEP15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkreply.cpp' l='535' c='_ZN24QHttpNetworkReplyPrivate16readBodyVeryFastEP15QAbstractSocketPc'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkreply.cpp' l='554' c='_ZN24QHttpNetworkReplyPrivate12readBodyFastEP15QAbstractSocketP15QByteDataBuffer'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkreply.cpp' l='584' c='_ZN24QHttpNetworkReplyPrivate8readBodyEP15QAbstractSocketP15QByteDataBuffer'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkreply.cpp' l='604' c='_ZN24QHttpNetworkReplyPrivate16readReplyBodyRawEP15QAbstractSocketP15QByteDataBufferx'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkreply.cpp' l='637' c='_ZN24QHttpNetworkReplyPrivate20readReplyBodyChunkedEP15QAbstractSocketP15QByteDataBuffer'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkreply.cpp' l='699' c='_ZN24QHttpNetworkReplyPrivate12getChunkSizeEP15QAbstractSocketPx'/>
<size>16</size>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='542' c='_ZN22QAbstractSocketPrivate15initSocketLayerEN15QAbstractSocket20NetworkLayerProtocolE'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='604' c='_ZN22QAbstractSocketPrivate19canReadNotificationEv'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='664' c='_ZN22QAbstractSocketPrivate20canCloseNotificationEv'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='743' c='_ZN22QAbstractSocketPrivate13writeToSocketEv'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='871' c='_ZN22QAbstractSocketPrivate21startConnectingByNameERK7QString'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='915' c='_ZN22QAbstractSocketPrivate18_q_startConnectingERK9QHostInfo'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='987' c='_ZN22QAbstractSocketPrivate23_q_connectToNextAddressEv'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='1114' c='_ZN22QAbstractSocketPrivate25_q_abortConnectionAttemptEv'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='1141' c='_ZN22QAbstractSocketPrivate14readFromSocketEv'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='1207' c='_ZN22QAbstractSocketPrivate13emitReadyReadEi'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='1224' c='_ZN22QAbstractSocketPrivate16emitBytesWrittenExi'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='1241' c='_ZN22QAbstractSocketPrivate25fetchConnectionParametersEv'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='1294' c='_ZN22QAbstractSocketPrivate20pauseSocketNotifiersEP15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='1324' c='_ZN22QAbstractSocketPrivate21resumeSocketNotifiersEP15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='1344' c='_ZN22QAbstractSocketPrivate15getSocketEngineEP15QAbstractSocket'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='1370' c='_ZN22QAbstractSocketPrivate15setErrorAndEmitEN15QAbstractSocket11SocketErrorERK7QString'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='1400' c='_ZN15QAbstractSocketC1ENS_10SocketTypeEP7QObject'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='1494' c='_ZN22QAbstractSocketPrivate4bindERK12QHostAddresst6QFlagsIN15QAbstractSocket8BindFlagEE'/>
<size>16</size>
<doc f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='7'>/*!
    \class QAbstractSocket

    \brief The QAbstractSocket class provides the base functionality
    common to all socket types.

    \reentrant
    \ingroup network
    \inmodule QtNetwork

    QAbstractSocket is the base class for QTcpSocket and QUdpSocket
    and contains all common functionality of these two classes. If
    you need a socket, you have two options:

    \list
    \li  Instantiate QTcpSocket or QUdpSocket.
    \li  Create a native socket descriptor, instantiate
        QAbstractSocket, and call setSocketDescriptor() to wrap the
        native socket.
    \endlist

    TCP (Transmission Control Protocol) is a reliable,
    stream-oriented, connection-oriented transport protocol. UDP
    (User Datagram Protocol) is an unreliable, datagram-oriented,
    connectionless protocol. In practice, this means that TCP is
    better suited for continuous transmission of data, whereas the
    more lightweight UDP can be used when reliability isn&apos;t
    important.

    QAbstractSocket&apos;s API unifies most of the differences between the
    two protocols. For example, although UDP is connectionless,
    connectToHost() establishes a virtual connection for UDP sockets,
    enabling you to use QAbstractSocket in more or less the same way
    regardless of the underlying protocol. Internally,
    QAbstractSocket remembers the address and port passed to
    connectToHost(), and functions like read() and write() use these
    values.

    At any time, QAbstractSocket has a state (returned by
    state()). The initial state is UnconnectedState. After
    calling connectToHost(), the socket first enters
    HostLookupState. If the host is found, QAbstractSocket enters
    ConnectingState and emits the hostFound() signal. When the
    connection has been established, it enters ConnectedState and
    emits connected(). If an error occurs at any stage, errorOccurred() is
    emitted. Whenever the state changes, stateChanged() is emitted.
    For convenience, isValid() returns \c true if the socket is ready for
    reading and writing, but note that the socket&apos;s state must be
    ConnectedState before reading and writing can occur.

    Read or write data by calling read() or write(), or use the
    convenience functions readLine() and readAll(). QAbstractSocket
    also inherits getChar(), putChar(), and ungetChar() from
    QIODevice, which work on single bytes. The bytesWritten() signal
    is emitted when data has been written to the socket. Note that Qt does
    not limit the write buffer size. You can monitor its size by listening
    to this signal.

    The readyRead() signal is emitted every time a new chunk of data
    has arrived. bytesAvailable() then returns the number of bytes
    that are available for reading. Typically, you would connect the
    readyRead() signal to a slot and read all available data there.
    If you don&apos;t read all the data at once, the remaining data will
    still be available later, and any new incoming data will be
    appended to QAbstractSocket&apos;s internal read buffer. To limit the
    size of the read buffer, call setReadBufferSize().

    To close the socket, call disconnectFromHost(). QAbstractSocket enters
    QAbstractSocket::ClosingState. After all pending data has been written to
    the socket, QAbstractSocket actually closes the socket, enters
    QAbstractSocket::UnconnectedState, and emits disconnected(). If you want
    to abort a connection immediately, discarding all pending data, call
    abort() instead. If the remote host closes the connection,
    QAbstractSocket will emit errorOccurred(QAbstractSocket::RemoteHostClosedError),
    during which the socket state will still be ConnectedState, and then the
    disconnected() signal will be emitted.

    The port and address of the connected peer is fetched by calling
    peerPort() and peerAddress(). peerName() returns the host name of
    the peer, as passed to connectToHost(). localPort() and
    localAddress() return the port and address of the local socket.

    QAbstractSocket provides a set of functions that suspend the
    calling thread until certain signals are emitted. These functions
    can be used to implement blocking sockets:

    \list
    \li waitForConnected() blocks until a connection has been established.

    \li waitForReadyRead() blocks until new data is available for
    reading.

    \li waitForBytesWritten() blocks until one payload of data has been
    written to the socket.

    \li waitForDisconnected() blocks until the connection has closed.
    \endlist

    We show an example:

    \snippet network/tcpwait.cpp 0

    If \l{QIODevice::}{waitForReadyRead()} returns \c false, the
    connection has been closed or an error has occurred.

    Programming with a blocking socket is radically different from
    programming with a non-blocking socket. A blocking socket doesn&apos;t
    require an event loop and typically leads to simpler code.
    However, in a GUI application, blocking sockets should only be
    used in non-GUI threads, to avoid freezing the user interface.
    See the \l fortuneclient and \l blockingfortuneclient
    examples for an overview of both approaches.

    \note We discourage the use of the blocking functions together
    with signals. One of the two possibilities should be used.

    QAbstractSocket can be used with QTextStream and QDataStream&apos;s
    stream operators (operator&lt;&lt;() and operator&gt;&gt;()). There is one
    issue to be aware of, though: You must make sure that enough data
    is available before attempting to read it using operator&gt;&gt;().

    \sa QNetworkAccessManager, QTcpServer
*/</doc>
<fun r='_ZN15QAbstractSocket8skipDataEx'/>
<fun r='_ZN15QAbstractSocketC1ENS_10SocketTypeER22QAbstractSocketPrivateP7QObject'/>
<fun r='_ZN15QAbstractSocketC1ENS_10SocketTypeEP7QObject'/>
<fun r='_ZN15QAbstractSocketD1Ev'/>
<fun r='_ZN15QAbstractSocket6resumeEv'/>
<fun r='_ZNK15QAbstractSocket9pauseModeEv'/>
<fun r='_ZN15QAbstractSocket12setPauseModeE6QFlagsINS_9PauseModeEE'/>
<fun r='_ZN15QAbstractSocket4bindERK12QHostAddresst6QFlagsINS_8BindFlagEE'/>
<fun r='_ZN15QAbstractSocket4bindEt6QFlagsINS_8BindFlagEE'/>
<fun r='_ZNK15QAbstractSocket7isValidEv'/>
<fun r='_ZN15QAbstractSocket13connectToHostERK7QStringt6QFlagsIN13QIODeviceBase12OpenModeFlagEENS_20NetworkLayerProtocolE'/>
<fun r='_ZN15QAbstractSocket13connectToHostERK12QHostAddresst6QFlagsIN13QIODeviceBase12OpenModeFlagEE'/>
<fun r='_ZNK15QAbstractSocket12bytesToWriteEv'/>
<fun r='_ZNK15QAbstractSocket14bytesAvailableEv'/>
<fun r='_ZNK15QAbstractSocket9localPortEv'/>
<fun r='_ZNK15QAbstractSocket12localAddressEv'/>
<fun r='_ZNK15QAbstractSocket8peerPortEv'/>
<fun r='_ZNK15QAbstractSocket11peerAddressEv'/>
<fun r='_ZNK15QAbstractSocket8peerNameEv'/>
<fun r='_ZNK15QAbstractSocket16socketDescriptorEv'/>
<fun r='_ZN15QAbstractSocket19setSocketDescriptorExNS_11SocketStateE6QFlagsIN13QIODeviceBase12OpenModeFlagEE'/>
<fun r='_ZN15QAbstractSocket15setSocketOptionENS_12SocketOptionERK8QVariant'/>
<fun r='_ZN15QAbstractSocket12socketOptionENS_12SocketOptionE'/>
<fun r='_ZN15QAbstractSocket16waitForConnectedEi'/>
<fun r='_ZN15QAbstractSocket16waitForReadyReadEi'/>
<fun r='_ZN15QAbstractSocket19waitForBytesWrittenEi'/>
<fun r='_ZN15QAbstractSocket19waitForDisconnectedEi'/>
<fun r='_ZN15QAbstractSocket5abortEv'/>
<fun r='_ZNK15QAbstractSocket12isSequentialEv'/>
<fun r='_ZN15QAbstractSocket5flushEv'/>
<fun r='_ZN15QAbstractSocket8readDataEPcx'/>
<fun r='_ZN15QAbstractSocket12readLineDataEPcx'/>
<fun r='_ZN15QAbstractSocket9writeDataEPKcx'/>
<fun r='_ZN15QAbstractSocket12setLocalPortEt'/>
<fun r='_ZN15QAbstractSocket15setLocalAddressERK12QHostAddress'/>
<fun r='_ZN15QAbstractSocket11setPeerPortEt'/>
<fun r='_ZN15QAbstractSocket14setPeerAddressERK12QHostAddress'/>
<fun r='_ZN15QAbstractSocket11setPeerNameERK7QString'/>
<fun r='_ZN15QAbstractSocket5closeEv'/>
<fun r='_ZN15QAbstractSocket18disconnectFromHostEv'/>
<fun r='_ZNK15QAbstractSocket14readBufferSizeEv'/>
<fun r='_ZN15QAbstractSocket17setReadBufferSizeEx'/>
<fun r='_ZNK15QAbstractSocket5stateEv'/>
<fun r='_ZN15QAbstractSocket14setSocketStateENS_11SocketStateE'/>
<fun r='_ZNK15QAbstractSocket10socketTypeEv'/>
<fun r='_ZNK15QAbstractSocket5errorEv'/>
<fun r='_ZN15QAbstractSocket14setSocketErrorENS_11SocketErrorE'/>
<fun r='_ZN15QAbstractSocket8setProxyERK13QNetworkProxy'/>
<fun r='_ZNK15QAbstractSocket5proxyEv'/>
<fun r='_ZNK15QAbstractSocket11protocolTagEv'/>
<fun r='_ZN15QAbstractSocket14setProtocolTagERK7QString'/>
<use f='qtbase-6.5.0/src/network/socket/qhttpsocketengine.cpp' l='808' c='_ZN24QHttpSocketEngineHandler18createSocketEngineEN15QAbstractSocket10SocketTypeERK13QNetworkProxyP7QObject'/>
<size>16</size>
<use f='qtbase-6.5.0/src/network/socket/qnativesocketengine.cpp' l='332' c='_ZN26QNativeSocketEnginePrivate10checkProxyERK12QHostAddress'/>
<use f='qtbase-6.5.0/src/network/socket/qnativesocketengine.cpp' l='332' c='_ZN26QNativeSocketEnginePrivate10checkProxyERK12QHostAddress'/>
<size>16</size>
<ovr f='qtbase-6.5.0/src/network/socket/qudpsocket.h' l='20' c='QUdpSocket'/>
<use f='qtbase-6.5.0/src/network/socket/qudpsocket.h' l='20'/>
<size>16</size>
<use f='qtbase-6.5.0/src/network/socket/qtcpsocket.cpp' l='46' c='_ZN10QTcpSocketC1EP7QObject'/>
<use f='qtbase-6.5.0/src/network/socket/qtcpsocket.cpp' l='71' c='_ZN10QTcpSocketC1ER17QTcpSocketPrivateP7QObject'/>
<use f='qtbase-6.5.0/src/network/socket/qtcpsocket.cpp' l='81' c='_ZN10QTcpSocketC1EN15QAbstractSocket10SocketTypeER17QTcpSocketPrivateP7QObject'/>
<size>16</size>
<use f='qtbase-6.5.0/src/network/socket/qudpsocket.cpp' l='122' c='_ZN10QUdpSocketC1EP7QObject'/>
<size>16</size>
