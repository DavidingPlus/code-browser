<dec f='qtbase-6.5.0/src/corelib/global/qsysinfo.h' l='44' type='static QString QSysInfo::productType()'/>
<def f='qtbase-6.5.0/src/corelib/global/qsysinfo.cpp' l='769' ll='799' type='static QString QSysInfo::productType()'/>
<doc f='qtbase-6.5.0/src/corelib/global/qsysinfo.cpp' l='734'>/*!
    \since 5.4

    Returns the product name of the operating system this application is
    running in. If the application is running on some sort of emulation or
    virtualization layer (such as WINE on a Unix system), this function will
    inspect the emulation / virtualization layer.

    Values returned by this function are stable and will not change over time,
    so applications can rely on the returned value as an identifier, except
    that new OS types may be added over time.

    \b{Linux and Android note}: this function returns &quot;android&quot; for Linux
    systems running Android userspace, notably when using the Bionic library.
    For all other Linux systems, regardless of C library being used, it tries
    to determine the distribution name and returns that. If determining the
    distribution name failed, it returns &quot;unknown&quot;.

    \b{\macos note}: this function returns &quot;macos&quot; for all \macos systems,
    regardless of Apple naming convention. Previously, in Qt 5, it returned
    &quot;osx&quot;, again regardless of Apple naming conventions.

    \b{Darwin, iOS, tvOS, and watchOS note}: this function returns &quot;ios&quot; for
    iOS systems, &quot;tvos&quot; for tvOS systems, &quot;watchos&quot; for watchOS systems, and
    &quot;darwin&quot; in case the system could not be determined.

    \b{FreeBSD note}: this function returns &quot;debian&quot; for Debian/kFreeBSD and
    &quot;unknown&quot; otherwise.

    \b{Windows note}: this function return &quot;windows&quot;

    For other Unix-type systems, this function usually returns &quot;unknown&quot;.

    \sa QFileSelector, kernelType(), kernelVersion(), productVersion(), prettyProductName()
*/</doc>
<use f='qtbase-6.5.0/src/corelib/io/qfileselector.cpp' l='325' u='c' c='_ZN20QFileSelectorPrivate17platformSelectorsEv'/>
<use f='qtbase-6.5.0/src/testlib/qplaintestlogger.cpp' l='429' u='c' c='_ZN16QPlainTestLogger12startLoggingEv'/>
<use f='qtbase-6.5.0/src/testlib/qtestblacklist.cpp' l='190' u='c' c='_ZL16activeConditionsv'/>
