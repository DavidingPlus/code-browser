<dec f='qtbase-6.5.0/src/corelib/io/qsettings.h' l='133' type='void QSettings::beginWriteArray(QAnyStringView prefix, int size = -1)'/>
<use f='qtbase-6.5.0/src/corelib/compat/removed_api.cpp' l='213' u='c' c='_ZN9QSettings15beginWriteArrayERK7QStringi'/>
<def f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='2986' ll='2995' type='void QSettings::beginWriteArray(QAnyStringView prefix, int size = -1)'/>
<doc f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='2954'>/*!
    Adds \a prefix to the current group and starts writing an array
    of size \a size. If \a size is -1 (the default), it is automatically
    determined based on the indexes of the entries written.

    If you have many occurrences of a certain set of keys, you can
    use arrays to make your life easier. For example, let&apos;s suppose
    that you want to save a variable-length list of user names and
    passwords. You could then write:

    \snippet code/src_corelib_io_qsettings.cpp 16

    The generated keys will have the form

    \list
    \li \c logins/size
    \li \c logins/1/userName
    \li \c logins/1/password
    \li \c logins/2/userName
    \li \c logins/2/password
    \li \c logins/3/userName
    \li \c logins/3/password
    \li ...
    \endlist

    To read back an array, use beginReadArray().

    \note In Qt versions prior to 6.4, this function took QString, not
    QAnyStringView.

    \sa beginReadArray(), endArray(), setArrayIndex()
*/</doc>
