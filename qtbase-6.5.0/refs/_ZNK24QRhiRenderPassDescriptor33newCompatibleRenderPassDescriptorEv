<dec f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='992' type='QRhiRenderPassDescriptor * QRhiRenderPassDescriptor::newCompatibleRenderPassDescriptor() const'/>
<doc f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='2970'>/*!
    \fn QRhiRenderPassDescriptor *QRhiRenderPassDescriptor::newCompatibleRenderPassDescriptor() const

    \return a new QRhiRenderPassDescriptor that is
    \l{isCompatible()}{compatible} with this one.

    This function allows cloning a QRhiRenderPassDescriptor. The returned
    object is ready to be used, and the ownership is transferred to the caller.
    Cloning a QRhiRenderPassDescriptor object can become useful in situations
    where the object is stored in data structures related to graphics pipelines
    (in order to allow creating new pipelines which in turn requires a
    renderpass descriptor object), and the lifetime of the renderpass
    descriptor created from a render target may be shorter than the pipelines.
    (for example, because the engine manages and destroys renderpasses together
    with the textures and render targets it was created from) In such a
    situation, it can be beneficial to store a cloned version in the data
    structures, and thus transferring ownership as well.

    \sa isCompatible()
 */</doc>
<ovr f='qtbase-6.5.0/src/gui/rhi/qrhigles2.cpp' l='5346' c='_ZNK26QGles2RenderPassDescriptor33newCompatibleRenderPassDescriptorEv'/>
<ovr f='qtbase-6.5.0/src/gui/rhi/qrhinull.cpp' l='746' c='_ZNK25QNullRenderPassDescriptor33newCompatibleRenderPassDescriptorEv'/>
