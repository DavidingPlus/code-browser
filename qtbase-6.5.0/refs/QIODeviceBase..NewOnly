<dec f='qtbase-6.5.0/src/corelib/io/qiodevicebase.h' l='25' type='64'/>
<use f='qtbase-6.5.0/src/corelib/io/qfile.cpp' l='887' u='r' c='_ZN5QFile4openE6QFlagsIN13QIODeviceBase12OpenModeFlagEE'/>
<use f='qtbase-6.5.0/src/corelib/io/qfile.cpp' l='932' u='r' c='_ZN5QFile4openE6QFlagsIN13QIODeviceBase12OpenModeFlagEES0_IN11QFileDevice10PermissionEE'/>
<use f='qtbase-6.5.0/src/corelib/io/qfile.cpp' l='1002' u='r' c='_ZN5QFile4openEP8_IO_FILE6QFlagsIN13QIODeviceBase12OpenModeFlagEES2_IN11QFileDevice14FileHandleFlagEE'/>
<use f='qtbase-6.5.0/src/corelib/io/qfile.cpp' l='1054' u='r' c='_ZN5QFile4openEi6QFlagsIN13QIODeviceBase12OpenModeFlagEES0_IN11QFileDevice14FileHandleFlagEE'/>
<use f='qtbase-6.5.0/src/corelib/io/qfsfileengine.cpp' l='140' u='r' c='_Z20processOpenModeFlags6QFlagsIN13QIODeviceBase12OpenModeFlagEE'/>
<use f='qtbase-6.5.0/src/corelib/io/qfsfileengine.cpp' l='154' u='r' c='_Z20processOpenModeFlags6QFlagsIN13QIODeviceBase12OpenModeFlagEE'/>
<use f='qtbase-6.5.0/src/corelib/io/qfsfileengine.cpp' l='158' u='r' c='_Z20processOpenModeFlags6QFlagsIN13QIODeviceBase12OpenModeFlagEE'/>
<use f='qtbase-6.5.0/src/corelib/io/qfsfileengine_unix.cpp' l='56' u='r' c='_ZL19openModeToOpenFlags6QFlagsIN13QIODeviceBase12OpenModeFlagEE'/>
<doc f='qtbase-6.5.0/src/corelib/io/qiodevice.cpp' l='289'>\value NewOnly   Fail if the file to be opened already exists. Create and
                     open the file only if it does not exist. There is a
                     guarantee from the operating system that you are the only
                     one creating and opening the file. Note that this mode
                     implies WriteOnly, and combining it with ReadWrite is
                     allowed. This flag currently only affects QFile. Other
                     classes might use this flag in the future, but until then
                     using this flag with any classes other than QFile may
                     result in undefined behavior. (since Qt 5.11)
    </doc>
