<dec f='qtbase-6.5.0/src/sql/models/qsqltablemodel.h' l='95' type='bool QSqlTableModel::updateRowInTable(int row, const QSqlRecord &amp; values)'/>
<ovr f='qtbase-6.5.0/src/sql/models/qsqlrelationaltablemodel.cpp' l='701' c='_ZN24QSqlRelationalTableModel16updateRowInTableEiRK10QSqlRecord'/>
<use f='qtbase-6.5.0/src/sql/models/qsqlrelationaltablemodel.cpp' l='708' u='c' c='_ZN24QSqlRelationalTableModel16updateRowInTableEiRK10QSqlRecord'/>
<def f='qtbase-6.5.0/src/sql/models/qsqltablemodel.cpp' l='599' ll='618' type='bool QSqlTableModel::updateRowInTable(int row, const QSqlRecord &amp; values)'/>
<use f='qtbase-6.5.0/src/sql/models/qsqltablemodel.cpp' l='725' u='c' c='_ZN14QSqlTableModel9submitAllEv'/>
<doc f='qtbase-6.5.0/src/sql/models/qsqltablemodel.cpp' l='583'>/*!
    Updates the given \a row in the currently active database table
    with the specified \a values. Returns \c true if successful; otherwise
    returns \c false.

    This is a low-level method that operates directly on the database
    and should not be called directly. Use setData() to update values.
    The model will decide depending on its edit strategy when to modify
    the database.

    Note that only values that have the generated-flag set are updated.
    The generated-flag can be set with QSqlRecord::setGenerated() and
    tested with QSqlRecord::isGenerated().

    \sa QSqlRecord::isGenerated(), setData()
*/</doc>
