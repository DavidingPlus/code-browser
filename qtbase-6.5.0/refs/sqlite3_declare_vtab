<dec f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='7733' type='int sqlite3_declare_vtab(sqlite3 * , const char * zSQL)'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='132926'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='136946' u='c' c='pragmaVtabConnect'/>
<def f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='151063' ll='151148' type='int sqlite3_declare_vtab(sqlite3 * db, const char * zCreateTable)'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='180800' u='c' c='fts3DeclareVtab'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='186374' u='c' c='fts3auxConnectMethod'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='190116' u='c' c='fts3tokConnectMethod'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='200931' u='c' c='jsonEachConnect'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='205280' u='c' c='rtreeInit'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='207169' u='c' c='geopolyInit'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='226679' u='c' c='sqlite3Fts5ConfigDeclareVtab'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='244273' u='c' c='fts5VocabInitVtab'/>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='7725'>/*
** CAPI3REF: Declare The Schema Of A Virtual Table
**
** ^The [xCreate] and [xConnect] methods of a
** [virtual table module] call this interface
** to declare the format (the names and datatypes of the columns) of
** the virtual tables they implement.
*/</doc>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='151058'>/*
** This function is used to set the schema of a virtual table.  It is only
** valid to call this function from within the xCreate() or xConnect() of a
** virtual table module.
*/</doc>
<dec f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='7427' type='int sqlite3_declare_vtab(sqlite3 * , const char * zSQL)'/>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='7419'>/*
** CAPI3REF: Declare The Schema Of A Virtual Table
**
** ^The [xCreate] and [xConnect] methods of a
** [virtual table module] call this interface
** to declare the format (the names and datatypes of the columns) of
** the virtual tables they implement.
*/</doc>
