<dec f='qtbase-6.5.0/src/corelib/thread/qreadwritelock.h' l='24' type='void QReadWriteLock::lockForRead()'/>
<use f='qtbase-6.5.0/src/corelib/thread/qreadwritelock.h' l='70' u='c' c='_ZN11QReadLocker6relockEv'/>
<def f='qtbase-6.5.0/src/corelib/thread/qreadwritelock.cpp' l='144' ll='149' type='void QReadWriteLock::lockForRead()'/>
<doc f='qtbase-6.5.0/src/corelib/thread/qreadwritelock.cpp' l='135'>/*!
    Locks the lock for reading. This function will block the current
    thread if another thread has locked for writing.

    It is not possible to lock for read if the thread already has
    locked for write.

    \sa unlock(), lockForWrite(), tryLockForRead()
*/</doc>
<use f='qtbase-6.5.0/src/corelib/thread/qwaitcondition_unix.cpp' l='220' u='c' c='_ZN14QWaitCondition4waitEP14QReadWriteLock14QDeadlineTimer'/>
<use f='qtbase-6.5.0/src/dbus/qdbusthreaddebug_p.h' l='100' u='c' c='_ZN15QDBusReadLockerC1E12ThreadActionP22QDBusConnectionPrivate'/>
<use f='qtbase-6.5.0/src/sql/kernel/qsqldatabase.cpp' l='194' u='c' c='_ZN19QSqlDatabasePrivate8databaseERK7QStringb'/>
<use f='qtbase-6.5.0/src/sql/kernel/qsqldatabase.cpp' l='1379' u='c' c='_ZN12QSqlDatabase13cloneDatabaseERK7QStringS2_'/>
