<def f='qtbase-6.5.0/src/network/ssl/qssl.h' l='131' ll='140'/>
<doc f='qtbase-6.5.0/src/network/ssl/qssl.cpp' l='233'>/*!
    \enum QSsl::SupportedFeature
    \brief Enumerates possible features that a TLS backend supports
    \relates QSslSocket
    \since 6.1

    \ingroup network
    \ingroup ssl
    \inmodule QtNetwork

    In QtNetwork TLS-related classes have public API, that may be left unimplemented
    by some backend, for example, our SecureTransport backend does not support
    server-side ALPN. Enumerators from SupportedFeature enum indicate that a particular
    feature is supported.

    \value CertificateVerification Indicates that QSslCertificate::verify() is
           implemented by the backend.
    \value ClientSideAlpn Client-side ALPN (Application Layer Protocol Negotiation).
    \value ServerSideAlpn Server-side ALPN.
    \value Ocsp OCSP stapling (Online Certificate Status Protocol).
    \value Psk Pre-shared keys.
    \value SessionTicket Session tickets.
    \value Alerts Information about alert messages sent and received.
*/</doc>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend_p.h' l='282' c='_ZNK11QTlsBackend17supportedFeaturesEv'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend_p.h' l='323' c='_ZN11QTlsBackend17supportedFeaturesERK7QString'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend.cpp' l='672' c='_ZN11QTlsBackend17supportedFeaturesERK7QString'/>
<use f='qtbase-6.5.0/src/plugins/tls/certonly/qtlsbackend_cert_p.h' l='35' c='_ZNK19QTlsBackendCertOnly17supportedFeaturesEv'/>
<use f='qtbase-6.5.0/src/plugins/tls/certonly/qtlsbackend_cert.cpp' l='25' c='_ZNK19QTlsBackendCertOnly17supportedFeaturesEv'/>
