<def f='qtbase-6.5.0/src/corelib/kernel/qelapsedtimer.h' l='12' ll='52'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qelapsedtimer.h' l='39' c='_ZNK13QElapsedTimer7msecsToERKS_'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qelapsedtimer.h' l='40' c='_ZNK13QElapsedTimer6secsToERKS_'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qelapsedtimer.h' l='42' c='_ZeqRK13QElapsedTimerS1_'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qelapsedtimer.h' l='42' c='_ZeqRK13QElapsedTimerS1_'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qelapsedtimer.h' l='44' c='_ZneRK13QElapsedTimerS1_'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qelapsedtimer.h' l='44' c='_ZneRK13QElapsedTimerS1_'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qelapsedtimer.h' l='47' c='_ZltRK13QElapsedTimerS1_'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qelapsedtimer.h' l='47' c='_ZltRK13QElapsedTimerS1_'/>
<size>16</size>
<fun r='_ZN13QElapsedTimerC1Ev'/>
<fun r='_ZN13QElapsedTimer9clockTypeEv'/>
<fun r='_ZN13QElapsedTimer11isMonotonicEv'/>
<fun r='_ZN13QElapsedTimer5startEv'/>
<fun r='_ZN13QElapsedTimer7restartEv'/>
<fun r='_ZN13QElapsedTimer10invalidateEv'/>
<fun r='_ZNK13QElapsedTimer7isValidEv'/>
<fun r='_ZNK13QElapsedTimer12nsecsElapsedEv'/>
<fun r='_ZNK13QElapsedTimer7elapsedEv'/>
<fun r='_ZNK13QElapsedTimer10hasExpiredEx'/>
<fun r='_ZNK13QElapsedTimer19msecsSinceReferenceEv'/>
<fun r='_ZNK13QElapsedTimer7msecsToERKS_'/>
<fun r='_ZNK13QElapsedTimer6secsToERKS_'/>
<mbr r='QElapsedTimer::t1' o='0' t='qint64'/>
<mbr r='QElapsedTimer::t2' o='64' t='qint64'/>
<use f='qtbase-6.5.0/src/corelib/animation/qabstractanimation_p.h' l='106'/>
<use f='qtbase-6.5.0/src/corelib/animation/qabstractanimation_p.h' l='189'/>
<size>16</size>
<doc f='qtbase-6.5.0/src/corelib/kernel/qelapsedtimer.cpp' l='8'>/*!
    \class QElapsedTimer
    \inmodule QtCore
    \brief The QElapsedTimer class provides a fast way to calculate elapsed times.
    \since 4.7

    \reentrant
    \ingroup tools

    The QElapsedTimer class is usually used to quickly calculate how much
    time has elapsed between two events. Its API is similar to that of QTime,
    so code that was using that can be ported quickly to the new class.

    However, unlike QTime, QElapsedTimer tries to use monotonic clocks if
    possible. This means it&apos;s not possible to convert QElapsedTimer objects
    to a human-readable time.

    The typical use-case for the class is to determine how much time was
    spent in a slow operation. The simplest example of such a case is for
    debugging purposes, as in the following example:

    \snippet qelapsedtimer/main.cpp 0

    In this example, the timer is started by a call to start() and the
    elapsed time is calculated by the elapsed() function.

    The time elapsed can also be used to recalculate the time available for
    another operation, after the first one is complete. This is useful when
    the execution must complete within a certain time period, but several
    steps are needed. The \tt{waitFor}-type functions in QIODevice and its
    subclasses are good examples of such need. In that case, the code could
    be as follows:

    \snippet qelapsedtimer/main.cpp 1

    Another use-case is to execute a certain operation for a specific
    timeslice. For this, QElapsedTimer provides the hasExpired() convenience
    function, which can be used to determine if a certain number of
    milliseconds has already elapsed:

    \snippet qelapsedtimer/main.cpp 2

    It is often more convenient to use \l{QDeadlineTimer} in this case, which
    counts towards a timeout in the future instead of tracking elapsed time.

    \section1 Reference Clocks

    QElapsedTimer will use the platform&apos;s monotonic reference clock in all
    platforms that support it (see QElapsedTimer::isMonotonic()). This has
    the added benefit that QElapsedTimer is immune to time adjustments, such
    as the user correcting the time. Also unlike QTime, QElapsedTimer is
    immune to changes in the timezone settings, such as daylight-saving
    periods.

    On the other hand, this means QElapsedTimer values can only be compared
    with other values that use the same reference. This is especially true if
    the time since the reference is extracted from the QElapsedTimer object
    (QElapsedTimer::msecsSinceReference()) and serialised. These values
    should never be exchanged across the network or saved to disk, since
    there&apos;s no telling whether the computer node receiving the data is the
    same as the one originating it or if it has rebooted since.

    It is, however, possible to exchange the value with other processes
    running on the same machine, provided that they also use the same
    reference clock. QElapsedTimer will always use the same clock, so it&apos;s
    safe to compare with the value coming from another process in the same
    machine. If comparing to values produced by other APIs, you should check
    that the clock used is the same as QElapsedTimer (see
    QElapsedTimer::clockType()).

    \sa QTime, QTimer, QDeadlineTimer
*/</doc>
<fun r='_ZN13QElapsedTimer10invalidateEv'/>
<fun r='_ZNK13QElapsedTimer7isValidEv'/>
<fun r='_ZNK13QElapsedTimer10hasExpiredEx'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qelapsedtimer_unix.cpp' l='180' c='_ZNK13QElapsedTimer7msecsToERKS_'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qelapsedtimer_unix.cpp' l='187' c='_ZNK13QElapsedTimer6secsToERKS_'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qelapsedtimer_unix.cpp' l='192' c='_ZltRK13QElapsedTimerS1_'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qelapsedtimer_unix.cpp' l='192' c='_ZltRK13QElapsedTimerS1_'/>
<size>16</size>
<fun r='_ZN13QElapsedTimer11isMonotonicEv'/>
<fun r='_ZN13QElapsedTimer9clockTypeEv'/>
<fun r='_ZN13QElapsedTimer5startEv'/>
<fun r='_ZN13QElapsedTimer7restartEv'/>
<fun r='_ZNK13QElapsedTimer12nsecsElapsedEv'/>
<fun r='_ZNK13QElapsedTimer7elapsedEv'/>
<fun r='_ZNK13QElapsedTimer19msecsSinceReferenceEv'/>
<fun r='_ZNK13QElapsedTimer7msecsToERKS_'/>
<fun r='_ZNK13QElapsedTimer6secsToERKS_'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qeventloop.cpp' l='210' c='_ZN10QEventLoop13processEventsE6QFlagsINS_17ProcessEventsFlagEEi'/>
<size>16</size>
<use f='qtbase-6.5.0/src/corelib/mimetypes/qmimedatabase_p.h' l='85'/>
<size>16</size>
<use f='qtbase-6.5.0/src/corelib/thread/qfutureinterface_p.h' l='119'/>
<size>16</size>
<use f='qtbase-6.5.0/src/corelib/thread/qreadwritelock.cpp' l='438' c='_ZN21QReadWriteLockPrivate11lockForReadERSt11unique_lockISt5mutexEi'/>
<use f='qtbase-6.5.0/src/corelib/thread/qreadwritelock.cpp' l='466' c='_ZN21QReadWriteLockPrivate12lockForWriteERSt11unique_lockISt5mutexEi'/>
<size>16</size>
<use f='qtbase-6.5.0/src/corelib/tools/qtimeline.cpp' l='18'/>
<size>16</size>
<use f='qtbase-6.5.0/src/dbus/qdbusintegrator.cpp' l='2053'/>
<size>16</size>
<use f='qtbase-6.5.0/src/gui/kernel/qwindowsysteminterface_p.h' l='501'/>
<size>16</size>
<use f='qtbase-6.5.0/src/gui/image/qmovie.cpp' l='401' c='_ZN13QMoviePrivate4nextEv'/>
<size>16</size>
<use f='qtbase-6.5.0/src/gui/itemmodels/qfileinfogatherer_p.h' l='166' c='_ZN17QFileInfoGatherer5fetchERK9QFileInfoR13QElapsedTimerRbR5QListISt4pairI7QStringS0_EERKS8_'/>
<use f='qtbase-6.5.0/src/gui/itemmodels/qfileinfogatherer.cpp' l='363' c='_ZN17QFileInfoGatherer12getFileInfosERK7QStringRK5QListIS0_E'/>
<use f='qtbase-6.5.0/src/gui/itemmodels/qfileinfogatherer.cpp' l='395' c='_ZN17QFileInfoGatherer5fetchERK9QFileInfoR13QElapsedTimerRbR5QListISt4pairI7QStringS0_EERKS8_'/>
<use f='qtbase-6.5.0/src/gui/itemmodels/qfileinfogatherer.cpp' l='399' c='_ZN17QFileInfoGatherer5fetchERK9QFileInfoR13QElapsedTimerRbR5QListISt4pairI7QStringS0_EERKS8_'/>
<size>16</size>
<use f='qtbase-6.5.0/src/gui/kernel/qwindow_p.h' l='144'/>
<size>16</size>
<use f='qtbase-6.5.0/src/gui/kernel/qwindowsysteminterface.cpp' l='29'/>
<size>16</size>
<use f='qtbase-6.5.0/src/gui/rhi/qrhi_p_p.h' l='241'/>
<size>16</size>
<use f='qtbase-6.5.0/src/network/kernel/qhostinfo_p.h' l='135'/>
<size>16</size>
<use f='qtbase-6.5.0/src/network/access/qnetworkreply_p.h' l='45'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreply_p.h' l='46'/>
<size>16</size>
<use f='qtbase-6.5.0/src/network/kernel/qhostinfo.cpp' l='1135' c='_ZN14QHostInfoCache3putERK7QStringRK9QHostInfo'/>
<size>16</size>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='2055' c='_ZN15QAbstractSocket16waitForConnectedEi'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='2146' c='_ZN15QAbstractSocket16waitForReadyReadEi'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='2217' c='_ZN15QAbstractSocket19waitForBytesWrittenEi'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='2296' c='_ZN15QAbstractSocket19waitForDisconnectedEi'/>
<size>16</size>
<use f='qtbase-6.5.0/src/network/socket/qhttpsocketengine.cpp' l='320' c='_ZN17QHttpSocketEngine11waitForReadEiPb'/>
<use f='qtbase-6.5.0/src/network/socket/qhttpsocketengine.cpp' l='367' c='_ZN17QHttpSocketEngine12waitForWriteEiPb'/>
<size>16</size>
<use f='qtbase-6.5.0/src/network/socket/qlocalsocket_unix.cpp' l='588' c='_ZN12QLocalSocket16waitForConnectedEi'/>
<size>16</size>
<use f='qtbase-6.5.0/src/network/socket/qsocks5socketengine.cpp' l='259'/>
<use f='qtbase-6.5.0/src/network/socket/qsocks5socketengine.cpp' l='1329' c='_ZN19QSocks5SocketEngine4bindERK12QHostAddresst'/>
<use f='qtbase-6.5.0/src/network/socket/qsocks5socketengine.cpp' l='1424' c='_ZN19QSocks5SocketEngine5closeEv'/>
<use f='qtbase-6.5.0/src/network/socket/qsocks5socketengine.cpp' l='1690' c='_ZN26QSocks5SocketEnginePrivate16waitForConnectedEiPb'/>
<use f='qtbase-6.5.0/src/network/socket/qsocks5socketengine.cpp' l='1715' c='_ZN19QSocks5SocketEngine11waitForReadEiPb'/>
<use f='qtbase-6.5.0/src/network/socket/qsocks5socketengine.cpp' l='1770' c='_ZN19QSocks5SocketEngine12waitForWriteEiPb'/>
<size>16</size>
<use f='qtbase-6.5.0/src/widgets/kernel/qgesture_p.h' l='132'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qwidgetrepaintmanager_p.h' l='114'/>
<size>16</size>
<use f='qtbase-6.5.0/src/testlib/qbenchmarktimemeasurers_p.h' l='34'/>
<size>16</size>
<use f='qtbase-6.5.0/src/testlib/qjunittestlogger.cpp' l='48'/>
<size>16</size>
<use f='qtbase-6.5.0/src/testlib/qtestlog.cpp' l='70'/>
<use f='qtbase-6.5.0/src/testlib/qtestlog.cpp' l='71'/>
<size>16</size>
<use f='qtbase-6.5.0/src/tools/androiddeployqt/main.cpp' l='120'/>
<size>16</size>
<use f='qtbase-6.5.0/src/widgets/itemviews/qabstractitemview_p.h' l='377'/>
<size>16</size>
<use f='qtbase-6.5.0/src/widgets/dialogs/qprogressdialog.cpp' l='53'/>
<size>16</size>
<use f='qtbase-6.5.0/src/widgets/util/qflickgesture.cpp' l='327' c='_ZN23QFlickGestureRecognizer9recognizeEP8QGestureP7QObjectP6QEvent'/>
<size>16</size>
<use f='qtbase-6.5.0/src/widgets/util/qscroller_p.h' l='162'/>
<size>16</size>
<use f='qtbase-6.5.0/src/widgets/widgets/qcombobox_p.h' l='222'/>
<size>16</size>
<use f='qtbase-6.5.0/src/widgets/widgets/qeffects.cpp' l='58'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qeffects.cpp' l='338'/>
<size>16</size>
<use f='qtbase-6.5.0/src/widgets/widgets/qscrollbar.cpp' l='565' c='_ZN10QScrollBar15mousePressEventEP11QMouseEvent'/>
<size>16</size>
<use f='qtbase-6.5.0/src/widgets/widgets/qsplashscreen.cpp' l='208' c='_ZL20waitForWindowExposedP7QWindowi'/>
<size>16</size>
