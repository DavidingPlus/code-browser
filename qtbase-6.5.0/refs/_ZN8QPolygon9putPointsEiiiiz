<dec f='qtbase-6.5.0/src/gui/painting/qpolygon.h' l='50' type='void QPolygon::putPoints(int index, int nPoints, int firstx, int firsty)'/>
<def f='qtbase-6.5.0/src/gui/painting/qpolygon.cpp' l='335' ll='351' type='void QPolygon::putPoints(int index, int nPoints, int firstx, int firsty)'/>
<doc f='qtbase-6.5.0/src/gui/painting/qpolygon.cpp' l='314'>/*!
    Copies \a nPoints points from the variable argument list into this
    polygon from the given \a index.

    The points are given as a sequence of integers, starting with \a
    firstx then \a firsty, and so on. The polygon is resized if
    \c{index+nPoints} exceeds its current size.

    The example code creates a polygon with three points (4,5), (6,7)
    and (8,9), by expanding the polygon from 1 to 3 points:

    \snippet polygon/polygon.cpp 4

    The following code has the same result, but here the putPoints()
    function overwrites rather than extends:

    \snippet polygon/polygon.cpp 5

    \sa setPoints()
*/</doc>
