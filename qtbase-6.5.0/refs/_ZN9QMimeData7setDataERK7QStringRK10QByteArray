<dec f='qtbase-6.5.0/src/corelib/kernel/qmimedata.h' l='43' type='void QMimeData::setData(const QString &amp; mimetype, const QByteArray &amp; data)'/>
<use f='qtbase-6.5.0/src/corelib/itemmodels/qabstractitemmodel.cpp' l='2133' u='c' c='_ZNK18QAbstractItemModel8mimeDataERK5QListI11QModelIndexE'/>
<def f='qtbase-6.5.0/src/corelib/kernel/qmimedata.cpp' l='558' ll='577' type='void QMimeData::setData(const QString &amp; mimeType, const QByteArray &amp; data)'/>
<doc f='qtbase-6.5.0/src/corelib/kernel/qmimedata.cpp' l='544'>/*!
    Sets the data associated with the MIME type given by \a mimeType
    to the specified \a data.

    For the most common types of data, you can call the higher-level
    functions setText(), setHtml(), setUrls(), setImageData(), and
    setColorData() instead.

    Note that if you want to use a custom data type in an item view drag and drop
    operation, you must register it as a Qt \l{QMetaType}{meta type}, using the
    Q_DECLARE_METATYPE() macro, and implement stream operators for it.

    \sa hasFormat(), QMetaType, {QMetaType::}{Q_DECLARE_METATYPE()}
*/</doc>
<use f='qtbase-6.5.0/src/gui/itemmodels/qstandarditemmodel.cpp' l='3159' u='c' c='_ZNK18QStandardItemModel8mimeDataERK5QListI11QModelIndexE'/>
<use f='qtbase-6.5.0/src/gui/kernel/qinternalmimedata.cpp' l='113' u='c' c='_ZNK17QInternalMimeData12retrieveDataERK7QString9QMetaType'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qwidgettextcontrol.cpp' l='3478' u='c' c='_ZNK17QTextEditMimeData5setupEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qwidgettextcontrol.cpp' l='3481' u='c' c='_ZNK17QTextEditMimeData5setupEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qwidgettextcontrol.cpp' l='3489' u='c' c='_ZNK17QTextEditMimeData5setupEv'/>
