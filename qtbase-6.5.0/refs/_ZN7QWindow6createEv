<dec f='qtbase-6.5.0/src/gui/kernel/qwindow.h' l='133' type='void QWindow::create()'/>
<use f='qtbase-6.5.0/src/gui/kernel/qoffscreensurface.cpp' l='140' u='c' c='_ZN17QOffscreenSurface6createEv'/>
<use f='qtbase-6.5.0/src/gui/kernel/qshapedpixmapdndwindow.cpp' l='38' u='c' c='_ZN19QShapedPixmapWindow9setPixmapERK7QPixmap'/>
<use f='qtbase-6.5.0/src/gui/kernel/qwindow.cpp' l='342' u='c' c='_ZN14QWindowPrivate10setVisibleEb'/>
<use f='qtbase-6.5.0/src/gui/kernel/qwindow.cpp' l='509' u='c' c='_ZN14QWindowPrivate6createEby'/>
<def f='qtbase-6.5.0/src/gui/kernel/qwindow.cpp' l='675' ll='679' type='void QWindow::create()'/>
<use f='qtbase-6.5.0/src/gui/kernel/qwindow.cpp' l='694' u='c' c='_ZNK7QWindow5winIdEv'/>
<use f='qtbase-6.5.0/src/gui/kernel/qwindow.cpp' l='755' u='c' c='_ZN7QWindow9setParentEPS_'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qwindow.cpp' l='661'>/*!
    Allocates the platform resources associated with the window.

    It is at this point that the surface format set using setFormat() gets resolved
    into an actual native surface. However, the window remains hidden until setVisible() is called.

    Note that it is not usually necessary to call this function directly, as it will be implicitly
    called by show(), setVisible(), and other functions that require access to the platform
    resources.

    Call destroy() to free the platform resources if necessary.

    \sa destroy()
*/</doc>
<use f='qtbase-6.5.0/src/opengl/qopenglcompositorbackingstore.cpp' l='255' u='c' c='_ZN29QOpenGLCompositorBackingStore6resizeERK5QSizeRK7QRegion'/>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfsintegration.cpp' l='149' u='c' c='_ZNK17QEglFSIntegration26createPlatformBackingStoreEP7QWindow'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='1315' u='c' c='_ZN14QWidgetPrivate6createEv'/>
