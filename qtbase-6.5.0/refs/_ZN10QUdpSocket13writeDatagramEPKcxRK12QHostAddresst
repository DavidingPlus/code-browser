<dec f='qtbase-6.5.0/src/network/socket/qudpsocket.h' l='52' type='qint64 QUdpSocket::writeDatagram(const char * data, qint64 len, const QHostAddress &amp; host, quint16 port)'/>
<use f='qtbase-6.5.0/src/network/socket/qudpsocket.h' l='54' u='c' c='_ZN10QUdpSocket13writeDatagramERK10QByteArrayRK12QHostAddresst'/>
<def f='qtbase-6.5.0/src/network/socket/qudpsocket.cpp' l='305' ll='333' type='qint64 QUdpSocket::writeDatagram(const char * data, qint64 size, const QHostAddress &amp; address, quint16 port)'/>
<doc f='qtbase-6.5.0/src/network/socket/qudpsocket.cpp' l='284'>/*!
    Sends the datagram at \a data of size \a size to the host
    address \a address at port \a port. Returns the number of
    bytes sent on success; otherwise returns -1.

    Datagrams are always written as one block. The maximum size of a
    datagram is highly platform-dependent, but can be as low as 8192
    bytes. If the datagram is too large, this function will return -1
    and error() will return DatagramTooLargeError.

    Sending datagrams larger than 512 bytes is in general disadvised,
    as even if they are sent successfully, they are likely to be
    fragmented by the IP layer before arriving at their final
    destination.

    \warning Calling this function on a connected UDP socket may
    result in an error and no packet being sent. If you are using a
    connected socket, use write() to send datagrams.

    \sa readDatagram(), write()
*/</doc>
