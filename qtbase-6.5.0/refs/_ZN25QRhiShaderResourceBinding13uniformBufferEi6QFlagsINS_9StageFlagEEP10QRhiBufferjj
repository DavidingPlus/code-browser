<dec f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='332' type='static QRhiShaderResourceBinding QRhiShaderResourceBinding::uniformBuffer(int binding, QRhiShaderResourceBinding::StageFlags stage, QRhiBuffer * buf, quint32 offset, quint32 size)'/>
<use f='qtbase-6.5.0/src/gui/painting/qbackingstoredefaultcompositor.cpp' l='348' u='c' c='_ZN30QBackingStoreDefaultCompositor17createPerQuadDataEP11QRhiTextureS1_'/>
<use f='qtbase-6.5.0/src/gui/painting/qbackingstoredefaultcompositor.cpp' l='358' u='c' c='_ZN30QBackingStoreDefaultCompositor17createPerQuadDataEP11QRhiTextureS1_'/>
<use f='qtbase-6.5.0/src/gui/painting/qbackingstoredefaultcompositor.cpp' l='380' u='c' c='_ZN30QBackingStoreDefaultCompositor17updatePerQuadDataEPNS_11PerQuadDataEP11QRhiTextureS3_'/>
<use f='qtbase-6.5.0/src/gui/painting/qbackingstoredefaultcompositor.cpp' l='389' u='c' c='_ZN30QBackingStoreDefaultCompositor17updatePerQuadDataEPNS_11PerQuadDataEP11QRhiTextureS3_'/>
<def f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='3500' ll='3513' type='static QRhiShaderResourceBinding QRhiShaderResourceBinding::uniformBuffer(int binding, QRhiShaderResourceBinding::StageFlags stage, QRhiBuffer * buf, quint32 offset, quint32 size)'/>
<doc f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='3477'>/*!
    \return a shader resource binding for the given binding number, pipeline
    stages, and buffer specified by \a binding, \a stage, and \a buf. This
    overload binds a region only, as specified by \a offset and \a size.

    \note It is up to the user to ensure the offset is aligned to
    QRhi::ubufAlignment().

    \note \a size must be greater than 0.

    \note When \a buf is not null, it must have been created with
    QRhiBuffer::UniformBuffer.

    \note \a buf can be null. It is valid to create a
    QRhiShaderResourceBindings with unspecified resources, but such an object
    cannot be used with QRhiCommandBuffer::setShaderResources(). It is however
    suitable for creating pipelines. Such a pipeline must then always be used
    together with another, layout compatible QRhiShaderResourceBindings with
    resources present passed to QRhiCommandBuffer::setShaderResources().

    \note If \a size exceeds the limit reported for QRhi::MaxUniformBufferRange,
    unexpected errors may occur.
 */</doc>
