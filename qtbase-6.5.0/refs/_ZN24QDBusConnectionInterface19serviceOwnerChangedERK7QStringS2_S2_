<dec f='qtbase-6.5.0/src/dbus/qdbusconnectioninterface.h' l='74' type='void QDBusConnectionInterface::serviceOwnerChanged(const QString &amp; name, const QString &amp; oldOwner, const QString &amp; newOwner)'/>
<use f='qtbase-6.5.0/src/dbus/qdbusconnectioninterface.cpp' l='136' u='a' c='_ZN24QDBusConnectionInterfaceC1ERK15QDBusConnectionP7QObject'/>
<use f='qtbase-6.5.0/src/dbus/qdbusconnectioninterface.cpp' l='314' u='a' c='_ZN24QDBusConnectionInterface13connectNotifyERK11QMetaMethod'/>
<use f='qtbase-6.5.0/src/dbus/qdbusconnectioninterface.cpp' l='343' u='a' c='_ZN24QDBusConnectionInterface16disconnectNotifyERK11QMetaMethod'/>
<doc f='qtbase-6.5.0/src/dbus/qdbusconnectioninterface.cpp' l='376'>/*!
    \fn QDBusConnectionInterface::serviceOwnerChanged(const QString &amp;name, const QString &amp;oldOwner, const QString &amp;newOwner)
    \deprecated

    Use QDBusServiceWatcher instead.

    This signal is emitted by the D-Bus server whenever a service
    ownership change happens in the bus, including apparition and
    disparition of names.

    This signal means the application \a oldOwner lost ownership of
    bus name \a name to application \a newOwner. If \a oldOwner is an
    empty string, it means the name \a name has just been created; if
    \a newOwner is empty, the name \a name has no current owner and is
    no longer available.

    \note connecting to this signal will make the application listen for and
    receive every single service ownership change on the bus. Depending on
    how many services are running, this make the application be activated to
    receive more signals than it needs. To avoid this problem, use the
    QDBusServiceWatcher class, which can listen for specific changes.
*/</doc>
