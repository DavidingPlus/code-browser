<dec f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='1043' type='QRhiRenderPassDescriptor * QRhiTextureRenderTarget::newCompatibleRenderPassDescriptor()'/>
<doc f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='3173'>/*!
    \fn QRhiRenderPassDescriptor *QRhiTextureRenderTarget::newCompatibleRenderPassDescriptor()

    \return a new QRhiRenderPassDescriptor that is compatible with this render
    target.

    The returned value is used in two ways: it can be passed to
    setRenderPassDescriptor() and
    QRhiGraphicsPipeline::setRenderPassDescriptor(). A render pass descriptor
    describes the attachments (color, depth/stencil) and the load/store
    behavior that can be affected by flags(). A QRhiGraphicsPipeline can only
    be used in combination with a render target that has the same
    QRhiRenderPassDescriptor set.

    Two QRhiTextureRenderTarget instances can share the same render pass
    descriptor as long as they have the same number and type of attachments.
    The associated QRhiTexture or QRhiRenderBuffer instances are not part of
    the render pass descriptor so those can differ in the two
    QRhiTextureRenderTarget instances.

    \note resources, such as QRhiTexture instances, referenced in description()
    must already have create() called on them.

    \sa create()
 */</doc>
<ovr f='qtbase-6.5.0/src/gui/rhi/qrhigles2.cpp' l='5419' c='_ZN25QGles2TextureRenderTarget33newCompatibleRenderPassDescriptorEv'/>
<ovr f='qtbase-6.5.0/src/gui/rhi/qrhinull.cpp' l='803' c='_ZN24QNullTextureRenderTarget33newCompatibleRenderPassDescriptorEv'/>
