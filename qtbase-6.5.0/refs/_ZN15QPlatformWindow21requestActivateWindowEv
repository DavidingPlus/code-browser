<dec f='qtbase-6.5.0/src/gui/kernel/qplatformwindow.h' l='89' type='void QPlatformWindow::requestActivateWindow()'/>
<def f='qtbase-6.5.0/src/gui/kernel/qplatformwindow.cpp' l='382' ll='385' type='void QPlatformWindow::requestActivateWindow()'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qplatformwindow.cpp' l='369'>/*!
  Reimplement to let Qt be able to request activation/focus for a window

  Some window systems will probably not have callbacks for this functionality,
  and then calling QWindowSystemInterface::handleWindowActivated(QWindow *w)
  would be sufficient.

  If the window system has some event handling/callbacks then call
  QWindowSystemInterface::handleWindowActivated(QWindow *w) when the window system
  gives the notification.

  Default implementation calls QWindowSystem::handleWindowActivated(QWindow *w)
*/</doc>
<use f='qtbase-6.5.0/src/gui/kernel/qwindow.cpp' l='1215' u='c' c='_ZN7QWindow15requestActivateEv'/>
<ovr f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfswindow.cpp' l='259' c='_ZN12QEglFSWindow21requestActivateWindowEv'/>
<use f='qtbase-6.5.0/src/plugins/platforms/minimal/qminimalintegration.cpp' l='143' u='c' c='_ZNK19QMinimalIntegration20createPlatformWindowEP7QWindow'/>
<use f='qtbase-6.5.0/src/plugins/platforms/minimalegl/qminimaleglintegration.cpp' l='61' u='c' c='_ZNK22QMinimalEglIntegration20createPlatformWindowEP7QWindow'/>
<use f='qtbase-6.5.0/src/plugins/platforms/offscreen/qoffscreenintegration.cpp' l='334' u='c' c='_ZNK21QOffscreenIntegration20createPlatformWindowEP7QWindow'/>
<ovr f='qtbase-6.5.0/src/plugins/platforms/offscreen/qoffscreenwindow.cpp' l='122' c='_ZN16QOffscreenWindow21requestActivateWindowEv'/>
