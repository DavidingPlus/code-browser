<dec f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.h' l='92' type='bool QOpenGLShaderProgram::link()'/>
<use f='qtbase-6.5.0/src/opengl/qopenglengineshadermanager.cpp' l='252' u='c' c='_ZN26QOpenGLEngineSharedShadersC1EP14QOpenGLContext'/>
<use f='qtbase-6.5.0/src/opengl/qopenglengineshadermanager.cpp' l='286' u='c' c='_ZN26QOpenGLEngineSharedShadersC1EP14QOpenGLContext'/>
<use f='qtbase-6.5.0/src/opengl/qopenglengineshadermanager.cpp' l='416' u='c' c='_ZN26QOpenGLEngineSharedShaders18findProgramInCacheERK23QOpenGLEngineShaderProg'/>
<def f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.cpp' l='1273' ll='1320' type='bool QOpenGLShaderProgram::link()'/>
<use f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.cpp' l='1361' u='c' c='_ZN20QOpenGLShaderProgram4bindEv'/>
<use f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.cpp' l='3770' u='c' c='_ZN27QOpenGLShaderProgramPrivate10linkBinaryEv'/>
<doc f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.cpp' l='1249'>/*!
    Links together the shaders that were added to this program with
    addShader().  Returns \c true if the link was successful or
    false otherwise.  If the link failed, the error messages can
    be retrieved with log().

    Subclasses can override this function to initialize attributes
    and uniform variables for use in specific shader programs.

    If the shader program was already linked, calling this
    function again will force it to be re-linked.

    When shaders were added to this program via
    addCacheableShaderFromSourceCode() or addCacheableShaderFromSourceFile(),
    program binaries are supported, and a cached binary is available on disk,
    actual compilation and linking are skipped. Instead, link() will initialize
    the program with the binary blob via glProgramBinary(). If there is no
    cached version of the program or it was generated with a different driver
    version, the shaders will be compiled from source and the program will get
    linked normally. This allows seamless upgrading of the graphics drivers,
    without having to worry about potentially incompatible binary formats.

    \sa addShader(), log()
*/</doc>
<use f='qtbase-6.5.0/src/opengl/qopengltextureblitter.cpp' l='371' u='c' c='_ZN28QOpenGLTextureBlitterPrivate12buildProgramENS_12ProgramIndexEPKcS2_'/>
<use f='qtbase-6.5.0/src/opengl/qopengltextureglyphcache.cpp' l='336' u='c' c='_ZN24QOpenGLTextureGlyphCache17resizeTextureDataEii'/>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfscursor.cpp' l='113' u='c' c='_ZN12QEglFSCursor20createShaderProgramsEv'/>
