<dec f='qtbase-6.5.0/src/network/access/qnetworkrequest.h' l='155' type='void QNetworkRequest::setDecompressedSafetyCheckThreshold(qint64 threshold)'/>
<def f='qtbase-6.5.0/src/network/access/qnetworkrequest.cpp' l='968' ll='971' type='void QNetworkRequest::setDecompressedSafetyCheckThreshold(qint64 threshold)'/>
<doc f='qtbase-6.5.0/src/network/access/qnetworkrequest.cpp' l='946'>/*!
    \since 6.2

    Sets the \a threshold for archive bomb checks.

    Some supported compression algorithms can, in a tiny compressed file, encode
    a spectacularly huge decompressed file. This is only possible if the
    decompressed content is extremely monotonous, which is seldom the case for
    real files being transmitted in good faith: files exercising such insanely
    high compression ratios are typically payloads of buffer-overrun attacks, or
    denial-of-service (by using up too much memory) attacks. Consequently, files
    that decompress to huge sizes, particularly from tiny compressed forms, are
    best rejected as suspected malware.

    If a reply&apos;s decompressed size is bigger than this threshold (by default,
    10 MiB, i.e. 10 * 1024 * 1024), Qt will check the compression ratio: if that
    is unreasonably large (40:1 for GZip and Deflate, or 100:1 for Brotli and
    ZStandard), the reply will be treated as an error. Setting the threshold
    to \c{-1} disables this check.

    \sa decompressedSafetyCheckThreshold()
*/</doc>
