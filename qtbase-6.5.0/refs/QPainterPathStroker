<use f='qtbase-6.5.0/src/gui/painting/qpainterpath.h' l='175'/>
<def f='qtbase-6.5.0/src/gui/painting/qpainterpath.h' l='195' ll='233'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainterpath.h' l='228' c='_ZN19QPainterPathStrokerC1ERKS_'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainterpath.h' l='228' c='_ZN19QPainterPathStrokeraSERKS_'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainterpath.h' l='228' c='_ZN19QPainterPathStrokeraSERKS_'/>
<size>8</size>
<fun r='_ZN19QPainterPathStroker6d_funcEv'/>
<fun r='_ZNK19QPainterPathStroker6d_funcEv'/>
<fun r='_ZN19QPainterPathStrokerC1Ev'/>
<fun r='_ZN19QPainterPathStrokerC1ERK4QPen'/>
<fun r='_ZN19QPainterPathStrokerD1Ev'/>
<fun r='_ZN19QPainterPathStroker8setWidthEd'/>
<fun r='_ZNK19QPainterPathStroker5widthEv'/>
<fun r='_ZN19QPainterPathStroker11setCapStyleEN2Qt11PenCapStyleE'/>
<fun r='_ZNK19QPainterPathStroker8capStyleEv'/>
<fun r='_ZN19QPainterPathStroker12setJoinStyleEN2Qt12PenJoinStyleE'/>
<fun r='_ZNK19QPainterPathStroker9joinStyleEv'/>
<fun r='_ZN19QPainterPathStroker13setMiterLimitEd'/>
<fun r='_ZNK19QPainterPathStroker10miterLimitEv'/>
<fun r='_ZN19QPainterPathStroker17setCurveThresholdEd'/>
<fun r='_ZNK19QPainterPathStroker14curveThresholdEv'/>
<fun r='_ZN19QPainterPathStroker14setDashPatternEN2Qt8PenStyleE'/>
<fun r='_ZN19QPainterPathStroker14setDashPatternERK5QListIdE'/>
<fun r='_ZNK19QPainterPathStroker11dashPatternEv'/>
<fun r='_ZN19QPainterPathStroker13setDashOffsetEd'/>
<fun r='_ZNK19QPainterPathStroker10dashOffsetEv'/>
<fun r='_ZNK19QPainterPathStroker12createStrokeERK12QPainterPath'/>
<fun r='_ZN19QPainterPathStrokerC1ERKS_'/>
<mbr r='QPainterPathStroker::d_ptr' o='0' t='QScopedPointer&lt;QPainterPathStrokerPrivate&gt;'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainterpath_p.h' l='100'/>
<size>8</size>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='361' c='_ZN15QPainterPrivate11draw_helperERK12QPainterPathNS_13DrawOperationE'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='571' c='_ZN15QPainterPrivate21drawStretchedGradientERK12QPainterPathNS_13DrawOperationE'/>
<size>8</size>
<doc f='qtbase-6.5.0/src/gui/painting/qpainterpath.cpp' l='2510'>/*!
    \since 4.1
    \class QPainterPathStroker
    \ingroup painting
    \inmodule QtGui

    \brief The QPainterPathStroker class is used to generate fillable
    outlines for a given painter path.

    By calling the createStroke() function, passing a given
    QPainterPath as argument, a new painter path representing the
    outline of the given path is created. The newly created painter
    path can then be filled to draw the original painter path&apos;s
    outline.

    You can control the various design aspects (width, cap styles,
    join styles and dash pattern) of the outlining using the following
    functions:

    \list
    \li setWidth()
    \li setCapStyle()
    \li setJoinStyle()
    \li setDashPattern()
    \endlist

    The setDashPattern() function accepts both a Qt::PenStyle object
    and a list representation of the pattern as argument.

    In addition you can specify a curve&apos;s threshold, controlling the
    granularity with which a curve is drawn, using the
    setCurveThreshold() function. The default threshold is a well
    adjusted value (0.25), and normally you should not need to modify
    it. However, you can make the curve&apos;s appearance smoother by
    decreasing its value.

    You can also control the miter limit for the generated outline
    using the setMiterLimit() function. The miter limit describes how
    far from each join the miter join can extend. The limit is
    specified in the units of width so the pixelwise miter limit will
    be \c {miterlimit * width}. This value is only used if the join
    style is Qt::MiterJoin.

    The painter path generated by the createStroke() function should
    only be used for outlining the given painter path. Otherwise it
    may cause unexpected behavior. Generated outlines also require the
    Qt::WindingFill rule which is set by default.

    \sa QPen, QBrush
*/</doc>
<fun r='_ZN19QPainterPathStrokerC1Ev'/>
<fun r='_ZN19QPainterPathStrokerC1ERK4QPen'/>
<fun r='_ZN19QPainterPathStrokerD1Ev'/>
<fun r='_ZNK19QPainterPathStroker12createStrokeERK12QPainterPath'/>
<fun r='_ZN19QPainterPathStroker8setWidthEd'/>
<fun r='_ZNK19QPainterPathStroker5widthEv'/>
<fun r='_ZN19QPainterPathStroker11setCapStyleEN2Qt11PenCapStyleE'/>
<fun r='_ZNK19QPainterPathStroker8capStyleEv'/>
<fun r='_ZN19QPainterPathStroker12setJoinStyleEN2Qt12PenJoinStyleE'/>
<fun r='_ZNK19QPainterPathStroker9joinStyleEv'/>
<fun r='_ZN19QPainterPathStroker13setMiterLimitEd'/>
<fun r='_ZNK19QPainterPathStroker10miterLimitEv'/>
<fun r='_ZN19QPainterPathStroker17setCurveThresholdEd'/>
<fun r='_ZNK19QPainterPathStroker14curveThresholdEv'/>
<fun r='_ZN19QPainterPathStroker14setDashPatternEN2Qt8PenStyleE'/>
<fun r='_ZN19QPainterPathStroker14setDashPatternERK5QListIdE'/>
<fun r='_ZNK19QPainterPathStroker11dashPatternEv'/>
<fun r='_ZNK19QPainterPathStroker10dashOffsetEv'/>
<fun r='_ZN19QPainterPathStroker13setDashOffsetEd'/>
<use f='qtbase-6.5.0/src/printsupport/kernel/qpaintengine_alpha.cpp' l='382' c='_ZN24QAlphaPaintEnginePrivate11addPenWidthERK12QPainterPath'/>
<size>8</size>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='830' c='_ZL29qt_graphicsItem_shapeFromPathRK12QPainterPathRK4QPen'/>
<size>8</size>
