<dec f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout_p.h' l='444' type='bool QGraphicsAnchorLayoutPrivate::simplifyGraph(Qt::Orientation orientation)'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout_p.h' l='443'>// Simplification</doc>
<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout_p.cpp' l='780' ll='822' type='bool QGraphicsAnchorLayoutPrivate::simplifyGraph(Qt::Orientation orientation)'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout_p.cpp' l='2062' u='c' c='_ZN28QGraphicsAnchorLayoutPrivate15calculateGraphsEN2Qt11OrientationE'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout_p.cpp' l='743'>/*!
   \internal

   The purpose of this function is to simplify the graph.
   Simplification serves two purposes:
   1. Reduce the number of edges in the graph, (thus the number of variables to the equation
      solver is reduced, and the solver performs better).
   2. Be able to do distribution of sequences of edges more intelligently (esp. with sequential
      anchors)

   It is essential that it must be possible to restore simplified anchors back to their &quot;original&quot;
   form. This is done by restoreSimplifiedAnchor().

   There are two types of simplification that can be done:
   1. Sequential simplification
      Sequential simplification means that all sequences of anchors will be merged into one single
      anchor. Only anhcors that points in the same direction will be merged.
   2. Parallel simplification
      If a simplified sequential anchor is about to be inserted between two vertices in the graph
      and there already exist an anchor between those two vertices, a parallel anchor will be
      created that serves as a placeholder for the sequential anchor and the anchor that was
      already between the two vertices.

   The process of simplification can be described as:

   1. Simplify all sequences of anchors into one anchor.
      If no further simplification was done, go to (3)
      - If there already exist an anchor where the sequential anchor is supposed to be inserted,
        take that anchor out of the graph
      - Then create a parallel anchor that holds the sequential anchor and the anchor just taken
        out of the graph.
   2. Go to (1)
   3. Done

   When creating the parallel anchors, the algorithm might identify unfeasible situations. In this
   case the simplification process stops and returns \c false. Otherwise returns \c true.
*/</doc>
