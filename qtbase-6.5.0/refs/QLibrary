<inh f='qtbase-6.5.0/src/corelib/kernel/qobject.h' l='89' c='QObject'/>
<def f='qtbase-6.5.0/src/corelib/plugin/qlibrary.h' l='16' ll='68'/>
<use f='qtbase-6.5.0/src/corelib/plugin/qlibrary.h' l='67' c='_ZN8QLibraryC1ERKS_'/>
<use f='qtbase-6.5.0/src/corelib/plugin/qlibrary.h' l='67' c='_ZN8QLibraryaSERKS_'/>
<use f='qtbase-6.5.0/src/corelib/plugin/qlibrary.h' l='67' c='_ZN8QLibraryaSERKS_'/>
<size>24</size>
<smbr r='QLibrary::staticMetaObject' t='const QMetaObject'/>
<fun r='_ZNK8QLibrary10metaObjectEv'/>
<fun r='_ZN8QLibrary11qt_metacastEPKc'/>
<fun r='_ZN8QLibrary11qt_metacallEN11QMetaObject4CallEiPPv'/>
<fun r='_ZN8QLibrary2trEPKcS1_i'/>
<fun r='_ZN8QLibrary18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv'/>
<fun r='_ZN8QLibraryC1EP7QObject'/>
<fun r='_ZN8QLibraryC1ERK7QStringP7QObject'/>
<fun r='_ZN8QLibraryC1ERK7QStringiP7QObject'/>
<fun r='_ZN8QLibraryC1ERK7QStringS2_P7QObject'/>
<fun r='_ZN8QLibraryD1Ev'/>
<fun r='_ZN8QLibrary7resolveEPKc'/>
<fun r='_ZN8QLibrary7resolveERK7QStringPKc'/>
<fun r='_ZN8QLibrary7resolveERK7QStringiPKc'/>
<fun r='_ZN8QLibrary7resolveERK7QStringS2_PKc'/>
<fun r='_ZN8QLibrary4loadEv'/>
<fun r='_ZN8QLibrary6unloadEv'/>
<fun r='_ZNK8QLibrary8isLoadedEv'/>
<fun r='_ZN8QLibrary9isLibraryERK7QString'/>
<fun r='_ZN8QLibrary11setFileNameERK7QString'/>
<fun r='_ZNK8QLibrary8fileNameEv'/>
<fun r='_ZN8QLibrary21setFileNameAndVersionERK7QStringi'/>
<fun r='_ZN8QLibrary21setFileNameAndVersionERK7QStringS2_'/>
<fun r='_ZNK8QLibrary11errorStringEv'/>
<fun r='_ZN8QLibrary12setLoadHintsE6QFlagsINS_8LoadHintEE'/>
<fun r='_ZNK8QLibrary9loadHintsEv'/>
<mbr r='QLibrary::d' o='128' t='QTaggedPointer&lt;QLibraryPrivate, QLibrary::LoadStatusTag&gt;'/>
<fun r='_ZN8QLibraryC1ERKS_'/>
<use f='qtbase-6.5.0/src/corelib/plugin/qlibrary.cpp' l='1026' c='_ZN8QLibrary7resolveERK7QStringPKc'/>
<use f='qtbase-6.5.0/src/corelib/plugin/qlibrary.cpp' l='1046' c='_ZN8QLibrary7resolveERK7QStringiPKc'/>
<use f='qtbase-6.5.0/src/corelib/plugin/qlibrary.cpp' l='1067' c='_ZN8QLibrary7resolveERK7QStringS2_PKc'/>
<size>24</size>
<doc f='qtbase-6.5.0/src/corelib/plugin/qlibrary.cpp' l='59'>/*!
    \class QLibrary
    \inmodule QtCore
    \reentrant
    \brief The QLibrary class loads shared libraries at runtime.


    \ingroup plugins

    An instance of a QLibrary object operates on a single shared
    object file (which we call a &quot;library&quot;, but is also known as a
    &quot;DLL&quot;). A QLibrary provides access to the functionality in the
    library in a platform independent way. You can either pass a file
    name in the constructor, or set it explicitly with setFileName().
    When loading the library, QLibrary searches in all the
    system-specific library locations (e.g. \c LD_LIBRARY_PATH on
    Unix), unless the file name has an absolute path.

    If the file name is an absolute path then an attempt is made to
    load this path first. If the file cannot be found, QLibrary tries
    the name with different platform-specific file prefixes, like
    &quot;lib&quot; on Unix and Mac, and suffixes, like &quot;.so&quot; on Unix, &quot;.dylib&quot;
    on the Mac, or &quot;.dll&quot; on Windows.

    If the file path is not absolute then QLibrary modifies the search
    order to try the system-specific prefixes and suffixes first,
    followed by the file path specified.

    This makes it possible to specify shared libraries that are only
    identified by their basename (i.e. without their suffix), so the
    same code will work on different operating systems yet still
    minimise the number of attempts to find the library.

    The most important functions are load() to dynamically load the
    library file, isLoaded() to check whether loading was successful,
    and resolve() to resolve a symbol in the library. The resolve()
    function implicitly tries to load the library if it has not been
    loaded yet. Multiple instances of QLibrary can be used to access
    the same physical library. Once loaded, libraries remain in memory
    until the application terminates. You can attempt to unload a
    library using unload(), but if other instances of QLibrary are
    using the same library, the call will fail, and unloading will
    only happen when every instance has called unload().

    A typical use of QLibrary is to resolve an exported symbol in a
    library, and to call the C function that this symbol represents.
    This is called &quot;explicit linking&quot; in contrast to &quot;implicit
    linking&quot;, which is done by the link step in the build process when
    linking an executable against a library.

    The following code snippet loads a library, resolves the symbol
    &quot;mysymbol&quot;, and calls the function if everything succeeded. If
    something goes wrong, e.g. the library file does not exist or the
    symbol is not defined, the function pointer will be \nullptr and
    won&apos;t be called.

    \snippet code/src_corelib_plugin_qlibrary.cpp 0

    The symbol must be exported as a C function from the library for
    resolve() to work. This means that the function must be wrapped in
    an \c{extern &quot;C&quot;} block if the library is compiled with a C++
    compiler. On Windows, this also requires the use of a \c dllexport
    macro; see resolve() for the details of how this is done. For
    convenience, there is a static resolve() function which you can
    use if you just want to call a function in a library without
    explicitly loading the library first:

    \snippet code/src_corelib_plugin_qlibrary.cpp 1

    \sa QPluginLoader
*/</doc>
<fun r='_ZN8QLibrary9isLibraryERK7QString'/>
<fun r='_ZN8QLibrary4loadEv'/>
<fun r='_ZN8QLibrary6unloadEv'/>
<fun r='_ZNK8QLibrary8isLoadedEv'/>
<fun r='_ZN8QLibraryC1EP7QObject'/>
<fun r='_ZN8QLibraryC1ERK7QStringP7QObject'/>
<fun r='_ZN8QLibraryC1ERK7QStringiP7QObject'/>
<fun r='_ZN8QLibraryC1ERK7QStringS2_P7QObject'/>
<fun r='_ZN8QLibraryD1Ev'/>
<fun r='_ZN8QLibrary11setFileNameERK7QString'/>
<fun r='_ZNK8QLibrary8fileNameEv'/>
<fun r='_ZN8QLibrary21setFileNameAndVersionERK7QStringi'/>
<fun r='_ZN8QLibrary21setFileNameAndVersionERK7QStringS2_'/>
<fun r='_ZN8QLibrary7resolveEPKc'/>
<fun r='_ZN8QLibrary7resolveERK7QStringPKc'/>
<fun r='_ZN8QLibrary7resolveERK7QStringiPKc'/>
<fun r='_ZN8QLibrary7resolveERK7QStringS2_PKc'/>
<fun r='_ZNK8QLibrary11errorStringEv'/>
<fun r='_ZN8QLibrary12setLoadHintsE6QFlagsINS_8LoadHintEE'/>
<fun r='_ZNK8QLibrary9loadHintsEv'/>
<use f='qtbase-6.5.0/src/corelib/text/qunicodetools.cpp' l='1456'/>
<size>24</size>
<use f='qtbase-6.5.0/src/gui/kernel/qguiapplication.cpp' l='1674' c='_ZN22QGuiApplicationPrivate4initEv'/>
<size>24</size>
<use f='qtbase-6.5.0/src/network/kernel/qdnslookup_unix.cpp' l='60' c='_ZL13resolveSymbolR8QLibraryPKc'/>
<use f='qtbase-6.5.0/src/network/kernel/qdnslookup_unix.cpp' l='74' c='_ZL22resolveLibraryInternalv'/>
<size>24</size>
<use f='qtbase-6.5.0/src/network/kernel/qhostinfo_unix.cpp' l='73'/>
<use f='qtbase-6.5.0/src/network/kernel/qhostinfo_unix.cpp' l='79' c='_ZL13resolveSymbolR8QLibraryPKc'/>
<size>24</size>
