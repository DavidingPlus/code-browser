<dec f='qtbase-6.5.0/src/gui/util/qundostack.h' l='88' type='void QUndoStack::beginMacro(const QString &amp; text)'/>
<def f='qtbase-6.5.0/src/gui/util/qundostack.cpp' l='1128' ll='1151' type='void QUndoStack::beginMacro(const QString &amp; text)'/>
<doc f='qtbase-6.5.0/src/gui/util/qundostack.cpp' l='1098'>/*!
    Begins composition of a macro command with the given \a text description.

    An empty command described by the specified \a text is pushed on the stack.
    Any subsequent commands pushed on the stack will be appended to the empty
    command&apos;s children until endMacro() is called.

    Calls to beginMacro() and endMacro() may be nested, but every call to
    beginMacro() must have a matching call to endMacro().

    While a macro is being composed, the stack is disabled. This means that:
    \list
    \li indexChanged() and cleanChanged() are not emitted,
    \li canUndo() and canRedo() return false,
    \li calling undo() or redo() has no effect,
    \li the undo/redo actions are disabled.
    \endlist

    The stack becomes enabled and appropriate signals are emitted when endMacro()
    is called for the outermost macro.

    \snippet code/src_gui_util_qundostack.cpp 4

    This code is equivalent to:

    \snippet code/src_gui_util_qundostack.cpp 5

    \sa endMacro()
*/</doc>
