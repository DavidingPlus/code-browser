<dec f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='1525' type='void QRhiCommandBuffer::beginComputePass(QRhiResourceUpdateBatch * resourceUpdates = nullptr, QRhiCommandBuffer::BeginPassFlags flags = {})'/>
<def f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='6739' ll='6742' type='void QRhiCommandBuffer::beginComputePass(QRhiResourceUpdateBatch * resourceUpdates = nullptr, QRhiCommandBuffer::BeginPassFlags flags = {})'/>
<doc f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='6722'>/*!
    Records starting a new compute pass.

    \a resourceUpdates, when not null, specifies a resource update batch that
    is to be committed and then released.

    \note Do not assume that any state or resource bindings persist between
    passes.

    \note A compute pass can record setComputePipeline(), setShaderResources(),
    and dispatch() calls, not graphics ones. General functionality, such as,
    debug markers and beginExternal() is available both in render and compute
    passes.

    \note Compute is only available when the \l{QRhi::Compute}{Compute} feature
    is reported as supported.
 */</doc>
