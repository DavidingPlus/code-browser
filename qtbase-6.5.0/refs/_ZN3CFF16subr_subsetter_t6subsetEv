<def f='qtbase-6.5.0/src/3rdparty/harfbuzz-ng/src/hb-subset-cff-common.hh' l='671' ll='796' type='bool CFF::subr_subsetter_t::subset()'/>
<doc f='qtbase-6.5.0/src/3rdparty/harfbuzz-ng/src/hb-subset-cff-common.hh' l='657'>/* Subroutine subsetting with --no-desubroutinize runs in phases:
   *
   * 1. execute charstrings/subroutines to determine subroutine closures
   * 2. parse out all operators and numbers
   * 3. mark hint operators and operands for removal if --no-hinting
   * 4. re-encode all charstrings and subroutines with new subroutine numbers
   *
   * Phases #1 and #2 are done at the same time in collect_subrs ().
   * Phase #3 walks charstrings/subroutines forward then backward (hence parsing required),
   * because we can&apos;t tell if a number belongs to a hint op until we see the first moveto.
   *
   * Assumption: a callsubr/callgsubr operator must immediately follow a (biased) subroutine number
   * within the same charstring/subroutine, e.g., not split across a charstring and a subroutine.
   */</doc>
<use f='qtbase-6.5.0/src/3rdparty/harfbuzz-ng/src/hb-subset-cff1.cc' l='639' u='c' c='_ZN15cff_subset_plan6createERKN2OT4cff120accelerator_subset_tEP16hb_subset_plan_t'/>
<use f='qtbase-6.5.0/src/3rdparty/harfbuzz-ng/src/hb-subset-cff2.cc' l='450' u='c' c='_ZN16cff2_subset_plan6createERKN2OT4cff219accelerator_templ_tIN3CFF32cff2_private_dict_opset_subset_tENS3_31cff2_private_dict_values_base_tINS3_8op_st14919146'/>
