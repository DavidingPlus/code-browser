<dec f='qtbase-6.5.0/src/corelib/io/qiodevice.h' l='123' type='qint64 QIODevice::skipData(qint64 maxSize)'/>
<use f='qtbase-6.5.0/src/corelib/io/qiodevice.cpp' l='1992' u='c' c='_ZN9QIODevice4skipEx'/>
<def f='qtbase-6.5.0/src/corelib/io/qiodevice.cpp' l='2046' ll='2049' type='qint64 QIODevice::skipData(qint64 maxSize)'/>
<doc f='qtbase-6.5.0/src/corelib/io/qiodevice.cpp' l='2031'>/*!
    \since 6.0

    Skips up to \a maxSize bytes from the device. Returns the number of bytes
    actually skipped, or -1 on error.

    This function is called by QIODevice. Consider reimplementing it
    when creating a subclass of QIODevice.

    The base implementation discards the data by reading into a dummy buffer.
    This is slow, but works for all types of devices. Subclasses can
    reimplement this function to improve on that.

    \sa skip(), peek(), seek(), read()
*/</doc>
<ovr f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='1277' c='_ZN15QAbstractSocket8skipDataEx'/>
<use f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='1291' u='c' c='_ZN15QAbstractSocket8skipDataEx'/>
<ovr f='qtbase-6.5.0/src/network/socket/qlocalsocket_unix.cpp' l='460' c='_ZN12QLocalSocket8skipDataEx'/>
