<dec f='qtbase-6.5.0/src/corelib/io/qlockfile.h' l='28' type='void QLockFile::setStaleLockTime(int )'/>
<use f='qtbase-6.5.0/src/corelib/io/qlockfile.h' l='33' u='c' c='_ZN9QLockFile16setStaleLockTimeENSt6chrono8durationIlSt5ratioILl1ELl1000EEEE'/>
<def f='qtbase-6.5.0/src/corelib/io/qlockfile.cpp' l='143' ll='147' type='void QLockFile::setStaleLockTime(int staleLockTime)'/>
<doc f='qtbase-6.5.0/src/corelib/io/qlockfile.cpp' l='127'>/*!
    Sets \a staleLockTime to be the time in milliseconds after which
    a lock file is considered stale.
    The default value is 30000, i.e. 30 seconds.
    If your application typically keeps the file locked for more than 30 seconds
    (for instance while saving megabytes of data for 2 minutes), you should set
    a bigger value using setStaleLockTime().

    The value of \a staleLockTime is used by lock() and tryLock() in order
    to determine when an existing lock file is considered stale, i.e. left over
    by a crashed process. This is useful for the case where the PID got reused
    meanwhile, so one way to detect a stale lock file is by the fact that
    it has been around for a long time.

    \sa staleLockTime()
*/</doc>
