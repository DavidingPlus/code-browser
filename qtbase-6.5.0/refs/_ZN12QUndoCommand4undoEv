<dec f='qtbase-6.5.0/src/gui/util/qundostack.h' l='28' type='void QUndoCommand::undo()'/>
<def f='qtbase-6.5.0/src/gui/util/qundostack.cpp' l='215' ll='219' type='void QUndoCommand::undo()'/>
<use f='qtbase-6.5.0/src/gui/util/qundostack.cpp' l='218' u='c' c='_ZN12QUndoCommand4undoEv'/>
<use f='qtbase-6.5.0/src/gui/util/qundostack.cpp' l='749' u='c' c='_ZN10QUndoStack4undoEv'/>
<use f='qtbase-6.5.0/src/gui/util/qundostack.cpp' l='873' u='c' c='_ZN10QUndoStack8setIndexEi'/>
<doc f='qtbase-6.5.0/src/gui/util/qundostack.cpp' l='203'>/*!
    Reverts a change to the document. After undo() is called, the state of
    the document should be the same as before redo() was called. This function must
    be implemented in the derived class. Calling QUndoStack::push(),
    QUndoStack::undo() or QUndoStack::redo() from this function leads to
    undefined beahavior.

    The default implementation calls undo() on all child commands in reverse order.

    \sa redo()
*/</doc>
