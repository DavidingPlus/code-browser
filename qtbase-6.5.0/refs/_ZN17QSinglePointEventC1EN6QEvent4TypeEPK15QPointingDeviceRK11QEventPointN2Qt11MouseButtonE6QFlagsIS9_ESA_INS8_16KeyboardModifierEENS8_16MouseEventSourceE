<dec f='qtbase-6.5.0/src/gui/kernel/qevent.h' l='136' type='void QSinglePointEvent::QSinglePointEvent(QEvent::Type type, const QPointingDevice * dev, const QEventPoint &amp; point, Qt::MouseButton button, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, Qt::MouseEventSource source)'/>
<use f='qtbase-6.5.0/src/gui/kernel/qevent_p.h' l='54' u='c' c='_ZN24QMutableSinglePointEventC1EN6QEvent4TypeEPK15QPointingDeviceRK11QEventPointN2Qt11MouseButtonE6QFlagsIS9_ESA_INS8_16KeyboardModifierEENS8_16MouseEventSourceE'/>
<def f='qtbase-6.5.0/src/gui/kernel/qevent.cpp' l='561' ll='572' type='void QSinglePointEvent::QSinglePointEvent(QEvent::Type type, const QPointingDevice * dev, const QEventPoint &amp; point, Qt::MouseButton button, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, Qt::MouseEventSource source)'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qevent.cpp' l='553'>/*! \internal
    Constructs a single-point event with the given \a point, which must be an instance
    (or copy of one) that already exists in QPointingDevicePrivate::activePoints.
    Unlike the other constructor, it does not modify the given \a point in any way.
    This is useful when synthesizing a QMouseEvent from one point taken from a QTouchEvent, for example.

    \sa QMutableSinglePointEvent()
*/</doc>
