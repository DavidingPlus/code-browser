<dec f='qtbase-6.5.0/src/corelib/kernel/qmetatype.h' l='671' type='static bool QMetaType::canView(QMetaType fromType, QMetaType toType)'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qvariant.h' l='295' u='c' c='_ZNK8QVariant7canViewE9QMetaType'/>
<def f='qtbase-6.5.0/src/corelib/kernel/qmetatype.cpp' l='2449' ll='2474' type='static bool QMetaType::canView(QMetaType fromType, QMetaType toType)'/>
<doc f='qtbase-6.5.0/src/corelib/kernel/qmetatype.cpp' l='2432'>/*!
    Returns \c true if QMetaType::view can create a mutable view of type \a toType
    on type \a fromType.

    Converting between pointers of types derived from QObject will return true for this
    function if a qobject_cast from the type described by \a fromType to the type described
    by \a toType would succeed.

    You can create a mutable view of type QSequentialIterable on any container registered with
    Q_DECLARE_SEQUENTIAL_CONTAINER_METATYPE().

    Similarly you can create a mutable view of type QAssociativeIterable on any container
    registered with Q_DECLARE_ASSOCIATIVE_CONTAINER_METATYPE().

    \sa convert(), QSequentialIterable, Q_DECLARE_SEQUENTIAL_CONTAINER_METATYPE(),
        QAssociativeIterable, Q_DECLARE_ASSOCIATIVE_CONTAINER_METATYPE()
*/</doc>
