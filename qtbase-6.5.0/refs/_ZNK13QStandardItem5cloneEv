<dec f='qtbase-6.5.0/src/gui/itemmodels/qstandarditemmodel.h' l='190' type='QStandardItem * QStandardItem::clone() const'/>
<use f='qtbase-6.5.0/src/gui/itemmodels/qstandarditemmodel_p.h' l='178' u='c' c='_ZNK25QStandardItemModelPrivate10createItemEv'/>
<def f='qtbase-6.5.0/src/gui/itemmodels/qstandarditemmodel.cpp' l='2011' ll='2014' type='QStandardItem * QStandardItem::clone() const'/>
<doc f='qtbase-6.5.0/src/gui/itemmodels/qstandarditemmodel.cpp' l='2002'>/*!
    Returns a copy of this item. The item&apos;s children are not copied.

    When subclassing QStandardItem, you can reimplement this function
    to provide QStandardItemModel with a factory that it can use to
    create new items on demand.

    \sa QStandardItemModel::setItemPrototype(), operator=()
*/</doc>
