<dec f='qtbase-6.5.0/src/corelib/serialization/qcborvalue.h' l='242' type='static QCborValue QCborValue::fromVariant(const QVariant &amp; variant)'/>
<use f='qtbase-6.5.0/src/corelib/serialization/qjsoncbor.cpp' l='646' u='c' c='_ZL13appendVariantP21QCborContainerPrivateRK8QVariant'/>
<def f='qtbase-6.5.0/src/corelib/serialization/qjsoncbor.cpp' l='702' ll='781' type='static QCborValue QCborValue::fromVariant(const QVariant &amp; variant)'/>
<doc f='qtbase-6.5.0/src/corelib/serialization/qjsoncbor.cpp' l='650'>/*!
    Converts the QVariant \a variant into QCborValue and returns it.

    QVariants may contain a large list of different meta types, many of which
    have no corresponding representation in CBOR. That includes all
    user-defined meta types. When preparing transmission using CBOR, it is
    suggested to encode carefully each value to prevent loss of representation.

    The following table lists the conversion this function will apply:

    \table
      \header \li Qt (C++) type             \li CBOR type
      \row  \li invalid (QVariant())        \li Undefined
      \row  \li \c bool                     \li Bool
      \row  \li \c std::nullptr_t           \li Null
      \row  \li \c short, \c ushort, \c int, \c uint, \l qint64  \li Integer
      \row  \li \l quint64                  \li Integer, or Double if outside the range of qint64
      \row  \li \c float, \c double         \li Double
      \row  \li \l QByteArray               \li ByteArray
      \row  \li \l QDateTime                \li DateTime
      \row  \li \l QCborSimpleType          \li Simple type
      \row  \li \l QJsonArray               \li Array, converted using QCborArray::formJsonArray()
      \row  \li \l QJsonDocument            \li Array or Map
      \row  \li \l QJsonObject              \li Map, converted using QCborMap::fromJsonObject()
      \row  \li \l QJsonValue               \li converted using fromJsonValue()
      \row  \li \l QRegularExpression       \li RegularExpression
      \row  \li \l QString                  \li String
      \row  \li \l QStringList              \li Array
      \row  \li \l QVariantHash             \li Map
      \row  \li \l QVariantList             \li Array
      \row  \li \l QVariantMap              \li Map
      \row  \li \l QUrl                     \li Url
      \row  \li \l QUuid                    \li Uuid
    \endtable

    If QVariant::isNull() returns true, a null QCborValue is returned or
    inserted into the list or object, regardless of the type carried by
    QVariant. Note the behavior change in Qt 6.0 affecting QVariant::isNull()
    also affects this function.

    For other types not listed above, a conversion to string will be attempted,
    usually but not always by calling QVariant::toString(). If the conversion
    fails the value is replaced by an Undefined CBOR value. Note that
    QVariant::toString() is also lossy for the majority of types.

    Please note that the conversions via QVariant::toString() are subject to
    change at any time. Both QVariant and QCborValue may be extended in the
    future to support more types, which will result in a change in how this
    function performs conversions.

    \sa toVariant(), fromJsonValue(), QCborArray::toVariantList(), QCborMap::toVariantMap(), QJsonValue::fromVariant()
 */</doc>
