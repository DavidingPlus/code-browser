<dec f='qtbase-6.5.0/src/gui/painting/qpainter.h' l='229' type='void QPainter::fillPath(const QPainterPath &amp; path, const QBrush &amp; brush)'/>
<use f='qtbase-6.5.0/src/gui/painting/qpaintengine.cpp' l='750' u='c' c='_ZN12QPaintEngine12drawTextItemERK7QPointFRK9QTextItem'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='480' u='c' c='_ZN15QPainterPrivate20drawOpaqueBackgroundERK12QPainterPathNS_13DrawOperationE'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='481' u='c' c='_ZN15QPainterPrivate20drawOpaqueBackgroundERK12QPainterPathNS_13DrawOperationE'/>
<def f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='3099' ll='3127' type='void QPainter::fillPath(const QPainterPath &amp; path, const QBrush &amp; brush)'/>
<doc f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='3089'>/*!
    Fills the given \a path using the given \a brush. The outline is
    not drawn.

    Alternatively, you can specify a QColor instead of a QBrush; the
    QBrush constructor (taking a QColor argument) will automatically
    create a solid pattern brush.

    \sa drawPath()
*/</doc>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicswidget.cpp' l='2272' u='c' c='_ZN15QGraphicsWidget16paintWindowFrameEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/styles/qstylesheetstyle.cpp' l='1391' u='c' c='_ZN11QRenderRule14drawBackgroundEP8QPainterRK5QRectRK6QPoint'/>
