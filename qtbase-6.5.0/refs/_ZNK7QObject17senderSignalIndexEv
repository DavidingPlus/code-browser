<dec f='qtbase-6.5.0/src/corelib/kernel/qobject.h' l='388' type='int QObject::senderSignalIndex() const'/>
<def f='qtbase-6.5.0/src/corelib/kernel/qobject.cpp' l='2578' ll='2595' type='int QObject::senderSignalIndex() const'/>
<doc f='qtbase-6.5.0/src/corelib/kernel/qobject.cpp' l='2553'>/*!
    \since 4.8

    Returns the meta-method index of the signal that called the currently
    executing slot, which is a member of the class returned by sender().
    If called outside of a slot activated by a signal, -1 is returned.

    For signals with default parameters, this function will always return
    the index with all parameters, regardless of which was used with
    connect(). For example, the signal \c {destroyed(QObject *obj = \nullptr)}
    will have two different indexes (with and without the parameter), but
    this function will always return the index with a parameter. This does
    not apply when overloading signals with different parameters.

    \warning This function violates the object-oriented principle of
    modularity. However, getting access to the signal index might be useful
    when many signals are connected to a single slot.

    \warning The return value of this function is not valid when the slot
    is called via a Qt::DirectConnection from a thread different from this
    object&apos;s thread. Do not use this function in this type of scenario.

    \sa sender(), QMetaObject::indexOfSignal(), QMetaObject::method()
*/</doc>
<use f='qtbase-6.5.0/src/dbus/qdbusabstractadaptor.cpp' l='247' u='c' c='_ZN21QDBusAdaptorConnector9relaySlotE19QMethodRawArguments'/>
