<dec f='qtbase-6.5.0/src/corelib/thread/qfuturewatcher.h' l='38' type='bool QFutureWatcherBase::isPaused() const'/>
<def f='qtbase-6.5.0/src/corelib/thread/qfuturewatcher.cpp' l='336' ll='342' type='bool QFutureWatcherBase::isPaused() const'/>
<doc f='qtbase-6.5.0/src/corelib/thread/qfuturewatcher.cpp' l='322'>/*! \fn template &lt;typename T&gt; bool QFutureWatcher&lt;T&gt;::isPaused() const

    \deprecated [6.0] Use isSuspending() or isSuspended() instead.

    Returns \c true if the asynchronous computation has been paused with the
    pause() function; otherwise returns \c false.

    Be aware that the computation may still be running even though this
    function returns \c true. See setPaused() for more details. To check
    if pause actually took effect, use isSuspended() instead.

    \sa setSuspended(), toggleSuspended(), isSuspended()
*/</doc>
