<def f='qtbase-6.5.0/src/dbus/qdbusconnectioninterface.h' l='38' ll='42'/>
<use f='qtbase-6.5.0/src/dbus/qdbusconnectioninterface.h' l='43' c='_Z20qt_getEnumMetaObjectN24QDBusConnectionInterface19ServiceQueueOptionsE'/>
<use f='qtbase-6.5.0/src/dbus/qdbusconnectioninterface.h' l='43' c='_Z14qt_getEnumNameN24QDBusConnectionInterface19ServiceQueueOptionsE'/>
<use f='qtbase-6.5.0/src/dbus/qdbusconnectioninterface.h' l='63' c='_ZN24QDBusConnectionInterface15registerServiceERK7QStringNS_19ServiceQueueOptionsENS_25ServiceReplacementOptionsE'/>
<use f='qtbase-6.5.0/src/dbus/qdbusconnectioninterface.cpp' l='234' c='_ZN24QDBusConnectionInterface15registerServiceERK7QStringNS_19ServiceQueueOptionsENS_25ServiceReplacementOptionsE'/>
<doc f='qtbase-6.5.0/src/dbus/qdbusconnectioninterface.cpp' l='50'>/*!
    \enum QDBusConnectionInterface::ServiceQueueOptions

    Flags for determining how a service registration should behave, in
    case the service name is already registered.

    \value DontQueueService     If an application requests a name that
                                is already owned, no queueing will be
                                performed. The registeredService()
                                call will simply fail.
                                This is the default.

    \value QueueService         Attempts to register the requested
                                service, but do not try to replace it
                                if another application already has it
                                registered. Instead, simply put this
                                application in queue, until it is
                                given up. The serviceRegistered()
                                signal will be emitted when that
                                happens.

    \value ReplaceExistingService If another application already has
                                the service name registered, attempt
                                to replace it.

    \sa ServiceReplacementOptions
*/</doc>
