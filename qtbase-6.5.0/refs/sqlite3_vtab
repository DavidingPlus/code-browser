<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='7357'/>
<def f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='7696' ll='7701'/>
<size>24</size>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='7678'>/*
** CAPI3REF: Virtual Table Instance Object
** KEYWORDS: sqlite3_vtab
**
** Every [virtual table module] implementation uses a subclass
** of this object to describe a particular instance
** of the [virtual table].  Each subclass will
** be tailored to the specific needs of the module implementation.
** The purpose of this superclass is to define certain fields that are
** common to all module implementations.
**
** ^Virtual tables methods can set an error message by assigning a
** string obtained from [sqlite3_mprintf()] to zErrMsg.  The method should
** take care that any prior string is freed by a call to [sqlite3_free()]
** prior to assigning a new string to zErrMsg.  ^After the error message
** is delivered up to the client application, the string will be automatically
** freed by sqlite3_free() and the zErrMsg field will be zeroed.
*/</doc>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='7051'/>
<def f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='7390' ll='7395'/>
<size>24</size>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='7372'>/*
** CAPI3REF: Virtual Table Instance Object
** KEYWORDS: sqlite3_vtab
**
** Every [virtual table module] implementation uses a subclass
** of this object to describe a particular instance
** of the [virtual table].  Each subclass will
** be tailored to the specific needs of the module implementation.
** The purpose of this superclass is to define certain fields that are
** common to all module implementations.
**
** ^Virtual tables methods can set an error message by assigning a
** string obtained from [sqlite3_mprintf()] to zErrMsg.  The method should
** take care that any prior string is freed by a call to [sqlite3_free()]
** prior to assigning a new string to zErrMsg.  ^After the error message
** is delivered up to the client application, the string will be automatically
** freed by sqlite3_free() and the zErrMsg field will be zeroed.
*/</doc>
<mbr r='sqlite3_vtab::pModule' o='0' t='const sqlite3_module *'/>
<mbr r='sqlite3_vtab::nRef' o='64' t='int'/>
<mbr r='sqlite3_vtab::zErrMsg' o='128' t='char *'/>
