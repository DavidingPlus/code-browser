<def f='include/freetype2/freetype/freetype.h' l='2123' ll='2134'/>
<use f='include/freetype2/freetype/freetype.h' l='2123'/>
<size>64</size>
<doc f='include/freetype2/freetype/freetype.h' l='2060'>/**************************************************************************
   *
   * @struct:
   *   FT_Open_Args
   *
   * @description:
   *   A structure to indicate how to open a new font file or stream.  A
   *   pointer to such a structure can be used as a parameter for the
   *   functions @FT_Open_Face and @FT_Attach_Stream.
   *
   * @fields:
   *   flags ::
   *     A set of bit flags indicating how to use the structure.
   *
   *   memory_base ::
   *     The first byte of the file in memory.
   *
   *   memory_size ::
   *     The size in bytes of the file in memory.
   *
   *   pathname ::
   *     A pointer to an 8-bit file pathname.
   *
   *   stream ::
   *     A handle to a source stream object.
   *
   *   driver ::
   *     This field is exclusively used by @FT_Open_Face; it simply specifies
   *     the font driver to use for opening the face.  If set to `NULL`,
   *     FreeType tries to load the face with each one of the drivers in its
   *     list.
   *
   *   num_params ::
   *     The number of extra parameters.
   *
   *   params ::
   *     Extra parameters passed to the font driver when opening a new face.
   *
   * @note:
   *   The stream type is determined by the contents of `flags` that are
   *   tested in the following order by @FT_Open_Face:
   *
   *   If the @FT_OPEN_MEMORY bit is set, assume that this is a memory file
   *   of `memory_size` bytes, located at `memory_address`.  The data are not
   *   copied, and the client is responsible for releasing and destroying
   *   them _after_ the corresponding call to @FT_Done_Face.
   *
   *   Otherwise, if the @FT_OPEN_STREAM bit is set, assume that a custom
   *   input stream `stream` is used.
   *
   *   Otherwise, if the @FT_OPEN_PATHNAME bit is set, assume that this is a
   *   normal file and use `pathname` to open it.
   *
   *   If the @FT_OPEN_DRIVER bit is set, @FT_Open_Face only tries to open
   *   the file with the driver whose handler is in `driver`.
   *
   *   If the @FT_OPEN_PARAMS bit is set, the parameters given by
   *   `num_params` and `params` is used.  They are ignored otherwise.
   *
   *   Ideally, both the `pathname` and `params` fields should be tagged as
   *   &apos;const&apos;; this is missing for API backward compatibility.  In other
   *   words, applications should treat them as read-only.
   */</doc>
<mbr r='FT_Open_Args_::flags' o='0' t='FT_UInt'/>
<mbr r='FT_Open_Args_::memory_base' o='64' t='const FT_Byte *'/>
<mbr r='FT_Open_Args_::memory_size' o='128' t='FT_Long'/>
<mbr r='FT_Open_Args_::pathname' o='192' t='FT_String *'/>
<mbr r='FT_Open_Args_::stream' o='256' t='FT_Stream'/>
<mbr r='FT_Open_Args_::driver' o='320' t='FT_Module'/>
<mbr r='FT_Open_Args_::num_params' o='384' t='FT_Int'/>
<mbr r='FT_Open_Args_::params' o='448' t='FT_Parameter *'/>
