<use f='qtbase-6.5.0/src/gui/kernel/qopenglcontext.h' l='128'/>
<use f='qtbase-6.5.0/src/opengl/qopenglframebufferobject.h' l='120'/>
<inh f='qtbase-6.5.0/src/gui/painting/qpaintdevice.h' l='17' c='QPaintDevice'/>
<def f='qtbase-6.5.0/src/opengl/qopenglpaintdevice.h' l='19' ll='53'/>
<use f='qtbase-6.5.0/src/opengl/qopenglpaintdevice.h' l='51' c='_ZN18QOpenGLPaintDeviceC1ERKS_'/>
<use f='qtbase-6.5.0/src/opengl/qopenglpaintdevice.h' l='51' c='_ZN18QOpenGLPaintDeviceaSERKS_'/>
<use f='qtbase-6.5.0/src/opengl/qopenglpaintdevice.h' l='51' c='_ZN18QOpenGLPaintDeviceaSERKS_'/>
<size>24</size>
<fun r='_ZN18QOpenGLPaintDevice6d_funcEv'/>
<fun r='_ZNK18QOpenGLPaintDevice6d_funcEv'/>
<fun r='_ZN18QOpenGLPaintDeviceC1Ev'/>
<fun r='_ZN18QOpenGLPaintDeviceC1ERK5QSize'/>
<fun r='_ZN18QOpenGLPaintDeviceC1Eii'/>
<fun r='_ZN18QOpenGLPaintDeviceD1Ev'/>
<fun r='_ZNK18QOpenGLPaintDevice7devTypeEv'/>
<fun r='_ZNK18QOpenGLPaintDevice11paintEngineEv'/>
<fun r='_ZNK18QOpenGLPaintDevice7contextEv'/>
<fun r='_ZNK18QOpenGLPaintDevice4sizeEv'/>
<fun r='_ZN18QOpenGLPaintDevice7setSizeERK5QSize'/>
<fun r='_ZN18QOpenGLPaintDevice19setDevicePixelRatioEd'/>
<fun r='_ZNK18QOpenGLPaintDevice13dotsPerMeterXEv'/>
<fun r='_ZNK18QOpenGLPaintDevice13dotsPerMeterYEv'/>
<fun r='_ZN18QOpenGLPaintDevice16setDotsPerMeterXEd'/>
<fun r='_ZN18QOpenGLPaintDevice16setDotsPerMeterYEd'/>
<fun r='_ZN18QOpenGLPaintDevice15setPaintFlippedEb'/>
<fun r='_ZNK18QOpenGLPaintDevice12paintFlippedEv'/>
<fun r='_ZN18QOpenGLPaintDevice18ensureActiveTargetEv'/>
<fun r='_ZN18QOpenGLPaintDeviceC1ER25QOpenGLPaintDevicePrivate'/>
<fun r='_ZNK18QOpenGLPaintDevice6metricEN12QPaintDevice17PaintDeviceMetricE'/>
<fun r='_ZN18QOpenGLPaintDeviceC1ERKS_'/>
<mbr r='QOpenGLPaintDevice::d_ptr' o='128' t='QScopedPointer&lt;QOpenGLPaintDevicePrivate&gt;'/>
<use f='qtbase-6.5.0/src/opengl/qopenglpaintengine_p.h' l='244'/>
<size>24</size>
<use f='qtbase-6.5.0/src/opengl/qopenglpaintdevice_p.h' l='32' c='_ZN25QOpenGLPaintDevicePrivate3getEP18QOpenGLPaintDevice'/>
<use f='qtbase-6.5.0/src/opengl/qopenglpaintdevice.cpp' l='104' c='_ZN18QOpenGLPaintDeviceC1Eii'/>
<size>24</size>
<doc f='qtbase-6.5.0/src/opengl/qopenglpaintdevice.cpp' l='21'>/*!
    \class QOpenGLPaintDevice
    \brief The QOpenGLPaintDevice class enables painting to an OpenGL context using QPainter.
    \since 5.0
    \inmodule QtOpenGL

    \ingroup painting-3D

    The QOpenGLPaintDevice uses the \b current QOpenGL context to render
    QPainter draw commands. The context is captured upon construction. It
    requires support for OpenGL (ES) 2.0 or higher.

    \section1 Performance

    The QOpenGLPaintDevice is almost always hardware accelerated and
    has the potential of being much faster than software
    rasterization. However, it is more sensitive to state changes, and
    therefore requires the drawing commands to be carefully ordered to
    achieve optimal performance.

    \section1 Antialiasing and Quality

    Antialiasing in the OpenGL paint engine is done using
    multisampling. Most hardware require significantly more memory to
    do multisampling and the resulting quality is not on par with the
    quality of the software paint engine. The OpenGL paint engine&apos;s
    strength lies in its performance, not its visual rendering
    quality.

    \section1 State Changes

    When painting to a QOpenGLPaintDevice using QPainter, the state of
    the current OpenGL context will be altered by the paint engine to
    reflect its needs.  Applications should not rely upon the OpenGL
    state being reset to its original conditions, particularly the
    current shader program, OpenGL viewport, texture units, and
    drawing modes.

    \section1 Mixing QPainter and OpenGL

    When intermixing QPainter and OpenGL, it is important to notify
    QPainter that the OpenGL state may have been cluttered so it can
    restore its internal state. This is achieved by calling \l
    QPainter::beginNativePainting() before starting the OpenGL
    rendering and calling \l QPainter::endNativePainting() after
    finishing.

    \sa {OpenGL Window Example}

*/</doc>
<fun r='_ZN18QOpenGLPaintDeviceC1Ev'/>
<fun r='_ZN18QOpenGLPaintDeviceC1ERK5QSize'/>
<fun r='_ZN18QOpenGLPaintDeviceC1Eii'/>
<fun r='_ZN18QOpenGLPaintDeviceC1ER25QOpenGLPaintDevicePrivate'/>
<fun r='_ZN18QOpenGLPaintDeviceD1Ev'/>
<fun r='_ZNK18QOpenGLPaintDevice11paintEngineEv'/>
<fun r='_ZNK18QOpenGLPaintDevice7contextEv'/>
<fun r='_ZNK18QOpenGLPaintDevice4sizeEv'/>
<fun r='_ZN18QOpenGLPaintDevice7setSizeERK5QSize'/>
<fun r='_ZN18QOpenGLPaintDevice19setDevicePixelRatioEd'/>
<fun r='_ZNK18QOpenGLPaintDevice6metricEN12QPaintDevice17PaintDeviceMetricE'/>
<fun r='_ZNK18QOpenGLPaintDevice13dotsPerMeterXEv'/>
<fun r='_ZNK18QOpenGLPaintDevice13dotsPerMeterYEv'/>
<fun r='_ZN18QOpenGLPaintDevice16setDotsPerMeterXEd'/>
<fun r='_ZN18QOpenGLPaintDevice16setDotsPerMeterYEd'/>
<fun r='_ZN18QOpenGLPaintDevice15setPaintFlippedEb'/>
<fun r='_ZNK18QOpenGLPaintDevice12paintFlippedEv'/>
<fun r='_ZN18QOpenGLPaintDevice18ensureActiveTargetEv'/>
<use f='qtbase-6.5.0/src/opengl/qopenglpaintengine.cpp' l='2166' c='_ZN21QOpenGL2PaintEngineEx5beginEP12QPaintDevice'/>
<size>24</size>
<ovr f='qtbase-6.5.0/src/opengl/qopenglwindow.cpp' l='128' c='QOpenGLWindowPaintDevice'/>
<use f='qtbase-6.5.0/src/opengl/qopenglwindow.cpp' l='128'/>
<size>24</size>
<ovr f='qtbase-6.5.0/src/openglwidgets/qopenglwidget.cpp' l='524' c='QOpenGLWidgetPaintDevice'/>
<use f='qtbase-6.5.0/src/openglwidgets/qopenglwidget.cpp' l='524'/>
<use f='qtbase-6.5.0/src/openglwidgets/qopenglwidget.cpp' l='528' c='_ZN24QOpenGLWidgetPaintDeviceC1EP13QOpenGLWidget'/>
<use f='qtbase-6.5.0/src/openglwidgets/qopenglwidget.cpp' l='575'/>
<size>24</size>
<use f='qtbase-6.5.0/src/plugins/platforms/minimalegl/qminimaleglbackingstore.h' l='30'/>
<use f='qtbase-6.5.0/src/plugins/platforms/minimalegl/qminimaleglbackingstore.cpp' l='46' c='_ZN23QMinimalEglBackingStore10beginPaintERK7QRegion'/>
<size>24</size>
