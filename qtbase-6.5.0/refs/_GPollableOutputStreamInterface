<use f='include/glib-2.0/gio/gpollableoutputstream.h' l='42'/>
<def f='include/glib-2.0/gio/gpollableoutputstream.h' l='74' ll='93'/>
<size>56</size>
<doc f='include/glib-2.0/gio/gpollableoutputstream.h' l='44'>/**
 * GPollableOutputStreamInterface:
 * @g_iface: The parent interface.
 * @can_poll: Checks if the #GPollableOutputStream instance is actually pollable
 * @is_writable: Checks if the stream is writable
 * @create_source: Creates a #GSource to poll the stream
 * @write_nonblocking: Does a non-blocking write or returns
 *   %G_IO_ERROR_WOULD_BLOCK
 * @writev_nonblocking: Does a vectored non-blocking write, or returns
 *   %G_POLLABLE_RETURN_WOULD_BLOCK
 *
 * The interface for pollable output streams.
 *
 * The default implementation of @can_poll always returns %TRUE.
 *
 * The default implementation of @write_nonblocking calls
 * g_pollable_output_stream_is_writable(), and then calls
 * g_output_stream_write() if it returns %TRUE. This means you only
 * need to override it if it is possible that your @is_writable
 * implementation may return %TRUE when the stream is not actually
 * writable.
 *
 * The default implementation of @writev_nonblocking calls
 * g_pollable_output_stream_write_nonblocking() for each vector, and converts
 * its return value and error (if set) to a #GPollableReturn. You should
 * override this where possible to avoid having to allocate a #GError to return
 * %G_IO_ERROR_WOULD_BLOCK.
 *
 * Since: 2.28
 */</doc>
<mbr r='_GPollableOutputStreamInterface::g_iface' o='0' t='GTypeInterface'/>
<mbr r='_GPollableOutputStreamInterface::can_poll' o='128' t='gboolean (*)(GPollableOutputStream *)'/>
<mbr r='_GPollableOutputStreamInterface::is_writable' o='192' t='gboolean (*)(GPollableOutputStream *)'/>
<mbr r='_GPollableOutputStreamInterface::create_source' o='256' t='GSource *(*)(GPollableOutputStream *, GCancellable *)'/>
<mbr r='_GPollableOutputStreamInterface::write_nonblocking' o='320' t='gssize (*)(GPollableOutputStream *, const void *, gsize, GError **)'/>
<mbr r='_GPollableOutputStreamInterface::writev_nonblocking' o='384' t='GPollableReturn (*)(GPollableOutputStream *, const GOutputVector *, gsize, gsize *, GError **)'/>
