<dec f='qtbase-6.5.0/src/gui/kernel/qplatformsharedgraphicscache.h' l='60' type='void QPlatformSharedGraphicsCache::itemsUpdated(const QByteArray &amp; cacheId, void * bufferId, const QList&lt;quint32&gt; &amp; itemIds, const QList&lt;QPoint&gt; &amp; positionsInBuffer)'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qplatformsharedgraphicscache.cpp' l='145'>/*!
    \fn void QPlatformSharedGraphicsCache::itemsUpdated(const QByteArray &amp;cacheId, void *bufferId, const QList&lt;quint32&gt; &amp;itemIds, const QList&lt;QPoint&gt; &amp;positionsInBuffer)

    This signal is similar in usage to the itemsAvailable() signal, but will be emitted when
    the location of a previously requested or inserted item has been updated. The application
    must update its data for the respective items and release any references to old buffers held
    by the items.

    If the application no longer holds any references to previously referenced items in a given
    cache, it should call releaseItems() for these items, at which point it will no longer receive
    any itemsUpdated() signal for these items.

    \sa requestItems(), insertItems(), itemsAvailable()
*/</doc>
