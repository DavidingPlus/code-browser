<dec f='qtbase-6.5.0/src/widgets/widgets/qtextbrowser.h' l='40' type='QVariant QTextBrowser::loadResource(int type, const QUrl &amp; name)'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextbrowser.cpp' l='285' u='c' c='_ZN19QTextBrowserPrivate9setSourceERK4QUrlN13QTextDocument12ResourceTypeE'/>
<inh f='qtbase-6.5.0/src/widgets/widgets/qtextedit.h' l='145' c='_ZN9QTextEdit12loadResourceEiRK4QUrl'/>
<def f='qtbase-6.5.0/src/widgets/widgets/qtextbrowser.cpp' l='1129' ll='1146' type='QVariant QTextBrowser::loadResource(int , const QUrl &amp; name)'/>
<doc f='qtbase-6.5.0/src/widgets/widgets/qtextbrowser.cpp' l='1104'>/*!
    This function is called when the document is loaded and for
    each image in the document. The \a type indicates the type of resource
    to be loaded. An invalid QVariant is returned if the resource cannot be
    loaded.

    The default implementation ignores \a type and tries to locate
    the resources by interpreting \a name as a file name. If it is
    not an absolute path it tries to find the file in the paths of
    the \l searchPaths property and in the same directory as the
    current source. On success, the result is a QVariant that stores
    a QByteArray with the contents of the file.

    If you reimplement this function, you can return other QVariant
    types. The table below shows which variant types are supported
    depending on the resource type:

    \table
    \header \li ResourceType  \li QMetaType::Type
    \row    \li QTextDocument::HtmlResource  \li QString or QByteArray
    \row    \li QTextDocument::ImageResource \li QImage, QPixmap or QByteArray
    \row    \li QTextDocument::StyleSheetResource \li QString or QByteArray
    \row    \li QTextDocument::MarkdownResource \li QString or QByteArray
    \endtable
*/</doc>
<doc f='qtbase-6.5.0/src/widgets/widgets/qtextbrowser.cpp' l='1129'>/*type*/</doc>
