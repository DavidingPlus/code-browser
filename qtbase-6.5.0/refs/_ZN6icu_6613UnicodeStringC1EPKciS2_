<dec f='include/unicode/unistr.h' l='3229' type='void icu_66::UnicodeString::UnicodeString(const char * codepageData, int32_t dataLength, const char * codepage)'/>
<doc f='include/unicode/unistr.h' l='3212'>/**
   * char* constructor.
   * @param codepageData an array of bytes.
   * @param dataLength The number of bytes in `codepageData`.
   * @param codepage the encoding of `codepageData`.  The special
   * value 0 for `codepage` indicates that the text is in the
   * platform&apos;s default codepage.
   * If `codepage` is an empty string (`&quot;&quot;`),
   * then a simple conversion is performed on the codepage-invariant
   * subset (&quot;invariant characters&quot;) of the platform encoding. See utypes.h.
   * Recommendation: For invariant-character strings use the constructor
   * UnicodeString(const char *src, int32_t length, enum EInvariant inv)
   * because it avoids object code dependencies of UnicodeString on
   * the conversion code.
   *
   * @stable ICU 2.0
   */</doc>
