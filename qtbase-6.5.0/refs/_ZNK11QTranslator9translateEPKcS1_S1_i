<dec f='qtbase-6.5.0/src/corelib/kernel/qtranslator.h' l='25' type='QString QTranslator::translate(const char * context, const char * sourceText, const char * disambiguation = nullptr, int n = -1) const'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qtranslator.cpp' l='1015' u='c' c='_ZNK18QTranslatorPrivate12do_translateEPKcS1_S1_i'/>
<def f='qtbase-6.5.0/src/corelib/kernel/qtranslator.cpp' l='1082' ll='1087' type='QString QTranslator::translate(const char * context, const char * sourceText, const char * disambiguation = nullptr, int n = -1) const'/>
<doc f='qtbase-6.5.0/src/corelib/kernel/qtranslator.cpp' l='1064'>/*!
    Returns the translation for the key (\a context, \a sourceText,
    \a disambiguation). If none is found, also tries (\a context, \a
    sourceText, &quot;&quot;). If that still fails, returns a null string.

    \note Incomplete translations may result in unexpected behavior:
    If no translation for (\a context, \a sourceText, &quot;&quot;)
    is provided, the method might in this case actually return a
    translation for a different \a disambiguation.

    If \a n is not -1, it is used to choose an appropriate form for
    the translation (e.g. &quot;%n file found&quot; vs. &quot;%n files found&quot;).

    If you need to programmatically insert translations into a
    QTranslator, this function can be reimplemented.

    \sa load()
*/</doc>
