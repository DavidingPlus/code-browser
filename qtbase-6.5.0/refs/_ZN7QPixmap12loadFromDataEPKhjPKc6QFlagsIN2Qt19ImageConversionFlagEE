<dec f='qtbase-6.5.0/src/gui/image/qpixmap.h' l='97' type='bool QPixmap::loadFromData(const uchar * buf, uint len, const char * format = nullptr, Qt::ImageConversionFlags flags = Qt::AutoColor)'/>
<use f='qtbase-6.5.0/src/gui/image/qpixmap.h' l='166' u='c' c='_ZN7QPixmap12loadFromDataERK10QByteArrayPKc6QFlagsIN2Qt19ImageConversionFlagEE'/>
<def f='qtbase-6.5.0/src/gui/image/qpixmap.cpp' l='765' ll='779' type='bool QPixmap::loadFromData(const uchar * buf, uint len, const char * format = nullptr, Qt::ImageConversionFlags flags = Qt::AutoColor)'/>
<doc f='qtbase-6.5.0/src/gui/image/qpixmap.cpp' l='746'>/*!
    \fn bool QPixmap::loadFromData(const uchar *data, uint len, const char *format, Qt::ImageConversionFlags flags)

    Loads a pixmap from the \a len first bytes of the given binary \a
    data.  Returns \c true if the pixmap was loaded successfully;
    otherwise invalidates the pixmap and returns \c false.

    The loader attempts to read the pixmap using the specified \a
    format. If the \a format is not specified (which is the default),
    the loader probes the file for a header to guess the file format.

    If the data needs to be modified to fit in a lower-resolution
    result (e.g. converting from 32-bit to 8-bit), use the \a flags to
    control the conversion.

    \sa load(), {QPixmap#Reading and Writing Image Files}{Reading and
    Writing Image Files}
*/</doc>
