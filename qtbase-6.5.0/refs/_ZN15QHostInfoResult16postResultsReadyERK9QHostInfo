<dec f='qtbase-6.5.0/src/network/kernel/qhostinfo_p.h' l='56' type='void QHostInfoResult::postResultsReady(const QHostInfo &amp; info)'/>
<def f='qtbase-6.5.0/src/network/kernel/qhostinfo.cpp' l='86' ll='123' type='void QHostInfoResult::postResultsReady(const QHostInfo &amp; info)'/>
<use f='qtbase-6.5.0/src/network/kernel/qhostinfo.cpp' l='772' u='c' c='_ZN9QHostInfo14lookupHostImplERK7QStringPK7QObjectPN9QtPrivate15QSlotObjectBaseEPKc'/>
<use f='qtbase-6.5.0/src/network/kernel/qhostinfo.cpp' l='805' u='c' c='_ZN9QHostInfo14lookupHostImplERK7QStringPK7QObjectPN9QtPrivate15QSlotObjectBaseEPKc'/>
<use f='qtbase-6.5.0/src/network/kernel/qhostinfo.cpp' l='862' u='c' c='_ZN17QHostInfoRunnable3runEv'/>
<use f='qtbase-6.5.0/src/network/kernel/qhostinfo.cpp' l='875' u='c' c='_ZN17QHostInfoRunnable3runEv'/>
<doc f='qtbase-6.5.0/src/network/kernel/qhostinfo.cpp' l='75'>/*
    The calling thread is likely the one that executes the lookup via
    QHostInfoRunnable. Unless we operate with a queued connection already,
    posts the QHostInfo to a dedicated QHostInfoResult object that lives in
    the same thread as the user-provided receiver, or (if there is none) in
    the thread that made the call to lookupHost. That QHostInfoResult object
    then calls the user code in the correct thread.

    The &apos;result&apos; object deletes itself (via deleteLater) when the metacall
    event is received.
*/</doc>
