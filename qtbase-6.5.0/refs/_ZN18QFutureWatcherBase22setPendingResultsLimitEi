<dec f='qtbase-6.5.0/src/corelib/thread/qfuturewatcher.h' l='45' type='void QFutureWatcherBase::setPendingResultsLimit(int limit)'/>
<def f='qtbase-6.5.0/src/corelib/thread/qfuturewatcher.cpp' l='406' ll='410' type='void QFutureWatcherBase::setPendingResultsLimit(int limit)'/>
<doc f='qtbase-6.5.0/src/corelib/thread/qfuturewatcher.cpp' l='398'>/*! \fn template &lt;typename T&gt; void QFutureWatcher&lt;T&gt;::setPendingResultsLimit(int limit)

    The setPendingResultsLimit() provides throttling control. When the number
    of pending resultReadyAt() or resultsReadyAt() signals exceeds the
    \a limit, the computation represented by the future will be throttled
    automatically. The computation will resume once the number of pending
    signals drops below the \a limit.
*/</doc>
