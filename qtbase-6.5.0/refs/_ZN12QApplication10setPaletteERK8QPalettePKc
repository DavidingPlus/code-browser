<dec f='qtbase-6.5.0/src/widgets/kernel/qapplication.h' l='62' type='static void QApplication::setPalette(const QPalette &amp; , const char * className = nullptr)'/>
<def f='qtbase-6.5.0/src/widgets/kernel/qapplication.cpp' l='1171' ll='1187' type='static void QApplication::setPalette(const QPalette &amp; palette, const char * className = nullptr)'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qapplication.cpp' l='1249' u='c' c='_ZN19QApplicationPrivate33initializeWidgetPalettesFromThemeEv'/>
<doc f='qtbase-6.5.0/src/widgets/kernel/qapplication.cpp' l='1149'>/*!
    Changes the application palette to \a palette.

    If \a className is passed, the change applies only to widgets that inherit
    \a className (as reported by QObject::inherits()). If \a className is left
    0, the change affects all widgets, thus overriding any previously set class
    specific palettes.

    The palette may be changed according to the current GUI style in
    QStyle::polish().

    \warning Do not use this function in conjunction with \l{Qt Style Sheets}.
    When using style sheets, the palette of a widget can be customized using
    the &quot;color&quot;, &quot;background-color&quot;, &quot;selection-color&quot;,
    &quot;selection-background-color&quot; and &quot;alternate-background-color&quot;.

    \note Some styles do not use the palette for all drawing, for instance, if
    they make use of native theme engines. This is the case for the
    Windows Vista and \macos styles.

    \sa QWidget::setPalette(), palette(), QStyle::polish()
*/</doc>
