<dec f='qtbase-6.5.0/src/gui/kernel/qinputdevice.h' l='75' type='QRect QInputDevice::availableVirtualGeometry() const'/>
<use f='qtbase-6.5.0/src/gui/kernel/qeventpoint.cpp' l='427' u='c' c='_ZNK11QEventPoint18normalizedPositionEv'/>
<use f='qtbase-6.5.0/src/gui/kernel/qeventpoint.cpp' l='444' u='c' c='_ZNK11QEventPoint18startNormalizedPosEv'/>
<use f='qtbase-6.5.0/src/gui/kernel/qeventpoint.cpp' l='466' u='c' c='_ZNK11QEventPoint17lastNormalizedPosEv'/>
<def f='qtbase-6.5.0/src/gui/kernel/qinputdevice.cpp' l='162' ll='166' type='QRect QInputDevice::availableVirtualGeometry() const'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qinputdevice.cpp' l='145'>/*!
    Returns the region within the \l{QScreen::availableVirtualGeometry}{virtual desktop}
    that this device can access.

    For example a \l {QInputDevice::DeviceType}{TouchScreen} input
    device is fixed in place upon a single physical screen, and usually
    calibrated so that this area is the same as QScreen::geometry(); whereas a
    \l {QInputDevice::DeviceType}{Mouse} can probably access all screens
    on the virtual desktop. A Wacom graphics tablet may be configured in a way
    that it&apos;s mapped to all screens, or only to the screen where the user
    prefers to create drawings, or to the window in which drawing occurs.
    A \l {QInputDevice::DeviceType}{Stylus} device that is integrated
    with a touchscreen may be physically limited to that screen.

    If the returned rectangle is \l {QRect::isNull()}{null}, it means this device
    can access the entire virtual desktop.
*/</doc>
