<dec f='qtbase-6.5.0/src/sql/kernel/qsqldatabase.h' l='59' type='void QSqlDatabase::setDatabaseName(const QString &amp; name)'/>
<def f='qtbase-6.5.0/src/sql/kernel/qsqldatabase.cpp' l='874' ll='878' type='void QSqlDatabase::setDatabaseName(const QString &amp; name)'/>
<doc f='qtbase-6.5.0/src/sql/kernel/qsqldatabase.cpp' l='838'>/*!
    Sets the connection&apos;s database name to \a name. To have effect,
    the database name must be set \e{before} the connection is
    \l{open()} {opened}.  Alternatively, you can close() the
    connection, set the database name, and call open() again.  \note
    The \e{database name} is not the \e{connection name}. The
    connection name must be passed to addDatabase() at connection
    object create time.

    For the QSQLITE driver, if the database name specified does not
    exist, then it will create the file for you unless the
    QSQLITE_OPEN_READONLY option is set.

    Additionally, \a name can be set to \c &quot;:memory:&quot; which will
    create a temporary database which is only available for the
    lifetime of the application.

    For the QOCI (Oracle) driver, the database name is the TNS
    Service Name.

    For the QODBC driver, the \a name can either be a DSN, a DSN
    filename (in which case the file must have a \c .dsn extension),
    or a connection string.

    For example, Microsoft Access users can use the following
    connection string to open an \c .mdb file directly, instead of
    having to create a DSN entry in the ODBC manager:

    \snippet code/src_sql_kernel_qsqldatabase.cpp 3

    There is no default value.

    \sa databaseName(), setUserName(), setPassword(), setHostName(),
        setPort(), setConnectOptions(), open()
*/</doc>
