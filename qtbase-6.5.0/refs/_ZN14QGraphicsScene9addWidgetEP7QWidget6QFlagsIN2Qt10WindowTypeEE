<dec f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsscene.h' l='142' type='QGraphicsProxyWidget * QGraphicsScene::addWidget(QWidget * widget, Qt::WindowFlags wFlags = Qt::WindowFlags())'/>
<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsscene.cpp' l='2799' ll='2805' type='QGraphicsProxyWidget * QGraphicsScene::addWidget(QWidget * widget, Qt::WindowFlags wFlags = Qt::WindowFlags())'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsscene.cpp' l='2781'>/*!
    Creates a new QGraphicsProxyWidget for \a widget, adds it to the scene,
    and returns a pointer to the proxy. \a wFlags set the default window flags
    for the embedding proxy widget.

    The item&apos;s position is initialized to (0, 0).

    If the item is visible (i.e., QGraphicsItem::isVisible() returns \c true),
    QGraphicsScene will emit changed() once control goes back to the event
    loop.

    Note that widgets with the Qt::WA_PaintOnScreen widget attribute
    set and widgets that wrap an external application or controller
    are not supported. Examples are QOpenGLWidget and QAxWidget.

    \sa addEllipse(), addLine(), addPixmap(), addPixmap(), addRect(),
    addText(), addSimpleText(), addItem()
*/</doc>
