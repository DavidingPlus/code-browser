<def f='qtbase-6.5.0/src/gui/image/qimageiohandler.h' l='23' ll='95'/>
<use f='qtbase-6.5.0/src/gui/image/qimageiohandler.h' l='94' c='_ZN15QImageIOHandlerC1ERKS_'/>
<use f='qtbase-6.5.0/src/gui/image/qimageiohandler.h' l='94' c='_ZN15QImageIOHandleraSERKS_'/>
<use f='qtbase-6.5.0/src/gui/image/qimageiohandler.h' l='94' c='_ZN15QImageIOHandleraSERKS_'/>
<use f='qtbase-6.5.0/src/gui/image/qimageiohandler.h' l='116' c='_ZNK14QImageIOPlugin6createEP9QIODeviceRK10QByteArray'/>
<size>16</size>
<fun r='_ZN15QImageIOHandler6d_funcEv'/>
<fun r='_ZNK15QImageIOHandler6d_funcEv'/>
<fun r='_ZN15QImageIOHandlerC1Ev'/>
<fun r='_ZN15QImageIOHandlerD1Ev'/>
<fun r='_ZN15QImageIOHandler9setDeviceEP9QIODevice'/>
<fun r='_ZNK15QImageIOHandler6deviceEv'/>
<fun r='_ZN15QImageIOHandler9setFormatERK10QByteArray'/>
<fun r='_ZNK15QImageIOHandler9setFormatERK10QByteArray'/>
<fun r='_ZNK15QImageIOHandler6formatEv'/>
<fun r='_ZNK15QImageIOHandler7canReadEv'/>
<fun r='_ZN15QImageIOHandler4readEP6QImage'/>
<fun r='_ZN15QImageIOHandler5writeERK6QImage'/>
<fun r='_ZNK15QImageIOHandler6optionENS_11ImageOptionE'/>
<fun r='_ZN15QImageIOHandler9setOptionENS_11ImageOptionERK8QVariant'/>
<fun r='_ZNK15QImageIOHandler14supportsOptionENS_11ImageOptionE'/>
<fun r='_ZN15QImageIOHandler15jumpToNextImageEv'/>
<fun r='_ZN15QImageIOHandler11jumpToImageEi'/>
<fun r='_ZNK15QImageIOHandler9loopCountEv'/>
<fun r='_ZNK15QImageIOHandler10imageCountEv'/>
<fun r='_ZNK15QImageIOHandler14nextImageDelayEv'/>
<fun r='_ZNK15QImageIOHandler18currentImageNumberEv'/>
<fun r='_ZNK15QImageIOHandler16currentImageRectEv'/>
<fun r='_ZN15QImageIOHandler13allocateImageE5QSizeN6QImage6FormatEPS1_'/>
<fun r='_ZN15QImageIOHandlerC1ER22QImageIOHandlerPrivate'/>
<mbr r='QImageIOHandler::d_ptr' o='64' t='QScopedPointer&lt;QImageIOHandlerPrivate&gt;'/>
<fun r='_ZN15QImageIOHandlerC1ERKS_'/>
<ovr f='qtbase-6.5.0/src/gui/image/qbmphandler_p.h' l='67' c='QBmpHandler'/>
<use f='qtbase-6.5.0/src/gui/image/qbmphandler_p.h' l='67'/>
<size>16</size>
<use f='qtbase-6.5.0/src/gui/image/qimageiohandler.cpp' l='243' c='_ZN22QImageIOHandlerPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/gui/image/qimageiohandler.cpp' l='243' c='_ZN22QImageIOHandlerPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/gui/image/qimageiohandler.cpp' l='243' c='_ZNK22QImageIOHandlerPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/gui/image/qimageiohandler.cpp' l='243' c='_ZNK22QImageIOHandlerPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/gui/image/qimageiohandler.cpp' l='243'/>
<use f='qtbase-6.5.0/src/gui/image/qimageiohandler.cpp' l='245' c='_ZN22QImageIOHandlerPrivateC1EP15QImageIOHandler'/>
<use f='qtbase-6.5.0/src/gui/image/qimageiohandler.cpp' l='251'/>
<use f='qtbase-6.5.0/src/gui/image/qimageiohandler.cpp' l='254' c='_ZN22QImageIOHandlerPrivateC1EP15QImageIOHandler'/>
<size>16</size>
<doc f='qtbase-6.5.0/src/gui/image/qimageiohandler.cpp' l='4'>/*!
    \class QImageIOHandler
    \brief The QImageIOHandler class defines the common image I/O
    interface for all image formats in Qt.
    \reentrant
    \inmodule QtGui

    Qt uses QImageIOHandler for reading and writing images through
    QImageReader and QImageWriter. You can also derive from this class
    to write your own image format handler using Qt&apos;s plugin mechanism.

    Call setDevice() to assign a device to the handler, and
    setFormat() to assign a format to it. One QImageIOHandler may
    support more than one image format. canRead() returns \c true if an
    image can be read from the device, and read() and write() return
    true if reading or writing an image was completed successfully.

    QImageIOHandler also has support for animations formats, through
    the functions loopCount(), imageCount(), nextImageDelay() and
    currentImageNumber().

    In order to determine what options an image handler supports, Qt
    will call supportsOption() and setOption(). Make sure to
    reimplement these functions if you can provide support for any of
    the options in the ImageOption enum.

    To write your own image handler, you must at least reimplement
    canRead() and read(). Then create a QImageIOPlugin that
    can create the handler. Finally, install your plugin, and
    QImageReader and QImageWriter will then automatically load the
    plugin, and start using it.

    \sa QImageIOPlugin, QImageReader, QImageWriter
*/</doc>
<fun r='_ZN15QImageIOHandlerC1Ev'/>
<fun r='_ZN15QImageIOHandlerC1ER22QImageIOHandlerPrivate'/>
<fun r='_ZN15QImageIOHandlerD1Ev'/>
<fun r='_ZN15QImageIOHandler9setDeviceEP9QIODevice'/>
<fun r='_ZNK15QImageIOHandler6deviceEv'/>
<fun r='_ZN15QImageIOHandler9setFormatERK10QByteArray'/>
<fun r='_ZNK15QImageIOHandler9setFormatERK10QByteArray'/>
<fun r='_ZNK15QImageIOHandler6formatEv'/>
<fun r='_ZN15QImageIOHandler5writeERK6QImage'/>
<fun r='_ZN15QImageIOHandler9setOptionENS_11ImageOptionERK8QVariant'/>
<fun r='_ZNK15QImageIOHandler6optionENS_11ImageOptionE'/>
<fun r='_ZNK15QImageIOHandler14supportsOptionENS_11ImageOptionE'/>
<fun r='_ZNK15QImageIOHandler18currentImageNumberEv'/>
<fun r='_ZNK15QImageIOHandler16currentImageRectEv'/>
<fun r='_ZNK15QImageIOHandler10imageCountEv'/>
<fun r='_ZN15QImageIOHandler15jumpToNextImageEv'/>
<fun r='_ZN15QImageIOHandler11jumpToImageEi'/>
<fun r='_ZNK15QImageIOHandler9loopCountEv'/>
<fun r='_ZNK15QImageIOHandler14nextImageDelayEv'/>
<fun r='_ZN15QImageIOHandler13allocateImageE5QSizeN6QImage6FormatEPS1_'/>
<ovr f='qtbase-6.5.0/src/gui/image/qppmhandler_p.h' l='26' c='QPpmHandler'/>
<use f='qtbase-6.5.0/src/gui/image/qppmhandler_p.h' l='26'/>
<ovr f='qtbase-6.5.0/src/gui/image/qxbmhandler_p.h' l='25' c='QXbmHandler'/>
<use f='qtbase-6.5.0/src/gui/image/qxbmhandler_p.h' l='25'/>
<ovr f='qtbase-6.5.0/src/gui/image/qxpmhandler_p.h' l='25' c='QXpmHandler'/>
<use f='qtbase-6.5.0/src/gui/image/qxpmhandler_p.h' l='25'/>
<ovr f='qtbase-6.5.0/src/gui/image/qpnghandler_p.h' l='26' c='QPngHandler'/>
<use f='qtbase-6.5.0/src/gui/image/qpnghandler_p.h' l='26'/>
<use f='qtbase-6.5.0/src/gui/image/qimagereader.cpp' l='143' c='_ZL23createReadHandlerHelperP9QIODeviceRK10QByteArraybb'/>
<use f='qtbase-6.5.0/src/gui/image/qimagereader.cpp' l='152' c='_ZL23createReadHandlerHelperP9QIODeviceRK10QByteArraybb'/>
<use f='qtbase-6.5.0/src/gui/image/qimagereader.cpp' l='441'/>
<use f='qtbase-6.5.0/src/gui/image/qimagereader.cpp' l='1473' c='_ZN12QImageReader11imageFormatEP9QIODevice'/>
<size>16</size>
<use f='qtbase-6.5.0/src/gui/image/qimagewriter.cpp' l='101' c='_ZL24createWriteHandlerHelperP9QIODeviceRK10QByteArray'/>
<use f='qtbase-6.5.0/src/gui/image/qimagewriter.cpp' l='106' c='_ZL24createWriteHandlerHelperP9QIODeviceRK10QByteArray'/>
<use f='qtbase-6.5.0/src/gui/image/qimagewriter.cpp' l='212'/>
<size>16</size>
<ovr f='qtbase-6.5.0/src/plugins/imageformats/gif/qgifhandler_p.h' l='25' c='QGifHandler'/>
<use f='qtbase-6.5.0/src/plugins/imageformats/gif/qgifhandler_p.h' l='25'/>
<use f='qtbase-6.5.0/src/plugins/imageformats/gif/main.cpp' l='23' c='_ZNK10QGifPlugin6createEP9QIODeviceRK10QByteArray'/>
<use f='qtbase-6.5.0/src/plugins/imageformats/gif/main.cpp' l='41' c='_ZNK10QGifPlugin6createEP9QIODeviceRK10QByteArray'/>
<use f='qtbase-6.5.0/src/plugins/imageformats/gif/main.cpp' l='43' c='_ZNK10QGifPlugin6createEP9QIODeviceRK10QByteArray'/>
<size>16</size>
<ovr f='qtbase-6.5.0/src/plugins/imageformats/ico/qicohandler.h' l='11' c='QtIcoHandler'/>
<use f='qtbase-6.5.0/src/plugins/imageformats/ico/qicohandler.h' l='11'/>
<use f='qtbase-6.5.0/src/plugins/imageformats/ico/main.cpp' l='20' c='_ZNK10QICOPlugin6createEP9QIODeviceRK10QByteArray'/>
<use f='qtbase-6.5.0/src/plugins/imageformats/ico/main.cpp' l='40' c='_ZNK10QICOPlugin6createEP9QIODeviceRK10QByteArray'/>
<use f='qtbase-6.5.0/src/plugins/imageformats/ico/main.cpp' l='42' c='_ZNK10QICOPlugin6createEP9QIODeviceRK10QByteArray'/>
<size>16</size>
<ovr f='qtbase-6.5.0/src/plugins/imageformats/jpeg/qjpeghandler_p.h' l='25' c='QJpegHandler'/>
<use f='qtbase-6.5.0/src/plugins/imageformats/jpeg/qjpeghandler_p.h' l='25'/>
<use f='qtbase-6.5.0/src/plugins/imageformats/jpeg/main.cpp' l='20' c='_ZNK11QJpegPlugin6createEP9QIODeviceRK10QByteArray'/>
<use f='qtbase-6.5.0/src/plugins/imageformats/jpeg/main.cpp' l='40' c='_ZNK11QJpegPlugin6createEP9QIODeviceRK10QByteArray'/>
<use f='qtbase-6.5.0/src/plugins/imageformats/jpeg/main.cpp' l='42' c='_ZNK11QJpegPlugin6createEP9QIODeviceRK10QByteArray'/>
<size>16</size>
