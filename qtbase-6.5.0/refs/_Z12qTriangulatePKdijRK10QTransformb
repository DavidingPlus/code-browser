<dec f='qtbase-6.5.0/src/gui/painting/qtriangulator_p.h' l='85' type='QTriangleSet qTriangulate(const qreal * polygon, int count, uint hint = QVectorPath::PolygonHint | QVectorPath::OddEvenFill, const QTransform &amp; matrix = QTransform(), bool allowUintIndices = true)'/>
<def f='qtbase-6.5.0/src/gui/painting/qtriangulator.cpp' l='2218' ll='2238' macro='1' type='QTriangleSet qTriangulate(const qreal * polygon, int count, uint hint = QVectorPath::PolygonHint | QVectorPath::OddEvenFill, const QTransform &amp; matrix = QTransform(), bool allowUintIndices = true)'/>
<doc f='qtbase-6.5.0/src/gui/painting/qtriangulator_p.h' l='80'>// The vertex coordinates of the returned triangle set will be rounded to a grid with a mesh size
// of 1/32. The polygon is first transformed, then scaled by 32, the coordinates are rounded to
// integers, the polygon is triangulated, and then scaled back by 1/32.
// &apos;hint&apos; should be a combination of QVectorPath::Hints.
// &apos;lod&apos; is the level of detail. Default is 1. Curves are split into more lines when &apos;lod&apos; is higher.</doc>
