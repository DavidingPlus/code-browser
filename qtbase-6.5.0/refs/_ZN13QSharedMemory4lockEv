<dec f='qtbase-6.5.0/src/corelib/kernel/qsharedmemory.h' l='68' type='bool QSharedMemory::lock()'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qsharedmemory_p.h' l='69' u='c' c='_ZN19QSharedMemoryLocker4lockEv'/>
<def f='qtbase-6.5.0/src/corelib/kernel/qsharedmemory.cpp' l='615' ll='630' type='bool QSharedMemory::lock()'/>
<doc f='qtbase-6.5.0/src/corelib/kernel/qsharedmemory.cpp' l='604'>/*!
  This is a semaphore that locks the shared memory segment for access
  by this process and returns \c true. If another process has locked the
  segment, this function blocks until the lock is released. Then it
  acquires the lock and returns \c true. If this function returns \c false,
  it means that you have ignored a false return from create() or attach(),
  that you have set the key with setNativeKey() or that
  QSystemSemaphore::acquire() failed due to an unknown system error.

  \sa unlock(), data(), QSystemSemaphore::acquire()
 */</doc>
