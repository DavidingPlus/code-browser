<dec f='qtbase-6.5.0/src/widgets/dialogs/qfiledialog.h' l='200' type='static QStringList QFileDialog::getOpenFileNames(QWidget * parent = nullptr, const QString &amp; caption = QString(), const QString &amp; dir = QString(), const QString &amp; filter = QString(), QString * selectedFilter = nullptr, QFileDialog::Options options = QFileDialog::Options())'/>
<def f='qtbase-6.5.0/src/widgets/dialogs/qfiledialog.cpp' l='2182' ll='2197' type='static QStringList QFileDialog::getOpenFileNames(QWidget * parent = nullptr, const QString &amp; caption = QString(), const QString &amp; dir = QString(), const QString &amp; filter = QString(), QString * selectedFilter = nullptr, QFileDialog::Options options = QFileDialog::Options())'/>
<doc f='qtbase-6.5.0/src/widgets/dialogs/qfiledialog.cpp' l='2139'>/*!
    This is a convenience static function that will return one or more existing
    files selected by the user.

    \snippet code/src_gui_dialogs_qfiledialog.cpp 9

    This function creates a modal file dialog with the given \a parent widget.
    If \a parent is not \nullptr, the dialog will be shown centered over the
    parent widget.

    The file dialog&apos;s working directory will be set to \a dir. If \a dir
    includes a file name, the file will be selected. The filter is set to
    \a filter so that only those files which match the filter are shown. The
    filter selected is set to \a selectedFilter. The parameters \a dir,
    \a selectedFilter and \a filter may be empty strings. If you need multiple
    filters, separate them with &apos;;;&apos;, for instance:

    \snippet code/src_gui_dialogs_qfiledialog.cpp 14

    The dialog&apos;s caption is set to \a caption. If \a caption is not specified
    then a default caption will be used.

    On Windows, and \macos, this static function will use the
    native file dialog and not a QFileDialog. Note that the \macos native file
    dialog does not show a title bar.

    On Windows the dialog will spin a blocking modal event loop that will not
    dispatch any QTimers, and if \a parent is not \nullptr then it will position
    the dialog just below the parent&apos;s title bar.

    On Unix/X11, the normal behavior of the file dialog is to resolve and
    follow symlinks. For example, if \c{/usr/tmp} is a symlink to \c{/var/tmp},
    the file dialog will change to \c{/var/tmp} after entering \c{/usr/tmp}.
    The \a options argument holds various options about how to run the dialog,
    see the QFileDialog::Option enum for more information on the flags you can
    pass.

    \warning Do not delete \a parent during the execution of the dialog. If you
    want to do this, you should create the dialog yourself using one of the
    QFileDialog constructors.

    \sa getOpenFileName(), getSaveFileName(), getExistingDirectory()
*/</doc>
