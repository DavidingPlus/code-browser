<dec f='qtbase-6.5.0/src/opengl/qopenglvertexarrayobject.h' l='26' type='bool QOpenGLVertexArrayObject::create()'/>
<use f='qtbase-6.5.0/src/opengl/qopenglvertexarrayobject.h' l='40' u='c' c='_ZN24QOpenGLVertexArrayObject6BinderC1EPS_'/>
<use f='qtbase-6.5.0/src/opengl/qopenglpaintengine.cpp' l='2203' u='c' c='_ZN21QOpenGL2PaintEngineEx5beginEP12QPaintDevice'/>
<use f='qtbase-6.5.0/src/opengl/qopengltextureglyphcache.cpp' l='139' u='c' c='_ZN24QOpenGLTextureGlyphCache17createTextureDataEii'/>
<def f='qtbase-6.5.0/src/opengl/qopenglvertexarrayobject.cpp' l='397' ll='401' type='bool QOpenGLVertexArrayObject::create()'/>
<doc f='qtbase-6.5.0/src/opengl/qopenglvertexarrayobject.cpp' l='381'>/*!
    Creates the underlying OpenGL vertex array object. There must be a valid OpenGL context
    that supports vertex array objects current for this function to succeed.

    Returns \c true if the OpenGL vertex array object was successfully created.

    When the return value is \c false, vertex array object support is not available. This
    is not an error: on systems with OpenGL 2.x or OpenGL ES 2.0 vertex array objects may
    not be supported. The application is free to continue execution in this case, but it
    then has to be prepared to operate in a VAO-less manner too. This means that instead
    of merely calling bind(), the value of isCreated() must be checked and the vertex
    arrays has to be initialized in the traditional way when there is no vertex array
    object present.

    \sa isCreated()
*/</doc>
