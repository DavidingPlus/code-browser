<dec f='qtbase-6.5.0/src/corelib/thread/qreadwritelock.h' l='28' type='void QReadWriteLock::lockForWrite()'/>
<use f='qtbase-6.5.0/src/corelib/thread/qreadwritelock.h' l='114' u='c' c='_ZN12QWriteLocker6relockEv'/>
<def f='qtbase-6.5.0/src/corelib/thread/qreadwritelock.cpp' l='261' ll='264' type='void QReadWriteLock::lockForWrite()'/>
<doc f='qtbase-6.5.0/src/corelib/thread/qreadwritelock.cpp' l='250'>/*!
    Locks the lock for writing. This function will block the current
    thread if another thread (including the current) has locked for
    reading or writing (unless the lock has been created using the
    \l{QReadWriteLock::Recursive} mode).

    It is not possible to lock for write if the thread already has
    locked for read.

    \sa unlock(), lockForRead(), tryLockForWrite()
*/</doc>
<use f='qtbase-6.5.0/src/corelib/thread/qwaitcondition_unix.cpp' l='218' u='c' c='_ZN14QWaitCondition4waitEP14QReadWriteLock14QDeadlineTimer'/>
<use f='qtbase-6.5.0/src/dbus/qdbusthreaddebug_p.h' l='120' u='c' c='_ZN16QDBusWriteLockerC1E12ThreadActionP22QDBusConnectionPrivate'/>
