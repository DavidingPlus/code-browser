<def f='qtbase-6.5.0/src/xml/dom/qdom.h' l='72'/>
<use f='qtbase-6.5.0/src/xml/dom/qdom.h' l='73' c='_ZN18QDomImplementation17invalidDataPolicyEv'/>
<use f='qtbase-6.5.0/src/xml/dom/qdom.h' l='74' c='_ZN18QDomImplementation20setInvalidDataPolicyENS_17InvalidDataPolicyE'/>
<use f='qtbase-6.5.0/src/xml/dom/qdom_p.h' l='40'/>
<use f='qtbase-6.5.0/src/xml/dom/qdom.cpp' l='93'/>
<use f='qtbase-6.5.0/src/xml/dom/qdom.cpp' l='576' c='_ZN18QDomImplementation17invalidDataPolicyEv'/>
<use f='qtbase-6.5.0/src/xml/dom/qdom.cpp' l='596' c='_ZN18QDomImplementation20setInvalidDataPolicyENS_17InvalidDataPolicyE'/>
<doc f='qtbase-6.5.0/src/xml/dom/qdom.cpp' l='538'>/*!
    \enum QDomImplementation::InvalidDataPolicy

    This enum specifies what should be done when a factory function
    in QDomDocument is called with invalid data.
    \value AcceptInvalidChars The data should be stored in the DOM object
        anyway. In this case the resulting XML document might not be well-formed.
        This is the default value and QDom&apos;s behavior in Qt &lt; 4.1.
    \value DropInvalidChars The invalid characters should be removed from
        the data.
    \value ReturnNullNode The factory function should return a null node.

    \sa setInvalidDataPolicy(), invalidDataPolicy()
*/</doc>
