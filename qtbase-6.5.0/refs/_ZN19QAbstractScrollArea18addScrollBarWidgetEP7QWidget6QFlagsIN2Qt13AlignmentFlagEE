<dec f='qtbase-6.5.0/src/widgets/widgets/qabstractscrollarea.h' l='53' type='void QAbstractScrollArea::addScrollBarWidget(QWidget * widget, Qt::Alignment alignment)'/>
<def f='qtbase-6.5.0/src/widgets/widgets/qabstractscrollarea.cpp' l='764' ll='780' type='void QAbstractScrollArea::addScrollBarWidget(QWidget * widget, Qt::Alignment alignment)'/>
<doc f='qtbase-6.5.0/src/widgets/widgets/qabstractscrollarea.cpp' l='732'>/*!
    \since 4.2
    Adds \a widget as a scroll bar widget in the location specified
    by \a alignment.

    Scroll bar widgets are shown next to the horizontal or vertical
    scroll bar, and can be placed on either side of it. If you want
    the scroll bar widgets to be always visible, set the
    scrollBarPolicy for the corresponding scroll bar to \c AlwaysOn.

    \a alignment must be one of Qt::Alignleft and Qt::AlignRight,
    which maps to the horizontal scroll bar, or Qt::AlignTop and
    Qt::AlignBottom, which maps to the vertical scroll bar.

    A scroll bar widget can be removed by either re-parenting the
    widget or deleting it. It&apos;s also possible to hide a widget with
    QWidget::hide()

    The scroll bar widget will be resized to fit the scroll bar
    geometry for the current style. The following describes the case
    for scroll bar widgets on the horizontal scroll bar:

    The height of the widget will be set to match the height of the
    scroll bar. To control the width of the widget, use
    QWidget::setMinimumWidth and QWidget::setMaximumWidth, or
    implement QWidget::sizeHint() and set a horizontal size policy.
    If you want a square widget, call
    QStyle::pixelMetric(QStyle::PM_ScrollBarExtent) and set the
    width to this value.

    \sa scrollBarWidgets()
*/</doc>
