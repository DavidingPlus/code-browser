<def f='qtbase-6.5.0/src/network/access/qnetworkrequest.h' l='23' ll='37'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkrequest.h' l='117' c='_ZNK15QNetworkRequest6headerENS_12KnownHeadersE'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkrequest.h' l='118' c='_ZN15QNetworkRequest9setHeaderENS_12KnownHeadersERK8QVariant'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreply.h' l='97' c='_ZNK13QNetworkReply6headerEN15QNetworkRequest12KnownHeadersE'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreply.h' l='147' c='_ZN13QNetworkReply9setHeaderEN15QNetworkRequest12KnownHeadersERK8QVariant'/>
<use f='qtbase-6.5.0/src/network/kernel/qnetworkproxy.h' l='139' c='_ZNK13QNetworkProxy6headerEN15QNetworkRequest12KnownHeadersE'/>
<use f='qtbase-6.5.0/src/network/kernel/qnetworkproxy.h' l='140' c='_ZN13QNetworkProxy9setHeaderEN15QNetworkRequest12KnownHeadersERK8QVariant'/>
<use f='qtbase-6.5.0/src/network/access/qhttpmultipart.h' l='38' c='_ZN9QHttpPart9setHeaderEN15QNetworkRequest12KnownHeadersERK8QVariant'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkrequest_p.h' l='35'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkrequest_p.h' l='48' c='_ZN22QNetworkHeadersPrivate15setCookedHeaderEN15QNetworkRequest12KnownHeadersERK8QVariant'/>
<use f='qtbase-6.5.0/src/network/access/qhttpmultipart.cpp' l='123' c='_ZN9QHttpPart9setHeaderEN15QNetworkRequest12KnownHeadersERK8QVariant'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessbackend_p.h' l='103' c='_ZNK21QNetworkAccessBackend6headerEN15QNetworkRequest12KnownHeadersE'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessbackend_p.h' l='104' c='_ZN21QNetworkAccessBackend9setHeaderEN15QNetworkRequest12KnownHeadersERK8QVariant'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessbackend.cpp' l='526' c='_ZNK21QNetworkAccessBackend6headerEN15QNetworkRequest12KnownHeadersE'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessbackend.cpp' l='539' c='_ZN21QNetworkAccessBackend9setHeaderEN15QNetworkRequest12KnownHeadersERK8QVariant'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyfileimpl_p.h' l='65' c='_Z27qRegisterNormalizedMetaTypeRK10QByteArray'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyfileimpl_p.h' l='65'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyfileimpl_p.h' l='65'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyfileimpl_p.h' l='65' c='_ZN11QMetaTypeIdIN15QNetworkRequest12KnownHeadersEE14qt_metatype_idEv'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyfileimpl_p.h' l='65' c='_ZN11QMetaTypeIdIN15QNetworkRequest12KnownHeadersEE14qt_metatype_idEv'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyfileimpl_p.h' l='65' c='_ZN11QMetaTypeIdIN15QNetworkRequest12KnownHeadersEE14qt_metatype_idEv'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkfile_p.h' l='38' c='_ZN12QNetworkFile10headerReadEN15QNetworkRequest12KnownHeadersERK8QVariant'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreply.cpp' l='605' c='_ZNK13QNetworkReply6headerEN15QNetworkRequest12KnownHeadersE'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreply.cpp' l='896' c='_ZN13QNetworkReply9setHeaderEN15QNetworkRequest12KnownHeadersERK8QVariant'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyfileimpl.cpp' l='18' c='_Z57qRegisterNormalizedMetaType_QNetworkRequest__KnownHeadersRK10QByteArray'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyfileimpl.cpp' l='23' c='_ZN28QNetworkReplyFileImplPrivateC1Ev'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkrequest.cpp' l='598' c='_ZNK15QNetworkRequest6headerENS_12KnownHeadersE'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkrequest.cpp' l='610' c='_ZN15QNetworkRequest9setHeaderENS_12KnownHeadersERK8QVariant'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkrequest.cpp' l='1010' c='_ZL10headerNameN15QNetworkRequest12KnownHeadersE'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkrequest.cpp' l='1059' c='_ZL11headerValueN15QNetworkRequest12KnownHeadersERK8QVariant'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkrequest.cpp' l='1266' c='_ZL16parseHeaderValueN15QNetworkRequest12KnownHeadersERK10QByteArray'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkrequest.cpp' l='1375' c='_ZN22QNetworkHeadersPrivate15setCookedHeaderEN15QNetworkRequest12KnownHeadersERK8QVariant'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkrequest.cpp' l='1422' c='_ZN22QNetworkHeadersPrivate17parseAndSetHeaderERK10QByteArrayS2_'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkrequest.cpp' l='1423' c='_ZN22QNetworkHeadersPrivate17parseAndSetHeaderERK10QByteArrayS2_'/>
<doc f='qtbase-6.5.0/src/network/access/qnetworkrequest.cpp' l='52'>/*!
    \enum QNetworkRequest::KnownHeaders

    List of known header types that QNetworkRequest parses. Each known
    header is also represented in raw form with its full HTTP name.

    \value ContentDispositionHeader  Corresponds to the HTTP
    Content-Disposition header and contains a string containing the
    disposition type (for instance, attachment) and a parameter (for
    instance, filename).

    \value ContentTypeHeader    Corresponds to the HTTP Content-Type
    header and contains a string containing the media (MIME) type and
    any auxiliary data (for instance, charset).

    \value ContentLengthHeader  Corresponds to the HTTP Content-Length
    header and contains the length in bytes of the data transmitted.

    \value LocationHeader       Corresponds to the HTTP Location
    header and contains a URL representing the actual location of the
    data, including the destination URL in case of redirections.

    \value LastModifiedHeader   Corresponds to the HTTP Last-Modified
    header and contains a QDateTime representing the last modification
    date of the contents.

    \value IfModifiedSinceHeader   Corresponds to the HTTP If-Modified-Since
    header and contains a QDateTime. It is usually added to a
    QNetworkRequest. The server shall send a 304 (Not Modified) response
    if the resource has not changed since this time.

    \value ETagHeader              Corresponds to the HTTP ETag
    header and contains a QString representing the last modification
    state of the contents.

    \value IfMatchHeader           Corresponds to the HTTP If-Match
    header and contains a QStringList. It is usually added to a
    QNetworkRequest. The server shall send a 412 (Precondition Failed)
    response if the resource does not match.

    \value IfNoneMatchHeader       Corresponds to the HTTP If-None-Match
    header and contains a QStringList. It is usually added to a
    QNetworkRequest. The server shall send a 304 (Not Modified) response
    if the resource does match.

    \value CookieHeader         Corresponds to the HTTP Cookie header
    and contains a QList&lt;QNetworkCookie&gt; representing the cookies to
    be sent back to the server.

    \value SetCookieHeader      Corresponds to the HTTP Set-Cookie
    header and contains a QList&lt;QNetworkCookie&gt; representing the
    cookies sent by the server to be stored locally.

    \value UserAgentHeader      The User-Agent header sent by HTTP clients.

    \value ServerHeader         The Server header received by HTTP clients.

    \sa header(), setHeader(), rawHeader(), setRawHeader()
*/</doc>
<use f='qtbase-6.5.0/src/network/kernel/qnetworkproxy.cpp' l='762' c='_ZNK13QNetworkProxy6headerEN15QNetworkRequest12KnownHeadersE'/>
<use f='qtbase-6.5.0/src/network/kernel/qnetworkproxy.cpp' l='780' c='_ZN13QNetworkProxy9setHeaderEN15QNetworkRequest12KnownHeadersERK8QVariant'/>
