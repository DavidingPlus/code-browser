<dec f='qtbase-6.5.0/src/widgets/widgets/qdatetimeedit.h' l='93' type='void QDateTimeEdit::setDateRange(QDate min, QDate max)'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qdatetimeedit.cpp' l='241' u='c' c='_ZN13QDateTimeEdit11setDateTimeERK9QDateTime'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qdatetimeedit.cpp' l='269' u='c' c='_ZN13QDateTimeEdit7setDateE5QDate'/>
<def f='qtbase-6.5.0/src/widgets/widgets/qdatetimeedit.cpp' l='621' ll='628' type='void QDateTimeEdit::setDateRange(QDate min, QDate max)'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qdatetimeedit.cpp' l='940' u='c' c='_ZN13QDateTimeEdit16setDisplayFormatERK7QString'/>
<doc f='qtbase-6.5.0/src/widgets/widgets/qdatetimeedit.cpp' l='595'>/*!
  \brief Set the range of allowed dates for the date time edit.

  This convenience function sets the \l minimumDate and \l maximumDate
  properties.

  \snippet code/src_gui_widgets_qdatetimeedit.cpp 3

  is analogous to:

  \snippet code/src_gui_widgets_qdatetimeedit.cpp 4

  If either \a min or \a max is invalid, this function does nothing. This
  function preserves the \l minimumTime property. If \a max is less than \a min,
  the new maximumDateTime property shall be the new minimumDateTime property. If
  \a max is equal to \a min and the \l maximumTime property was less then the \l
  minimumTime property, the \l maximumTime property is set to the \l minimumTime
  property. Otherwise, this preserves the \l maximumTime property.

  If the range is narrower then a time interval whose end it spans, for example
  a week that spans the end of a month, users can only edit the date to one in
  the later part of the range if keyboard-tracking is disabled.

  \sa minimumDate, maximumDate, setDateTimeRange(), QDate::isValid(), {Keyboard Tracking}
*/</doc>
