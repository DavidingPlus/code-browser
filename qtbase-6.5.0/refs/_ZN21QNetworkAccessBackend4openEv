<dec f='qtbase-6.5.0/src/network/access/qnetworkaccessbackend_p.h' l='84' type='void QNetworkAccessBackend::open()'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessbackend.cpp' l='309' u='c' c='_ZN21QNetworkAccessBackend5startEv'/>
<doc f='qtbase-6.5.0/src/network/access/qnetworkaccessbackend.cpp' l='313'>/*!
    \fn void QNetworkAccessBackend::open() = 0

    You must implement this in your derived class.
    During this call you must open the connection and begin the request
    (see: request()).

    As the connection progresses you must call the various public and
    protected slots on QNetworkAccessBackend. As an example, when you have
    received some data you must call readyRead(). And when all the data has been
    received you must call finished(). This could, for example, be done by
    binding signals inside your own implementation to the slots, or by calling
    them directly.

    \sa close()
*/</doc>
<ovr f='qtbase-6.5.0/src/network/access/qnetworkaccesscachebackend.cpp' l='24' c='_ZN26QNetworkAccessCacheBackend4openEv'/>
<ovr f='qtbase-6.5.0/src/network/access/qnetworkaccessfilebackend.cpp' l='77' c='_ZN25QNetworkAccessFileBackend4openEv'/>
