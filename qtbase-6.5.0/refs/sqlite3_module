<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='7360'/>
<def f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='7378' ll='7414'/>
<size>192</size>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='7362'>/*
** CAPI3REF: Virtual Table Object
** KEYWORDS: sqlite3_module {virtual table module}
**
** This structure, sometimes called a &quot;virtual table module&quot;,
** defines the implementation of a [virtual table].
** This structure consists mostly of methods for the module.
**
** ^A virtual table module is created by filling in a persistent
** instance of this structure and passing a pointer to that instance
** to [sqlite3_create_module()] or [sqlite3_create_module_v2()].
** ^The registration remains valid until it is replaced by a different
** module or until the [database connection] closes.  The content
** of this structure must not change while it is registered with
** any database connection.
*/</doc>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='7054'/>
<def f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='7072' ll='7108'/>
<size>192</size>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='7056'>/*
** CAPI3REF: Virtual Table Object
** KEYWORDS: sqlite3_module {virtual table module}
**
** This structure, sometimes called a &quot;virtual table module&quot;,
** defines the implementation of a [virtual table].
** This structure consists mostly of methods for the module.
**
** ^A virtual table module is created by filling in a persistent
** instance of this structure and passing a pointer to that instance
** to [sqlite3_create_module()] or [sqlite3_create_module_v2()].
** ^The registration remains valid until it is replaced by a different
** module or until the [database connection] closes.  The content
** of this structure must not change while it is registered with
** any database connection.
*/</doc>
<mbr r='sqlite3_module::iVersion' o='0' t='int'/>
<mbr r='sqlite3_module::xCreate' o='64' t='int (*)(sqlite3 *, void *, int, const char *const *, sqlite3_vtab **, char **)'/>
<mbr r='sqlite3_module::xConnect' o='128' t='int (*)(sqlite3 *, void *, int, const char *const *, sqlite3_vtab **, char **)'/>
<mbr r='sqlite3_module::xBestIndex' o='192' t='int (*)(sqlite3_vtab *, sqlite3_index_info *)'/>
<mbr r='sqlite3_module::xDisconnect' o='256' t='int (*)(sqlite3_vtab *)'/>
<mbr r='sqlite3_module::xDestroy' o='320' t='int (*)(sqlite3_vtab *)'/>
<mbr r='sqlite3_module::xOpen' o='384' t='int (*)(sqlite3_vtab *, sqlite3_vtab_cursor **)'/>
<mbr r='sqlite3_module::xClose' o='448' t='int (*)(sqlite3_vtab_cursor *)'/>
<mbr r='sqlite3_module::xFilter' o='512' t='int (*)(sqlite3_vtab_cursor *, int, const char *, int, sqlite3_value **)'/>
<mbr r='sqlite3_module::xNext' o='576' t='int (*)(sqlite3_vtab_cursor *)'/>
<mbr r='sqlite3_module::xEof' o='640' t='int (*)(sqlite3_vtab_cursor *)'/>
<mbr r='sqlite3_module::xColumn' o='704' t='int (*)(sqlite3_vtab_cursor *, sqlite3_context *, int)'/>
<mbr r='sqlite3_module::xRowid' o='768' t='int (*)(sqlite3_vtab_cursor *, sqlite3_int64 *)'/>
<mbr r='sqlite3_module::xUpdate' o='832' t='int (*)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *)'/>
<mbr r='sqlite3_module::xBegin' o='896' t='int (*)(sqlite3_vtab *)'/>
<mbr r='sqlite3_module::xSync' o='960' t='int (*)(sqlite3_vtab *)'/>
<mbr r='sqlite3_module::xCommit' o='1024' t='int (*)(sqlite3_vtab *)'/>
<mbr r='sqlite3_module::xRollback' o='1088' t='int (*)(sqlite3_vtab *)'/>
<mbr r='sqlite3_module::xFindFunction' o='1152' t='int (*)(sqlite3_vtab *, int, const char *, void (**)(sqlite3_context *, int, sqlite3_value **), void **)'/>
<mbr r='sqlite3_module::xRename' o='1216' t='int (*)(sqlite3_vtab *, const char *)'/>
<mbr r='sqlite3_module::xSavepoint' o='1280' t='int (*)(sqlite3_vtab *, int)'/>
<mbr r='sqlite3_module::xRelease' o='1344' t='int (*)(sqlite3_vtab *, int)'/>
<mbr r='sqlite3_module::xRollbackTo' o='1408' t='int (*)(sqlite3_vtab *, int)'/>
<mbr r='sqlite3_module::xShadowName' o='1472' t='int (*)(const char *)'/>
