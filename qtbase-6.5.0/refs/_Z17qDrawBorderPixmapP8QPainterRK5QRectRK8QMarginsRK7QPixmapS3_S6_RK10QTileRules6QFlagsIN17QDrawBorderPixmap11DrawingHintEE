<dec f='qtbase-6.5.0/src/widgets/styles/qdrawutil.h' l='111' type='void qDrawBorderPixmap(QPainter * painter, const QRect &amp; targetRect, const QMargins &amp; targetMargins, const QPixmap &amp; pixmap, const QRect &amp; sourceRect, const QMargins &amp; sourceMargins, const QTileRules &amp; rules = QTileRules(), QDrawBorderPixmap::DrawingHints hints = QDrawBorderPixmap::DrawingHints())'/>
<use f='qtbase-6.5.0/src/widgets/styles/qdrawutil.h' l='128' u='c' c='_Z17qDrawBorderPixmapP8QPainterRK5QRectRK8QMarginsRK7QPixmap'/>
<def f='qtbase-6.5.0/src/widgets/styles/qdrawutil.cpp' l='878' ll='1136' type='void qDrawBorderPixmap(QPainter * painter, const QRect &amp; targetRect, const QMargins &amp; targetMargins, const QPixmap &amp; pixmap, const QRect &amp; sourceRect, const QMargins &amp; sourceMargins, const QTileRules &amp; rules = QTileRules(), QDrawBorderPixmap::DrawingHints hints = QDrawBorderPixmap::DrawingHints())'/>
<doc f='qtbase-6.5.0/src/widgets/styles/qdrawutil.cpp' l='862'>/*!
    \relates &lt;qdrawutil.h&gt;
    \since 4.6

    Draws the indicated \a sourceRect rectangle from the given \a pixmap into
    the given \a targetRect rectangle, using the given \a painter. The pixmap
    will be split into nine segments according to the given \a targetMargins
    and \a sourceMargins structures. Finally, the pixmap will be drawn
    according to the given \a rules.

    This function is used to draw a scaled pixmap, similar to
    \l{http://www.w3.org/TR/css3-background/}{CSS3 border-images}

    \sa Qt::TileRule, QTileRules, QMargins
*/</doc>
<use f='qtbase-6.5.0/src/widgets/styles/qpixmapstyle.cpp' l='1160' u='c' c='_ZN19QPixmapStylePrivate5scaleEiiRK7QPixmapRK22QPixmapStyleDescriptor'/>
<use f='qtbase-6.5.0/src/widgets/styles/qstylesheetstyle.cpp' l='1212' u='c' c='_ZN11QRenderRule15drawBorderImageEP8QPainterRK5QRect'/>
