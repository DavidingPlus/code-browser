<inh f='qtbase-6.5.0/src/corelib/kernel/qobject.h' l='89' c='QObject'/>
<def f='qtbase-6.5.0/src/network/socket/qtcpserver.h' l='21' ll='75'/>
<use f='qtbase-6.5.0/src/network/socket/qtcpserver.h' l='73' c='_ZN10QTcpServerC1ERKS_'/>
<use f='qtbase-6.5.0/src/network/socket/qtcpserver.h' l='73' c='_ZN10QTcpServeraSERKS_'/>
<use f='qtbase-6.5.0/src/network/socket/qtcpserver.h' l='73' c='_ZN10QTcpServeraSERKS_'/>
<use f='qtbase-6.5.0/src/network/socket/qnativesocketengine.cpp' l='345' c='_ZN26QNativeSocketEnginePrivate10checkProxyERK12QHostAddress'/>
<use f='qtbase-6.5.0/src/network/socket/qnativesocketengine.cpp' l='345' c='_ZN26QNativeSocketEnginePrivate10checkProxyERK12QHostAddress'/>
<size>16</size>
<smbr r='QTcpServer::staticMetaObject' t='const QMetaObject'/>
<fun r='_ZNK10QTcpServer10metaObjectEv'/>
<fun r='_ZN10QTcpServer11qt_metacastEPKc'/>
<fun r='_ZN10QTcpServer11qt_metacallEN11QMetaObject4CallEiPPv'/>
<fun r='_ZN10QTcpServer2trEPKcS1_i'/>
<fun r='_ZN10QTcpServer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv'/>
<fun r='_ZN10QTcpServerC1EP7QObject'/>
<fun r='_ZN10QTcpServerD1Ev'/>
<fun r='_ZN10QTcpServer6listenERK12QHostAddresst'/>
<fun r='_ZN10QTcpServer5closeEv'/>
<fun r='_ZNK10QTcpServer11isListeningEv'/>
<fun r='_ZN10QTcpServer24setMaxPendingConnectionsEi'/>
<fun r='_ZNK10QTcpServer21maxPendingConnectionsEv'/>
<fun r='_ZN10QTcpServer20setListenBacklogSizeEi'/>
<fun r='_ZNK10QTcpServer17listenBacklogSizeEv'/>
<fun r='_ZNK10QTcpServer10serverPortEv'/>
<fun r='_ZNK10QTcpServer13serverAddressEv'/>
<fun r='_ZNK10QTcpServer16socketDescriptorEv'/>
<fun r='_ZN10QTcpServer19setSocketDescriptorEx'/>
<fun r='_ZN10QTcpServer20waitForNewConnectionEiPb'/>
<fun r='_ZNK10QTcpServer21hasPendingConnectionsEv'/>
<fun r='_ZN10QTcpServer21nextPendingConnectionEv'/>
<fun r='_ZNK10QTcpServer11serverErrorEv'/>
<fun r='_ZNK10QTcpServer11errorStringEv'/>
<fun r='_ZN10QTcpServer14pauseAcceptingEv'/>
<fun r='_ZN10QTcpServer15resumeAcceptingEv'/>
<fun r='_ZN10QTcpServer8setProxyERK13QNetworkProxy'/>
<fun r='_ZNK10QTcpServer5proxyEv'/>
<fun r='_ZN10QTcpServer18incomingConnectionEx'/>
<fun r='_ZN10QTcpServer20addPendingConnectionEP10QTcpSocket'/>
<fun r='_ZN10QTcpServerC1EN15QAbstractSocket10SocketTypeER17QTcpServerPrivateP7QObject'/>
<fun r='_ZN10QTcpServer13newConnectionEv'/>
<fun r='_ZN10QTcpServer26pendingConnectionAvailableENS_14QPrivateSignalE'/>
<fun r='_ZN10QTcpServer11acceptErrorEN15QAbstractSocket11SocketErrorE'/>
<fun r='_ZN10QTcpServerC1ERKS_'/>
<fun r='_ZN10QTcpServer6d_funcEv'/>
<fun r='_ZNK10QTcpServer6d_funcEv'/>
<use f='qtbase-6.5.0/src/network/socket/qtcpserver_p.h' l='33' c='_ZN17QTcpServerPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/network/socket/qtcpserver_p.h' l='33' c='_ZN17QTcpServerPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/network/socket/qtcpserver_p.h' l='33' c='_ZNK17QTcpServerPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/network/socket/qtcpserver_p.h' l='33' c='_ZNK17QTcpServerPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/network/socket/qtcpserver_p.h' l='33'/>
<use f='qtbase-6.5.0/src/network/socket/qtcpserver.cpp' l='173' c='_ZN17QTcpServerPrivate16readNotificationEv'/>
<use f='qtbase-6.5.0/src/network/socket/qtcpserver.cpp' l='197' c='_ZN17QTcpServerPrivate16readNotificationEv'/>
<size>16</size>
<doc f='qtbase-6.5.0/src/network/socket/qtcpserver.cpp' l='6'>/*! \class QTcpServer

    \brief The QTcpServer class provides a TCP-based server.

    \reentrant
    \ingroup network
    \inmodule QtNetwork

    This class makes it possible to accept incoming TCP connections.
    You can specify the port or have QTcpServer pick one
    automatically. You can listen on a specific address or on all the
    machine&apos;s addresses.

    Call listen() to have the server listen for incoming connections.
    The newConnection() signal is then emitted each time a client
    connects to the server. When the client connection has been added
    to the pending connection queue using the addPendingConnection()
    function, the pendingConnectionAvailable() signal is emitted.

    Call nextPendingConnection() to accept the pending connection as
    a connected QTcpSocket. The function returns a pointer to a
    QTcpSocket in QAbstractSocket::ConnectedState that you can use for
    communicating with the client.

    If an error occurs, serverError() returns the type of error, and
    errorString() can be called to get a human readable description of
    what happened.

    When listening for connections, the address and port on which the
    server is listening are available as serverAddress() and
    serverPort().

    Calling close() makes QTcpServer stop listening for incoming
    connections.

    Although QTcpServer is mostly designed for use with an event
    loop, it&apos;s possible to use it without one. In that case, you must
    use waitForNewConnection(), which blocks until either a
    connection is available or a timeout expires.

    \sa QTcpSocket, {Fortune Server}, {Threaded Fortune Server},
        {Loopback Example}, {Torrent Example}
*/</doc>
<fun r='_ZN10QTcpServerC1EP7QObject'/>
<fun r='_ZN10QTcpServerD1Ev'/>
<fun r='_ZN10QTcpServerC1EN15QAbstractSocket10SocketTypeER17QTcpServerPrivateP7QObject'/>
<fun r='_ZN10QTcpServer6listenERK12QHostAddresst'/>
<fun r='_ZNK10QTcpServer11isListeningEv'/>
<fun r='_ZN10QTcpServer5closeEv'/>
<fun r='_ZNK10QTcpServer16socketDescriptorEv'/>
<fun r='_ZN10QTcpServer19setSocketDescriptorEx'/>
<fun r='_ZNK10QTcpServer10serverPortEv'/>
<fun r='_ZNK10QTcpServer13serverAddressEv'/>
<fun r='_ZN10QTcpServer20waitForNewConnectionEiPb'/>
<fun r='_ZNK10QTcpServer21hasPendingConnectionsEv'/>
<fun r='_ZN10QTcpServer21nextPendingConnectionEv'/>
<fun r='_ZN10QTcpServer18incomingConnectionEx'/>
<fun r='_ZN10QTcpServer20addPendingConnectionEP10QTcpSocket'/>
<fun r='_ZN10QTcpServer24setMaxPendingConnectionsEi'/>
<fun r='_ZNK10QTcpServer21maxPendingConnectionsEv'/>
<fun r='_ZN10QTcpServer20setListenBacklogSizeEi'/>
<fun r='_ZNK10QTcpServer17listenBacklogSizeEv'/>
<fun r='_ZNK10QTcpServer11serverErrorEv'/>
<fun r='_ZNK10QTcpServer11errorStringEv'/>
<fun r='_ZN10QTcpServer14pauseAcceptingEv'/>
<fun r='_ZN10QTcpServer15resumeAcceptingEv'/>
<fun r='_ZN10QTcpServer8setProxyERK13QNetworkProxy'/>
<fun r='_ZNK10QTcpServer5proxyEv'/>
<use f='qtbase-6.5.0/src/plugins/platforms/vnc/qvnc_p.h' l='374'/>
<use f='qtbase-6.5.0/src/plugins/platforms/vnc/qvnc.cpp' l='599' c='_ZN10QVncServer4initEv'/>
<size>16</size>
