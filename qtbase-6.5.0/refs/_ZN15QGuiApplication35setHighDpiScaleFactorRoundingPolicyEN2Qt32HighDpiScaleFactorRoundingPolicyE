<dec f='qtbase-6.5.0/src/gui/kernel/qguiapplication.h' l='128' type='static void QGuiApplication::setHighDpiScaleFactorRoundingPolicy(Qt::HighDpiScaleFactorRoundingPolicy policy)'/>
<def f='qtbase-6.5.0/src/gui/kernel/qguiapplication.cpp' l='3728' ll='3731' type='static void QGuiApplication::setHighDpiScaleFactorRoundingPolicy(Qt::HighDpiScaleFactorRoundingPolicy policy)'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qguiapplication.cpp' l='3704'>/*!
    \since 5.14

    Sets the high-DPI scale factor rounding policy for the application. The
    \a policy decides how non-integer scale factors (such as Windows 150%) are
    handled.

    The two principal options are whether fractional scale factors should
    be rounded to an integer or not. Keeping the scale factor as-is will
    make the user interface size match the OS setting exactly, but may cause
    painting errors, for example with the Windows style.

    If rounding is wanted, then which type of rounding should be decided
    next. Mathematically correct rounding is supported but may not give
    the best visual results: Consider if you want to render 1.5x as 1x
    (&quot;small UI&quot;) or as 2x (&quot;large UI&quot;). See the Qt::HighDpiScaleFactorRoundingPolicy
    enum for a complete list of all options.

    This function must be called before creating the application object.
    The QGuiApplication::highDpiScaleFactorRoundingPolicy()
    accessor will reflect the environment, if set.

    The default value is Qt::HighDpiScaleFactorRoundingPolicy::PassThrough.
*/</doc>
<use f='qtbase-6.5.0/src/gui/kernel/qhighdpiscaling.cpp' l='454' u='c' c='_ZN15QHighDpiScaling18initHighDpiScalingEv'/>
