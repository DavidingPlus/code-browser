<dec f='qtbase-6.5.0/src/corelib/io/qfilesystemwatcher.h' l='27' type='QStringList QFileSystemWatcher::addPaths(const QStringList &amp; files)'/>
<use f='qtbase-6.5.0/src/corelib/io/qfilesystemwatcher.cpp' l='241' u='c' c='_ZN18QFileSystemWatcherC1ERK5QListI7QStringEP7QObject'/>
<use f='qtbase-6.5.0/src/corelib/io/qfilesystemwatcher.cpp' l='280' u='c' c='_ZN18QFileSystemWatcher7addPathERK7QString'/>
<def f='qtbase-6.5.0/src/corelib/io/qfilesystemwatcher.cpp' l='318' ll='360' type='QStringList QFileSystemWatcher::addPaths(const QStringList &amp; paths)'/>
<doc f='qtbase-6.5.0/src/corelib/io/qfilesystemwatcher.cpp' l='295'>/*!
    Adds each path in \a paths to the file system watcher. Paths are
    not added if they not exist, or if they are already being
    monitored by the file system watcher.

    If a path specifies a directory, the directoryChanged() signal
    will be emitted when the path is modified or removed from disk;
    otherwise the fileChanged() signal is emitted when the path is
    modified, renamed, or removed.

    The return value is a list of paths that could not be watched.

    Reasons for a watch failure are generally system-dependent, but
    may include the resource not existing, access failures, or the
    total watch count limit, if the platform has one.

    \note There may be a system dependent limit to the number of
    files and directories that can be monitored simultaneously.
    If this limit has been reached, the excess \a paths will not
    be monitored, and they will be added to the returned QStringList.

    \sa addPath(), removePaths()
*/</doc>
<use f='qtbase-6.5.0/src/gui/itemmodels/qfileinfogatherer.cpp' l='196' u='c' c='_ZN17QFileInfoGatherer10watchPathsERK5QListI7QStringE'/>
