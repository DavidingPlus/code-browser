<dec f='qtbase-6.5.0/src/corelib/serialization/qdatastream.h' l='168' type='void QDataStream::startTransaction()'/>
<def f='qtbase-6.5.0/src/corelib/serialization/qdatastream.cpp' l='597' ll='608' type='void QDataStream::startTransaction()'/>
<doc f='qtbase-6.5.0/src/corelib/serialization/qdatastream.cpp' l='567'>/*!
    \since 5.7

    Starts a new read transaction on the stream.

    Defines a restorable point within the sequence of read operations. For
    sequential devices, read data will be duplicated internally to allow
    recovery in case of incomplete reads. For random-access devices,
    this function saves the current position of the stream. Call
    commitTransaction(), rollbackTransaction(), or abortTransaction() to
    finish the current transaction.

    Once a transaction is started, subsequent calls to this function will make
    the transaction recursive. Inner transactions act as agents of the
    outermost transaction (i.e., report the status of read operations to the
    outermost transaction, which can restore the position of the stream).

    \note Restoring to the point of the nested startTransaction() call is not
    supported.

    When an error occurs during a transaction (including an inner transaction
    failing), reading from the data stream is suspended (all subsequent read
    operations return empty/zero values) and subsequent inner transactions are
    forced to fail. Starting a new outermost transaction recovers from this
    state. This behavior makes it unnecessary to error-check every read
    operation separately.

    \sa commitTransaction(), rollbackTransaction(), abortTransaction()
*/</doc>
