<dec f='qtbase-6.5.0/src/corelib/text/qstringtokenizer.h' l='344'/>
<use f='qtbase-6.5.0/src/corelib/text/qstringtokenizer.h' l='351' u='c'/>
<use f='qtbase-6.5.0/src/corelib/text/qstringtokenizer.h' l='362' u='c'/>
<use f='qtbase-6.5.0/src/corelib/text/qstringtokenizer.h' l='365' u='c'/>
<use f='qtbase-6.5.0/src/corelib/text/qstringtokenizer.h' l='368' u='c'/>
<use f='qtbase-6.5.0/src/corelib/text/qstringtokenizer.h' l='371' u='c'/>
<use f='qtbase-6.5.0/src/corelib/text/qstringtokenizer.h' l='374' u='c'/>
<use f='qtbase-6.5.0/src/corelib/text/qstringtokenizer.h' l='377' u='w'/>
<doc f='qtbase-6.5.0/src/corelib/text/qstringtokenizer.h' l='333'>// This meta function just calculated the template arguments for the
// QStringTokenizer (not -Base), based on the actual arguments passed
// to qTokenize() (or the ctor, with CTAD). It basically detects rvalue
// QString and std::basic_string and otherwise decays the arguments to
// the respective view type.
//
// #define works around a C++ restriction: [temp.deduct.guide]/3 seems
// to ask for the simple-template-id following the `-&gt;` of a deduction
// guide to be identical to the class name for which we guide deduction.
// In particular, Clang rejects a template alias there, while GCC accepts
// it.</doc>
