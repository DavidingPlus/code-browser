<dec f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdhuff.h' l='197'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdhuff.c' l='571' u='c'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdhuff.c' l='602' u='c'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdhuff.c' l='629' u='c'/>
<doc f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdhuff.h' l='180'>/*
 * Code for extracting next Huffman-coded symbol from input bit stream.
 * Again, this is time-critical and we make the main paths be macros.
 *
 * We use a lookahead table to process codes of up to HUFF_LOOKAHEAD bits
 * without looping.  Usually, more than 95% of the Huffman codes will be 8
 * or fewer bits long.  The few overlength codes are handled with a loop,
 * which need not be inline code.
 *
 * Notes about the HUFF_DECODE macro:
 * 1. Near the end of the data segment, we may fail to get enough bits
 *    for a lookahead.  In that case, we do it the hard way.
 * 2. If the lookahead table contains no entry, the next code must be
 *    more than HUFF_LOOKAHEAD bits long.
 * 3. jpeg_huff_decode returns -1 if forced to suspend.
 */</doc>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdphuff.c' l='327' u='c'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdphuff.c' l='402' u='c'/>
<use f='qtbase-6.5.0/src/3rdparty/libjpeg/src/jdphuff.c' l='547' u='c'/>
