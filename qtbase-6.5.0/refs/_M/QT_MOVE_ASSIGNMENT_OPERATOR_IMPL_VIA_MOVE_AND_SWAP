<dec f='qtbase-6.5.0/src/corelib/global/qtclasshelpermacros.h' l='64'/>
<use f='qtbase-6.5.0/src/corelib/tools/qarraydatapointer.h' l='69' u='c'/>
<use f='qtbase-6.5.0/src/corelib/tools/qhash.h' l='871' u='c'/>
<doc f='qtbase-6.5.0/src/corelib/global/qtclasshelpermacros.h' l='32'>/*
    Implementing a move assignment operator using an established
    technique (move-and-swap, pure swap) is just boilerplate.
    Here&apos;s a couple of *private* macros for convenience.

    To know which one to use:

    * if you don&apos;t have a move constructor (*) =&gt; use pure swap;
    * if you have a move constructor, then
      * if your class holds just memory (no file handles, no user-defined
        datatypes, etc.) =&gt; use pure swap;
      * use move and swap.

    The preference should always go for the move-and-swap one, as it
    will deterministically destroy the data previously held in *this,
    and not &quot;dump&quot; it in the moved-from object (which may then be alive
    for longer).

    The requirement for either macro is the presence of a member swap(),
    which any value class that defines its own special member functions
    should have anyhow.

    (*) Many value classes in Qt do not have move constructors; mostly,
    the implicitly shared classes using QSharedDataPointer and friends.
    The reason is mostly historical: those classes require either an
    out-of-line move constructor, which we could not provide before we
    made C++11 mandatory (and that we don&apos;t like anyhow), or
    an out-of-line dtor for the Q(E)DSP&lt;Private&gt; member (cf. QPixmap).

    If you can however add a move constructor to a class lacking it,
    consider doing so, then reevaluate which macro to choose.
*/</doc>
<use f='qtbase-6.5.0/src/corelib/tools/qshareddata.h' l='86' u='c'/>
<use f='qtbase-6.5.0/src/corelib/tools/qshareddata.h' l='183' u='c'/>
<use f='qtbase-6.5.0/src/corelib/tools/qsharedpointer_impl.h' l='310' u='c'/>
<use f='qtbase-6.5.0/src/corelib/tools/qsharedpointer_impl.h' l='553' u='c'/>
<use f='qtbase-6.5.0/src/corelib/io/qdebug.h' l='77' u='c'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qvariant.h' l='280' u='c'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qbasictimer.h' l='30' u='c'/>
<use f='qtbase-6.5.0/src/corelib/thread/qmutex.h' l='248' u='c'/>
<use f='qtbase-6.5.0/src/corelib/serialization/qcborvalue.h' l='148' u='c'/>
<use f='qtbase-6.5.0/src/corelib/text/qcollator.h' l='51' u='c'/>
<use f='qtbase-6.5.0/src/corelib/tools/qcryptographichash.h' l='70' u='c'/>
<use f='qtbase-6.5.0/src/corelib/thread/qfutureinterface.h' l='64' u='c'/>
<use f='qtbase-6.5.0/src/corelib/thread/qfutureinterface.h' l='226' u='c'/>
<use f='qtbase-6.5.0/src/corelib/thread/qpromise.h' l='35' u='c'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qpropertyprivate.h' l='86' u='c'/>
<use f='qtbase-6.5.0/src/corelib/thread/qsemaphore.h' l='66' u='c'/>
<use f='qtbase-6.5.0/src/corelib/io/qtemporarydir.h' l='27' u='c'/>
<use f='qtbase-6.5.0/src/gui/image/qimage.h' l='104' u='c'/>
<use f='qtbase-6.5.0/src/gui/image/qpixmap.h' l='42' u='c'/>
<use f='qtbase-6.5.0/src/gui/kernel/qcursor.h' l='55' u='c'/>
<use f='qtbase-6.5.0/src/gui/image/qicon.h' l='35' u='c'/>
<use f='qtbase-6.5.0/src/gui/painting/qcolortransform.h' l='37' u='c'/>
<use f='qtbase-6.5.0/src/gui/painting/qcolorspace.h' l='76' u='c'/>
<use f='qtbase-6.5.0/src/opengl/qopenglbuffer.h' l='37' u='c'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qproperty_p.h' l='52' u='c'/>
<use f='qtbase-6.5.0/src/corelib/thread/qorderedmutexlocker_p.h' l='51' u='c'/>
<use f='qtbase-6.5.0/src/sql/kernel/qsqlquery.h' l='42' u='c'/>
