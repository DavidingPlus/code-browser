<dec f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='8644'/>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='8579'>/*
** CAPI3REF: Status Parameters for prepared statements
** KEYWORDS: {SQLITE_STMTSTATUS counter} {SQLITE_STMTSTATUS counters}
**
** These preprocessor macros define integer codes that name counter
** values associated with the [sqlite3_stmt_status()] interface.
** The meanings of the various counters are as follows:
**
** &lt;dl&gt;
** [[SQLITE_STMTSTATUS_FULLSCAN_STEP]] &lt;dt&gt;SQLITE_STMTSTATUS_FULLSCAN_STEP&lt;/dt&gt;
** &lt;dd&gt;^This is the number of times that SQLite has stepped forward in
** a table as part of a full table scan.  Large numbers for this counter
** may indicate opportunities for performance improvement through
** careful use of indices.&lt;/dd&gt;
**
** [[SQLITE_STMTSTATUS_SORT]] &lt;dt&gt;SQLITE_STMTSTATUS_SORT&lt;/dt&gt;
** &lt;dd&gt;^This is the number of sort operations that have occurred.
** A non-zero value in this counter may indicate an opportunity to
** improvement performance through careful use of indices.&lt;/dd&gt;
**
** [[SQLITE_STMTSTATUS_AUTOINDEX]] &lt;dt&gt;SQLITE_STMTSTATUS_AUTOINDEX&lt;/dt&gt;
** &lt;dd&gt;^This is the number of rows inserted into transient indices that
** were created automatically in order to help joins run faster.
** A non-zero value in this counter may indicate an opportunity to
** improvement performance by adding permanent indices that do not
** need to be reinitialized each time the statement is run.&lt;/dd&gt;
**
** [[SQLITE_STMTSTATUS_VM_STEP]] &lt;dt&gt;SQLITE_STMTSTATUS_VM_STEP&lt;/dt&gt;
** &lt;dd&gt;^This is the number of virtual machine operations executed
** by the prepared statement if that number is less than or equal
** to 2147483647.  The number of virtual machine operations can be
** used as a proxy for the total work done by the prepared statement.
** If the number of virtual machine operations exceeds 2147483647
** then the value returned by this statement status code is undefined.
**
** [[SQLITE_STMTSTATUS_REPREPARE]] &lt;dt&gt;SQLITE_STMTSTATUS_REPREPARE&lt;/dt&gt;
** &lt;dd&gt;^This is the number of times that the prepare statement has been
** automatically regenerated due to schema changes or changes to
** [bound parameters] that might affect the query plan.
**
** [[SQLITE_STMTSTATUS_RUN]] &lt;dt&gt;SQLITE_STMTSTATUS_RUN&lt;/dt&gt;
** &lt;dd&gt;^This is the number of times that the prepared statement has
** been run.  A single &quot;run&quot; for the purposes of this counter is one
** or more calls to [sqlite3_step()] followed by a call to [sqlite3_reset()].
** The counter is incremented on the first [sqlite3_step()] call of each
** cycle.
**
** [[SQLITE_STMTSTATUS_FILTER_MISS]]
** [[SQLITE_STMTSTATUS_FILTER HIT]]
** &lt;dt&gt;SQLITE_STMTSTATUS_FILTER_HIT&lt;br&gt;
** SQLITE_STMTSTATUS_FILTER_MISS&lt;/dt&gt;
** &lt;dd&gt;^SQLITE_STMTSTATUS_FILTER_HIT is the number of times that a join
** step was bypassed because a Bloom filter returned not-found.  The
** corresponding SQLITE_STMTSTATUS_FILTER_MISS value is the number of
** times that the Bloom filter returned a find, and thus the join step
** had to be processed as normal.
**
** [[SQLITE_STMTSTATUS_MEMUSED]] &lt;dt&gt;SQLITE_STMTSTATUS_MEMUSED&lt;/dt&gt;
** &lt;dd&gt;^This is the approximate number of bytes of heap memory
** used to store the prepared statement.  ^This value is not actually
** a counter, and so the resetFlg parameter to sqlite3_stmt_status()
** is ignored when the opcode is SQLITE_STMTSTATUS_MEMUSED.
** &lt;/dd&gt;
** &lt;/dl&gt;
*/</doc>
