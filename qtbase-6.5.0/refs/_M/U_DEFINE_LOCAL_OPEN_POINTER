<dec f='include/unicode/localpointer.h' l='562'/>
<use f='include/unicode/uset.h' l='330' u='c'/>
<use f='include/unicode/unorm2.h' l='261' u='c'/>
<use f='include/unicode/uenum.h' l='68' u='c'/>
<use f='include/unicode/ucol.h' l='540' u='c'/>
<doc f='include/unicode/localpointer.h' l='542'>/**
 * \def U_DEFINE_LOCAL_OPEN_POINTER
 * &quot;Smart pointer&quot; definition macro, deletes objects via the closeFunction.
 * Defines a subclass of LocalPointerBase which works just
 * like LocalPointer&lt;Type&gt; except that this subclass will use the closeFunction
 * rather than the C++ delete operator.
 *
 * Usage example:
 * \code
 * LocalUCaseMapPointer csm(ucasemap_open(localeID, options, &amp;errorCode));
 * utf8OutLength=ucasemap_utf8ToLower(csm.getAlias(),
 *     utf8Out, (int32_t)sizeof(utf8Out),
 *     utf8In, utf8InLength, &amp;errorCode);
 * if(U_FAILURE(errorCode)) { return; }  // no need to explicitly delete the UCaseMap
 * \endcode
 *
 * @see LocalPointerBase
 * @see LocalPointer
 * @stable ICU 4.4
 */</doc>
<use f='include/unicode/ures.h' l='264' u='c'/>
<use f='include/unicode/ucal.h' l='778' u='c'/>
