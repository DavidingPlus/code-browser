<dec f='qtbase-6.5.0/src/corelib/mimetypes/qmimetype.h' l='69' type='QStringList QMimeType::parentMimeTypes() const'/>
<def f='qtbase-6.5.0/src/corelib/mimetypes/qmimetype.cpp' l='337' ll='340' type='QStringList QMimeType::parentMimeTypes() const'/>
<doc f='qtbase-6.5.0/src/corelib/mimetypes/qmimetype.cpp' l='319'>/*!
    \property QMimeType::parentMimeTypes
    \brief the names of parent MIME types

    A type is a subclass of another type if any instance of the first type is
    also an instance of the second. For example, all image/svg+xml files are also
    text/xml, text/plain and application/octet-stream files. Subclassing is about
    the format, rather than the category of the data (for example, there is no
    &apos;generic spreadsheet&apos; class that all spreadsheets inherit from).
    Conversely, the parent mimetype of image/svg+xml is text/xml.

    A mimetype can have multiple parents. For instance application/x-perl
    has two parents: application/x-executable and text/plain. This makes
    it possible to both execute perl scripts, and to open them in text editors.

    While this property was introduced in 5.10, the
    corresponding accessor method has always been there.
*/</doc>
