<dec f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsscene.h' l='241' type='void QGraphicsScene::focusItemChanged(QGraphicsItem * newFocus, QGraphicsItem * oldFocus, Qt::FocusReason reason)'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsscene.cpp' l='785' u='c' c='_ZN21QGraphicsScenePrivate20setActivePanelHelperEP13QGraphicsItemb'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsscene.cpp' l='818' u='c' c='_ZN21QGraphicsScenePrivate18setFocusItemHelperEP13QGraphicsItemN2Qt11FocusReasonEb'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsscene.cpp' l='858' u='c' c='_ZN21QGraphicsScenePrivate18setFocusItemHelperEP13QGraphicsItemN2Qt11FocusReasonEb'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsscene.cpp' l='5437'>/*!
    \fn void QGraphicsScene::focusItemChanged(QGraphicsItem *newFocusItem, QGraphicsItem *oldFocusItem, Qt::FocusReason reason)

    This signal is emitted by QGraphicsScene whenever focus changes in the
    scene (i.e., when an item gains or loses input focus, or when focus
    passes from one item to another). You can connect to this signal if you
    need to keep track of when other items gain input focus. It is
    particularly useful for implementing virtual keyboards, input methods,
    and cursor items.

    \a oldFocusItem is a pointer to the item that previously had focus, or
    0 if no item had focus before the signal was emitted. \a newFocusItem
    is a pointer to the item that gained input focus, or \nullptr if focus was lost.
    \a reason is the reason for the focus change (e.g., if the scene was
    deactivated while an input field had focus, \a oldFocusItem would point
    to the input field item, \a newFocusItem would be \nullptr, and \a reason
    would be Qt::ActiveWindowFocusReason.
*/</doc>
