<dec f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.h' l='234' type='void QGraphicsView::drawBackground(QPainter * painter, const QRectF &amp; rect)'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.cpp' l='2186' u='c' c='_ZN13QGraphicsView6renderEP8QPainterRK6QRectFRK5QRectN2Qt15AspectRatioModeE'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.cpp' l='3466' u='c' c='_ZN13QGraphicsView10paintEventEP11QPaintEvent'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.cpp' l='3482' u='c' c='_ZN13QGraphicsView10paintEventEP11QPaintEvent'/>
<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.cpp' l='3713' ll='3727' type='void QGraphicsView::drawBackground(QPainter * painter, const QRectF &amp; rect)'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.cpp' l='3696'>/*!
    Draws the background of the scene using \a painter, before any items and
    the foreground are drawn. Reimplement this function to provide a custom
    background for this view.

    If all you want is to define a color, texture or gradient for the
    background, you can call setBackgroundBrush() instead.

    All painting is done in \e scene coordinates. \a rect is the exposed
    rectangle.

    The default implementation fills \a rect using the view&apos;s backgroundBrush.
    If no such brush is defined (the default), the scene&apos;s drawBackground()
    function is called instead.

    \sa drawForeground(), QGraphicsScene::drawBackground()
*/</doc>
