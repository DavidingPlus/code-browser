<dec f='qtbase-6.5.0/src/gui/painting/qpainter.h' l='323' type='void QPainter::drawPixmap(const QPointF &amp; p, const QPixmap &amp; pm)'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.h' l='725' u='c' c='_ZN8QPainter10drawPixmapERK6QPointRK7QPixmap'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.h' l='735' u='c' c='_ZN8QPainter10drawPixmapEiiRK7QPixmap'/>
<def f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='4783' ll='4853' type='void QPainter::drawPixmap(const QPointF &amp; p, const QPixmap &amp; pm)'/>
<doc f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='4758'>/*!
    \fn void QPainter::drawPixmap(const QRectF &amp;target, const QPixmap &amp;pixmap, const QRectF &amp;source)

    Draws the rectangular portion \a source of the given \a pixmap
    into the given \a target in the paint device.

    \note The pixmap is scaled to fit the rectangle, if both the pixmap and rectangle size disagree.
    \note See \l{Drawing High Resolution Versions of Pixmaps and Images} on how this is affected
    by QPixmap::devicePixelRatio().

    \table 100%
    \row
    \li
    \snippet code/src_gui_painting_qpainter.cpp 16
    \endtable

    If \a pixmap is a QBitmap it is drawn with the bits that are &quot;set&quot;
    using the pens color. If backgroundMode is Qt::OpaqueMode, the
    &quot;unset&quot; bits are drawn using the color of the background brush; if
    backgroundMode is Qt::TransparentMode, the &quot;unset&quot; bits are
    transparent. Drawing bitmaps with gradient or texture colors is
    not supported.

    \sa drawImage(), QPixmap::devicePixelRatio()
*/</doc>
<use f='qtbase-6.5.0/src/widgets/effects/qpixmapfilter.cpp' l='1294' u='c' c='_ZNK23QPixmapDropShadowFilter4drawEP8QPainterRK7QPointFRK7QPixmapRK6QRectF'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='9594' u='c' c='_ZN19QGraphicsPixmapItem5paintEP8QPainterPK24QStyleOptionGraphicsItemP7QWidget'/>
