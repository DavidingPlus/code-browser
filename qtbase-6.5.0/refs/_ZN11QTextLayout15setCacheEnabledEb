<dec f='qtbase-6.5.0/src/gui/text/qtextlayout.h' l='121' type='void QTextLayout::setCacheEnabled(bool enable)'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='7232' u='c' c='_Z14qt_format_textRK5QFontRK6QRectFiPK11QTextOptionRK7QStringPS2_iPiiP8QPainter'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainterpath.cpp' l='1160' u='c' c='_ZN12QPainterPath7addTextERK7QPointFRK5QFontRK7QString'/>
<use f='qtbase-6.5.0/src/gui/text/qstatictext.cpp' l='579' u='c' c='_ZN18QStaticTextPrivate9paintTextERK7QPointFP8QPainterRK6QColor'/>
<use f='qtbase-6.5.0/src/gui/text/qtextdocumentlayout.cpp' l='2194' u='c' c='_ZNK26QTextDocumentLayoutPrivate12drawListItemERK7QPointFP8QPainterRKN27QAbstractTextDocumentLayout12PaintContextERK10QTextBlockPK15QTextCharFormat'/>
<def f='qtbase-6.5.0/src/gui/text/qtextlayout.cpp' l='545' ll='548' type='void QTextLayout::setCacheEnabled(bool enable)'/>
<doc f='qtbase-6.5.0/src/gui/text/qtextlayout.cpp' l='535'>/*!
    Enables caching of the complete layout information if \a enable is
    true; otherwise disables layout caching. Usually
    QTextLayout throws most of the layouting information away after a
    call to endLayout() to reduce memory consumption. If you however
    want to draw the laid out text directly afterwards enabling caching
    might speed up drawing significantly.

    \sa cacheEnabled()
*/</doc>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='10555' u='c' c='_ZL15setupTextLayoutP11QTextLayout'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qwidgetlinecontrol.cpp' l='328' u='c' c='_ZN18QWidgetLineControl4initERK7QString'/>
