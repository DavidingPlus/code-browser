<dec f='qtbase-6.5.0/src/gui/kernel/qplatformintegration.h' l='100' type='23'/>
<use f='qtbase-6.5.0/src/gui/kernel/qplatformintegration.cpp' l='256' u='r' c='_ZNK20QPlatformIntegration13hasCapabilityENS_10CapabilityE'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qplatformintegration.cpp' l='219'>\value RhiBasedRendering The platform supports one or more of the 3D rendering APIs
    that Qt Quick and other components can use via the Qt Rendering Hardware Interface. On
    platforms where it is clear upfront that the platform cannot, or does not want to,
    support rendering via 3D graphics APIs such as OpenGL, Vulkan, Direct 3D, or Metal,
    this capability can be reported as \c false. That in effect means that in modules
    where there is an alternative, such as Qt Quick with its \c software backend, an
    automatic fallback to that alternative may occur, if applicable. The default
    implementation of hasCapability() returns \c</doc>
<use f='qtbase-6.5.0/src/gui/painting/qbackingstorerhisupport.cpp' l='60' u='r' c='_ZN23QBackingStoreRhiSupport6createEv'/>
<use f='qtbase-6.5.0/src/openglwidgets/qopenglwidget.cpp' l='1101' u='r' c='_ZN13QOpenGLWidgetC1EP7QWidget6QFlagsIN2Qt10WindowTypeEE'/>
<use f='qtbase-6.5.0/src/plugins/platforms/linuxfb/qlinuxfbintegration.cpp' l='80' c='_ZNK19QLinuxFbIntegration13hasCapabilityEN20QPlatformIntegration10CapabilityE'/>
<use f='qtbase-6.5.0/src/plugins/platforms/minimal/qminimalintegration.cpp' l='89' c='_ZNK19QMinimalIntegration13hasCapabilityEN20QPlatformIntegration10CapabilityE'/>
<use f='qtbase-6.5.0/src/plugins/platforms/offscreen/qoffscreenintegration.cpp' l='325' c='_ZNK21QOffscreenIntegration13hasCapabilityEN20QPlatformIntegration10CapabilityE'/>
<use f='qtbase-6.5.0/src/plugins/platforms/vnc/qvncintegration.cpp' l='74' c='_ZNK15QVncIntegration13hasCapabilityEN20QPlatformIntegration10CapabilityE'/>
