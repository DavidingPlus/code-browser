<dec f='qtbase-6.5.0/src/corelib/itemmodels/qabstractitemmodel.h' l='269' type='bool QAbstractItemModel::canDropMimeData(const QMimeData * data, Qt::DropAction action, int row, int column, const QModelIndex &amp; parent) const'/>
<def f='qtbase-6.5.0/src/corelib/itemmodels/qabstractitemmodel.cpp' l='2150' ll='2167' type='bool QAbstractItemModel::canDropMimeData(const QMimeData * data, Qt::DropAction action, int row, int column, const QModelIndex &amp; parent) const'/>
<doc f='qtbase-6.5.0/src/corelib/itemmodels/qabstractitemmodel.cpp' l='2137'>/*!
    Returns \c{true} if a model can accept a drop of the \a data. This
    default implementation only checks if \a data has at least one format
    in the list of mimeTypes() and if \a action is among the
    model&apos;s supportedDropActions().

    Reimplement this function in your custom model, if you want to
    test whether the \a data can be dropped at \a row, \a column,
    \a parent with \a action. If you don&apos;t need that test, it is not
    necessary to reimplement this function.

    \sa dropMimeData(), {Using drag and drop with item views}
 */</doc>
<ovr f='qtbase-6.5.0/src/corelib/itemmodels/qabstractproxymodel.cpp' l='476' c='_ZNK19QAbstractProxyModel15canDropMimeDataEPK9QMimeDataN2Qt10DropActionEiiRK11QModelIndex'/>
<use f='qtbase-6.5.0/src/corelib/itemmodels/qabstractproxymodel.cpp' l='484' u='c' c='_ZNK19QAbstractProxyModel15canDropMimeDataEPK9QMimeDataN2Qt10DropActionEiiRK11QModelIndex'/>
<ovr f='qtbase-6.5.0/src/corelib/itemmodels/qconcatenatetablesproxymodel.cpp' l='364' c='_ZNK28QConcatenateTablesProxyModel15canDropMimeDataEPK9QMimeDataN2Qt10DropActionEiiRK11QModelIndex'/>
<use f='qtbase-6.5.0/src/corelib/itemmodels/qconcatenatetablesproxymodel.cpp' l='375' u='c' c='_ZNK28QConcatenateTablesProxyModel15canDropMimeDataEPK9QMimeDataN2Qt10DropActionEiiRK11QModelIndex'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qabstractitemview_p.h' l='152' u='c' c='_ZN24QAbstractItemViewPrivate7canDropEP10QDropEvent'/>
