<def f='qtbase-6.5.0/src/corelib/thread/qthreadstorage.h' l='91' ll='115'/>
<mbr r='QThreadStorage::d' t='QThreadStorageData'/>
<fun r='_ZN14QThreadStorageC1ERK14QThreadStorageIT_E'/>
<fun r='_ZN14QThreadStorage10deleteDataEPv'/>
<fun r='_ZN14QThreadStorageC1Ev'/>
<fun r='_ZN14QThreadStorageD1Ev'/>
<fun r='_ZNK14QThreadStorage12hasLocalDataEv'/>
<fun r='_ZN14QThreadStorage9localDataEv'/>
<fun r='_ZNK14QThreadStorage9localDataEv'/>
<fun r='_ZN14QThreadStorage12setLocalDataET_'/>
<use f='qtbase-6.5.0/src/corelib/text/qcollator.cpp' l='35'/>
<doc f='qtbase-6.5.0/src/corelib/thread/qthreadstorage.cpp' l='174'>/*!
    \class QThreadStorage
    \inmodule QtCore
    \brief The QThreadStorage class provides per-thread data storage.

    \threadsafe

    \ingroup thread

    QThreadStorage is a template class that provides per-thread data
    storage.

    The setLocalData() function stores a single thread-specific value
    for the calling thread. The data can be accessed later using
    localData().

    The hasLocalData() function allows the programmer to determine if
    data has previously been set using the setLocalData() function.
    This is also useful for lazy initialization.

    If T is a pointer type, QThreadStorage takes ownership of the data
    (which must be created on the heap with \c new) and deletes it when
    the thread exits, either normally or via termination.

    For example, the following code uses QThreadStorage to store a
    single cache for each thread that calls the cacheObject() and
    removeFromCache() functions. The cache is automatically
    deleted when the calling thread exits.

    \snippet threads/threads.cpp 7
    \snippet threads/threads.cpp 8
    \snippet threads/threads.cpp 9

    \section1 Caveats

    \list

    \li The QThreadStorage destructor does not delete per-thread data.
    QThreadStorage only deletes per-thread data when the thread exits
    or when setLocalData() is called multiple times.

    \li QThreadStorage can be used to store data for the \c main()
    thread. QThreadStorage deletes all data set for the \c main()
    thread when QApplication is destroyed, regardless of whether or
    not the \c main() thread has actually finished.

    \endlist

    \sa QThread
*/</doc>
<use f='qtbase-6.5.0/src/gui/kernel/qopenglcontext.cpp' l='40'/>
<use f='qtbase-6.5.0/src/gui/text/freetype/qfontengine_ft.cpp' l='131'/>
<use f='qtbase-6.5.0/src/gui/text/qfont.cpp' l='2812'/>
<use f='qtbase-6.5.0/src/gui/text/qfont.cpp' l='2824' c='_ZN10QFontCache7cleanupEv'/>
<use f='qtbase-6.5.0/src/network/access/qhttpthreaddelegate_p.h' l='157'/>
<use f='qtbase-6.5.0/src/network/access/qhttpthreaddelegate.cpp' l='166'/>
<use f='qtbase-6.5.0/src/opengl/qopenglengineshadermanager.cpp' l='66'/>
<use f='qtbase-6.5.0/src/opengl/qopenglpaintdevice.cpp' l='157'/>
