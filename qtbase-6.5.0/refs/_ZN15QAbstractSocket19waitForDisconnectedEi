<dec f='qtbase-6.5.0/src/network/socket/qabstractsocket.h' l='181' type='bool QAbstractSocket::waitForDisconnected(int msecs = 30000)'/>
<def f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='2286' ll='2332' type='bool QAbstractSocket::waitForDisconnected(int msecs = 30000)'/>
<doc f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='2266'>/*!
    Waits until the socket has disconnected, up to \a msecs milliseconds. If the
    connection was successfully disconnected, this function returns \c true;
    otherwise it returns \c false (if the operation timed out, if an error
    occurred, or if this QAbstractSocket is already disconnected). In the case
    where it returns \c false, you can call error() to determine the cause of
    the error.

    The following example waits up to one second for a connection
    to be closed:

    \snippet code/src_network_socket_qabstractsocket.cpp 1

    If msecs is -1, this function will not time out.

    \note This function may fail randomly on Windows. Consider using the event
    loop and the disconnected() signal if your software will run on Windows.

    \sa disconnectFromHost(), close()
*/</doc>
<use f='qtbase-6.5.0/src/network/socket/qlocalsocket_unix.cpp' l='614' u='c' c='_ZN12QLocalSocket19waitForDisconnectedEi'/>
