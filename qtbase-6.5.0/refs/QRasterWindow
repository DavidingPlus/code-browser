<inh f='qtbase-6.5.0/src/gui/kernel/qpaintdevicewindow.h' l='16' c='QPaintDeviceWindow'/>
<def f='qtbase-6.5.0/src/gui/kernel/qrasterwindow.h' l='14' ll='29'/>
<use f='qtbase-6.5.0/src/gui/kernel/qrasterwindow.h' l='28' c='_ZN13QRasterWindowC1ERKS_'/>
<use f='qtbase-6.5.0/src/gui/kernel/qrasterwindow.h' l='28' c='_ZN13QRasterWindowaSERKS_'/>
<use f='qtbase-6.5.0/src/gui/kernel/qrasterwindow.h' l='28' c='_ZN13QRasterWindowaSERKS_'/>
<size>56</size>
<smbr r='QRasterWindow::staticMetaObject' t='const QMetaObject'/>
<fun r='_ZNK13QRasterWindow10metaObjectEv'/>
<fun r='_ZN13QRasterWindow11qt_metacastEPKc'/>
<fun r='_ZN13QRasterWindow11qt_metacallEN11QMetaObject4CallEiPPv'/>
<fun r='_ZN13QRasterWindow2trEPKcS1_i'/>
<fun r='_ZN13QRasterWindow18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv'/>
<fun r='_ZN13QRasterWindow6d_funcEv'/>
<fun r='_ZNK13QRasterWindow6d_funcEv'/>
<fun r='_ZN13QRasterWindowC1EP7QWindow'/>
<fun r='_ZN13QRasterWindowD1Ev'/>
<fun r='_ZNK13QRasterWindow6metricEN12QPaintDevice17PaintDeviceMetricE'/>
<fun r='_ZNK13QRasterWindow10redirectedEP6QPoint'/>
<fun r='_ZN13QRasterWindowC1ERKS_'/>
<use f='qtbase-6.5.0/src/gui/kernel/qrasterwindow.cpp' l='35' c='_ZN20QRasterWindowPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/gui/kernel/qrasterwindow.cpp' l='35' c='_ZN20QRasterWindowPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/gui/kernel/qrasterwindow.cpp' l='35' c='_ZNK20QRasterWindowPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/gui/kernel/qrasterwindow.cpp' l='35' c='_ZNK20QRasterWindowPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/gui/kernel/qrasterwindow.cpp' l='35'/>
<use f='qtbase-6.5.0/src/gui/kernel/qrasterwindow.cpp' l='39' c='_ZN20QRasterWindowPrivate10beginPaintERK7QRegion'/>
<use f='qtbase-6.5.0/src/gui/kernel/qrasterwindow.cpp' l='55' c='_ZN20QRasterWindowPrivate5flushERK7QRegion'/>
<size>56</size>
<doc f='qtbase-6.5.0/src/gui/kernel/qrasterwindow.cpp' l='13'>/*!
  \class QRasterWindow
  \inmodule QtGui
  \since 5.4
  \brief QRasterWindow is a convenience class for using QPainter on a QWindow.

  QRasterWindow is a QWindow with a raster-based, non-OpenGL surface. On top of
  the functionality offered by QWindow, QRasterWindow adds a virtual
  paintEvent() function and the possibility to open a QPainter on itself. The
  underlying paint engine will be the raster one, meaning that all drawing will
  happen on the CPU. For performing accelerated, OpenGL-based drawing, use
  QOpenGLWindow instead.

  Internally the class is thin wrapper for QWindow and QBackingStore
  and is very similar to the \l{Raster Window Example}{Raster Window
  Example} that uses these classes directly.

  \sa QPaintDeviceWindow::paintEvent(), QPaintDeviceWindow::update()
*/</doc>
<fun r='_ZN13QRasterWindowC1EP7QWindow'/>
<fun r='_ZN13QRasterWindowD1Ev'/>
<fun r='_ZNK13QRasterWindow6metricEN12QPaintDevice17PaintDeviceMetricE'/>
<fun r='_ZNK13QRasterWindow10redirectedEP6QPoint'/>
<ovr f='qtbase-6.5.0/src/gui/kernel/qshapedpixmapdndwindow_p.h' l='26' c='QShapedPixmapWindow'/>
<use f='qtbase-6.5.0/src/gui/kernel/qshapedpixmapdndwindow_p.h' l='26'/>
<size>56</size>
