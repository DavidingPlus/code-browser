<dec f='qtbase-6.5.0/src/corelib/kernel/qmetacontainer.h' l='889' type='bool QMetaContainer::hasInputIterator() const'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qiterable.h' l='93' u='c' c='_ZN15QTaggedIteratorC1EOT_'/>
<def f='qtbase-6.5.0/src/corelib/kernel/qmetacontainer.cpp' l='48' ll='53' type='bool QMetaContainer::hasInputIterator() const'/>
<doc f='qtbase-6.5.0/src/corelib/kernel/qmetacontainer.cpp' l='38'>/*!
    Returns \c true if the underlying container provides at least an input
    iterator as defined by std::input_iterator_tag, otherwise returns
    \c false. Forward, Bi-directional, and random access iterators are
    specializations of input iterators. This method will also return
    \c true if the container provides one of those.

    QMetaSequence assumes that const and non-const iterators for the same
    container have the same iterator traits.
 */</doc>
