<dec f='qtbase-6.5.0/src/network/access/qnetworkaccessbackend_p.h' l='60' type='1'/>
<doc f='qtbase-6.5.0/src/network/access/qnetworkaccessbackend_p.h' l='60'>// readPointer and advanceReadPointer() is available!</doc>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessbackend.cpp' l='429' u='r' c='_ZN21QNetworkAccessBackend11readPointerEv'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessbackend.cpp' l='449' u='r' c='_ZN21QNetworkAccessBackend18advanceReadPointerEx'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessbackend.cpp' l='467' u='r' c='_ZN21QNetworkAccessBackend4readEPcx'/>
<doc f='qtbase-6.5.0/src/network/access/qnetworkaccessbackend.cpp' l='200'>\value ZeroCopy
        The plugin will have raw data available in contiguous
        segments and can return a pointer to the data at request.
        Claiming to support this requires implementing readPointer()
        and advanceReadPointer().
    </doc>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyimpl.cpp' l='699' u='r' c='_ZN24QNetworkReplyImplPrivate15readFromBackendEv'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkreplyimpl.cpp' l='845' u='r' c='_ZN17QNetworkReplyImpl8readDataEPcx'/>
