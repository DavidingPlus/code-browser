<dec f='qtbase-6.5.0/src/corelib/thread/qthread.h' l='98' type='void QThread::finished(QThread::QPrivateSignal )'/>
<doc f='qtbase-6.5.0/src/corelib/thread/qthread.cpp' l='361'>/*!
    \fn void QThread::finished()

    This signal is emitted from the associated thread right before it finishes executing.

    When this signal is emitted, the event loop has already stopped running.
    No more events will be processed in the thread, except for deferred deletion events.
    This signal can be connected to QObject::deleteLater(), to free objects in that thread.

    \note If the associated thread was terminated using terminate(), it is undefined from
    which thread this signal is emitted.

    \sa started()
*/</doc>
<use f='qtbase-6.5.0/src/corelib/thread/qthread_unix.cpp' l='344' u='c' c='_ZN14QThreadPrivate6finishEPv'/>
