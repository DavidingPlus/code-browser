<dec f='qtbase-6.5.0/src/opengl/qopenglwindow.h' l='33' type='void QOpenGLWindow::~QOpenGLWindow()'/>
<inh f='qtbase-6.5.0/src/gui/kernel/qpaintdevicewindow.h' l='16' c='_ZN18QPaintDeviceWindowD1Ev'/>
<def f='qtbase-6.5.0/src/opengl/qopenglwindow.cpp' l='351' ll='354' type='void QOpenGLWindow::~QOpenGLWindow()'/>
<doc f='qtbase-6.5.0/src/opengl/qopenglwindow.cpp' l='332'>/*!
  Destroys the QOpenGLWindow instance, freeing its resources.

  The OpenGLWindow&apos;s context is made current in the destructor, allowing for
  safe destruction of any child object that may need to release OpenGL
  resources belonging to the context provided by this window.

  \warning if you have objects wrapping OpenGL resources (such as
  QOpenGLBuffer, QOpenGLShaderProgram, etc.) as members of a QOpenGLWindow
  subclass, you may need to add a call to makeCurrent() in that subclass&apos;
  destructor as well. Due to the rules of C++ object destruction, those objects
  will be destroyed \e{before} calling this function (but after that the
  destructor of the subclass has run), therefore making the OpenGL context
  current in this function happens too late for their safe disposal.

  \sa makeCurrent

  \since 5.5
*/</doc>
