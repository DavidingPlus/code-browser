<dec f='qtbase-6.5.0/src/gui/kernel/qopenglcontext.h' l='144' type='void QOpenGLContext::destroy()'/>
<use f='qtbase-6.5.0/src/gui/kernel/qopenglcontext.cpp' l='352' u='c' c='_ZN14QOpenGLContext6createEv'/>
<def f='qtbase-6.5.0/src/gui/kernel/qopenglcontext.cpp' l='399' ll='443' type='void QOpenGLContext::destroy()'/>
<use f='qtbase-6.5.0/src/gui/kernel/qopenglcontext.cpp' l='463' u='c' c='_ZN14QOpenGLContextD1Ev'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qopenglcontext.cpp' l='381'>/*!
    \internal

    Destroy the underlying platform context associated with this context.

    If any other context is directly or indirectly sharing resources with this
    context, the shared resources, which includes vertex buffer objects, shader
    objects, textures, and framebuffer objects, are not freed. However,
    destroying the underlying platform context frees any state associated with
    the context.

    After \c destroy() has been called, you must call create() if you wish to
    use the context again.

    \note This implicitly calls doneCurrent() if the context is current.

    \sa create()
*/</doc>
