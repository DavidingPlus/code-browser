<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='15517'/>
<def f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='67817' ll='67852'/>
<size>152</size>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='67782'>/*
** An instance of this object represents a single database file.
**
** A single database file can be in use at the same time by two
** or more database connections.  When two or more connections are
** sharing the same database file, each connection has it own
** private Btree object for the file and each of those Btrees points
** to this one BtShared object.  BtShared.nRef is the number of
** connections currently sharing this database file.
**
** Fields in this structure are accessed under the BtShared.mutex
** mutex, except for nRef and pNext which are accessed under the
** global SQLITE_MUTEX_STATIC_MAIN mutex.  The pPager field
** may not be modified once it is initially set as long as nRef&gt;0.
** The pSchema field may be set once under BtShared.mutex and
** thereafter is unchanged as long as nRef&gt;0.
**
** isPending:
**
**   If a BtShared client fails to obtain a write-lock on a database
**   table (because there exists one or more read-locks on the table),
**   the shared-cache enters &apos;pending-lock&apos; state and isPending is
**   set to true.
**
**   The shared-cache leaves the &apos;pending lock&apos; state when either of
**   the following occur:
**
**     1) The current writer (BtShared.pWriter) concludes its transaction, OR
**     2) The number of locks held by other connections drops to zero.
**
**   while in the &apos;pending-lock&apos; state, no connection may start a new
**   transaction.
**
**   This feature is included to help prevent writer-starvation.
*/</doc>
