<def f='qtbase-6.5.0/src/corelib/tools/qcommandlineparser.h' l='32' ll='35'/>
<use f='qtbase-6.5.0/src/corelib/tools/qcommandlineparser.h' l='36' c='_ZN18QCommandLineParser38setOptionsAfterPositionalArgumentsModeENS_35OptionsAfterPositionalArgumentsModeE'/>
<use f='qtbase-6.5.0/src/corelib/tools/qcommandlineparser.cpp' l='85'/>
<use f='qtbase-6.5.0/src/corelib/tools/qcommandlineparser.cpp' l='315' c='_ZN18QCommandLineParser38setOptionsAfterPositionalArgumentsModeENS_35OptionsAfterPositionalArgumentsModeE'/>
<doc f='qtbase-6.5.0/src/corelib/tools/qcommandlineparser.cpp' l='285'>/*!
    \enum QCommandLineParser::OptionsAfterPositionalArgumentsMode

    This enum describes the way the parser interprets options that
    occur after positional arguments.

    \value ParseAsOptions \c{application argument --opt -t} is interpreted as setting
    the options \c{opt} and \c{t}, just like \c{application --opt -t argument} would do.
    This is the default parsing mode. In order to specify that \c{--opt} and \c{-t}
    are positional arguments instead, the user can use \c{--}, as in
    \c{application argument -- --opt -t}.

    \value ParseAsPositionalArguments \c{application argument --opt} is interpreted as
    having two positional arguments, \c{argument} and \c{--opt}.
    This mode is useful for executables that aim to launch other executables
    (e.g. wrappers, debugging tools, etc.) or that support internal commands
    followed by options for the command. \c{argument} is the name of the command,
    and all options occurring after it can be collected and parsed by another
    command line parser, possibly in another executable.

    \sa setOptionsAfterPositionalArgumentsMode()

    \since 5.6
*/</doc>
