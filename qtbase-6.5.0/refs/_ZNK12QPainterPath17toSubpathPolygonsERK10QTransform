<dec f='qtbase-6.5.0/src/gui/painting/qpainterpath.h' l='129' type='QList&lt;QPolygonF&gt; QPainterPath::toSubpathPolygons(const QTransform &amp; matrix = QTransform()) const'/>
<def f='qtbase-6.5.0/src/gui/painting/qpainterpath.cpp' l='1559' ll='1602' type='QList&lt;QPolygonF&gt; QPainterPath::toSubpathPolygons(const QTransform &amp; matrix = QTransform()) const'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainterpath.cpp' l='1631' u='c' c='_ZNK12QPainterPath14toFillPolygonsERK10QTransform'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainterpath.cpp' l='2816' u='c' c='_ZNK12QPainterPath13toFillPolygonERK10QTransform'/>
<doc f='qtbase-6.5.0/src/gui/painting/qpainterpath.cpp' l='1547'>/*!
    Converts the path into a list of polygons using the QTransform
    \a matrix, and returns the list.

    This function creates one polygon for each subpath regardless of
    intersecting subpaths (i.e. overlapping bounding rectangles). To
    make sure that such overlapping subpaths are filled correctly, use
    the toFillPolygons() function instead.

    \sa toFillPolygons(), toFillPolygon(), {QPainterPath#QPainterPath
    Conversion}{QPainterPath Conversion}
*/</doc>
<use f='qtbase-6.5.0/src/gui/painting/qregion.cpp' l='3813' u='c' c='_ZN7QRegionC1ERK5QRectNS_10RegionTypeE'/>
