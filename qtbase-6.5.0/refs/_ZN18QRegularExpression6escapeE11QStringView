<use f='qtbase-6.5.0/src/corelib/text/qregularexpression.h' l='140' u='c' c='_ZN18QRegularExpression6escapeERK7QString'/>
<dec f='qtbase-6.5.0/src/corelib/text/qregularexpression.h' l='153' type='static QString QRegularExpression::escape(QStringView str)'/>
<def f='qtbase-6.5.0/src/corelib/text/qregularexpression.cpp' l='1806' ll='1838' type='static QString QRegularExpression::escape(QStringView str)'/>
<doc f='qtbase-6.5.0/src/corelib/text/qregularexpression.cpp' l='1786'>/*!
    \since 5.15

    Escapes all characters of \a str so that they no longer have any special
    meaning when used as a regular expression pattern string, and returns
    the escaped string. For instance:

    \snippet code/src_corelib_text_qregularexpression.cpp 26

    This is very convenient in order to build patterns from arbitrary strings:

    \snippet code/src_corelib_text_qregularexpression.cpp 27

    \note This function implements Perl&apos;s quotemeta algorithm and escapes with
    a backslash all characters in \a str, except for the characters in the
    \c{[A-Z]}, \c{[a-z]} and \c{[0-9]} ranges, as well as the underscore
    (\c{_}) character. The only difference with Perl is that a literal NUL
    inside \a str is escaped with the sequence \c{&quot;\\0&quot;} (backslash +
    \c{&apos;0&apos;}), instead of \c{&quot;\\\0&quot;} (backslash + \c{NUL}).
*/</doc>
