<dec f='qtbase-6.5.0/src/gui/kernel/qeventpoint.h' l='112' type='QVector2D QEventPoint::velocity() const'/>
<use f='qtbase-6.5.0/src/gui/kernel/qevent.cpp' l='4015' u='c' c='_Zls6QDebugRK11QEventPoint'/>
<def f='qtbase-6.5.0/src/gui/kernel/qeventpoint.cpp' l='269' ll='270' type='QVector2D QEventPoint::velocity() const'/>
<use f='qtbase-6.5.0/src/gui/kernel/qeventpoint.cpp' l='538' u='c' c='_ZN18QMutableEventPoint6updateERK11QEventPointRS0_'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qeventpoint.cpp' l='253'>/*!
    \property QEventPoint::velocity
    \brief a velocity vector, in units of pixels per second, in the coordinate.
    system of the screen or desktop.

    \note If the device&apos;s capabilities include QInputDevice::Velocity, it means
    velocity comes from the operating system (perhaps the touch hardware or
    driver provides it). But usually the \c Velocity capability is not set,
    indicating that the velocity is calculated by Qt, using a simple Kalman
    filter to provide a smoothed average velocity rather than an instantaneous
    value. Effectively it tells how fast and in what direction the user has
    been dragging this point over the last few events, with the most recent
    event having the strongest influence.

    \sa QInputDevice::capabilities(), QInputEvent::device()
*/</doc>
<use f='qtbase-6.5.0/src/gui/kernel/qwindowsysteminterface.cpp' l='682' u='c' c='_ZN29QWindowSystemInterfacePrivate18toNativeTouchPointERK11QEventPointPK7QWindow'/>
