<use f='include/glib-2.0/gobject/gtypemodule.h' l='30'/>
<def f='include/glib-2.0/gobject/gtypemodule.h' l='70' ll='84'/>
<size>184</size>
<doc f='include/glib-2.0/gobject/gtypemodule.h' l='60'>/**
 * GTypeModuleClass:
 * @parent_class: the parent class
 * @load: loads the module and registers one or more types using
 *  g_type_module_register_type().
 * @unload: unloads the module
 * 
 * In order to implement dynamic loading of types based on #GTypeModule, 
 * the @load and @unload functions in #GTypeModuleClass must be implemented.
 */</doc>
<mbr r='_GTypeModuleClass::parent_class' o='0' t='GObjectClass'/>
<mbr r='_GTypeModuleClass::load' o='1088' t='gboolean (*)(GTypeModule *)'/>
<mbr r='_GTypeModuleClass::unload' o='1152' t='void (*)(GTypeModule *)'/>
<mbr r='_GTypeModuleClass::reserved1' o='1216' t='void (*)()'/>
<mbr r='_GTypeModuleClass::reserved2' o='1280' t='void (*)()'/>
<mbr r='_GTypeModuleClass::reserved3' o='1344' t='void (*)()'/>
<mbr r='_GTypeModuleClass::reserved4' o='1408' t='void (*)()'/>
