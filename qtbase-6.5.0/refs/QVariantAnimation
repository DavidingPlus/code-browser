<inh f='qtbase-6.5.0/src/corelib/animation/qabstractanimation.h' l='19' c='QAbstractAnimation'/>
<def f='qtbase-6.5.0/src/corelib/animation/qvariantanimation.h' l='18' ll='78'/>
<use f='qtbase-6.5.0/src/corelib/animation/qvariantanimation.h' l='76' c='_ZN17QVariantAnimationC1ERKS_'/>
<use f='qtbase-6.5.0/src/corelib/animation/qvariantanimation.h' l='76' c='_ZN17QVariantAnimationaSERKS_'/>
<use f='qtbase-6.5.0/src/corelib/animation/qvariantanimation.h' l='76' c='_ZN17QVariantAnimationaSERKS_'/>
<ovr f='qtbase-6.5.0/src/corelib/animation/qpropertyanimation.h' l='14' c='QPropertyAnimation'/>
<use f='qtbase-6.5.0/src/corelib/animation/qpropertyanimation.h' l='14'/>
<size>16</size>
<smbr r='QVariantAnimation::staticMetaObject' t='const QMetaObject'/>
<fun r='_ZNK17QVariantAnimation10metaObjectEv'/>
<fun r='_ZN17QVariantAnimation11qt_metacastEPKc'/>
<fun r='_ZN17QVariantAnimation11qt_metacallEN11QMetaObject4CallEiPPv'/>
<fun r='_ZN17QVariantAnimation2trEPKcS1_i'/>
<fun r='_ZN17QVariantAnimation18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv'/>
<fun r='_ZN17QVariantAnimationC1EP7QObject'/>
<fun r='_ZN17QVariantAnimationD1Ev'/>
<fun r='_ZNK17QVariantAnimation10startValueEv'/>
<fun r='_ZN17QVariantAnimation13setStartValueERK8QVariant'/>
<fun r='_ZNK17QVariantAnimation8endValueEv'/>
<fun r='_ZN17QVariantAnimation11setEndValueERK8QVariant'/>
<fun r='_ZNK17QVariantAnimation10keyValueAtEd'/>
<fun r='_ZN17QVariantAnimation13setKeyValueAtEdRK8QVariant'/>
<fun r='_ZNK17QVariantAnimation9keyValuesEv'/>
<fun r='_ZN17QVariantAnimation12setKeyValuesERK5QListISt4pairId8QVariantEE'/>
<fun r='_ZNK17QVariantAnimation12currentValueEv'/>
<fun r='_ZNK17QVariantAnimation8durationEv'/>
<fun r='_ZN17QVariantAnimation11setDurationEi'/>
<fun r='_ZN17QVariantAnimation16bindableDurationEv'/>
<fun r='_ZNK17QVariantAnimation11easingCurveEv'/>
<fun r='_ZN17QVariantAnimation14setEasingCurveERK12QEasingCurve'/>
<fun r='_ZN17QVariantAnimation19bindableEasingCurveEv'/>
<fun r='_ZN17QVariantAnimation12valueChangedERK8QVariant'/>
<fun r='_ZN17QVariantAnimationC1ER24QVariantAnimationPrivateP7QObject'/>
<fun r='_ZN17QVariantAnimation5eventEP6QEvent'/>
<fun r='_ZN17QVariantAnimation17updateCurrentTimeEi'/>
<fun r='_ZN17QVariantAnimation11updateStateEN18QAbstractAnimation5StateES1_'/>
<fun r='_ZN17QVariantAnimation18updateCurrentValueERK8QVariant'/>
<fun r='_ZNK17QVariantAnimation12interpolatedERK8QVariantS2_d'/>
<fun r='_ZN17QVariantAnimation20registerInterpolatorEPF8QVariantPKvS2_dEi'/>
<fun r='_ZN17QVariantAnimationC1ERKS_'/>
<fun r='_ZN17QVariantAnimation6d_funcEv'/>
<fun r='_ZNK17QVariantAnimation6d_funcEv'/>
<use f='qtbase-6.5.0/src/corelib/animation/qvariantanimation_p.h' l='33' c='_ZN24QVariantAnimationPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/corelib/animation/qvariantanimation_p.h' l='33' c='_ZN24QVariantAnimationPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/corelib/animation/qvariantanimation_p.h' l='33' c='_ZNK24QVariantAnimationPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/corelib/animation/qvariantanimation_p.h' l='33' c='_ZNK24QVariantAnimationPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/corelib/animation/qvariantanimation_p.h' l='33'/>
<use f='qtbase-6.5.0/src/corelib/animation/qvariantanimation_p.h' l='38' c='_ZN24QVariantAnimationPrivate3getEP17QVariantAnimation'/>
<use f='qtbase-6.5.0/src/corelib/animation/qpropertyanimation.cpp' l='115' c='_ZN18QPropertyAnimationC1EP7QObject'/>
<use f='qtbase-6.5.0/src/corelib/animation/qpropertyanimation.cpp' l='127' c='_ZN18QPropertyAnimationC1EP7QObjectRK10QByteArrayS1_'/>
<size>16</size>
<use f='qtbase-6.5.0/src/corelib/animation/qvariantanimation.cpp' l='241' c='_ZN24QVariantAnimationPrivate26setCurrentValueForProgressEd'/>
<size>16</size>
<doc f='qtbase-6.5.0/src/corelib/animation/qvariantanimation.cpp' l='16'>/*!
    \class QVariantAnimation
    \inmodule QtCore
    \ingroup animation
    \brief The QVariantAnimation class provides a base class for animations.
    \since 4.6

    This class is part of \l{The Animation Framework}. It serves as a
    base class for property and item animations, with functions for
    shared functionality.

    The class performs interpolation over
    \l{QVariant}s, but leaves using the interpolated values to its
    subclasses. Currently, Qt provides QPropertyAnimation, which
    animates Qt \l{Qt&apos;s Property System}{properties}. See the
    QPropertyAnimation class description if you wish to animate such
    properties.

    You can then set start and end values for the property by calling
    setStartValue() and setEndValue(), and finally call start() to
    start the animation. QVariantAnimation will interpolate the
    property of the target object and emit valueChanged(). To react to
    a change in the current value you have to reimplement the
    updateCurrentValue() virtual function or connect to said signal.

    It is also possible to set values at specified steps situated
    between the start and end value. The interpolation will then
    touch these points at the specified steps. Note that the start and
    end values are defined as the key values at 0.0 and 1.0.

    There are two ways to affect how QVariantAnimation interpolates
    the values. You can set an easing curve by calling
    setEasingCurve(), and configure the duration by calling
    setDuration(). You can change how the \l{QVariant}s are interpolated
    by creating a subclass of QVariantAnimation, and reimplementing
    the virtual interpolated() function.

    Subclassing QVariantAnimation can be an alternative if you have
    \l{QVariant}s that you do not wish to declare as Qt properties.
    Note, however, that you in most cases will be better off declaring
    your QVariant as a property.

    Not all QVariant types are supported. Below is a list of currently
    supported QVariant types:

    \list
        \li \l{QMetaType::}{Int}
        \li \l{QMetaType::}{UInt}
        \li \l{QMetaType::}{Double}
        \li \l{QMetaType::}{Float}
        \li \l{QMetaType::}{QLine}
        \li \l{QMetaType::}{QLineF}
        \li \l{QMetaType::}{QPoint}
        \li \l{QMetaType::}{QPointF}
        \li \l{QMetaType::}{QSize}
        \li \l{QMetaType::}{QSizeF}
        \li \l{QMetaType::}{QRect}
        \li \l{QMetaType::}{QRectF}
        \li \l{QMetaType::}{QColor}
    \endlist

    If you need to interpolate other variant types, including custom
    types, you have to implement interpolation for these yourself.
    To do this, you can register an interpolator function for a given
    type. This function takes 3 parameters: the start value, the end value,
    and the current progress.

    Example:
    \snippet code/src_corelib_animation_qvariantanimation.cpp 0

    Another option is to reimplement interpolated(), which returns
    interpolation values for the value being interpolated.

    \omit We need some snippets around here. \endomit

    \sa QPropertyAnimation, QAbstractAnimation, {The Animation Framework}
*/</doc>
<fun r='_ZN17QVariantAnimation18updateCurrentValueERK8QVariant'/>
<fun r='_ZN17QVariantAnimationC1EP7QObject'/>
<fun r='_ZN17QVariantAnimationC1ER24QVariantAnimationPrivateP7QObject'/>
<fun r='_ZN17QVariantAnimationD1Ev'/>
<fun r='_ZNK17QVariantAnimation11easingCurveEv'/>
<fun r='_ZN17QVariantAnimation14setEasingCurveERK12QEasingCurve'/>
<fun r='_ZN17QVariantAnimation19bindableEasingCurveEv'/>
<fun r='_ZN17QVariantAnimation20registerInterpolatorEPF8QVariantPKvS2_dEi'/>
<fun r='_ZNK17QVariantAnimation8durationEv'/>
<fun r='_ZN17QVariantAnimation11setDurationEi'/>
<fun r='_ZN17QVariantAnimation16bindableDurationEv'/>
<fun r='_ZNK17QVariantAnimation10startValueEv'/>
<fun r='_ZN17QVariantAnimation13setStartValueERK8QVariant'/>
<fun r='_ZNK17QVariantAnimation8endValueEv'/>
<fun r='_ZN17QVariantAnimation11setEndValueERK8QVariant'/>
<fun r='_ZNK17QVariantAnimation10keyValueAtEd'/>
<fun r='_ZN17QVariantAnimation13setKeyValueAtEdRK8QVariant'/>
<fun r='_ZNK17QVariantAnimation9keyValuesEv'/>
<fun r='_ZN17QVariantAnimation12setKeyValuesERK5QListISt4pairId8QVariantEE'/>
<fun r='_ZNK17QVariantAnimation12currentValueEv'/>
<fun r='_ZN17QVariantAnimation5eventEP6QEvent'/>
<fun r='_ZN17QVariantAnimation11updateStateEN18QAbstractAnimation5StateES1_'/>
<fun r='_ZNK17QVariantAnimation12interpolatedERK8QVariantS2_d'/>
<fun r='_ZN17QVariantAnimation17updateCurrentTimeEi'/>
<ovr f='qtbase-6.5.0/src/widgets/widgets/qtabbar_p.h' l='141' c='QTabBarPrivate::Tab::TabBarAnimation'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtabbar_p.h' l='141'/>
<size>16</size>
<ovr f='qtbase-6.5.0/src/widgets/itemviews/qtreeview_p.h' l='75' c='QTreeViewPrivate::AnimatedOperation'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qtreeview_p.h' l='75'/>
<size>16</size>
