<dec f='qtbase-6.5.0/src/widgets/widgets/qcheckbox.h' l='35' type='Qt::CheckState QCheckBox::checkState() const'/>
<use f='qtbase-6.5.0/src/widgets/accessible/simplewidgets.cpp' l='145' u='c' c='_ZNK17QAccessibleButton5stateEv'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qerrormessage.cpp' l='89' u='c' c='_ZN20QErrorMessagePrivate17helperPrepareShowEP21QPlatformDialogHelper'/>
<use f='qtbase-6.5.0/src/widgets/dialogs/qmessagebox.cpp' l='2733' u='c' c='_ZN18QMessageBoxPrivate17helperPrepareShowEP21QPlatformDialogHelper'/>
<def f='qtbase-6.5.0/src/widgets/widgets/qcheckbox.cpp' l='196' ll='202' type='Qt::CheckState QCheckBox::checkState() const'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qcheckbox.cpp' l='321' u='c' c='_ZN9QCheckBox13checkStateSetEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qcheckbox.cpp' l='335' u='c' c='_ZN9QCheckBox14nextCheckStateEv'/>
<doc f='qtbase-6.5.0/src/widgets/widgets/qcheckbox.cpp' l='190'>/*!
    Returns the checkbox&apos;s check state. If you do not need tristate support,
    you can also use \l QAbstractButton::isChecked(), which returns a boolean.

    \sa setCheckState(), Qt::CheckState
*/</doc>
