<inh f='qtbase-6.5.0/src/corelib/kernel/qobject.h' l='89' c='QObject'/>
<def f='qtbase-6.5.0/src/network/socket/qlocalserver.h' l='19' ll='75'/>
<use f='qtbase-6.5.0/src/network/socket/qlocalserver.h' l='73' c='_ZN12QLocalServerC1ERKS_'/>
<use f='qtbase-6.5.0/src/network/socket/qlocalserver.h' l='73' c='_ZN12QLocalServeraSERKS_'/>
<use f='qtbase-6.5.0/src/network/socket/qlocalserver.h' l='73' c='_ZN12QLocalServeraSERKS_'/>
<use f='qtbase-6.5.0/src/network/socket/qlocalserver_p.h' l='41' c='_ZN19QLocalServerPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/network/socket/qlocalserver_p.h' l='41' c='_ZN19QLocalServerPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/network/socket/qlocalserver_p.h' l='41' c='_ZNK19QLocalServerPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/network/socket/qlocalserver_p.h' l='41' c='_ZNK19QLocalServerPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/network/socket/qlocalserver_p.h' l='41'/>
<size>16</size>
<doc f='qtbase-6.5.0/src/network/socket/qlocalserver.cpp' l='16'>/*!
    \class QLocalServer
    \since 4.4
    \inmodule QtNetwork

    \brief The QLocalServer class provides a local socket based server.

    This class makes it possible to accept incoming local socket
    connections.

    Call listen() to have the server start listening
    for incoming connections on a specified key.  The
    newConnection() signal is then emitted each time a client
    connects to the server.

    Call nextPendingConnection() to accept the pending connection
    as a connected QLocalSocket.  The function returns a pointer to a
    QLocalSocket that can be used for communicating with the client.

    If an error occurs, serverError() returns the type of error, and
    errorString() can be called to get a human readable description
    of what happened.

    When listening for connections, the name which the server is
    listening on is available through serverName().

    Calling close() makes QLocalServer stop listening for incoming connections.

    Although QLocalServer is designed for use with an event loop, it&apos;s possible
    to use it without one. In that case, you must use waitForNewConnection(),
    which blocks until either a connection is available or a timeout expires.

    \sa QLocalSocket, QTcpServer
*/</doc>
<smbr r='QLocalServer::staticMetaObject' t='const QMetaObject'/>
<fun r='_ZNK12QLocalServer10metaObjectEv'/>
<fun r='_ZN12QLocalServer11qt_metacastEPKc'/>
<fun r='_ZN12QLocalServer11qt_metacallEN11QMetaObject4CallEiPPv'/>
<fun r='_ZN12QLocalServer2trEPKcS1_i'/>
<fun r='_ZN12QLocalServer18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv'/>
<fun r='_ZN12QLocalServer6d_funcEv'/>
<fun r='_ZNK12QLocalServer6d_funcEv'/>
<fun r='_ZN12QLocalServer13newConnectionEv'/>
<fun r='_ZN12QLocalServerC1EP7QObject'/>
<fun r='_ZN12QLocalServerD1Ev'/>
<fun r='_ZN12QLocalServer5closeEv'/>
<fun r='_ZNK12QLocalServer11errorStringEv'/>
<fun r='_ZNK12QLocalServer21hasPendingConnectionsEv'/>
<fun r='_ZNK12QLocalServer11isListeningEv'/>
<fun r='_ZN12QLocalServer6listenERK7QString'/>
<fun r='_ZN12QLocalServer6listenEx'/>
<fun r='_ZNK12QLocalServer21maxPendingConnectionsEv'/>
<fun r='_ZN12QLocalServer21nextPendingConnectionEv'/>
<fun r='_ZNK12QLocalServer10serverNameEv'/>
<fun r='_ZNK12QLocalServer14fullServerNameEv'/>
<fun r='_ZN12QLocalServer12removeServerERK7QString'/>
<fun r='_ZNK12QLocalServer11serverErrorEv'/>
<fun r='_ZN12QLocalServer24setMaxPendingConnectionsEi'/>
<fun r='_ZN12QLocalServer20waitForNewConnectionEiPb'/>
<fun r='_ZN12QLocalServer20setListenBacklogSizeEi'/>
<fun r='_ZNK12QLocalServer17listenBacklogSizeEv'/>
<fun r='_ZN12QLocalServer16setSocketOptionsE6QFlagsINS_12SocketOptionEE'/>
<fun r='_ZNK12QLocalServer13socketOptionsEv'/>
<fun r='_ZN12QLocalServer21bindableSocketOptionsEv'/>
<fun r='_ZNK12QLocalServer16socketDescriptorEv'/>
<fun r='_ZN12QLocalServer18incomingConnectionEy'/>
<fun r='_ZN12QLocalServerC1ERKS_'/>
<fun r='_ZN12QLocalServerC1EP7QObject'/>
<fun r='_ZN12QLocalServerD1Ev'/>
<fun r='_ZN12QLocalServer16setSocketOptionsE6QFlagsINS_12SocketOptionEE'/>
<fun r='_ZNK12QLocalServer13socketOptionsEv'/>
<fun r='_ZN12QLocalServer21bindableSocketOptionsEv'/>
<fun r='_ZNK12QLocalServer16socketDescriptorEv'/>
<fun r='_ZN12QLocalServer5closeEv'/>
<fun r='_ZNK12QLocalServer11errorStringEv'/>
<fun r='_ZNK12QLocalServer21hasPendingConnectionsEv'/>
<fun r='_ZN12QLocalServer18incomingConnectionEy'/>
<fun r='_ZNK12QLocalServer11isListeningEv'/>
<fun r='_ZN12QLocalServer6listenERK7QString'/>
<fun r='_ZN12QLocalServer6listenEx'/>
<fun r='_ZNK12QLocalServer21maxPendingConnectionsEv'/>
<fun r='_ZN12QLocalServer21nextPendingConnectionEv'/>
<fun r='_ZN12QLocalServer12removeServerERK7QString'/>
<fun r='_ZNK12QLocalServer10serverNameEv'/>
<fun r='_ZNK12QLocalServer14fullServerNameEv'/>
<fun r='_ZNK12QLocalServer11serverErrorEv'/>
<fun r='_ZN12QLocalServer24setMaxPendingConnectionsEi'/>
<fun r='_ZN12QLocalServer20waitForNewConnectionEiPb'/>
<fun r='_ZN12QLocalServer20setListenBacklogSizeEi'/>
<fun r='_ZNK12QLocalServer17listenBacklogSizeEv'/>
<use f='qtbase-6.5.0/src/network/socket/qlocalserver_unix.cpp' l='67' c='_ZN19QLocalServerPrivate6listenERK7QString'/>
<use f='qtbase-6.5.0/src/network/socket/qlocalserver_unix.cpp' l='195' c='_ZN19QLocalServerPrivate6listenEx'/>
<use f='qtbase-6.5.0/src/network/socket/qlocalserver_unix.cpp' l='262' c='_ZN19QLocalServerPrivate18_q_onNewConnectionEv'/>
<size>16</size>
