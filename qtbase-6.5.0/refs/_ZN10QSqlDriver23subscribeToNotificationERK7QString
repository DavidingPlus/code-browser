<dec f='qtbase-6.5.0/src/sql/kernel/qsqldriver.h' l='86' type='bool QSqlDriver::subscribeToNotification(const QString &amp; name)'/>
<ovr f='qtbase-6.5.0/src/plugins/sqldrivers/sqlite/qsql_sqlite.cpp' l='978' c='_ZN13QSQLiteDriver23subscribeToNotificationERK7QString'/>
<def f='qtbase-6.5.0/src/sql/kernel/qsqldriver.cpp' l='686' ll='690' type='bool QSqlDriver::subscribeToNotification(const QString &amp; name)'/>
<doc f='qtbase-6.5.0/src/sql/kernel/qsqldriver.cpp' l='666'>/*!
    This function is called to subscribe to event notifications from the database.
    \a name identifies the event notification.

    If successful, return true, otherwise return false.

    The database must be open when this function is called. When the database is closed
    by calling close() all subscribed event notifications are automatically unsubscribed.
    Note that calling open() on an already open database may implicitly cause close() to
    be called, which will cause the driver to unsubscribe from all event notifications.

    When an event notification identified by \a name is posted by the database the
    notification() signal is emitted.

    Reimplement this function if you want to provide event notification support in your
    own QSqlDriver subclass,

    \since 4.4
    \sa unsubscribeFromNotification(), subscribedToNotifications(), QSqlDriver::hasFeature()
*/</doc>
