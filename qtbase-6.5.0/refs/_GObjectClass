<use f='include/glib-2.0/gobject/gobject.h' l='188'/>
<use f='include/glib-2.0/gobject/gobject.h' l='190'/>
<def f='include/glib-2.0/gobject/gobject.h' l='315' ll='354'/>
<size>136</size>
<doc f='include/glib-2.0/gobject/gobject.h' l='253'>/**
 * GObjectClass:
 * @g_type_class: the parent class
 * @constructor: the @constructor function is called by g_object_new () to 
 *  complete the object initialization after all the construction properties are
 *  set. The first thing a @constructor implementation must do is chain up to the
 *  @constructor of the parent class. Overriding @constructor should be rarely 
 *  needed, e.g. to handle construct properties, or to implement singletons.
 * @set_property: the generic setter for all properties of this type. Should be
 *  overridden for every type with properties. If implementations of
 *  @set_property don&apos;t emit property change notification explicitly, this will
 *  be done implicitly by the type system. However, if the notify signal is
 *  emitted explicitly, the type system will not emit it a second time.
 * @get_property: the generic getter for all properties of this type. Should be
 *  overridden for every type with properties.
 * @dispose: the @dispose function is supposed to drop all references to other 
 *  objects, but keep the instance otherwise intact, so that client method 
 *  invocations still work. It may be run multiple times (due to reference 
 *  loops). Before returning, @dispose should chain up to the @dispose method 
 *  of the parent class.
 * @finalize: instance finalization function, should finish the finalization of 
 *  the instance begun in @dispose and chain up to the @finalize method of the 
 *  parent class.
 * @dispatch_properties_changed: emits property change notification for a bunch
 *  of properties. Overriding @dispatch_properties_changed should be rarely 
 *  needed.
 * @notify: the class closure for the notify signal
 * @constructed: the @constructed function is called by g_object_new() as the
 *  final step of the object creation process.  At the point of the call, all
 *  construction properties have been set on the object.  The purpose of this
 *  call is to allow for object initialisation steps that can only be performed
 *  after construction properties have been set.  @constructed implementors
 *  should chain up to the @constructed call of their parent class to allow it
 *  to complete its initialisation.
 * 
 * The class structure for the GObject type.
 * 
 * |[&lt;!-- language=&quot;C&quot; --&gt;
 * // Example of implementing a singleton using a constructor.
 * static MySingleton *the_singleton = NULL;
 * 
 * static GObject*
 * my_singleton_constructor (GType                  type,
 *                           guint                  n_construct_params,
 *                           GObjectConstructParam *construct_params)
 * {
 *   GObject *object;
 *   
 *   if (!the_singleton)
 *     {
 *       object = G_OBJECT_CLASS (parent_class)-&gt;constructor (type,
 *                                                            n_construct_params,
 *                                                            construct_params);
 *       the_singleton = MY_SINGLETON (object);
 *     }
 *   else
 *     object = g_object_ref (G_OBJECT (the_singleton));
 * 
 *   return object;
 * }
 * ]|
 */</doc>
<mbr r='_GObjectClass::g_type_class' o='0' t='GTypeClass'/>
<mbr r='_GObjectClass::construct_properties' o='64' t='GSList *'/>
<mbr r='_GObjectClass::constructor' o='128' t='GObject *(*)(GType, guint, GObjectConstructParam *)'/>
<mbr r='_GObjectClass::set_property' o='192' t='void (*)(GObject *, guint, const GValue *, GParamSpec *)'/>
<mbr r='_GObjectClass::get_property' o='256' t='void (*)(GObject *, guint, GValue *, GParamSpec *)'/>
<mbr r='_GObjectClass::dispose' o='320' t='void (*)(GObject *)'/>
<mbr r='_GObjectClass::finalize' o='384' t='void (*)(GObject *)'/>
<mbr r='_GObjectClass::dispatch_properties_changed' o='448' t='void (*)(GObject *, guint, GParamSpec **)'/>
<mbr r='_GObjectClass::notify' o='512' t='void (*)(GObject *, GParamSpec *)'/>
<mbr r='_GObjectClass::constructed' o='576' t='void (*)(GObject *)'/>
<mbr r='_GObjectClass::flags' o='640' t='gsize'/>
<mbr r='_GObjectClass::pdummy' o='704' t='gpointer[6]'/>
