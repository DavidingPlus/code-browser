<dec f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='9590' type='void sqlite3_log(int iErrCode, const char * zFormat)'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='25598' u='c' c='sqlite3MemMalloc'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='25671' u='c' c='sqlite3MemRealloc'/>
<def f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='31285' ll='31292' type='void sqlite3_log(int iErrCode, const char * zFormat)'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='35015' u='c' c='logBadConnection'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='37650' u='c' c='robust_open'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='38226' u='c' c='unixLogErrorAtLine'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='38443' u='c' c='verifyDbFile'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='38447' u='c' c='verifyDbFile'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='38451' u='c' c='verifyDbFile'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='38455' u='c' c='verifyDbFile'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='58428' u='c' c='pager_playback'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='64644' u='c' c='walIndexRecover'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='65446' u='c' c='walLimitSize'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='85306' u='c' c='vdbeCommit'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='85310' u='c' c='vdbeCommit'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='87788' u='c' c='vdbeSafety'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='87796' u='c' c='vdbeSafetyNotNull'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='89215' u='c' c='vdbeUnbind'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='91430' u='c' c='sqlite3VdbeExec'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='99052' u='c' c='sqlite3VdbeExec'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='104224' u='c' c='lookupName'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='125734' u='c' c='errlogFunc'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='133100'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='157850' u='c' c='constructAutomaticIndex'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='161387' u='c' c='whereLoopAddAll'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='173408' u='c' c='sqlite3RunParser'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='177692' u='c' c='sqlite3ReportError'/>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='9569'>/*
** CAPI3REF: Error Logging Interface
**
** ^The [sqlite3_log()] interface writes a message into the [error log]
** established by the [SQLITE_CONFIG_LOG] option to [sqlite3_config()].
** ^If logging is enabled, the zFormat string and subsequent arguments are
** used with [sqlite3_snprintf()] to generate the final output string.
**
** The sqlite3_log() interface is intended for use by extensions such as
** virtual tables, collating functions, and SQL functions.  While there is
** nothing to prevent an application from calling sqlite3_log(), doing so
** is considered bad form.
**
** The zFormat string must not be NULL.
**
** To avoid deadlocks and other threading problems, the sqlite3_log() routine
** will not use dynamically allocated memory.  The log message is stored in
** a fixed-length buffer on the stack.  If the log message is longer than
** a few hundred characters, it will be truncated to the length of the
** buffer.
*/</doc>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='31282'>/*
** Format and write a message to the log if logging is enabled.
*/</doc>
<dec f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='9284' type='void sqlite3_log(int iErrCode, const char * zFormat)'/>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='9263'>/*
** CAPI3REF: Error Logging Interface
**
** ^The [sqlite3_log()] interface writes a message into the [error log]
** established by the [SQLITE_CONFIG_LOG] option to [sqlite3_config()].
** ^If logging is enabled, the zFormat string and subsequent arguments are
** used with [sqlite3_snprintf()] to generate the final output string.
**
** The sqlite3_log() interface is intended for use by extensions such as
** virtual tables, collating functions, and SQL functions.  While there is
** nothing to prevent an application from calling sqlite3_log(), doing so
** is considered bad form.
**
** The zFormat string must not be NULL.
**
** To avoid deadlocks and other threading problems, the sqlite3_log() routine
** will not use dynamically allocated memory.  The log message is stored in
** a fixed-length buffer on the stack.  If the log message is longer than
** a few hundred characters, it will be truncated to the length of the
** buffer.
*/</doc>
