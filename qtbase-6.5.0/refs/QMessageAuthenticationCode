<def f='qtbase-6.5.0/src/corelib/tools/qmessageauthenticationcode.h' l='16' ll='39'/>
<use f='qtbase-6.5.0/src/corelib/tools/qmessageauthenticationcode.h' l='37' c='_ZN26QMessageAuthenticationCodeC1ERKS_'/>
<use f='qtbase-6.5.0/src/corelib/tools/qmessageauthenticationcode.h' l='37' c='_ZN26QMessageAuthenticationCodeaSERKS_'/>
<use f='qtbase-6.5.0/src/corelib/tools/qmessageauthenticationcode.h' l='37' c='_ZN26QMessageAuthenticationCodeaSERKS_'/>
<size>8</size>
<doc f='qtbase-6.5.0/src/corelib/tools/qmessageauthenticationcode.h' l='15'>// implemented in qcryptographichash.cpp</doc>
<fun r='_ZN26QMessageAuthenticationCodeC1EN18QCryptographicHash9AlgorithmERK10QByteArray'/>
<fun r='_ZN26QMessageAuthenticationCodeD1Ev'/>
<fun r='_ZN26QMessageAuthenticationCode5resetEv'/>
<fun r='_ZN26QMessageAuthenticationCode6setKeyERK10QByteArray'/>
<fun r='_ZN26QMessageAuthenticationCode7addDataEPKcx'/>
<fun r='_ZN26QMessageAuthenticationCode7addDataERK10QByteArray'/>
<fun r='_ZN26QMessageAuthenticationCode7addDataEP9QIODevice'/>
<fun r='_ZNK26QMessageAuthenticationCode6resultEv'/>
<fun r='_ZN26QMessageAuthenticationCode4hashERK10QByteArrayS2_N18QCryptographicHash9AlgorithmE'/>
<fun r='_ZN26QMessageAuthenticationCodeC1ERKS_'/>
<mbr r='QMessageAuthenticationCode::d' o='0' t='QMessageAuthenticationCodePrivate *'/>
<doc f='qtbase-6.5.0/src/corelib/tools/qcryptographichash.cpp' l='1045'>/*!
    \class QMessageAuthenticationCode
    \inmodule QtCore

    \brief The QMessageAuthenticationCode class provides a way to generate
    hash-based message authentication codes.

    \since 5.1

    \ingroup tools
    \reentrant

    QMessageAuthenticationCode supports all cryptographic hashes which are supported by
    QCryptographicHash.

    To generate message authentication code, pass hash algorithm QCryptographicHash::Algorithm
    to constructor, then set key and message by setKey() and addData() functions. Result
    can be acquired by result() function.
    \snippet qmessageauthenticationcode/main.cpp 0
    \dots
    \snippet qmessageauthenticationcode/main.cpp 1

    Alternatively, this effect can be achieved by providing message,
    key and method to hash() method.
    \snippet qmessageauthenticationcode/main.cpp 2

    \sa QCryptographicHash
*/</doc>
<fun r='_ZN26QMessageAuthenticationCodeC1EN18QCryptographicHash9AlgorithmERK10QByteArray'/>
<fun r='_ZN26QMessageAuthenticationCodeD1Ev'/>
<fun r='_ZN26QMessageAuthenticationCode5resetEv'/>
<fun r='_ZN26QMessageAuthenticationCode6setKeyERK10QByteArray'/>
<fun r='_ZN26QMessageAuthenticationCode7addDataEPKcx'/>
<fun r='_ZN26QMessageAuthenticationCode7addDataERK10QByteArray'/>
<fun r='_ZN26QMessageAuthenticationCode7addDataEP9QIODevice'/>
<fun r='_ZNK26QMessageAuthenticationCode6resultEv'/>
<fun r='_ZN26QMessageAuthenticationCode4hashERK10QByteArrayS2_N18QCryptographicHash9AlgorithmE'/>
<use f='qtbase-6.5.0/src/network/ssl/qpassworddigestor.cpp' l='127' c='_ZN17QPasswordDigestor15deriveKeyPbkdf2EN18QCryptographicHash9AlgorithmERK10QByteArrayS4_iy'/>
<size>8</size>
