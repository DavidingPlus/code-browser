<use f='qtbase-6.5.0/src/corelib/io/qfile.h' l='295'/>
<inh f='qtbase-6.5.0/src/corelib/io/qfile.h' l='64' c='QFile'/>
<def f='qtbase-6.5.0/src/corelib/io/qtemporaryfile.h' l='22' ll='62'/>
<use f='qtbase-6.5.0/src/corelib/io/qtemporaryfile.h' l='51' c='_ZN14QTemporaryFile16createNativeFileERK7QString'/>
<use f='qtbase-6.5.0/src/corelib/io/qtemporaryfile.h' l='53' c='_ZN14QTemporaryFile16createNativeFileER5QFile'/>
<use f='qtbase-6.5.0/src/corelib/io/qtemporaryfile.h' l='61' c='_ZN14QTemporaryFileC1ERKS_'/>
<use f='qtbase-6.5.0/src/corelib/io/qtemporaryfile.h' l='61' c='_ZN14QTemporaryFileaSERKS_'/>
<use f='qtbase-6.5.0/src/corelib/io/qtemporaryfile.h' l='61' c='_ZN14QTemporaryFileaSERKS_'/>
<size>16</size>
<smbr r='QTemporaryFile::staticMetaObject' t='const QMetaObject'/>
<fun r='_ZNK14QTemporaryFile10metaObjectEv'/>
<fun r='_ZN14QTemporaryFile11qt_metacastEPKc'/>
<fun r='_ZN14QTemporaryFile11qt_metacallEN11QMetaObject4CallEiPPv'/>
<fun r='_ZN14QTemporaryFile2trEPKcS1_i'/>
<fun r='_ZN14QTemporaryFile18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv'/>
<fun r='_ZN14QTemporaryFile6d_funcEv'/>
<fun r='_ZNK14QTemporaryFile6d_funcEv'/>
<fun r='_ZN14QTemporaryFileC1Ev'/>
<fun r='_ZN14QTemporaryFileC1ERK7QString'/>
<fun r='_ZN14QTemporaryFileC1EP7QObject'/>
<fun r='_ZN14QTemporaryFileC1ERK7QStringP7QObject'/>
<fun r='_ZN14QTemporaryFileD1Ev'/>
<fun r='_ZNK14QTemporaryFile10autoRemoveEv'/>
<fun r='_ZN14QTemporaryFile13setAutoRemoveEb'/>
<fun r='_ZN14QTemporaryFile4openEv'/>
<fun r='_ZNK14QTemporaryFile8fileNameEv'/>
<fun r='_ZNK14QTemporaryFile12fileTemplateEv'/>
<fun r='_ZN14QTemporaryFile15setFileTemplateERK7QString'/>
<fun r='_ZN14QTemporaryFile6renameERK7QString'/>
<fun r='_ZN14QTemporaryFile16createNativeFileERK7QString'/>
<fun r='_ZN14QTemporaryFile16createNativeFileER5QFile'/>
<fun r='_ZN14QTemporaryFile4openE6QFlagsIN13QIODeviceBase12OpenModeFlagEE'/>
<fun r='_ZN14QTemporaryFileC1ERKS_'/>
<use f='qtbase-6.5.0/src/corelib/io/qfile_p.h' l='28'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='147' c='_ZNK9QConfFile10isWritableEv'/>
<size>16</size>
<doc f='qtbase-6.5.0/src/corelib/io/qtemporaryfile.cpp' l='552'>/*!
    \class QTemporaryFile
    \inmodule QtCore
    \reentrant
    \brief The QTemporaryFile class is an I/O device that operates on temporary files.

    \ingroup io


    QTemporaryFile is used to create unique temporary files safely.
    The file itself is created by calling open(). The name of the
    temporary file is guaranteed to be unique (i.e., you are
    guaranteed to not overwrite an existing file), and the file will
    subsequently be removed upon destruction of the QTemporaryFile
    object. This is an important technique that avoids data
    corruption for applications that store data in temporary files.
    The file name is either auto-generated, or created based on a
    template, which is passed to QTemporaryFile&apos;s constructor.

    Example:

    \snippet code/src_corelib_io_qtemporaryfile.cpp 0

    Reopening a QTemporaryFile after calling close() is safe. For as long as
    the QTemporaryFile object itself is not destroyed, the unique temporary
    file will exist and be kept open internally by QTemporaryFile.

    The file name of the temporary file can be found by calling fileName().
    Note that this is only defined after the file is first opened; the function
    returns an empty string before this.

    A temporary file will have some static part of the name and some
    part that is calculated to be unique. The default filename will be
    determined from QCoreApplication::applicationName() (otherwise \c qt_temp) and will
    be placed into the temporary path as returned by QDir::tempPath().
    If you specify your own filename, a relative file path will not be placed in the
    temporary directory by default, but be relative to the current working directory.
    It is important to specify the correct directory if the rename() function will be
    called, as QTemporaryFile can only rename files within the same volume / filesystem
    as the temporary file itself was created on.

    Specified filenames can contain the following template \c XXXXXX
    (six upper case &quot;X&quot; characters), which will be replaced by the
    auto-generated portion of the filename. Note that the template is
    case sensitive. If the template is not present in the filename,
    QTemporaryFile appends the generated part to the filename given.

    \note On Linux, QTemporaryFile will attempt to create unnamed temporary
    files. If that succeeds, open() will return true but exists() will be
    false. If you call fileName() or any function that calls it,
    QTemporaryFile will give the file a name, so most applications will
    not see a difference.

    \sa QDir::tempPath(), QFile
*/</doc>
<use f='qtbase-6.5.0/src/gui/painting/qpdf.cpp' l='287' c='_ZN4QPdf10ByteStream13prepareBufferEv'/>
<use f='qtbase-6.5.0/src/gui/painting/qpdf.cpp' l='287' c='_ZN4QPdf10ByteStream13prepareBufferEv'/>
<size>16</size>
<use f='qtbase-6.5.0/src/gui/platform/unix/dbustray/qdbustrayicon_p.h' l='105' c='_ZN13QDBusTrayIcon8tempIconERK5QIcon'/>
<use f='qtbase-6.5.0/src/gui/platform/unix/dbustray/qdbustrayicon_p.h' l='121'/>
<use f='qtbase-6.5.0/src/gui/platform/unix/dbustray/qdbustrayicon_p.h' l='124'/>
<size>16</size>
<use f='qtbase-6.5.0/src/gui/platform/unix/dbustray/qdbustrayicon.cpp' l='171' c='_ZN13QDBusTrayIcon8tempIconERK5QIcon'/>
<use f='qtbase-6.5.0/src/gui/platform/unix/dbustray/qdbustrayicon.cpp' l='200' c='_ZN13QDBusTrayIcon8tempIconERK5QIcon'/>
<use f='qtbase-6.5.0/src/gui/platform/unix/dbustray/qdbustrayicon.cpp' l='200' c='_ZN13QDBusTrayIcon8tempIconERK5QIcon'/>
<size>16</size>
<use f='qtbase-6.5.0/src/network/access/qnetworkdiskcache_p.h' l='44'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkdiskcache.cpp' l='178' c='_ZN17QNetworkDiskCache7prepareERK21QNetworkCacheMetaData'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkdiskcache.cpp' l='252' c='_ZN24QNetworkDiskCachePrivate9storeItemEP10QCacheItem'/>
<size>16</size>
