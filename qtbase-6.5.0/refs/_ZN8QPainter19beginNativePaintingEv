<dec f='qtbase-6.5.0/src/gui/painting/qpainter.h' l='411' type='void QPainter::beginNativePainting()'/>
<def f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='1939' ll='1949' type='void QPainter::beginNativePainting()'/>
<doc f='qtbase-6.5.0/src/gui/painting/qpainter.cpp' l='1907'>/*!
    \since 4.6

    Flushes the painting pipeline and prepares for the user issuing commands
    directly to the underlying graphics context. Must be followed by a call to
    endNativePainting().

    Note that only the states the underlying paint engine changes will be reset
    to their respective default states. The states we reset may change from
    release to release. The following states are currently reset in the OpenGL
    2 engine:

    \list
    \li blending is disabled
    \li the depth, stencil and scissor tests are disabled
    \li the active texture unit is reset to 0
    \li the depth mask, depth function and the clear depth are reset to their
    default values
    \li the stencil mask, stencil operation and stencil function are reset to
    their default values
     \li the current color is reset to solid white
    \endlist

    If, for example, the OpenGL polygon mode is changed by the user inside a
    beginNativePaint()/endNativePainting() block, it will not be reset to the
    default state by endNativePainting(). Here is an example that shows
    intermixing of painter commands and raw OpenGL commands:

    \snippet code/src_gui_painting_qpainter.cpp 21

    \sa endNativePainting()
*/</doc>
