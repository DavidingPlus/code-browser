<dec f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.h' l='105' type='void QOpenGLShaderProgram::setPatchVertexCount(int count)'/>
<def f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.cpp' l='3494' ll='3498' type='void QOpenGLShaderProgram::setPatchVertexCount(int count)'/>
<doc f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.cpp' l='3476'>/*!
    Use this function to specify to OpenGL the number of vertices in
    a patch to \a count. A patch is a custom OpenGL primitive whose interpretation
    is entirely defined by the tessellation shader stages. Therefore, calling
    this function only makes sense when using a QOpenGLShaderProgram
    containing tessellation stage shaders. When using OpenGL tessellation,
    the only primitive that can be rendered with \c{glDraw*()} functions is
    \c{GL_PATCHES}.

    This is equivalent to calling glPatchParameteri(GL_PATCH_VERTICES, count).

    \note This modifies global OpenGL state and is not specific to this
    QOpenGLShaderProgram instance. You should call this in your render
    function when needed, as QOpenGLShaderProgram will not apply this for
    you. This is purely a convenience function.

    \sa patchVertexCount()
*/</doc>
