<dec f='qtbase-6.5.0/src/corelib/kernel/qproperty.h' l='52' type='void Qt::beginPropertyUpdateGroup()'/>
<use f='qtbase-6.5.0/src/corelib/animation/qabstractanimation.cpp' l='1124' u='c' c='_ZN18QAbstractAnimation12setDirectionENS_9DirectionE'/>
<use f='qtbase-6.5.0/src/corelib/itemmodels/qsortfilterproxymodel.cpp' l='2623' u='c' c='_ZN21QSortFilterProxyModel26setFilterRegularExpressionERK18QRegularExpression'/>
<use f='qtbase-6.5.0/src/corelib/itemmodels/qsortfilterproxymodel.cpp' l='2718' u='c' c='_ZN21QSortFilterProxyModel24setFilterCaseSensitivityEN2Qt15CaseSensitivityE'/>
<def f='qtbase-6.5.0/src/corelib/kernel/qproperty.cpp' l='190' ll='196' type='void Qt::beginPropertyUpdateGroup()'/>
<doc f='qtbase-6.5.0/src/corelib/kernel/qproperty.cpp' l='170'>/*!
    \since 6.2

    \relates QProperty

    Marks the beginning of a property update group. Inside this group,
    changing a property does neither immediately update any dependent properties
    nor does it trigger change notifications.
    Those are instead deferred until the group is ended by a call to endPropertyUpdateGroup.

    Groups can be nested. In that case, the deferral ends only after the outermost group has been
    ended.

    \note Change notifications are only send after all property values affected by the group have
    been updated to their new values. This allows re-establishing a  class invariant if multiple
    properties need to be updated, preventing any external observer from noticing an inconsistent
    state.

    \sa Qt::endPropertyUpdateGroup
*/</doc>
