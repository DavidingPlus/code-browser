<use f='include/freetype2/freetype/freetype.h' l='499'/>
<def f='include/freetype2/freetype/freetype.h' l='1041' ll='1097'/>
<use f='include/freetype2/freetype/freetype.h' l='1041'/>
<size>248</size>
<doc f='include/freetype2/freetype/freetype.h' l='867'>/**************************************************************************
   *
   * @struct:
   *   FT_FaceRec
   *
   * @description:
   *   FreeType root face class structure.  A face object models a typeface
   *   in a font file.
   *
   * @fields:
   *   num_faces ::
   *     The number of faces in the font file.  Some font formats can have
   *     multiple faces in a single font file.
   *
   *   face_index ::
   *     This field holds two different values.  Bits 0-15 are the index of
   *     the face in the font file (starting with value~0).  They are set
   *     to~0 if there is only one face in the font file.
   *
   *     [Since 2.6.1] Bits 16-30 are relevant to GX and OpenType variation
   *     fonts only, holding the named instance index for the current face
   *     index (starting with value~1; value~0 indicates font access without
   *     a named instance).  For non-variation fonts, bits 16-30 are ignored.
   *     If we have the third named instance of face~4, say, `face_index` is
   *     set to 0x00030004.
   *
   *     Bit 31 is always zero (this is, `face_index` is always a positive
   *     value).
   *
   *     [Since 2.9] Changing the design coordinates with
   *     @FT_Set_Var_Design_Coordinates or @FT_Set_Var_Blend_Coordinates does
   *     not influence the named instance index value (only
   *     @FT_Set_Named_Instance does that).
   *
   *   face_flags ::
   *     A set of bit flags that give important information about the face;
   *     see @FT_FACE_FLAG_XXX for the details.
   *
   *   style_flags ::
   *     The lower 16~bits contain a set of bit flags indicating the style of
   *     the face; see @FT_STYLE_FLAG_XXX for the details.
   *
   *     [Since 2.6.1] Bits 16-30 hold the number of named instances
   *     available for the current face if we have a GX or OpenType variation
   *     (sub)font.  Bit 31 is always zero (this is, `style_flags` is always
   *     a positive value).  Note that a variation font has always at least
   *     one named instance, namely the default instance.
   *
   *   num_glyphs ::
   *     The number of glyphs in the face.  If the face is scalable and has
   *     sbits (see `num_fixed_sizes`), it is set to the number of outline
   *     glyphs.
   *
   *     For CID-keyed fonts (not in an SFNT wrapper) this value gives the
   *     highest CID used in the font.
   *
   *   family_name ::
   *     The face&apos;s family name.  This is an ASCII string, usually in
   *     English, that describes the typeface&apos;s family (like &apos;Times New
   *     Roman&apos;, &apos;Bodoni&apos;, &apos;Garamond&apos;, etc).  This is a least common
   *     denominator used to list fonts.  Some formats (TrueType &amp; OpenType)
   *     provide localized and Unicode versions of this string.  Applications
   *     should use the format-specific interface to access them.  Can be
   *     `NULL` (e.g., in fonts embedded in a PDF file).
   *
   *     In case the font doesn&apos;t provide a specific family name entry,
   *     FreeType tries to synthesize one, deriving it from other name
   *     entries.
   *
   *   style_name ::
   *     The face&apos;s style name.  This is an ASCII string, usually in English,
   *     that describes the typeface&apos;s style (like &apos;Italic&apos;, &apos;Bold&apos;,
   *     &apos;Condensed&apos;, etc).  Not all font formats provide a style name, so
   *     this field is optional, and can be set to `NULL`.  As for
   *     `family_name`, some formats provide localized and Unicode versions
   *     of this string.  Applications should use the format-specific
   *     interface to access them.
   *
   *   num_fixed_sizes ::
   *     The number of bitmap strikes in the face.  Even if the face is
   *     scalable, there might still be bitmap strikes, which are called
   *     &apos;sbits&apos; in that case.
   *
   *   available_sizes ::
   *     An array of @FT_Bitmap_Size for all bitmap strikes in the face.  It
   *     is set to `NULL` if there is no bitmap strike.
   *
   *     Note that FreeType tries to sanitize the strike data since they are
   *     sometimes sloppy or incorrect, but this can easily fail.
   *
   *   num_charmaps ::
   *     The number of charmaps in the face.
   *
   *   charmaps ::
   *     An array of the charmaps of the face.
   *
   *   generic ::
   *     A field reserved for client uses.  See the @FT_Generic type
   *     description.
   *
   *   bbox ::
   *     The font bounding box.  Coordinates are expressed in font units (see
   *     `units_per_EM`).  The box is large enough to contain any glyph from
   *     the font.  Thus, `bbox.yMax` can be seen as the &apos;maximum ascender&apos;,
   *     and `bbox.yMin` as the &apos;minimum descender&apos;.  Only relevant for
   *     scalable formats.
   *
   *     Note that the bounding box might be off by (at least) one pixel for
   *     hinted fonts.  See @FT_Size_Metrics for further discussion.
   *
   *   units_per_EM ::
   *     The number of font units per EM square for this face.  This is
   *     typically 2048 for TrueType fonts, and 1000 for Type~1 fonts.  Only
   *     relevant for scalable formats.
   *
   *   ascender ::
   *     The typographic ascender of the face, expressed in font units.  For
   *     font formats not having this information, it is set to `bbox.yMax`.
   *     Only relevant for scalable formats.
   *
   *   descender ::
   *     The typographic descender of the face, expressed in font units.  For
   *     font formats not having this information, it is set to `bbox.yMin`.
   *     Note that this field is negative for values below the baseline.
   *     Only relevant for scalable formats.
   *
   *   height ::
   *     This value is the vertical distance between two consecutive
   *     baselines, expressed in font units.  It is always positive.  Only
   *     relevant for scalable formats.
   *
   *     If you want the global glyph height, use `ascender - descender`.
   *
   *   max_advance_width ::
   *     The maximum advance width, in font units, for all glyphs in this
   *     face.  This can be used to make word wrapping computations faster.
   *     Only relevant for scalable formats.
   *
   *   max_advance_height ::
   *     The maximum advance height, in font units, for all glyphs in this
   *     face.  This is only relevant for vertical layouts, and is set to
   *     `height` for fonts that do not provide vertical metrics.  Only
   *     relevant for scalable formats.
   *
   *   underline_position ::
   *     The position, in font units, of the underline line for this face.
   *     It is the center of the underlining stem.  Only relevant for
   *     scalable formats.
   *
   *   underline_thickness ::
   *     The thickness, in font units, of the underline for this face.  Only
   *     relevant for scalable formats.
   *
   *   glyph ::
   *     The face&apos;s associated glyph slot(s).
   *
   *   size ::
   *     The current active size for this face.
   *
   *   charmap ::
   *     The current active charmap for this face.
   *
   * @note:
   *   Fields may be changed after a call to @FT_Attach_File or
   *   @FT_Attach_Stream.
   *
   *   For an OpenType variation font, the values of the following fields can
   *   change after a call to @FT_Set_Var_Design_Coordinates (and friends) if
   *   the font contains an &apos;MVAR&apos; table: `ascender`, `descender`, `height`,
   *   `underline_position`, and `underline_thickness`.
   *
   *   Especially for TrueType fonts see also the documentation for
   *   @FT_Size_Metrics.
   */</doc>
<mbr r='FT_FaceRec_::num_faces' o='0' t='FT_Long'/>
<mbr r='FT_FaceRec_::face_index' o='64' t='FT_Long'/>
<mbr r='FT_FaceRec_::face_flags' o='128' t='FT_Long'/>
<mbr r='FT_FaceRec_::style_flags' o='192' t='FT_Long'/>
<mbr r='FT_FaceRec_::num_glyphs' o='256' t='FT_Long'/>
<mbr r='FT_FaceRec_::family_name' o='320' t='FT_String *'/>
<mbr r='FT_FaceRec_::style_name' o='384' t='FT_String *'/>
<mbr r='FT_FaceRec_::num_fixed_sizes' o='448' t='FT_Int'/>
<mbr r='FT_FaceRec_::available_sizes' o='512' t='FT_Bitmap_Size *'/>
<mbr r='FT_FaceRec_::num_charmaps' o='576' t='FT_Int'/>
<mbr r='FT_FaceRec_::charmaps' o='640' t='FT_CharMap *'/>
<mbr r='FT_FaceRec_::generic' o='704' t='FT_Generic'/>
<mbr r='FT_FaceRec_::bbox' o='832' t='FT_BBox'/>
<mbr r='FT_FaceRec_::units_per_EM' o='1088' t='FT_UShort'/>
<mbr r='FT_FaceRec_::ascender' o='1104' t='FT_Short'/>
<mbr r='FT_FaceRec_::descender' o='1120' t='FT_Short'/>
<mbr r='FT_FaceRec_::height' o='1136' t='FT_Short'/>
<mbr r='FT_FaceRec_::max_advance_width' o='1152' t='FT_Short'/>
<mbr r='FT_FaceRec_::max_advance_height' o='1168' t='FT_Short'/>
<mbr r='FT_FaceRec_::underline_position' o='1184' t='FT_Short'/>
<mbr r='FT_FaceRec_::underline_thickness' o='1200' t='FT_Short'/>
<mbr r='FT_FaceRec_::glyph' o='1216' t='FT_GlyphSlot'/>
<mbr r='FT_FaceRec_::size' o='1280' t='FT_Size'/>
<mbr r='FT_FaceRec_::charmap' o='1344' t='FT_CharMap'/>
<mbr r='FT_FaceRec_::driver' o='1408' t='FT_Driver'/>
<mbr r='FT_FaceRec_::memory' o='1472' t='FT_Memory'/>
<mbr r='FT_FaceRec_::stream' o='1536' t='FT_Stream'/>
<mbr r='FT_FaceRec_::sizes_list' o='1600' t='FT_ListRec'/>
<mbr r='FT_FaceRec_::autohint' o='1728' t='FT_Generic'/>
<mbr r='FT_FaceRec_::extensions' o='1856' t='void *'/>
<mbr r='FT_FaceRec_::internal' o='1920' t='FT_Face_Internal'/>
