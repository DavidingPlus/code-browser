<dec f='qtbase-6.5.0/src/widgets/kernel/qapplication.h' l='56' type='static void QApplication::setStyle(QStyle * )'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qapplication.cpp' l='525' u='c' c='_ZN19QApplicationPrivate10initializeEv'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qapplication.cpp' l='881' u='c' c='_ZN12QApplication13setStyleSheetERK7QString'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qapplication.cpp' l='887' u='c' c='_ZN12QApplication13setStyleSheetERK7QString'/>
<def f='qtbase-6.5.0/src/widgets/kernel/qapplication.cpp' l='962' ll='1049' type='static void QApplication::setStyle(QStyle * style)'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qapplication.cpp' l='1073' u='c' c='_ZN12QApplication8setStyleERK7QString'/>
<doc f='qtbase-6.5.0/src/widgets/kernel/qapplication.cpp' l='940'>/*!
    Sets the application&apos;s GUI style to \a style. Ownership of the style object
    is transferred to QApplication, so QApplication will delete the style
    object on application exit or when a new style is set and the old style is
    still the parent of the application object.

    Example usage:
    \snippet code/src_gui_kernel_qapplication.cpp 1

    When switching application styles, the color palette is set back to the
    initial colors or the system defaults. This is necessary since certain
    styles have to adapt the color palette to be fully style-guide compliant.

    Setting the style before a palette has been set, i.e., before creating
    QApplication, will cause the application to use QStyle::standardPalette()
    for the palette.

    \warning Qt style sheets are currently not supported for custom QStyle
    subclasses. We plan to address this in some future release.

    \sa style(), QStyle, setPalette(), desktopSettingsAware()
*/</doc>
