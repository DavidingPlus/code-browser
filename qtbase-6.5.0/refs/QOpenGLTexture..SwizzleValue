<def f='qtbase-6.5.0/src/opengl/qopengltexture.h' l='321' ll='328'/>
<use f='qtbase-6.5.0/src/opengl/qopengltexture.h' l='329' c='_Z20qt_getEnumMetaObjectN14QOpenGLTexture12SwizzleValueE'/>
<use f='qtbase-6.5.0/src/opengl/qopengltexture.h' l='329' c='_Z14qt_getEnumNameN14QOpenGLTexture12SwizzleValueE'/>
<use f='qtbase-6.5.0/src/opengl/qopengltexture.h' l='497' c='_ZN14QOpenGLTexture14setSwizzleMaskENS_16SwizzleComponentENS_12SwizzleValueE'/>
<use f='qtbase-6.5.0/src/opengl/qopengltexture.h' l='498' c='_ZN14QOpenGLTexture14setSwizzleMaskENS_12SwizzleValueES0_S0_S0_'/>
<use f='qtbase-6.5.0/src/opengl/qopengltexture.h' l='498' c='_ZN14QOpenGLTexture14setSwizzleMaskENS_12SwizzleValueES0_S0_S0_'/>
<use f='qtbase-6.5.0/src/opengl/qopengltexture.h' l='499' c='_ZN14QOpenGLTexture14setSwizzleMaskENS_12SwizzleValueES0_S0_S0_'/>
<use f='qtbase-6.5.0/src/opengl/qopengltexture.h' l='499' c='_ZN14QOpenGLTexture14setSwizzleMaskENS_12SwizzleValueES0_S0_S0_'/>
<use f='qtbase-6.5.0/src/opengl/qopengltexture.h' l='500' c='_ZNK14QOpenGLTexture11swizzleMaskENS_16SwizzleComponentE'/>
<use f='qtbase-6.5.0/src/opengl/qopengltexture_p.h' l='118'/>
<use f='qtbase-6.5.0/src/opengl/qopengltexture.cpp' l='4086' c='_ZN14QOpenGLTexture14setSwizzleMaskENS_16SwizzleComponentENS_12SwizzleValueE'/>
<use f='qtbase-6.5.0/src/opengl/qopengltexture.cpp' l='4114' c='_ZN14QOpenGLTexture14setSwizzleMaskENS_12SwizzleValueES0_S0_S0_'/>
<use f='qtbase-6.5.0/src/opengl/qopengltexture.cpp' l='4114' c='_ZN14QOpenGLTexture14setSwizzleMaskENS_12SwizzleValueES0_S0_S0_'/>
<use f='qtbase-6.5.0/src/opengl/qopengltexture.cpp' l='4115' c='_ZN14QOpenGLTexture14setSwizzleMaskENS_12SwizzleValueES0_S0_S0_'/>
<use f='qtbase-6.5.0/src/opengl/qopengltexture.cpp' l='4115' c='_ZN14QOpenGLTexture14setSwizzleMaskENS_12SwizzleValueES0_S0_S0_'/>
<use f='qtbase-6.5.0/src/opengl/qopengltexture.cpp' l='4147' c='_ZNK14QOpenGLTexture11swizzleMaskENS_16SwizzleComponentE'/>
<doc f='qtbase-6.5.0/src/opengl/qopengltexture.cpp' l='2406'>/*!
    \enum QOpenGLTexture::SwizzleValue
    This enum defines the possible mask values for texture swizzling.

    \value RedValue Maps the component to the red channel. Equivalent to GL_RED
    \value GreenValue Maps the component to the green channel. Equivalent to GL_GREEN
    \value BlueValue Maps the component to the blue channel. Equivalent to GL_BLUE
    \value AlphaValue Maps the component to the alpha channel. Equivalent to GL_ALPHA
    \value ZeroValue Maps the component to a fixed value of 0. Equivalent to GL_ZERO
    \value OneValue Maps the component to a fixed value of 1. Equivalent to GL_ONE
*/</doc>
