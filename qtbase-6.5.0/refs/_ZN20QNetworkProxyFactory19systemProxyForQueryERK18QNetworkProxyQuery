<dec f='qtbase-6.5.0/src/network/kernel/qnetworkproxy.h' l='167' type='static QList&lt;QNetworkProxy&gt; QNetworkProxyFactory::systemProxyForQuery(const QNetworkProxyQuery &amp; query = QNetworkProxyQuery())'/>
<use f='qtbase-6.5.0/src/network/kernel/qnetworkproxy.cpp' l='336' u='c' c='_ZN19QGlobalNetworkProxy13proxyForQueryERK18QNetworkProxyQuery'/>
<doc f='qtbase-6.5.0/src/network/kernel/qnetworkproxy.cpp' l='1447'>/*!
    \fn QList&lt;QNetworkProxy&gt; QNetworkProxyFactory::systemProxyForQuery(const QNetworkProxyQuery &amp;query)

    This function takes the query request, \a query,
    examines the details of the type of socket or request and returns
    a list of QNetworkProxy objects that indicate the proxy servers to
    be used, in order of preference.

    This function can be used to determine the platform-specific proxy
    settings. This function will use the libraries provided by the
    operating system to determine the proxy for a given connection, if
    such libraries exist. If they don&apos;t, this function will just return a
    QNetworkProxy of type QNetworkProxy::NoProxy.

    On Windows, this function will use the WinHTTP DLL functions. Despite
    its name, Microsoft suggests using it for all applications that
    require network connections, not just HTTP. This will respect the
    proxy settings set on the registry with the proxycfg.exe tool. If
    those settings are not found, this function will attempt to obtain
    Internet Explorer&apos;s settings and use them.

    On \macos, this function will obtain the proxy settings using the
    SystemConfiguration framework from Apple. It will apply the FTP,
    HTTP and HTTPS proxy configurations for queries that contain the
    protocol tag &quot;ftp&quot;, &quot;http&quot; and &quot;https&quot;, respectively. If the SOCKS
    proxy is enabled in that configuration, this function will use the
    SOCKS server for all queries. If SOCKS isn&apos;t enabled, it will use
    the HTTPS proxy for all TcpSocket and UrlRequest queries.

    On systems configured with libproxy support, this function will
    rely on libproxy to obtain the proxy settings. Depending on
    libproxy configurations, this can in turn delegate to desktop
    settings, environment variables, etc.

    On other systems, this function will pick up proxy settings from
    the &quot;http_proxy&quot; environment variable. This variable must be a URL
    using one of the following schemes: &quot;http&quot;, &quot;socks5&quot; or &quot;socks5h&quot;.

    \section1 Limitations

    These are the limitations for the current version of this
    function. Future versions of Qt may lift some of the limitations
    listed here.

    \list
    \li On \macos, this function will ignore the Proxy Auto Configuration
    settings, since it cannot execute the associated ECMAScript code.

    \li On Windows platforms, this function may take several seconds to
    execute depending on the configuration of the user&apos;s system.
    \endlist
*/</doc>
<def f='qtbase-6.5.0/src/network/kernel/qnetworkproxy_generic.cpp' l='59' ll='107' type='static QList&lt;QNetworkProxy&gt; QNetworkProxyFactory::systemProxyForQuery(const QNetworkProxyQuery &amp; query = QNetworkProxyQuery())'/>
