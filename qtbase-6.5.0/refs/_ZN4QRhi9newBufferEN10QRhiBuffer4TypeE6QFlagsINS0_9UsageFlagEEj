<dec f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='1741' type='QRhiBuffer * QRhi::newBuffer(QRhiBuffer::Type type, QRhiBuffer::UsageFlags usage, quint32 size)'/>
<use f='qtbase-6.5.0/src/gui/painting/qbackingstoredefaultcompositor.cpp' l='342' u='c' c='_ZN30QBackingStoreDefaultCompositor17createPerQuadDataEP11QRhiTextureS1_'/>
<use f='qtbase-6.5.0/src/gui/painting/qbackingstoredefaultcompositor.cpp' l='421' u='c' c='_ZN30QBackingStoreDefaultCompositor15ensureResourcesEP13QRhiSwapChainP23QRhiResourceUpdateBatch'/>
<def f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='7314' ll='7319' type='QRhiBuffer * QRhi::newBuffer(QRhiBuffer::Type type, QRhiBuffer::UsageFlags usage, quint32 size)'/>
<doc f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='7300'>/*!
    \return a new buffer with the specified \a type, \a usage, and \a size.

    \note Some \a usage and \a type combinations may not be supported by all
    backends. See \l{QRhiBuffer::UsageFlag}{UsageFlags} and
    \l{QRhi::NonDynamicUniformBuffers}{the feature flags}.

    \note Backends may choose to allocate buffers bigger than \a size. This is
    done transparently to applications, so there are no special restrictions on
    the value of \a size. QRhiBuffer::size() will always report back the value
    that was requested in \a size.

    \sa QRhiResource::destroy()
 */</doc>
