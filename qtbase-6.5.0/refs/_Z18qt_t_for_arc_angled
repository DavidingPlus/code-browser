<dec f='qtbase-6.5.0/src/gui/painting/qstroker_p.h' l='82' type='qreal qt_t_for_arc_angle(qreal angle)'/>
<use f='qtbase-6.5.0/src/gui/painting/qpainterpath.cpp' l='92' u='c' c='_Z22qt_find_ellipse_coordsRK6QRectFddP7QPointFS3_'/>
<def f='qtbase-6.5.0/src/gui/painting/qstroker.cpp' l='756' ll='799' type='qreal qt_t_for_arc_angle(qreal angle)'/>
<use f='qtbase-6.5.0/src/gui/painting/qstroker.cpp' l='910' u='c' c='_Z17qt_curves_for_arcRK6QRectFddP7QPointFPi'/>
<use f='qtbase-6.5.0/src/gui/painting/qstroker.cpp' l='911' u='c' c='_Z17qt_curves_for_arcRK6QRectFddP7QPointFPi'/>
<doc f='qtbase-6.5.0/src/gui/painting/qstroker.cpp' l='731'>/*!
    \internal

    For a given angle in the range [0 .. 90], finds the corresponding parameter t
    of the prototype cubic bezier arc segment
    b = fromPoints(QPointF(1, 0), QPointF(1, KAPPA), QPointF(KAPPA, 1), QPointF(0, 1));

    From the bezier equation:
    b.pointAt(t).x() = (1-t)^3 + t*(1-t)^2 + t^2*(1-t)*KAPPA
    b.pointAt(t).y() = t*(1-t)^2 * KAPPA + t^2*(1-t) + t^3

    Third degree coefficients:
    b.pointAt(t).x() = at^3 + bt^2 + ct + d
    where a = 2-3*KAPPA, b = 3*(KAPPA-1), c = 0, d = 1

    b.pointAt(t).y() = at^3 + bt^2 + ct + d
    where a = 3*KAPPA-2, b = 6*KAPPA+3, c = 3*KAPPA, d = 0

    Newton&apos;s method to find the zero of a function:
    given a function f(x) and initial guess x_0
    x_1 = f(x_0) / f&apos;(x_0)
    x_2 = f(x_1) / f&apos;(x_1)
    etc...
*/</doc>
