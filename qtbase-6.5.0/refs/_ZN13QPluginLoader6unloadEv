<dec f='qtbase-6.5.0/src/corelib/plugin/qpluginloader.h' l='37' type='bool QPluginLoader::unload()'/>
<def f='qtbase-6.5.0/src/corelib/plugin/qpluginloader.cpp' l='201' ll='210' type='bool QPluginLoader::unload()'/>
<doc f='qtbase-6.5.0/src/corelib/plugin/qpluginloader.cpp' l='185'>/*!
    Unloads the plugin and returns \c true if the plugin could be
    unloaded; otherwise returns \c false.

    This happens automatically on application termination, so you
    shouldn&apos;t normally need to call this function.

    If other instances of QPluginLoader are using the same plugin, the
    call will fail, and unloading will only happen when every instance
    has called unload().

    Don&apos;t try to delete the root component. Instead rely on
    that unload() will automatically delete it when needed.

    \sa instance(), load()
*/</doc>
