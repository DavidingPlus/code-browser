<dec f='qtbase-6.5.0/src/gui/image/qiconengine.h' l='23' type='void QIconEngine::addPixmap(const QPixmap &amp; pixmap, QIcon::Mode mode, QIcon::State state)'/>
<ovr f='qtbase-6.5.0/src/gui/image/qicon.cpp' l='358' c='_ZN17QPixmapIconEngine9addPixmapERK7QPixmapN5QIcon4ModeENS3_5StateE'/>
<use f='qtbase-6.5.0/src/gui/image/qicon.cpp' l='1016' u='c' c='_ZN5QIcon9addPixmapERK7QPixmapNS_4ModeENS_5StateE'/>
<def f='qtbase-6.5.0/src/gui/image/qiconengine.cpp' l='96' ll='98' type='void QIconEngine::addPixmap(const QPixmap &amp; , QIcon::Mode , QIcon::State )'/>
<doc f='qtbase-6.5.0/src/gui/image/qiconengine.cpp' l='89'>/*!
  Called by QIcon::addPixmap(). Adds a specialized \a pixmap for the given
  \a mode and \a state. The default pixmap-based engine stores any supplied
  pixmaps, and it uses them instead of scaled pixmaps if the size of a pixmap
  matches the size of icon requested. Custom icon engines that implement
  scalable vector formats are free to ignores any extra pixmaps.
 */</doc>
<doc f='qtbase-6.5.0/src/gui/image/qiconengine.cpp' l='96'>/*pixmap*/</doc>
<doc f='qtbase-6.5.0/src/gui/image/qiconengine.cpp' l='96'>/*mode*/</doc>
<doc f='qtbase-6.5.0/src/gui/image/qiconengine.cpp' l='96'>/*state*/</doc>
