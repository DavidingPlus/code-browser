<def f='qtbase-6.5.0/src/gui/kernel/qpixelformat.h' l='95' ll='100'/>
<use f='qtbase-6.5.0/src/gui/kernel/qpixelformat.h' l='138' c='_ZN12QPixelFormatC1ENS_10ColorModelEhhhhhhNS_10AlphaUsageENS_13AlphaPositionENS_18AlphaPremultipliedENS_18TypeInterpretationENS_9ByteOrderEh'/>
<use f='qtbase-6.5.0/src/gui/kernel/qpixelformat.h' l='176' c='_ZNK12QPixelFormat18typeInterpretationEv'/>
<use f='qtbase-6.5.0/src/gui/kernel/qpixelformat.h' l='176' c='_ZNK12QPixelFormat18typeInterpretationEv'/>
<use f='qtbase-6.5.0/src/gui/kernel/qpixelformat.h' l='205' c='_ZN9QtPrivate22QPixelFormat_createYUVEN12QPixelFormat9YUVLayoutEhNS0_10AlphaUsageENS0_13AlphaPositionENS0_18AlphaPremultipliedENS0_18TypeInterpretationENS0_9ByteOrderE'/>
<use f='qtbase-6.5.0/src/gui/kernel/qpixelformat.h' l='219' c='_ZN12QPixelFormatC1ENS_10ColorModelEhhhhhhNS_10AlphaUsageENS_13AlphaPositionENS_18AlphaPremultipliedENS_18TypeInterpretationENS_9ByteOrderEh'/>
<use f='qtbase-6.5.0/src/gui/kernel/qpixelformat.h' l='246' c='_Z16qPixelFormatRgbahhhhN12QPixelFormat10AlphaUsageENS_13AlphaPositionENS_18AlphaPremultipliedENS_18TypeInterpretationE'/>
<use f='qtbase-6.5.0/src/gui/kernel/qpixelformat.h' l='262' c='_Z21qPixelFormatGrayscalehN12QPixelFormat18TypeInterpretationE'/>
<use f='qtbase-6.5.0/src/gui/kernel/qpixelformat.h' l='278' c='_Z17qPixelFormatAlphahN12QPixelFormat18TypeInterpretationE'/>
<use f='qtbase-6.5.0/src/gui/kernel/qpixelformat.h' l='297' c='_Z16qPixelFormatCmykhhN12QPixelFormat10AlphaUsageENS_13AlphaPositionENS_18TypeInterpretationE'/>
<use f='qtbase-6.5.0/src/gui/kernel/qpixelformat.h' l='316' c='_Z15qPixelFormatHslhhN12QPixelFormat10AlphaUsageENS_13AlphaPositionENS_18TypeInterpretationE'/>
<use f='qtbase-6.5.0/src/gui/kernel/qpixelformat.h' l='335' c='_Z15qPixelFormatHsvhhN12QPixelFormat10AlphaUsageENS_13AlphaPositionENS_18TypeInterpretationE'/>
<use f='qtbase-6.5.0/src/gui/kernel/qpixelformat.h' l='355' c='_Z15qPixelFormatYuvN12QPixelFormat9YUVLayoutEhNS_10AlphaUsageENS_13AlphaPositionENS_18AlphaPremultipliedENS_18TypeInterpretationENS_9ByteOrderE'/>
<use f='qtbase-6.5.0/src/gui/kernel/qpixelformat.cpp' l='497' c='_ZN9QtPrivate22QPixelFormat_createYUVEN12QPixelFormat9YUVLayoutEhNS0_10AlphaUsageENS0_13AlphaPositionENS0_18AlphaPremultipliedENS0_18TypeInterpretationENS0_9ByteOrderE'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qpixelformat.cpp' l='104'>/*!
    \enum QPixelFormat::TypeInterpretation

    This enum describes how each pixel is interpreted. If a pixel is read as a
    full 32 bit unsigned integer and then each channel is masked out, or if
    each byte is read as unsigned char values. Typically QImage formats
    interpret one pixel as an unsigned integer and then the color channels are
    masked out. OpenGL on the other hand typically interpreted pixels &quot;one byte
    after the other&quot;, Ie. unsigned byte.

    QImage also have the format Format_RGBA8888 (and its derivatives), where
    the pixels are interpreted as unsigned bytes. OpenGL has extensions that makes it
    possible to upload pixel buffers in an unsigned integer format.

    \image qpixelformat-argb32buffer.png An unsigned integer ARGB32 pixel.

    The image above shows a ARGB pixel in memory read as an unsigned integer.
    However, if this pixel was read byte for byte on a little endian system the
    first byte would be the byte containing the B-channel. The next byte would
    be the G-channel, then the R-channel and finally the A-channel. This shows
    that on little endian systems, how each pixel is interpreted is significant
    for integer formats. This is not the case on big endian systems.

    \value UnsignedInteger
    \value UnsignedShort
    \value UnsignedByte
    \value FloatingPoint
*/</doc>
