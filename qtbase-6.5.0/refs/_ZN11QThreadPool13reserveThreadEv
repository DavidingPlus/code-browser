<dec f='qtbase-6.5.0/src/corelib/thread/qthreadpool.h' l='59' type='void QThreadPool::reserveThread()'/>
<use f='qtbase-6.5.0/src/corelib/thread/qfutureinterface.cpp' l='36' u='c' c='_ZN12_GLOBAL__N_124ThreadPoolThreadReleaserD1Ev'/>
<def f='qtbase-6.5.0/src/corelib/thread/qthreadpool.cpp' l='684' ll='689' type='void QThreadPool::reserveThread()'/>
<doc f='qtbase-6.5.0/src/corelib/thread/qthreadpool.cpp' l='669'>/*!
    Reserves one thread, disregarding activeThreadCount() and maxThreadCount().

    Once you are done with the thread, call releaseThread() to allow it to be
    reused.

    \note Even if reserving maxThreadCount() threads or more, the thread pool
    will still allow a minimum of one thread.

    \note This function will increase the reported number of active threads.
    This means that by using this function, it is possible for
    activeThreadCount() to return a value greater than maxThreadCount() .

    \sa releaseThread()
 */</doc>
