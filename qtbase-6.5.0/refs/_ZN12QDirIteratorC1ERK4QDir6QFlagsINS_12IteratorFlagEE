<dec f='qtbase-6.5.0/src/corelib/io/qdiriterator.h' l='22' type='void QDirIterator::QDirIterator(const QDir &amp; dir, QDirIterator::IteratorFlags flags = NoIteratorFlags)'/>
<use f='qtbase-6.5.0/src/corelib/io/qdir.cpp' l='312' u='c' c='_ZNK11QDirPrivate13initFileListsERK4QDir'/>
<def f='qtbase-6.5.0/src/corelib/io/qdiriterator.cpp' l='382' ll='386' type='void QDirIterator::QDirIterator(const QDir &amp; dir, QDirIterator::IteratorFlags flags = NoIteratorFlags)'/>
<doc f='qtbase-6.5.0/src/corelib/io/qdiriterator.cpp' l='367'>/*!
    Constructs a QDirIterator that can iterate over \a dir&apos;s entrylist, using
    \a dir&apos;s name filters and regular filters. You can pass options via \a
    flags to decide how the directory should be iterated.

    By default, \a flags is NoIteratorFlags, which provides the same behavior
    as in QDir::entryList().

    The sorting in \a dir is ignored.

    \note To list symlinks that point to non existing files, QDir::System must be
     passed to the flags.

    \sa hasNext(), next(), IteratorFlags
*/</doc>
<use f='qtbase-6.5.0/src/tools/rcc/rcc.cpp' l='612' u='c' c='_ZN18RCCResourceLibrary21interpretResourceFileEP9QIODeviceRK7QStringS2_b'/>
