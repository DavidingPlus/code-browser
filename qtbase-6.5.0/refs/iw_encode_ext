<def f='include/linux/wireless.h' l='825' ll='835'/>
<size>40</size>
<doc f='include/linux/wireless.h' l='801'>/*
 *	Extended data structure for get/set encoding (this is used with
 *	SIOCSIWENCODEEXT/SIOCGIWENCODEEXT. struct iw_point and IW_ENCODE_*
 *	flags are used in the same way as with SIOCSIWENCODE/SIOCGIWENCODE and
 *	only the data contents changes (key data -&gt; this structure, including
 *	key data).
 *
 *	If the new key is the first group key, it will be set as the default
 *	TX key. Otherwise, default TX key index is only changed if
 *	IW_ENCODE_EXT_SET_TX_KEY flag is set.
 *
 *	Key will be changed with SIOCSIWENCODEEXT in all cases except for
 *	special &quot;change TX key index&quot; operation which is indicated by setting
 *	key_len = 0 and ext_flags |= IW_ENCODE_EXT_SET_TX_KEY.
 *
 *	tx_seq/rx_seq are only used when respective
 *	IW_ENCODE_EXT_{TX,RX}_SEQ_VALID flag is set in ext_flags. Normal
 *	TKIP/CCMP operation is to set RX seq with SIOCSIWENCODEEXT and start
 *	TX seq from zero whenever key is changed. SIOCGIWENCODEEXT is normally
 *	used only by an Authenticator (AP or an IBSS station) to get the
 *	current TX sequence number. Using TX_SEQ_VALID for SIOCSIWENCODEEXT and
 *	RX_SEQ_VALID for SIOCGIWENCODEEXT are optional, but can be useful for
 *	debugging/testing.
 */</doc>
<mbr r='iw_encode_ext::ext_flags' o='0' t='__u32'/>
<mbr r='iw_encode_ext::tx_seq' o='32' t='__u8[8]'/>
<mbr r='iw_encode_ext::rx_seq' o='96' t='__u8[8]'/>
<mbr r='iw_encode_ext::addr' o='160' t='struct sockaddr'/>
<mbr r='iw_encode_ext::alg' o='288' t='__u16'/>
<mbr r='iw_encode_ext::key_len' o='304' t='__u16'/>
<mbr r='iw_encode_ext::key' o='320' t='__u8[0]'/>
