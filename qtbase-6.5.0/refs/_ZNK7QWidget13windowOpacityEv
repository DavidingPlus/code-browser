<dec f='qtbase-6.5.0/src/widgets/kernel/qwidget.h' l='387' type='qreal QWidget::windowOpacity() const'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsscene.cpp' l='4197' u='c' c='_ZL12_q_paintItemP13QGraphicsItemP8QPainterPK24QStyleOptionGraphicsItemP7QWidgetbb'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsscene.cpp' l='4323' u='c' c='_ZN21QGraphicsScenePrivate14drawItemHelperEP13QGraphicsItemP8QPainterPK24QStyleOptionGraphicsItemP7QWidgetb'/>
<def f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='11421' ll='11425' type='qreal QWidget::windowOpacity() const'/>
<doc f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='11396'>/*!
  \property QWidget::windowOpacity

  \brief The level of opacity for the window.

  The valid range of opacity is from 1.0 (completely opaque) to
  0.0 (completely transparent).

  By default the value of this property is 1.0.

  This feature is available on Embedded Linux, \macos, Windows,
  and X11 platforms that support the Composite extension.

  \note On X11 you need to have a composite manager running,
  and the X11 specific _NET_WM_WINDOW_OPACITY atom needs to be
  supported by the window manager you are using.

  \warning Changing this property from opaque to transparent might issue a
  paint event that needs to be processed before the window is displayed
  correctly. This affects mainly the use of QScreen::grabWindow(). Also note
  that semi-transparent windows update and resize significantly slower than
  opaque windows.

  \sa setMask()
*/</doc>
<use f='qtbase-6.5.0/src/widgets/widgets/qcombobox.cpp' l='1152' u='c' c='_ZN16QComboBoxPrivate36updateViewContainerPaletteAndOpacityEv'/>
