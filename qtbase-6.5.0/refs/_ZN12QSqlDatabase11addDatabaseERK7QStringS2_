<dec f='qtbase-6.5.0/src/sql/kernel/qsqldatabase.h' l='80' type='static QSqlDatabase QSqlDatabase::addDatabase(const QString &amp; type, const QString &amp; connectionName = QLatin1StringView(defaultConnection))'/>
<def f='qtbase-6.5.0/src/sql/kernel/qsqldatabase.cpp' l='435' ll='440' type='static QSqlDatabase QSqlDatabase::addDatabase(const QString &amp; type, const QString &amp; connectionName = QLatin1StringView(defaultConnection))'/>
<doc f='qtbase-6.5.0/src/sql/kernel/qsqldatabase.cpp' l='404'>/*! \fn QSqlDatabase QSqlDatabase::addDatabase(const QString &amp;type, const QString &amp;connectionName)
    \threadsafe

    Adds a database to the list of database connections using the
    driver \a type and the connection name \a connectionName. If
    there already exists a database connection called \a
    connectionName, that connection is removed.

    The database connection is referred to by \a connectionName. The
    newly added database connection is returned.

    If \a type is not available or could not be loaded, isValid() returns \c false.

    If \a connectionName is not specified, the new connection becomes
    the default connection for the application, and subsequent calls
    to database() without the connection name argument will return the
    default connection. If a \a connectionName is provided here, use
    database(\a connectionName) to retrieve the connection.

    \warning If you add a connection with the same name as an existing
    connection, the new connection replaces the old one.  If you call
    this function more than once without specifying \a connectionName,
    the default connection will be the one replaced.

    Before using the connection, it must be initialized. e.g., call
    some or all of setDatabaseName(), setUserName(), setPassword(),
    setHostName(), setPort(), and setConnectOptions(), and, finally,
    open().

    \sa database(), removeDatabase(), {Threads and the SQL Module}
*/</doc>
