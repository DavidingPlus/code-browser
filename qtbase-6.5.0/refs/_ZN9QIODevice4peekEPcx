<dec f='qtbase-6.5.0/src/corelib/io/qiodevice.h' l='92' type='qint64 QIODevice::peek(char * data, qint64 maxlen)'/>
<def f='qtbase-6.5.0/src/corelib/io/qiodevice.cpp' l='1882' ll='1890' type='qint64 QIODevice::peek(char * data, qint64 maxSize)'/>
<doc f='qtbase-6.5.0/src/corelib/io/qiodevice.cpp' l='1865'>/*!
    \since 4.1

    Reads at most \a maxSize bytes from the device into \a data, without side
    effects (i.e., if you call read() after peek(), you will get the same
    data).  Returns the number of bytes read. If an error occurs, such as
    when attempting to peek a device opened in WriteOnly mode, this function
    returns -1.

    0 is returned when no more data is available for reading.

    Example:

    \snippet code/src_corelib_io_qiodevice.cpp 4

    \sa read()
*/</doc>
<use f='qtbase-6.5.0/src/corelib/serialization/qcborstreamreader.cpp' l='595' u='c' c='_ZN24QCborStreamReaderPrivate7prereadEv'/>
<use f='qtbase-6.5.0/src/gui/image/qbmphandler.cpp' l='725' u='c' c='_ZN11QBmpHandler7canReadEP9QIODevice'/>
<use f='qtbase-6.5.0/src/gui/image/qppmhandler.cpp' l='455' u='c' c='_ZN11QPpmHandler7canReadEP9QIODeviceP10QByteArray'/>
<use f='qtbase-6.5.0/src/gui/image/qxpmhandler.cpp' l='1198' u='c' c='_ZN11QXpmHandler7canReadEP9QIODevice'/>
<use f='qtbase-6.5.0/src/network/access/qhttpnetworkreply.cpp' l='708' u='c' c='_ZN24QHttpNetworkReplyPrivate12getChunkSizeEP15QAbstractSocketPx'/>
<use f='qtbase-6.5.0/src/network/access/qhttpprotocolhandler.cpp' l='201' u='c' c='_ZN20QHttpProtocolHandler12_q_readyReadEv'/>
<use f='qtbase-6.5.0/src/network/access/qnetworkaccessfilebackend.cpp' l='162' u='c' c='_ZN25QNetworkAccessFileBackend19uploadReadyReadSlotEv'/>
<use f='qtbase-6.5.0/src/plugins/imageformats/gif/qgifhandler.cpp' l='1091' u='c' c='_ZN11QGifHandler7canReadEP9QIODevice'/>
<use f='qtbase-6.5.0/src/plugins/imageformats/jpeg/qjpeghandler.cpp' l='1048' u='c' c='_ZN12QJpegHandler7canReadEP9QIODevice'/>
