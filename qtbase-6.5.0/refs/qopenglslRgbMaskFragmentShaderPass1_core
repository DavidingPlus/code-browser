<def f='qtbase-6.5.0/src/opengl/qopenglengineshadersource_p.h' l='907' type='const char *const'/>
<use f='qtbase-6.5.0/src/opengl/qopenglengineshadermanager.cpp' l='145' u='r' c='_ZN26QOpenGLEngineSharedShadersC1EP14QOpenGLContext'/>
<doc f='qtbase-6.5.0/src/opengl/qopenglengineshadersource_p.h' l='892'>// For source over with subpixel antialiasing, the final color is calculated per component as follows
// (.a is alpha component, .c is red, green or blue component):
// alpha = src.a * mask.c * opacity
// dest.c = dest.c * (1 - alpha) + src.c * alpha
//
// In the first pass, calculate: dest.c = dest.c * (1 - alpha) with blend funcs: zero, 1 - source color
// In the second pass, calculate: dest.c = dest.c + src.c * alpha with blend funcs: one, one
//
// If source is a solid color (src is constant), only the first pass is needed, with blend funcs: constant, 1 - source color

// For source composition with subpixel antialiasing, the final color is calculated per component as follows:
// alpha = src.a * mask.c * opacity
// dest.c = dest.c * (1 - mask.c) + src.c * alpha
//</doc>
