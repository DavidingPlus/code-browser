<dec f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.h' l='370' type='void QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent * event)'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='6665' u='c' c='_ZN13QGraphicsItem10sceneEventEP6QEvent'/>
<def f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='6799' ll='6805' type='void QGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent * event)'/>
<ovr f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='10210' c='_ZN17QGraphicsTextItem14dragEnterEventEP27QGraphicsSceneDragDropEvent'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsitem.cpp' l='6776'>/*!
    This event handler, for event \a event, can be reimplemented to receive
    drag enter events for this item. Drag enter events are generated as the
    cursor enters the item&apos;s area.

    By accepting the event (i.e., by calling QEvent::accept()), the item will
    accept drop events, in addition to receiving drag move and drag
    leave. Otherwise, the event will be ignored and propagate to the item
    beneath. If the event is accepted, the item will receive a drag move event
    before control goes back to the event loop.

    A common implementation of dragEnterEvent accepts or ignores \a event
    depending on the associated mime data in \a event. Example:

    \snippet code/src_gui_graphicsview_qgraphicsitem.cpp 14

    Items do not receive drag and drop events by default; to enable this
    feature, call \c setAcceptDrops(true).

    The default implementation does nothing.

    \sa dropEvent(), dragMoveEvent(), dragLeaveEvent()
*/</doc>
<ovr f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsproxywidget.cpp' l='1025' c='_ZN20QGraphicsProxyWidget14dragEnterEventEP27QGraphicsSceneDragDropEvent'/>
