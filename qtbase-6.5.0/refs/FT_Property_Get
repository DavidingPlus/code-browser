<dec f='include/freetype2/freetype/ftmodapi.h' l='453' type='FT_Error FT_Property_Get(FT_Library library, const FT_String * module_name, const FT_String * property_name, void * value)'/>
<use f='qtbase-6.5.0/src/gui/text/freetype/qfontengine_ft.cpp' l='851' u='c' c='_ZN13QFontEngineFT4initEN11QFontEngine6FaceIdEbNS0_11GlyphFormatEP13QFreetypeFace'/>
<doc f='include/freetype2/freetype/ftmodapi.h' l='396'>/**************************************************************************
   *
   * @function:
   *    FT_Property_Get
   *
   * @description:
   *    Get a module&apos;s property value.
   *
   * @input:
   *    library ::
   *      A handle to the library the module is part of.
   *
   *    module_name ::
   *      The module name.
   *
   *    property_name ::
   *      The property name.  Properties are described in section
   *      @properties.
   *
   * @inout:
   *    value ::
   *      A generic pointer to a variable or structure that gives the value
   *      of the property.  The exact definition of `value` is dependent on
   *      the property; see section @properties.
   *
   * @return:
   *   FreeType error code.  0~means success.
   *
   * @note:
   *    If `module_name` isn&apos;t a valid module name, or `property_name`
   *    doesn&apos;t specify a valid property, or if `value` doesn&apos;t represent a
   *    valid value for the given property, an error is returned.
   *
   *    The following example gets property &apos;baz&apos; (a range) in module &apos;foo&apos;.
   *
   *    ```
   *      typedef  range_
   *      {
   *        FT_Int32  min;
   *        FT_Int32  max;
   *
   *      } range;
   *
   *      range  baz;
   *
   *
   *      FT_Property_Get( library, &quot;foo&quot;, &quot;baz&quot;, &amp;baz );
   *    ```
   *
   *    It is not possible to retrieve properties of the FreeType Cache
   *    sub-system with FT_Property_Get; use @FTC_Property_Get instead.
   *
   * @since:
   *   2.4.11
   *
   */</doc>
