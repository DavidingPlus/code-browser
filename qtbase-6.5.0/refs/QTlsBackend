<use f='qtbase-6.5.0/src/network/ssl/qsslcertificate.h' l='120'/>
<inh f='qtbase-6.5.0/src/corelib/kernel/qobject.h' l='89' c='QObject'/>
<def f='qtbase-6.5.0/src/network/ssl/qtlsbackend_p.h' l='266' ll='393'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend_p.h' l='319' c='_ZN11QTlsBackend11findBackendERK7QString'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend_p.h' l='320' c='_ZN11QTlsBackend18activeOrAnyBackendEv'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend_p.h' l='392' c='_ZN11QTlsBackendC1ERKS_'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend_p.h' l='392' c='_ZN11QTlsBackendaSERKS_'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend_p.h' l='392' c='_ZN11QTlsBackendaSERKS_'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend_p.h' l='392' c='_ZN11QTlsBackendC1EOS_'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend_p.h' l='392' c='_ZN11QTlsBackendaSEOS_'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend_p.h' l='392' c='_ZN11QTlsBackendaSEOS_'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend_p.h' l='396' c='_Z21qobject_interface_iidv'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend_p.h' l='396' c='_Z12qobject_castP7QObject'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend_p.h' l='396' c='_Z12qobject_castP7QObject'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend_p.h' l='396' c='_Z12qobject_castP7QObject'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend_p.h' l='396' c='_Z12qobject_castPK7QObject'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend_p.h' l='396' c='_Z12qobject_castPK7QObject'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend_p.h' l='396' c='_Z12qobject_castPK7QObject'/>
<use f='qtbase-6.5.0/src/network/ssl/qsslcertificate.cpp' l='128' c='_ZN22QSslCertificatePrivateC1Ev'/>
<size>16</size>
<doc f='qtbase-6.5.0/src/network/ssl/qtlsbackend_p.h' l='264'>// Factory, creating back-end specific implementations of
// different entities QSslSocket is using.</doc>
<smbr r='QTlsBackend::staticMetaObject' t='const QMetaObject'/>
<fun r='_ZNK11QTlsBackend10metaObjectEv'/>
<fun r='_ZN11QTlsBackend11qt_metacastEPKc'/>
<fun r='_ZN11QTlsBackend11qt_metacallEN11QMetaObject4CallEiPPv'/>
<fun r='_ZN11QTlsBackend2trEPKcS1_i'/>
<fun r='_ZN11QTlsBackend18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv'/>
<fun r='_ZN11QTlsBackendC1Ev'/>
<fun r='_ZN11QTlsBackendD1Ev'/>
<fun r='_ZNK11QTlsBackend7isValidEv'/>
<fun r='_ZNK11QTlsBackend23tlsLibraryVersionNumberEv'/>
<fun r='_ZNK11QTlsBackend23tlsLibraryVersionStringEv'/>
<fun r='_ZNK11QTlsBackend28tlsLibraryBuildVersionNumberEv'/>
<fun r='_ZNK11QTlsBackend28tlsLibraryBuildVersionStringEv'/>
<fun r='_ZNK11QTlsBackend17ensureInitializedEv'/>
<fun r='_ZNK11QTlsBackend11backendNameEv'/>
<fun r='_ZNK11QTlsBackend18supportedProtocolsEv'/>
<fun r='_ZNK11QTlsBackend17supportedFeaturesEv'/>
<fun r='_ZNK11QTlsBackend18implementedClassesEv'/>
<fun r='_ZNK11QTlsBackend9createKeyEv'/>
<fun r='_ZNK11QTlsBackend17createCertificateEv'/>
<fun r='_ZNK11QTlsBackend20systemCaCertificatesEv'/>
<fun r='_ZNK11QTlsBackend20createTlsCryptographEv'/>
<fun r='_ZNK11QTlsBackend21createDtlsCryptographEP5QDtlsi'/>
<fun r='_ZNK11QTlsBackend24createDtlsCookieVerifierEv'/>
<fun r='_ZNK11QTlsBackend12X509VerifierEv'/>
<fun r='_ZNK11QTlsBackend13X509PemReaderEv'/>
<fun r='_ZNK11QTlsBackend13X509DerReaderEv'/>
<fun r='_ZNK11QTlsBackend16X509Pkcs12ReaderEv'/>
<fun r='_ZNK11QTlsBackend17ellipticCurvesIdsEv'/>
<fun r='_ZNK11QTlsBackend20curveIdFromShortNameERK7QString'/>
<fun r='_ZNK11QTlsBackend19curveIdFromLongNameERK7QString'/>
<fun r='_ZNK11QTlsBackend14shortNameForIdEi'/>
<fun r='_ZNK11QTlsBackend13longNameForIdEi'/>
<fun r='_ZNK11QTlsBackend15isTlsNamedCurveEi'/>
<fun r='_ZNK11QTlsBackend19dhParametersFromDerERK10QByteArrayPS0_'/>
<fun r='_ZNK11QTlsBackend19dhParametersFromPemERK10QByteArrayPS0_'/>
<fun r='_ZN11QTlsBackend21availableBackendNamesEv'/>
<fun r='_ZN11QTlsBackend18defaultBackendNameEv'/>
<fun r='_ZN11QTlsBackend11findBackendERK7QString'/>
<fun r='_ZN11QTlsBackend18activeOrAnyBackendEv'/>
<fun r='_ZN11QTlsBackend18supportedProtocolsERK7QString'/>
<fun r='_ZN11QTlsBackend17supportedFeaturesERK7QString'/>
<fun r='_ZN11QTlsBackend18implementedClassesERK7QString'/>
<smbr r='QTlsBackend::nameIndexSchannel' t='const int'/>
<smbr r='QTlsBackend::nameIndexSecureTransport' t='const int'/>
<smbr r='QTlsBackend::nameIndexOpenSSL' t='const int'/>
<smbr r='QTlsBackend::nameIndexCertOnly' t='const int'/>
<smbr r='QTlsBackend::builtinBackendNames' t='const QString[]'/>
<fun r='_ZN11QTlsBackend7backendERKT0_'/>
<fun r='_ZN11QTlsBackend12resetBackendER7QSslKeyPN11QTlsPrivate6TlsKeyE'/>
<fun r='_ZN11QTlsBackend18setupClientPskAuthEP29QSslPreSharedKeyAuthenticatorPKcijj'/>
<fun r='_ZN11QTlsBackend18setupServerPskAuthEP29QSslPreSharedKeyAuthenticatorPKcRK10QByteArrayj'/>
<fun r='_ZN11QTlsBackendC1ERKS_'/>
<fun r='_ZN11QTlsBackendC1EOS_'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend.cpp' l='38' c='_ZN12_GLOBAL__N_117BackendCollection10addBackendEP11QTlsBackend'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend.cpp' l='46' c='_ZN12_GLOBAL__N_117BackendCollection13removeBackendEP11QTlsBackend'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend.cpp' l='94' c='_ZN12_GLOBAL__N_117BackendCollection7backendERK7QString'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend.cpp' l='107'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend.cpp' l='613' c='_ZN11QTlsBackend11findBackendERK7QString'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend.cpp' l='632' c='_ZN11QTlsBackend18activeOrAnyBackendEv'/>
<size>16</size>
<doc f='qtbase-6.5.0/src/network/ssl/qtlsbackend.cpp' l='115'>/*!
    \class QTlsBackend
    \internal (Network-private)
    \brief QTlsBackend is a factory class, providing implementations
    for the QSsl classes.

    The purpose of QTlsBackend is to enable and simplify the addition
    of new TLS backends to be used by QSslSocket and related classes.
    Starting from Qt 6.1, these backends have plugin-based design (and
    thus can co-exist simultaneously, unlike pre 6.1 times), although
    any given run of a program can only use one of them.

    Inheriting from QTlsBackend and creating an object of such
    a class adds a new backend into the list of available TLS backends.

    A new backend must provide a list of classes, features and protocols
    it supports, and override the corresponding virtual functions that
    create backend-specific implementations for these QSsl-classes.

    The base abstract class - QTlsBackend - provides, where possible,
    default implementations of its virtual member functions. These
    default implementations can be overridden by a derived backend
    class, if needed.

    QTlsBackend also provides some auxiliary functions that a derived
    backend class can use to interact with the internals of network-private classes.

    \sa QSslSocket::availableBackends(), supportedFeatures(), supportedProtocols(), implementedClasses()
*/</doc>
<smbr r='QTlsBackend::builtinBackendNames' t='const QString[4]'/>
<fun r='_ZN11QTlsBackendC1Ev'/>
<fun r='_ZN11QTlsBackendD1Ev'/>
<fun r='_ZNK11QTlsBackend7isValidEv'/>
<fun r='_ZNK11QTlsBackend23tlsLibraryVersionNumberEv'/>
<fun r='_ZNK11QTlsBackend23tlsLibraryVersionStringEv'/>
<fun r='_ZNK11QTlsBackend28tlsLibraryBuildVersionNumberEv'/>
<fun r='_ZNK11QTlsBackend28tlsLibraryBuildVersionStringEv'/>
<fun r='_ZNK11QTlsBackend17ensureInitializedEv'/>
<fun r='_ZNK11QTlsBackend9createKeyEv'/>
<fun r='_ZNK11QTlsBackend17createCertificateEv'/>
<fun r='_ZNK11QTlsBackend20systemCaCertificatesEv'/>
<fun r='_ZNK11QTlsBackend20createTlsCryptographEv'/>
<fun r='_ZNK11QTlsBackend21createDtlsCryptographEP5QDtlsi'/>
<fun r='_ZNK11QTlsBackend24createDtlsCookieVerifierEv'/>
<fun r='_ZNK11QTlsBackend12X509VerifierEv'/>
<fun r='_ZNK11QTlsBackend13X509PemReaderEv'/>
<fun r='_ZNK11QTlsBackend13X509DerReaderEv'/>
<fun r='_ZNK11QTlsBackend16X509Pkcs12ReaderEv'/>
<fun r='_ZNK11QTlsBackend17ellipticCurvesIdsEv'/>
<fun r='_ZNK11QTlsBackend20curveIdFromShortNameERK7QString'/>
<fun r='_ZNK11QTlsBackend19curveIdFromLongNameERK7QString'/>
<fun r='_ZNK11QTlsBackend14shortNameForIdEi'/>
<fun r='_ZNK11QTlsBackend13longNameForIdEi'/>
<fun r='_ZNK11QTlsBackend15isTlsNamedCurveEi'/>
<fun r='_ZNK11QTlsBackend19dhParametersFromDerERK10QByteArrayPS0_'/>
<fun r='_ZNK11QTlsBackend19dhParametersFromPemERK10QByteArrayPS0_'/>
<fun r='_ZN11QTlsBackend21availableBackendNamesEv'/>
<fun r='_ZN11QTlsBackend18defaultBackendNameEv'/>
<fun r='_ZN11QTlsBackend11findBackendERK7QString'/>
<fun r='_ZN11QTlsBackend18activeOrAnyBackendEv'/>
<fun r='_ZN11QTlsBackend18supportedProtocolsERK7QString'/>
<fun r='_ZN11QTlsBackend17supportedFeaturesERK7QString'/>
<fun r='_ZN11QTlsBackend18implementedClassesERK7QString'/>
<fun r='_ZN11QTlsBackend12resetBackendER7QSslKeyPN11QTlsPrivate6TlsKeyE'/>
<fun r='_ZN11QTlsBackend18setupClientPskAuthEP29QSslPreSharedKeyAuthenticatorPKcijj'/>
<fun r='_ZN11QTlsBackend18setupServerPskAuthEP29QSslPreSharedKeyAuthenticatorPKcRK10QByteArrayj'/>
<ovr f='qtbase-6.5.0/src/plugins/tls/certonly/qtlsbackend_cert_p.h' l='26' c='QTlsBackendCertOnly'/>
<use f='qtbase-6.5.0/src/plugins/tls/certonly/qtlsbackend_cert_p.h' l='26'/>
<size>16</size>
