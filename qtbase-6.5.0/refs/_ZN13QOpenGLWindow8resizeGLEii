<dec f='qtbase-6.5.0/src/opengl/qopenglwindow.h' l='53' type='void QOpenGLWindow::resizeGL(int w, int h)'/>
<def f='qtbase-6.5.0/src/opengl/qopenglwindow.cpp' l='538' ll='542' type='void QOpenGLWindow::resizeGL(int w, int h)'/>
<use f='qtbase-6.5.0/src/opengl/qopenglwindow.cpp' l='630' u='c' c='_ZN13QOpenGLWindow11resizeEventEP12QResizeEvent'/>
<doc f='qtbase-6.5.0/src/opengl/qopenglwindow.cpp' l='522'>/*!
  This virtual function is called whenever the widget has been resized.
  Reimplement it in a subclass. The new size is passed in \a w and \a h.

  \note This is merely a convenience function in order to provide an API that is
  compatible with QOpenGLWidget. Unlike with QOpenGLWidget, derived classes are
  free to choose to override resizeEvent() instead of this function.

  \note Avoid issuing OpenGL commands from this function as there may not be a
  context current when it is invoked. If it cannot be avoided, call makeCurrent().

  \note Scheduling updates from here is not necessary. The windowing systems
  will send expose events that trigger an update automatically.

  \sa initializeGL(), paintGL()
 */</doc>
