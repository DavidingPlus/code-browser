<dec f='qtbase-6.5.0/src/gui/rhi/qshaderdescription_p.h' l='239' type='QList&lt;QShaderDescription::InOutVariable&gt; QShaderDescription::combinedImageSamplers() const'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhigles2.cpp' l='5757' u='c' c='_ZN22QGles2GraphicsPipeline6createEv'/>
<use f='qtbase-6.5.0/src/gui/rhi/qrhigles2.cpp' l='5867' u='c' c='_ZN21QGles2ComputePipeline6createEv'/>
<def f='qtbase-6.5.0/src/gui/rhi/qshaderdescription.cpp' l='480' ll='483' type='QList&lt;QShaderDescription::InOutVariable&gt; QShaderDescription::combinedImageSamplers() const'/>
<doc f='qtbase-6.5.0/src/gui/rhi/qshaderdescription.cpp' l='458'>/*!
    \return the list of combined image samplers

    With GLSL/Vulkan shaders as source a \c{layout(binding = 1) uniform sampler2D tex;}
    uniform generates the following: (shown as textual JSON here)

    \badcode
       &quot;combinedImageSamplers&quot;: [
            {
                &quot;binding&quot;: 1,
                &quot;name&quot;: &quot;tex&quot;,
                &quot;set&quot;: 0,
                &quot;type&quot;: &quot;sampler2D&quot;
            }
        ]
    \endcode

    This does not mean that other language versions of the shader must also use
    a combined image sampler, especially considering that the concept may not
    exist everywhere. For instance, a HLSL version will likely just use a
    Texture2D and SamplerState object with registers t1 and s1, respectively.
  */</doc>
