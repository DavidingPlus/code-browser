<dec f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='344' type='static QRhiShaderResourceBinding QRhiShaderResourceBinding::textures(int binding, QRhiShaderResourceBinding::StageFlags stage, int count, QRhiTexture ** tex)'/>
<def f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='3685' ll='3700' type='static QRhiShaderResourceBinding QRhiShaderResourceBinding::textures(int binding, QRhiShaderResourceBinding::StageFlags stage, int count, QRhiTexture ** tex)'/>
<doc f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='3665'>/*!
    \return a shader resource binding for the given binding number, pipeline
    stages, and the array of (separate) textures specified by \a binding, \a
    stage, \a count, and \a tex.

    \note \a count must be at least 1, and not larger than 16.

    \note When \a count is 1, this function is equivalent to texture().

    \warning All elements of the array must be specified.

    \note \a tex can be null. It is valid to create a
    QRhiShaderResourceBindings with unspecified resources, but such an object
    cannot be used with QRhiCommandBuffer::setShaderResources(). It is however
    suitable for creating pipelines. Such a pipeline must then always be used
    together with another, layout compatible QRhiShaderResourceBindings with
    resources present passed to QRhiCommandBuffer::setShaderResources().

    \sa texture(), sampler()
 */</doc>
