<dec f='qtbase-6.5.0/src/opengl/qopenglframebufferobject.h' l='40' type='void QOpenGLFramebufferObject::QOpenGLFramebufferObject(const QSize &amp; size, GLenum target = 3553)'/>
<use f='qtbase-6.5.0/src/opengl/qopenglcompositor.cpp' l='89' u='c' c='_ZN17QOpenGLCompositor4grabEv'/>
<def f='qtbase-6.5.0/src/opengl/qopenglframebufferobject.cpp' l='910' ll='915' type='void QOpenGLFramebufferObject::QOpenGLFramebufferObject(const QSize &amp; size, GLenum target = 3553)'/>
<use f='qtbase-6.5.0/src/opengl/qopenglframebufferobject.cpp' l='925' u='c' c='_ZN24QOpenGLFramebufferObjectC1Eiij'/>
<doc f='qtbase-6.5.0/src/opengl/qopenglframebufferobject.cpp' l='886'>/*!

    Constructs an OpenGL framebuffer object and binds a 2D OpenGL texture
    to the buffer of the size \a size. The texture is bound to the
    \c GL_COLOR_ATTACHMENT0 target in the framebuffer object.

    The \a target parameter is used to specify the OpenGL texture
    target. The default target is \c GL_TEXTURE_2D. Keep in mind that
    \c GL_TEXTURE_2D textures must have a power of 2 width and height
    (e.g. 256x512), unless you are using OpenGL 2.0 or higher.

    By default, no depth and stencil buffers are attached. This behavior
    can be toggled using one of the overloaded constructors.

    The default internal texture format is \c GL_RGBA8 for desktop
    OpenGL, and \c GL_RGBA for OpenGL/ES.

    It is important that you have a current OpenGL context set when
    creating the QOpenGLFramebufferObject, otherwise the initialization
    will fail.

    \sa size(), texture(), attachment()
*/</doc>
<use f='qtbase-6.5.0/src/openglwidgets/qopenglwidget.cpp' l='741' u='c' c='_ZN20QOpenGLWidgetPrivate12recreateFbosEv'/>
<use f='qtbase-6.5.0/src/openglwidgets/qopenglwidget.cpp' l='748' u='c' c='_ZN20QOpenGLWidgetPrivate12recreateFbosEv'/>
