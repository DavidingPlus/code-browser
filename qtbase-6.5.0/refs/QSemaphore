<def f='qtbase-6.5.0/src/corelib/thread/qsemaphore.h' l='18' ll='54'/>
<use f='qtbase-6.5.0/src/corelib/thread/qsemaphore.h' l='46' c='_ZN10QSemaphoreC1ERKS_'/>
<use f='qtbase-6.5.0/src/corelib/thread/qsemaphore.h' l='46' c='_ZN10QSemaphoreaSERKS_'/>
<use f='qtbase-6.5.0/src/corelib/thread/qsemaphore.h' l='46' c='_ZN10QSemaphoreaSERKS_'/>
<use f='qtbase-6.5.0/src/corelib/thread/qsemaphore.h' l='60' c='_ZN18QSemaphoreReleaserC1ER10QSemaphorei'/>
<use f='qtbase-6.5.0/src/corelib/thread/qsemaphore.h' l='62' c='_ZN18QSemaphoreReleaserC1EP10QSemaphorei'/>
<use f='qtbase-6.5.0/src/corelib/thread/qsemaphore.h' l='80' c='_ZNK18QSemaphoreReleaser9semaphoreEv'/>
<use f='qtbase-6.5.0/src/corelib/thread/qsemaphore.h' l='83' c='_ZN18QSemaphoreReleaser6cancelEv'/>
<use f='qtbase-6.5.0/src/corelib/thread/qsemaphore.h' l='89'/>
<size>8</size>
<fun r='_ZN10QSemaphoreC1Ei'/>
<fun r='_ZN10QSemaphoreD1Ev'/>
<fun r='_ZN10QSemaphore7acquireEi'/>
<fun r='_ZN10QSemaphore10tryAcquireEi'/>
<fun r='_ZN10QSemaphore10tryAcquireEii'/>
<fun r='_ZN10QSemaphore10tryAcquireEiNSt6chrono8durationIT_T0_EE'/>
<fun r='_ZN10QSemaphore7releaseEi'/>
<fun r='_ZNK10QSemaphore9availableEv'/>
<fun r='_ZN10QSemaphore11try_acquireEv'/>
<fun r='_ZN10QSemaphore15try_acquire_forERKNSt6chrono8durationIT_T0_EE'/>
<fun r='_ZN10QSemaphore17try_acquire_untilERKNSt6chrono10time_pointIT_T0_EE'/>
<fun r='_ZN10QSemaphoreC1ERKS_'/>
<use f='qtbase-6.5.0/src/concurrent/qtconcurrentthreadengine.h' l='35'/>
<size>8</size>
<use f='qtbase-6.5.0/src/corelib/kernel/qobject_p.h' l='352' c='_ZN22QAbstractMetaCallEventC1EPK7QObjectiP10QSemaphore'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qobject_p.h' l='369'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qobject_p.h' l='380' c='_ZN14QMetaCallEventC1EttPFvP7QObjectN11QMetaObject4CallEiPPvEPKS0_iS5_P10QSemaphore'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qobject_p.h' l='383' c='_ZN14QMetaCallEventC1EPN9QtPrivate15QSlotObjectBaseEPK7QObjectiPPvP10QSemaphore'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qmetaobject.cpp' l='1626' c='_ZN11QMetaObject16invokeMethodImplEP7QObjectPN9QtPrivate15QSlotObjectBaseEN2Qt14ConnectionTypeEPv'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qmetaobject.cpp' l='2747' c='_ZN18QMetaMethodInvoker10invokeImplE11QMetaMethodPvN2Qt14ConnectionTypeExPKPKvPKPKcPKPKN9QtPrivate18QMetaTypeInterfaceE'/>
<size>8</size>
<use f='qtbase-6.5.0/src/corelib/kernel/qobject.cpp' l='538' c='_ZN14QMetaCallEventC1EttPFvP7QObjectN11QMetaObject4CallEiPPvEPKS0_iS5_P10QSemaphore'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qobject.cpp' l='553' c='_ZN14QMetaCallEventC1EPN9QtPrivate15QSlotObjectBaseEPK7QObjectiPPvP10QSemaphore'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qobject.cpp' l='3966' c='_Z10doActivateP7QObjectiPPv'/>
<size>8</size>
<doc f='qtbase-6.5.0/src/corelib/thread/qsemaphore.cpp' l='19'>/*!
    \class QSemaphore
    \inmodule QtCore
    \brief The QSemaphore class provides a general counting semaphore.

    \threadsafe

    \ingroup thread

    A semaphore is a generalization of a mutex. While a mutex can
    only be locked once, it&apos;s possible to acquire a semaphore
    multiple times. Semaphores are typically used to protect a
    certain number of identical resources.

    Semaphores support two fundamental operations, acquire() and
    release():

    \list
    \li acquire(\e{n}) tries to acquire \e n resources. If there aren&apos;t
       that many resources available, the call will block until this
       is the case.
    \li release(\e{n}) releases \e n resources.
    \endlist

    There&apos;s also a tryAcquire() function that returns immediately if
    it cannot acquire the resources, and an available() function that
    returns the number of available resources at any time.

    Example:

    \snippet code/src_corelib_thread_qsemaphore.cpp 0

    A typical application of semaphores is for controlling access to
    a circular buffer shared by a producer thread and a consumer
    thread. The \l{Semaphores Example} shows how
    to use QSemaphore to solve that problem.

    A non-computing example of a semaphore would be dining at a
    restaurant. A semaphore is initialized with the number of chairs
    in the restaurant. As people arrive, they want a seat. As seats
    are filled, available() is decremented. As people leave, the
    available() is incremented, allowing more people to enter. If a
    party of 10 people want to be seated, but there are only 9 seats,
    those 10 people will wait, but a party of 4 people would be
    seated (taking the available seats to 5, making the party of 10
    people wait longer).

    \sa QSemaphoreReleaser, QMutex, QWaitCondition, QThread, {Semaphores Example}
*/</doc>
<fun r='_ZN10QSemaphoreC1Ei'/>
<fun r='_ZN10QSemaphoreD1Ev'/>
<fun r='_ZN10QSemaphore7acquireEi'/>
<fun r='_ZN10QSemaphore7releaseEi'/>
<fun r='_ZNK10QSemaphore9availableEv'/>
<fun r='_ZN10QSemaphore10tryAcquireEi'/>
<fun r='_ZN10QSemaphore10tryAcquireEii'/>
<use f='qtbase-6.5.0/src/dbus/qdbusintegrator_p.h' l='100' c='_ZN24QDBusActivateObjectEventC1ERK15QDBusConnectionP7QObjectRKN22QDBusConnectionPrivate14ObjectTreeNodeEiRK12QDBusMessageP10QSemaphore'/>
<use f='qtbase-6.5.0/src/dbus/qdbusintegrator.cpp' l='1527' c='_ZN22QDBusConnectionPrivate16handleObjectCallERK12QDBusMessage'/>
<size>8</size>
<use f='qtbase-6.5.0/src/gui/image/qimage.cpp' l='5125' c='_ZN6QImage19applyColorTransformERK15QColorTransform'/>
<size>8</size>
<use f='qtbase-6.5.0/src/gui/image/qimage_conversions.cpp' l='211' c='_Z15convert_genericP10QImageDataPKS_6QFlagsIN2Qt19ImageConversionFlagEE'/>
<use f='qtbase-6.5.0/src/gui/image/qimage_conversions.cpp' l='266' c='_Z26convert_generic_over_rgb64P10QImageDataPKS_6QFlagsIN2Qt19ImageConversionFlagEE'/>
<use f='qtbase-6.5.0/src/gui/image/qimage_conversions.cpp' l='320' c='_Z28convert_generic_over_rgba32fP10QImageDataPKS_6QFlagsIN2Qt19ImageConversionFlagEE'/>
<use f='qtbase-6.5.0/src/gui/image/qimage_conversions.cpp' l='425' c='_Z23convert_generic_inplaceP10QImageDataN6QImage6FormatE6QFlagsIN2Qt19ImageConversionFlagEE'/>
<use f='qtbase-6.5.0/src/gui/image/qimage_conversions.cpp' l='519' c='_Z34convert_generic_inplace_over_rgb64P10QImageDataN6QImage6FormatE6QFlagsIN2Qt19ImageConversionFlagEE'/>
<use f='qtbase-6.5.0/src/gui/image/qimage_conversions.cpp' l='614' c='_Z36convert_generic_inplace_over_rgba32fP10QImageDataN6QImage6FormatE6QFlagsIN2Qt19ImageConversionFlagEE'/>
<size>8</size>
<use f='qtbase-6.5.0/src/gui/painting/qdrawhelper.cpp' l='3783' c='_ZL19blend_color_genericiPK11QT_FT_Span_Pv'/>
<use f='qtbase-6.5.0/src/gui/painting/qdrawhelper.cpp' l='3783' c='_ZL16blend_color_argbiPK11QT_FT_Span_Pv'/>
<use f='qtbase-6.5.0/src/gui/painting/qdrawhelper.cpp' l='3783' c='_ZL25blend_color_generic_rgb64iPK11QT_FT_Span_Pv'/>
<use f='qtbase-6.5.0/src/gui/painting/qdrawhelper.cpp' l='3783' c='_ZL22blend_color_generic_fpiPK11QT_FT_Span_Pv'/>
<use f='qtbase-6.5.0/src/gui/painting/qdrawhelper.cpp' l='3783' c='_Z11handleSpansiPK11QT_FT_Span_PK9QSpanDataRK8Operator'/>
<use f='qtbase-6.5.0/src/gui/painting/qdrawhelper.cpp' l='3783' c='_ZL27blend_untransformed_genericiPK11QT_FT_Span_Pv'/>
<use f='qtbase-6.5.0/src/gui/painting/qdrawhelper.cpp' l='3783' c='_ZL33blend_untransformed_generic_rgb64iPK11QT_FT_Span_Pv'/>
<use f='qtbase-6.5.0/src/gui/painting/qdrawhelper.cpp' l='3783' c='_ZL30blend_untransformed_generic_fpiPK11QT_FT_Span_Pv'/>
<use f='qtbase-6.5.0/src/gui/painting/qdrawhelper.cpp' l='3783' c='_ZL24blend_untransformed_argbiPK11QT_FT_Span_Pv'/>
<use f='qtbase-6.5.0/src/gui/painting/qdrawhelper.cpp' l='3783' c='_ZL26blend_untransformed_rgb565iPK11QT_FT_Span_Pv'/>
<use f='qtbase-6.5.0/src/gui/painting/qdrawhelper.cpp' l='3783' c='_ZL19blend_tiled_genericiPK11QT_FT_Span_Pv'/>
<use f='qtbase-6.5.0/src/gui/painting/qdrawhelper.cpp' l='3783' c='_ZL25blend_tiled_generic_rgb64iPK11QT_FT_Span_Pv'/>
<use f='qtbase-6.5.0/src/gui/painting/qdrawhelper.cpp' l='3783' c='_ZL22blend_tiled_generic_fpiPK11QT_FT_Span_Pv'/>
<use f='qtbase-6.5.0/src/gui/painting/qdrawhelper.cpp' l='3783' c='_ZL16blend_tiled_argbiPK11QT_FT_Span_Pv'/>
<use f='qtbase-6.5.0/src/gui/painting/qdrawhelper.cpp' l='3783' c='_ZL18blend_tiled_rgb565iPK11QT_FT_Span_Pv'/>
<size>8</size>
<use f='qtbase-6.5.0/src/gui/painting/qimagescale.cpp' l='279' c='_ZL27multithread_pixels_functionPN11QImageScale15QImageScaleInfoEiRKT_'/>
<size>8</size>
<use f='qtbase-6.5.0/src/gui/painting/qimagescale_sse4.cpp' l='29' c='_ZL27multithread_pixels_functionPN11QImageScale15QImageScaleInfoEiRKT_'/>
<size>8</size>
