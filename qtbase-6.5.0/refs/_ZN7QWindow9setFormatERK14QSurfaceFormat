<dec f='qtbase-6.5.0/src/gui/kernel/qwindow.h' l='146' type='void QWindow::setFormat(const QSurfaceFormat &amp; format)'/>
<use f='qtbase-6.5.0/src/gui/kernel/qoffscreensurface.cpp' l='136' u='c' c='_ZN17QOffscreenSurface6createEv'/>
<use f='qtbase-6.5.0/src/gui/kernel/qshapedpixmapdndwindow.cpp' l='22' u='c' c='_ZN19QShapedPixmapWindowC1EP7QScreen'/>
<def f='qtbase-6.5.0/src/gui/kernel/qwindow.cpp' l='842' ll='846' type='void QWindow::setFormat(const QSurfaceFormat &amp; format)'/>
<doc f='qtbase-6.5.0/src/gui/kernel/qwindow.cpp' l='816'>/*!
    Sets the window&apos;s surface \a format.

    The format determines properties such as color depth, alpha, depth and
    stencil buffer size, etc. For example, to give a window a transparent
    background (provided that the window system supports compositing, and
    provided that other content in the window does not make it opaque again):

    \code
    QSurfaceFormat format;
    format.setAlphaBufferSize(8);
    window.setFormat(format);
    \endcode

    The surface format will be resolved in the create() function. Calling
    this function after create() has been called will not re-resolve the
    surface format of the native surface.

    When the format is not explicitly set via this function, the format returned
    by QSurfaceFormat::defaultFormat() will be used. This means that when having
    multiple windows, individual calls to this function can be replaced by one
    single call to QSurfaceFormat::setDefaultFormat() before creating the first
    window.

    \sa create(), destroy(), QSurfaceFormat::setDefaultFormat()
*/</doc>
<use f='qtbase-6.5.0/src/openglwidgets/qopenglwidget.cpp' l='882' u='c' c='_ZN20QOpenGLWidgetPrivate10initializeEv'/>
<use f='qtbase-6.5.0/src/openglwidgets/qopenglwidget.cpp' l='886' u='c' c='_ZN20QOpenGLWidgetPrivate10initializeEv'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='1297' u='c' c='_ZN14QWidgetPrivate6createEv'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='2224' u='c' c='_ZN14QWidgetPrivate19updateIsTranslucentEv'/>
