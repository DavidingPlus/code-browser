<dec f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicslayout.h' l='36' type='void QGraphicsLayout::removeAt(int index)'/>
<ovr f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsanchorlayout.cpp' l='418' c='_ZN21QGraphicsAnchorLayout8removeAtEi'/>
<ovr f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsgridlayout.cpp' l='543' c='_ZN19QGraphicsGridLayout8removeAtEi'/>
<doc f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicslayout.cpp' l='401'>/*!
    \fn virtual void QGraphicsLayout::removeAt(int index) = 0

    This pure virtual function must be reimplemented in a subclass of
    QGraphicsLayout to remove the item at \a index. The
    reimplementation can assume that \a index is valid (i.e., it
    respects the value of count()).

    The implementation must ensure that the parentLayoutItem() of
    the removed item does not point to this layout, since the item is
    considered to be removed from the layout hierarchy.

    If the layout is to be reused between applications, we recommend
    that the layout deletes the item, but the graphics view framework
    does not depend on this.

    The subclass is free to decide how to store the items.

    \sa itemAt(), count()
*/</doc>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicslayout_p.cpp' l='89' u='c' c='_ZL26removeLayoutItemFromLayoutP15QGraphicsLayoutP19QGraphicsLayoutItem'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicslayoutitem.cpp' l='385' u='c' c='_ZN19QGraphicsLayoutItemD1Ev'/>
<ovr f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicslinearlayout.cpp' l='294' c='_ZN21QGraphicsLinearLayout8removeAtEi'/>
