<dec f='qtbase-6.5.0/src/network/socket/qabstractsocket.h' l='162' type='bool QAbstractSocket::setSocketDescriptor(qintptr socketDescriptor, QAbstractSocket::SocketState state = ConnectedState, QIODeviceBase::OpenMode openMode = ReadWrite)'/>
<def f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='1855' ll='1912' type='bool QAbstractSocket::setSocketDescriptor(qintptr socketDescriptor, QAbstractSocket::SocketState socketState = ConnectedState, QIODeviceBase::OpenMode openMode = ReadWrite)'/>
<doc f='qtbase-6.5.0/src/network/socket/qabstractsocket.cpp' l='1842'>/*!
    Initializes QAbstractSocket with the native socket descriptor \a
    socketDescriptor. Returns \c true if \a socketDescriptor is accepted
    as a valid socket descriptor; otherwise returns \c false.
    The socket is opened in the mode specified by \a openMode, and
    enters the socket state specified by \a socketState.
    Read and write buffers are cleared, discarding any pending data.

    \b{Note:} It is not possible to initialize two abstract sockets
    with the same native socket descriptor.

    \sa socketDescriptor()
*/</doc>
<use f='qtbase-6.5.0/src/network/socket/qlocalsocket_unix.cpp' l='323' u='c' c='_ZN19QLocalSocketPrivate18_q_connectToSocketEv'/>
<use f='qtbase-6.5.0/src/network/socket/qlocalsocket_unix.cpp' l='358' u='c' c='_ZN12QLocalSocket19setSocketDescriptorExNS_16LocalSocketStateE6QFlagsIN13QIODeviceBase12OpenModeFlagEE'/>
<use f='qtbase-6.5.0/src/network/socket/qtcpserver.cpp' l='593' u='c' c='_ZN10QTcpServer18incomingConnectionEx'/>
