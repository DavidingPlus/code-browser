<inh f='qtbase-6.5.0/src/widgets/widgets/qframe.h' l='16' c='QFrame'/>
<def f='qtbase-6.5.0/src/widgets/widgets/qlcdnumber.h' l='15' ll='79'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qlcdnumber.h' l='77' c='_ZN10QLCDNumberC1ERKS_'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qlcdnumber.h' l='77' c='_ZN10QLCDNumberaSERKS_'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qlcdnumber.h' l='77' c='_ZN10QLCDNumberaSERKS_'/>
<size>40</size>
<doc f='qtbase-6.5.0/src/widgets/widgets/qlcdnumber.h' l='15'>// LCD number widget</doc>
<smbr r='QLCDNumber::staticMetaObject' t='const QMetaObject'/>
<fun r='_ZNK10QLCDNumber10metaObjectEv'/>
<fun r='_ZN10QLCDNumber11qt_metacastEPKc'/>
<fun r='_ZN10QLCDNumber11qt_metacallEN11QMetaObject4CallEiPPv'/>
<fun r='_ZN10QLCDNumber2trEPKcS1_i'/>
<fun r='_ZN10QLCDNumber18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv'/>
<fun r='_ZN10QLCDNumberC1EP7QWidget'/>
<fun r='_ZN10QLCDNumberC1EjP7QWidget'/>
<fun r='_ZN10QLCDNumberD1Ev'/>
<fun r='_ZNK10QLCDNumber17smallDecimalPointEv'/>
<fun r='_ZNK10QLCDNumber10digitCountEv'/>
<fun r='_ZN10QLCDNumber13setDigitCountEi'/>
<fun r='_ZNK10QLCDNumber13checkOverflowEd'/>
<fun r='_ZNK10QLCDNumber13checkOverflowEi'/>
<fun r='_ZNK10QLCDNumber4modeEv'/>
<fun r='_ZN10QLCDNumber7setModeENS_4ModeE'/>
<fun r='_ZNK10QLCDNumber12segmentStyleEv'/>
<fun r='_ZN10QLCDNumber15setSegmentStyleENS_12SegmentStyleE'/>
<fun r='_ZNK10QLCDNumber5valueEv'/>
<fun r='_ZNK10QLCDNumber8intValueEv'/>
<fun r='_ZNK10QLCDNumber8sizeHintEv'/>
<fun r='_ZN10QLCDNumber7displayERK7QString'/>
<fun r='_ZN10QLCDNumber7displayEi'/>
<fun r='_ZN10QLCDNumber7displayEd'/>
<fun r='_ZN10QLCDNumber10setHexModeEv'/>
<fun r='_ZN10QLCDNumber10setDecModeEv'/>
<fun r='_ZN10QLCDNumber10setOctModeEv'/>
<fun r='_ZN10QLCDNumber10setBinModeEv'/>
<fun r='_ZN10QLCDNumber20setSmallDecimalPointEb'/>
<fun r='_ZN10QLCDNumber8overflowEv'/>
<fun r='_ZN10QLCDNumber5eventEP6QEvent'/>
<fun r='_ZN10QLCDNumber10paintEventEP11QPaintEvent'/>
<fun r='_ZN10QLCDNumberC1ERKS_'/>
<fun r='_ZN10QLCDNumber6d_funcEv'/>
<fun r='_ZNK10QLCDNumber6d_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/accessible/simplewidgets.cpp' l='462' c='_ZNK18QAccessibleDisplay4textEN11QAccessible4TextE'/>
<use f='qtbase-6.5.0/src/widgets/accessible/simplewidgets.cpp' l='463' c='_ZNK18QAccessibleDisplay4textEN11QAccessible4TextE'/>
<use f='qtbase-6.5.0/src/widgets/accessible/simplewidgets.cpp' l='463' c='_ZNK18QAccessibleDisplay4textEN11QAccessible4TextE'/>
<size>40</size>
<use f='qtbase-6.5.0/src/widgets/widgets/qlcdnumber.cpp' l='14' c='_ZN17QLCDNumberPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qlcdnumber.cpp' l='14' c='_ZN17QLCDNumberPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qlcdnumber.cpp' l='14' c='_ZNK17QLCDNumberPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qlcdnumber.cpp' l='14' c='_ZNK17QLCDNumberPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qlcdnumber.cpp' l='14'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qlcdnumber.cpp' l='296' c='_ZN10QLCDNumberC1EP7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qlcdnumber.cpp' l='322' c='_ZN17QLCDNumberPrivate4initEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qlcdnumber.cpp' l='679' c='_ZN17QLCDNumberPrivate17internalSetStringERK7QString'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qlcdnumber.cpp' l='742' c='_ZN17QLCDNumberPrivate10drawStringERK7QStringR8QPainterP9QBitArrayb'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qlcdnumber.cpp' l='841' c='_ZN17QLCDNumberPrivate11drawSegmentERK6QPointcR8QPainterib'/>
<size>40</size>
<doc f='qtbase-6.5.0/src/widgets/widgets/qlcdnumber.cpp' l='33'>/*!
    \class QLCDNumber

    \brief The QLCDNumber widget displays a number with LCD-like digits.

    \ingroup basicwidgets
    \inmodule QtWidgets

    \image windows-lcdnumber.png

    It can display a number in just about any size. It can display
    decimal, hexadecimal, octal or binary numbers. It is easy to
    connect to data sources using the display() slot, which is
    overloaded to take any of five argument types.

    There are also slots to change the base with setMode() and the
    decimal point with setSmallDecimalPoint().

    QLCDNumber emits the overflow() signal when it is asked to display
    something beyond its range. The range is set by setDigitCount(),
    but setSmallDecimalPoint() also influences it. If the display is
    set to hexadecimal, octal or binary, the integer equivalent of the
    value is displayed.

    These digits and other symbols can be shown: 0/O, 1, 2, 3, 4, 5/S,
    6, 7, 8, 9/g, minus, decimal point, A, B, C, D, E, F, h, H, L, o,
    P, r, u, U, Y, colon, degree sign (which is specified as single
    quote in the string) and space. QLCDNumber substitutes spaces for
    illegal characters.

    It is not possible to retrieve the contents of a QLCDNumber
    object, although you can retrieve the numeric value with value().
    If you really need the text, we recommend that you connect the
    signals that feed the display() slot to another slot as well and
    store the value there.

    Incidentally, QLCDNumber is the very oldest part of Qt, tracing
    its roots back to a BASIC program on the \l{Sinclair Spectrum}{Sinclair Spectrum}.

    \sa QLabel, QFrame, {Digital Clock Example}, {Tetrix Example}
*/</doc>
<fun r='_ZN10QLCDNumberC1EP7QWidget'/>
<fun r='_ZN10QLCDNumberC1EjP7QWidget'/>
<fun r='_ZN10QLCDNumberD1Ev'/>
<fun r='_ZN10QLCDNumber13setDigitCountEi'/>
<fun r='_ZNK10QLCDNumber10digitCountEv'/>
<fun r='_ZNK10QLCDNumber13checkOverflowEi'/>
<fun r='_ZNK10QLCDNumber13checkOverflowEd'/>
<fun r='_ZNK10QLCDNumber4modeEv'/>
<fun r='_ZN10QLCDNumber7setModeENS_4ModeE'/>
<fun r='_ZNK10QLCDNumber5valueEv'/>
<fun r='_ZN10QLCDNumber7displayEd'/>
<fun r='_ZNK10QLCDNumber8intValueEv'/>
<fun r='_ZN10QLCDNumber7displayEi'/>
<fun r='_ZN10QLCDNumber7displayERK7QString'/>
<fun r='_ZN10QLCDNumber10setHexModeEv'/>
<fun r='_ZN10QLCDNumber10setDecModeEv'/>
<fun r='_ZN10QLCDNumber10setOctModeEv'/>
<fun r='_ZN10QLCDNumber10setBinModeEv'/>
<fun r='_ZN10QLCDNumber20setSmallDecimalPointEb'/>
<fun r='_ZNK10QLCDNumber17smallDecimalPointEv'/>
<fun r='_ZN10QLCDNumber10paintEventEP11QPaintEvent'/>
<fun r='_ZN10QLCDNumber15setSegmentStyleENS_12SegmentStyleE'/>
<fun r='_ZNK10QLCDNumber12segmentStyleEv'/>
<fun r='_ZNK10QLCDNumber8sizeHintEv'/>
<fun r='_ZN10QLCDNumber5eventEP6QEvent'/>
