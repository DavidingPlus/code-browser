<dec f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.h' l='96' type='bool QOpenGLShaderProgram::bind()'/>
<use f='qtbase-6.5.0/src/opengl/qopenglengineshadermanager.cpp' l='335' u='c' c='_ZN26QOpenGLEngineSharedShaders18findProgramInCacheERK23QOpenGLEngineShaderProg'/>
<use f='qtbase-6.5.0/src/opengl/qopenglengineshadermanager.cpp' l='427' u='c' c='_ZN26QOpenGLEngineSharedShaders18findProgramInCacheERK23QOpenGLEngineShaderProg'/>
<use f='qtbase-6.5.0/src/opengl/qopenglengineshadermanager.cpp' l='605' u='c' c='_ZN26QOpenGLEngineShaderManager16useSimpleProgramEv'/>
<use f='qtbase-6.5.0/src/opengl/qopenglengineshadermanager.cpp' l='620' u='c' c='_ZN26QOpenGLEngineShaderManager14useBlitProgramEv'/>
<def f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.cpp' l='1355' ll='1371' type='bool QOpenGLShaderProgram::bind()'/>
<doc f='qtbase-6.5.0/src/opengl/qopenglshaderprogram.cpp' l='1345'>/*!
    Binds this shader program to the active QOpenGLContext and makes
    it the current shader program.  Any previously bound shader program
    is released.  This is equivalent to calling \c{glUseProgram()} on
    programId().  Returns \c true if the program was successfully bound;
    false otherwise.  If the shader program has not yet been linked,
    or it needs to be re-linked, this function will call link().

    \sa link(), release()
*/</doc>
<use f='qtbase-6.5.0/src/opengl/qopengltextureblitter.cpp' l='377' u='c' c='_ZN28QOpenGLTextureBlitterPrivate12buildProgramENS_12ProgramIndexEPKcS2_'/>
<use f='qtbase-6.5.0/src/opengl/qopengltextureblitter.cpp' l='594' u='c' c='_ZN21QOpenGLTextureBlitter4bindEj'/>
<use f='qtbase-6.5.0/src/opengl/qopengltextureglyphcache.cpp' l='349' u='c' c='_ZN24QOpenGLTextureGlyphCache17resizeTextureDataEii'/>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfscursor.cpp' l='463' u='c' c='_ZN12QEglFSCursor4drawERK6QRectF'/>
