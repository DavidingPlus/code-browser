<dec f='qtbase-6.5.0/src/sql/kernel/qsqlquery.h' l='69' type='void QSqlQuery::setNumericalPrecisionPolicy(QSql::NumericalPrecisionPolicy precisionPolicy)'/>
<def f='qtbase-6.5.0/src/sql/kernel/qsqlquery.cpp' l='1224' ll='1227' type='void QSqlQuery::setNumericalPrecisionPolicy(QSql::NumericalPrecisionPolicy precisionPolicy)'/>
<doc f='qtbase-6.5.0/src/sql/kernel/qsqlquery.cpp' l='1203'>/*!

  Instruct the database driver to return numerical values with a
  precision specified by \a precisionPolicy.

  The Oracle driver, for example, can retrieve numerical values as
  strings to prevent the loss of precision. If high precision doesn&apos;t
  matter, use this method to increase execution speed by bypassing
  string conversions.

  Note: Drivers that don&apos;t support fetching numerical values with low
  precision will ignore the precision policy. You can use
  QSqlDriver::hasFeature() to find out whether a driver supports this
  feature.

  Note: Setting the precision policy doesn&apos;t affect the currently
  active query. Call \l{exec()}{exec(QString)} or prepare() in order
  to activate the policy.

  \sa QSql::NumericalPrecisionPolicy, numericalPrecisionPolicy()
*/</doc>
