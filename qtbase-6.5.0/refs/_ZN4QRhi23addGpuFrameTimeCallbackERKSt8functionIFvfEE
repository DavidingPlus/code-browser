<dec f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='1735' type='void QRhi::addGpuFrameTimeCallback(const QRhi::GpuFrameTimeCallback &amp; callback)'/>
<def f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='5859' ll='5862' type='void QRhi::addGpuFrameTimeCallback(const QRhi::GpuFrameTimeCallback &amp; callback)'/>
<doc f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='5834'>/*!
    Registers a \a callback that is called with an elapsed time calculated from
    GPU timestamps asynchronously after a timestamp becomes available at some
    point after presenting a frame.

    The callback is called with a float value that is meant to be in
    milliseconds and represents the elapsed time on the GPU side for a given
    frame. Care must be exercised with the interpretation of the value, as what
    it exactly is is not controlled by Qt and depends on the underlying
    graphics API and its implementation. In particular, comparing the values
    between different graphics APIs is discouraged and may be meaningless.

    The timing values become available asynchronously, sometimes several frames
    after the frame has been submitted in endFrame(). There is currently no way
    to identify the frame. The callback is invoked whenever the timestamp
    queries complete.

    \note This is only supported when the Timestamp feature is reported as
    supported from isFeatureSupported(). Otherwise the \a callback is never
    called.

    The \a callback is always called on the thread the QRhi lives and operates
    on. While not guaranteed, it is typical that the callback is invoked from
    within beginFrame().
 */</doc>
