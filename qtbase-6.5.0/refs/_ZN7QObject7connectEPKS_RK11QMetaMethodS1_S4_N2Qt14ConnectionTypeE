<dec f='qtbase-6.5.0/src/corelib/kernel/qobject.h' l='184' type='static QMetaObject::Connection QObject::connect(const QObject * sender, const QMetaMethod &amp; signal, const QObject * receiver, const QMetaMethod &amp; method, Qt::ConnectionType type = Qt::AutoConnection)'/>
<def f='qtbase-6.5.0/src/corelib/kernel/qobject.cpp' l='2977' ll='3034' type='static QMetaObject::Connection QObject::connect(const QObject * sender, const QMetaMethod &amp; signal, const QObject * receiver, const QMetaMethod &amp; method, Qt::ConnectionType type = Qt::AutoConnection)'/>
<doc f='qtbase-6.5.0/src/corelib/kernel/qobject.cpp' l='2957'>/*!
    \since 4.8

    Creates a connection of the given \a type from the \a signal in
    the \a sender object to the \a method in the \a receiver object.
    Returns a handle to the connection that can be used to disconnect
    it later.

    The Connection handle will be invalid  if it cannot create the
    connection, for example, the parameters were invalid.
    You can check if the QMetaObject::Connection is valid by casting it to a bool.

    This function works in the same way as
    \c {connect(const QObject *sender, const char *signal,
            const QObject *receiver, const char *method,
            Qt::ConnectionType type)}
    but it uses QMetaMethod to specify signal and method.

    \sa connect(const QObject *sender, const char *signal, const QObject *receiver, const char *method, Qt::ConnectionType type)
 */</doc>
