<dec f='qtbase-6.5.0/src/widgets/kernel/qwidget.h' l='725' type='bool QWidget::focusNextPrevChild(bool next)'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qwidget.h' l='726' u='c' c='_ZN7QWidget14focusNextChildEv'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qwidget.h' l='727' u='c' c='_ZN7QWidget18focusPreviousChildEv'/>
<ovr f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.cpp' l='3104' c='_ZN13QGraphicsView18focusNextPrevChildEb'/>
<use f='qtbase-6.5.0/src/widgets/graphicsview/qgraphicsview.cpp' l='3106' u='c' c='_ZN13QGraphicsView18focusNextPrevChildEb'/>
<ovr f='qtbase-6.5.0/src/widgets/itemviews/qabstractitemview.cpp' l='1638' c='_ZN17QAbstractItemView18focusNextPrevChildEb'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qabstractitemview.cpp' l='1647' u='c' c='_ZN17QAbstractItemView18focusNextPrevChildEb'/>
<def f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='6772' ll='6812' type='bool QWidget::focusNextPrevChild(bool next)'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='6777' u='c' c='_ZN7QWidget18focusNextPrevChildEb'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='8189' u='c' c='_ZN14QWidgetPrivate11hide_helperEv'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='8933' u='c' c='_ZN7QWidget5eventEP6QEvent'/>
<use f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='8935' u='c' c='_ZN7QWidget5eventEP6QEvent'/>
<doc f='qtbase-6.5.0/src/widgets/kernel/qwidget.cpp' l='6750'>/*!
    Finds a new widget to give the keyboard focus to, as appropriate
    for Tab and Shift+Tab, and returns \c true if it can find a new
    widget, or false if it can&apos;t.

    If \a next is true, this function searches forward, if \a next
    is false, it searches backward.

    Sometimes, you will want to reimplement this function. For
    example, a web browser might reimplement it to move its &quot;current
    active link&quot; forward or backward, and call
    focusNextPrevChild() only when it reaches the last or
    first link on the &quot;page&quot;.

    Child widgets call focusNextPrevChild() on their parent widgets,
    but only the window that contains the child widgets decides where
    to redirect focus. By reimplementing this function for an object,
    you thus gain control of focus traversal for all child widgets.

    \sa focusNextChild(), focusPreviousChild()
*/</doc>
<use f='qtbase-6.5.0/src/widgets/widgets/qabstractbutton.cpp' l='1060' u='c' c='_ZN15QAbstractButton13keyPressEventEP9QKeyEvent'/>
<ovr f='qtbase-6.5.0/src/widgets/widgets/qdatetimeedit.cpp' l='1316' c='_ZN13QDateTimeEdit18focusNextPrevChildEb'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qdatetimeedit.cpp' l='1324' u='c' c='_ZN13QDateTimeEdit18focusNextPrevChildEb'/>
<ovr f='qtbase-6.5.0/src/widgets/widgets/qlabel.cpp' l='938' c='_ZN6QLabel18focusNextPrevChildEb'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qlabel.cpp' l='943' u='c' c='_ZN6QLabel18focusNextPrevChildEb'/>
<ovr f='qtbase-6.5.0/src/widgets/widgets/qmenu.cpp' l='3035' c='_ZN5QMenu18focusNextPrevChildEb'/>
<ovr f='qtbase-6.5.0/src/widgets/widgets/qplaintextedit.cpp' l='2092' c='_ZN14QPlainTextEdit18focusNextPrevChildEb'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qplaintextedit.cpp' l='2097' u='c' c='_ZN14QPlainTextEdit18focusNextPrevChildEb'/>
<ovr f='qtbase-6.5.0/src/widgets/widgets/qscrollarea.cpp' l='404' c='_ZN11QScrollArea18focusNextPrevChildEb'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qscrollarea.cpp' l='406' u='c' c='_ZN11QScrollArea18focusNextPrevChildEb'/>
<ovr f='qtbase-6.5.0/src/widgets/widgets/qtextedit.cpp' l='1690' c='_ZN9QTextEdit18focusNextPrevChildEb'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtextedit.cpp' l='1695' u='c' c='_ZN9QTextEdit18focusNextPrevChildEb'/>
