<dec f='qtbase-6.5.0/src/widgets/widgets/qtabwidget.h' l='41' type='int QTabWidget::insertTab(int index, QWidget * widget, const QString &amp; )'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qtabwidget.cpp' l='363' u='c' c='_ZN10QTabWidget6addTabEP7QWidgetRK7QString'/>
<def f='qtbase-6.5.0/src/widgets/widgets/qtabwidget.cpp' l='417' ll='420' type='int QTabWidget::insertTab(int index, QWidget * w, const QString &amp; label)'/>
<doc f='qtbase-6.5.0/src/widgets/widgets/qtabwidget.cpp' l='384'>/*!
    \fn int QTabWidget::insertTab(int index, QWidget *page, const QString &amp;label)

    Inserts a tab with the given \a label and \a page into the tab
    widget at the specified \a index, and returns the index of the
    inserted tab in the tab bar. Ownership of \a page is passed on to the
    QTabWidget.

    The label is displayed in the tab and may vary in appearance depending
    on the configuration of the tab widget.

    If the tab&apos;s \a label contains an ampersand, the letter following
    the ampersand is used as a shortcut for the tab, e.g. if the
    label is &quot;Bro\&amp;wse&quot; then Alt+W becomes a shortcut which will
    move the focus to this tab.

    If \a index is out of range, the tab is simply appended.
    Otherwise it is inserted at the specified position.

    If the QTabWidget was empty before this function is called, the
    new page becomes the current page. Inserting a new tab at an index
    less than or equal to the current index will increment the current
    index, but keep the current page.

    \note If you call insertTab() after show(), the layout system will try
    to adjust to the changes in its widgets hierarchy and may cause
    flicker. To prevent this, you can set the QWidget::updatesEnabled
    property to false prior to changes; remember to set the property
    to true when the changes are done, making the widget receive paint
    events again.

    \sa addTab()
*/</doc>
