<use f='qtbase-6.5.0/src/widgets/widgets/qabstractbutton.h' l='78' c='_ZNK15QAbstractButton5groupEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qabstractbutton.h' l='118'/>
<inh f='qtbase-6.5.0/src/corelib/kernel/qobject.h' l='89' c='QObject'/>
<def f='qtbase-6.5.0/src/widgets/widgets/qbuttongroup.h' l='18' ll='58'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qbuttongroup.h' l='54' c='_ZN12QButtonGroupC1ERKS_'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qbuttongroup.h' l='54' c='_ZN12QButtonGroupaSERKS_'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qbuttongroup.h' l='54' c='_ZN12QButtonGroupaSERKS_'/>
<size>16</size>
<smbr r='QButtonGroup::staticMetaObject' t='const QMetaObject'/>
<fun r='_ZNK12QButtonGroup10metaObjectEv'/>
<fun r='_ZN12QButtonGroup11qt_metacastEPKc'/>
<fun r='_ZN12QButtonGroup11qt_metacallEN11QMetaObject4CallEiPPv'/>
<fun r='_ZN12QButtonGroup2trEPKcS1_i'/>
<fun r='_ZN12QButtonGroup18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv'/>
<fun r='_ZN12QButtonGroupC1EP7QObject'/>
<fun r='_ZN12QButtonGroupD1Ev'/>
<fun r='_ZN12QButtonGroup12setExclusiveEb'/>
<fun r='_ZNK12QButtonGroup9exclusiveEv'/>
<fun r='_ZN12QButtonGroup9addButtonEP15QAbstractButtoni'/>
<fun r='_ZN12QButtonGroup12removeButtonEP15QAbstractButton'/>
<fun r='_ZNK12QButtonGroup7buttonsEv'/>
<fun r='_ZNK12QButtonGroup13checkedButtonEv'/>
<fun r='_ZNK12QButtonGroup6buttonEi'/>
<fun r='_ZN12QButtonGroup5setIdEP15QAbstractButtoni'/>
<fun r='_ZNK12QButtonGroup2idEP15QAbstractButton'/>
<fun r='_ZNK12QButtonGroup9checkedIdEv'/>
<fun r='_ZN12QButtonGroup13buttonClickedEP15QAbstractButton'/>
<fun r='_ZN12QButtonGroup13buttonPressedEP15QAbstractButton'/>
<fun r='_ZN12QButtonGroup14buttonReleasedEP15QAbstractButton'/>
<fun r='_ZN12QButtonGroup13buttonToggledEP15QAbstractButtonb'/>
<fun r='_ZN12QButtonGroup9idClickedEi'/>
<fun r='_ZN12QButtonGroup9idPressedEi'/>
<fun r='_ZN12QButtonGroup10idReleasedEi'/>
<fun r='_ZN12QButtonGroup9idToggledEib'/>
<fun r='_ZN12QButtonGroupC1ERKS_'/>
<fun r='_ZN12QButtonGroup6d_funcEv'/>
<fun r='_ZNK12QButtonGroup6d_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qabstractbutton_p.h' l='48'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qbuttongroup_p.h' l='33' c='_ZN19QButtonGroupPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qbuttongroup_p.h' l='33' c='_ZN19QButtonGroupPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qbuttongroup_p.h' l='33' c='_ZNK19QButtonGroupPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qbuttongroup_p.h' l='33' c='_ZNK19QButtonGroupPrivate6q_funcEv'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qbuttongroup_p.h' l='33'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qabstractbutton.cpp' l='777' c='_ZNK15QAbstractButton5groupEv'/>
<size>16</size>
<use f='qtbase-6.5.0/src/widgets/widgets/qbuttongroup.cpp' l='209' c='_ZN12QButtonGroup9addButtonEP15QAbstractButtoni'/>
<size>16</size>
<doc f='qtbase-6.5.0/src/widgets/widgets/qbuttongroup.cpp' l='25'>/*!
    \class QButtonGroup
    \brief The QButtonGroup class provides a container to organize groups of
    button widgets.

    \ingroup organizers
    \ingroup geomanagement
    \inmodule QtWidgets

    QButtonGroup provides an abstract container into which button widgets can
    be placed. It does not provide a visual representation of this container
    (see QGroupBox for a container widget), but instead manages the states of
    each of the buttons in the group.

    An \l {QButtonGroup::exclusive} {exclusive} button group switches
    off all checkable (toggle) buttons except the one that has been
    clicked. By default, a button group is exclusive. The buttons in a
    button group are usually checkable \l{QPushButton}s, \l{QCheckBox}es
    (normally for non-exclusive button groups), or \l{QRadioButton}s.
    If you create an exclusive button group, you should ensure that
    one of the buttons in the group is initially checked; otherwise,
    the group will initially be in a state where no buttons are
    checked.

    A button can be added to the group with addButton() and removed
    with removeButton(). If the group is exclusive, the
    currently checked button is available with checkedButton(). If a
    button is clicked, the buttonClicked() signal is emitted; for a
    checkable button in an exclusive group this means that the button
    has been checked. The list of buttons in the group is returned by
    buttons().

    In addition, QButtonGroup can map between integers and buttons.
    You can assign an integer id to a button with setId(), and
    retrieve it with id(). The id of the currently checked button is
    available with checkedId(), and there is an overloaded signal
    buttonClicked() which emits the id of the button. The id \c {-1}
    is reserved by QButtonGroup to mean &quot;no such button&quot;. The purpose
    of the mapping mechanism is to simplify the representation of enum
    values in a user interface.

    \sa QGroupBox, QPushButton, QCheckBox, QRadioButton
*/</doc>
<fun r='_ZN12QButtonGroupC1EP7QObject'/>
<fun r='_ZN12QButtonGroupD1Ev'/>
<fun r='_ZNK12QButtonGroup9exclusiveEv'/>
<fun r='_ZN12QButtonGroup12setExclusiveEb'/>
<fun r='_ZN12QButtonGroup9addButtonEP15QAbstractButtoni'/>
<fun r='_ZN12QButtonGroup12removeButtonEP15QAbstractButton'/>
<fun r='_ZNK12QButtonGroup7buttonsEv'/>
<fun r='_ZNK12QButtonGroup13checkedButtonEv'/>
<fun r='_ZNK12QButtonGroup6buttonEi'/>
<fun r='_ZN12QButtonGroup5setIdEP15QAbstractButtoni'/>
<fun r='_ZNK12QButtonGroup2idEP15QAbstractButton'/>
<fun r='_ZNK12QButtonGroup9checkedIdEv'/>
