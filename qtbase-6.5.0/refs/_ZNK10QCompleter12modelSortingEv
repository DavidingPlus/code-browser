<dec f='qtbase-6.5.0/src/widgets/util/qcompleter.h' l='77' type='QCompleter::ModelSorting QCompleter::modelSorting() const'/>
<def f='qtbase-6.5.0/src/widgets/util/qcompleter.cpp' l='1585' ll='1589' type='QCompleter::ModelSorting QCompleter::modelSorting() const'/>
<doc f='qtbase-6.5.0/src/widgets/util/qcompleter.cpp' l='1553'>/*!
    \property QCompleter::modelSorting
    \brief the way the model is sorted

    By default, no assumptions are made about the order of the items
    in the model that provides the completions.

    If the model&apos;s data for the completionColumn() and completionRole() is sorted in
    ascending order, you can set this property to \l CaseSensitivelySortedModel
    or \l CaseInsensitivelySortedModel. On large models, this can lead to
    significant performance improvements because the completer object can
    then use a binary search algorithm instead of linear search algorithm.

    The sort order (i.e ascending or descending order) of the model is determined
    dynamically by inspecting the contents of the model.

    \b{Note:} The performance improvements described above cannot take place
    when the completer&apos;s \l caseSensitivity is different to the case sensitivity
    used by the model&apos;s when sorting.

    \sa setCaseSensitivity(), QCompleter::ModelSorting
*/</doc>
