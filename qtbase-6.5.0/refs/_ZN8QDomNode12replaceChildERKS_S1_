<dec f='qtbase-6.5.0/src/xml/dom/qdom.h' l='122' type='QDomNode QDomNode::replaceChild(const QDomNode &amp; newChild, const QDomNode &amp; oldChild)'/>
<def f='qtbase-6.5.0/src/xml/dom/qdom.cpp' l='2015' ll='2020' type='QDomNode QDomNode::replaceChild(const QDomNode &amp; newChild, const QDomNode &amp; oldChild)'/>
<doc f='qtbase-6.5.0/src/xml/dom/qdom.cpp' l='2000'>/*!
    Replaces \a oldChild with \a newChild. \a oldChild must be a
    direct child of this node.

    If \a newChild is the child of another node, it is reparented to
    this node. If \a newChild is a child of this node, then its
    position in the list of children is changed.

    If \a newChild is a QDomDocumentFragment, then \a oldChild is
    replaced by all of the children of the fragment.

    Returns a new reference to \a oldChild on success or a \l{isNull()}{null node} on failure.

    \sa insertBefore(), insertAfter(), removeChild(), appendChild()
*/</doc>
