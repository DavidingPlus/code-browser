<dec f='qtbase-6.5.0/src/dbus/qdbusargument.h' l='108' type='void QDBusArgument::beginMap() const'/>
<use f='qtbase-6.5.0/src/dbus/qdbusargument.h' l='270' u='c' c='_ZrsRK13QDBusArgumentRT_IT0_T1_E'/>
<def f='qtbase-6.5.0/src/dbus/qdbusargument.cpp' l='1008' ll='1012' type='void QDBusArgument::beginMap() const'/>
<doc f='qtbase-6.5.0/src/dbus/qdbusargument.cpp' l='993'>/*!
    Recurses into the D-Bus map to allow extraction of
    the map&apos;s elements.

    This function is used usually in \c{operator&gt;&gt;} streaming
    operators, as in the following example:

    \snippet code/src_qdbus_qdbusargument.cpp 10

    If the type you want to demarshall is a QMap or QHash, you need not
    declare an \c{operator&gt;&gt;} function for it, since Qt D-Bus provides
    generic templates to do the job of demarshalling the data.

    \sa endMap(), beginStructure(), beginArray(), beginMapEntry()
*/</doc>
<use f='qtbase-6.5.0/src/dbus/qdbusutil.cpp' l='150' u='c' c='_ZL11argToStringRK13QDBusArgumentR7QString'/>
<use f='qtbase-6.5.0/src/plugins/platforminputcontexts/ibus/qibustypes.cpp' l='21' u='c' c='_ZN17QIBusSerializable15deserializeFromERK13QDBusArgument'/>
