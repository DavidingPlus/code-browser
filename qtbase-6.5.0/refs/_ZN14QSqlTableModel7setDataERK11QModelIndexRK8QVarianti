<dec f='qtbase-6.5.0/src/sql/models/qsqltablemodel.h' l='41' type='bool QSqlTableModel::setData(const QModelIndex &amp; index, const QVariant &amp; value, int role = Qt::EditRole)'/>
<ovr f='qtbase-6.5.0/src/sql/models/qsqlrelationaltablemodel.cpp' l='437' c='_ZN24QSqlRelationalTableModel7setDataERK11QModelIndexRK8QVarianti'/>
<use f='qtbase-6.5.0/src/sql/models/qsqlrelationaltablemodel.cpp' l='449' u='c' c='_ZN24QSqlRelationalTableModel7setDataERK11QModelIndexRK8QVarianti'/>
<inh f='qtbase-6.5.0/src/corelib/itemmodels/qabstractitemmodel.h' l='256' c='_ZN18QAbstractItemModel7setDataERK11QModelIndexRK8QVarianti'/>
<def f='qtbase-6.5.0/src/sql/models/qsqltablemodel.cpp' l='539' ll='573' type='bool QSqlTableModel::setData(const QModelIndex &amp; index, const QVariant &amp; value, int role = Qt::EditRole)'/>
<use f='qtbase-6.5.0/src/sql/models/qsqltablemodel.cpp' l='580' u='c' c='_ZN14QSqlTableModel13clearItemDataERK11QModelIndex'/>
<use f='qtbase-6.5.0/src/sql/models/qsqltablemodel.cpp' l='1384' u='c' c='_ZN14QSqlTableModel9setRecordEiRK10QSqlRecord'/>
<doc f='qtbase-6.5.0/src/sql/models/qsqltablemodel.cpp' l='513'>/*!
    Sets the data for the item \a index for the role \a role to \a
    value.

    For edit strategy OnFieldChange, an index may receive a change
    only if no other index has a cached change. Changes are
    submitted immediately. However, rows that have not yet been
    inserted in the database may be freely changed and are not
    submitted automatically. Submitted changes are not reverted upon
    failure.

    For OnRowChange, an index may receive a change only if no other
    row has a cached change. Changes are not submitted automatically.

    Returns \c true if \a value is equal to the current value. However,
    the value will not be submitted to the database.

    Returns \c true if the value could be set or false on error, for
    example if \a index is out of bounds.

    Returns \c false if the role is not Qt::EditRole. To set data
    for roles other than EditRole, either use a custom proxy model
    or subclass QSqlTableModel.

    \sa editStrategy(), data(), submit(), submitAll(), revertRow()
*/</doc>
