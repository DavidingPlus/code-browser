<dec f='qtbase-6.5.0/src/corelib/io/qsettings.h' l='155' type='void QSettings::remove(QAnyStringView key)'/>
<use f='qtbase-6.5.0/qmake/property.cpp' l='126' u='c' c='_ZN13QMakeProperty6removeERK7QString'/>
<use f='qtbase-6.5.0/src/corelib/compat/removed_api.cpp' l='223' u='c' c='_ZN9QSettings6removeERK7QString'/>
<use f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='2992' u='c' c='_ZN9QSettings15beginWriteArrayE14QAnyStringViewi'/>
<def f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='3189' ll='3208' type='void QSettings::remove(QAnyStringView key)'/>
<doc f='qtbase-6.5.0/src/corelib/io/qsettings.cpp' l='3163'>/*!
    Removes the setting \a key and any sub-settings of \a key.

    Example:

    \snippet code/src_corelib_io_qsettings.cpp 24

    Be aware that if one of the fallback locations contains a setting
    with the same key, that setting will be visible after calling
    remove().

    If \a key is an empty string, all keys in the current group() are
    removed. For example:

    \snippet code/src_corelib_io_qsettings.cpp 25

    Note that the Windows registry and INI files use case-insensitive
    keys, whereas the CFPreferences API on \macos and iOS uses
    case-sensitive keys. To avoid portability problems, see the
    \l{Section and Key Syntax} rules.

    \note In Qt versions prior to 6.4, this function took QString, not
    QAnyStringView.

    \sa setValue(), value(), contains()
*/</doc>
<use f='qtbase-6.5.0/src/network/access/qhstsstore.cpp' l='165' u='c' c='_ZN10QHstsStore11evictPolicyERK7QString'/>
