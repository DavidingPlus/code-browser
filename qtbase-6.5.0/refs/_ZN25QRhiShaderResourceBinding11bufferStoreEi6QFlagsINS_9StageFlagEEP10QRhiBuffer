<dec f='qtbase-6.5.0/src/gui/rhi/qrhi_p.h' l='353' type='static QRhiShaderResourceBinding QRhiShaderResourceBinding::bufferStore(int binding, QRhiShaderResourceBinding::StageFlags stage, QRhiBuffer * buf)'/>
<def f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='3933' ll='3944' type='static QRhiShaderResourceBinding QRhiShaderResourceBinding::bufferStore(int binding, QRhiShaderResourceBinding::StageFlags stage, QRhiBuffer * buf)'/>
<doc f='qtbase-6.5.0/src/gui/rhi/qrhi.cpp' l='3912'>/*!
    \return a shader resource binding for a write-only storage buffer with the
    given \a binding number and pipeline \a stage.

    \note When \a buf is not null, must have been created with
    QRhiBuffer::StorageBuffer.

    \note \a buf can be null. It is valid to create a
    QRhiShaderResourceBindings with unspecified resources, but such an object
    cannot be used with QRhiCommandBuffer::setShaderResources(). It is however
    suitable for creating pipelines. Such a pipeline must then always be used
    together with another, layout compatible QRhiShaderResourceBindings with
    resources present passed to QRhiCommandBuffer::setShaderResources().

    \note Buffer load/store is only guaranteed to be available within a compute
    pipeline. While some backends may support using these resources in a
    graphics pipeline as well, this is not universally supported, and even when
    it is, unexpected problems may arise when it comes to barriers and
    synchronization. Therefore, avoid using such resources with shaders other
    than compute.
 */</doc>
