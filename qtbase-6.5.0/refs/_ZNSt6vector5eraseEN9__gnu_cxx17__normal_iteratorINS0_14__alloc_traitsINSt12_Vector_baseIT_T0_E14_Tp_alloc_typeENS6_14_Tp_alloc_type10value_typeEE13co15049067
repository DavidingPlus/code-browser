<def f='include/c++/9/bits/stl_vector.h' l='1425' ll='1428' type='std::vector::iterator std::vector::erase(std::vector::const_iterator __position)'/>
<doc f='include/c++/9/bits/stl_vector.h' l='1410'>/**
       *  @brief  Remove element at given position.
       *  @param  __position  Iterator pointing to element to be erased.
       *  @return  An iterator pointing to the next element (or end()).
       *
       *  This function will erase the element at the given position and thus
       *  shorten the %vector by one.
       *
       *  Note This operation could be expensive and if it is
       *  frequently used the user should consider using std::list.
       *  The user is also cautioned that this function only erases
       *  the element, and that if the element is itself a pointer,
       *  the pointed-to memory is not touched in any way.  Managing
       *  the pointer is the user&apos;s responsibility.
       */</doc>
<use f='qtbase-6.5.0/src/corelib/kernel/qmetaobjectbuilder.cpp' l='836' u='c' c='_ZN18QMetaObjectBuilder12removeMethodEi'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qmetaobjectbuilder.cpp' l='857' u='c' c='_ZN18QMetaObjectBuilder17removeConstructorEi'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qmetaobjectbuilder.cpp' l='869' u='c' c='_ZN18QMetaObjectBuilder14removePropertyEi'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qmetaobjectbuilder.cpp' l='882' u='c' c='_ZN18QMetaObjectBuilder16removeEnumeratorEi'/>
<use f='qtbase-6.5.0/src/corelib/kernel/qmimedata.cpp' l='57' u='c' c='_ZN16QMimeDataPrivate10removeDataERK7QString'/>
<use f='qtbase-6.5.0/src/network/ssl/qtlsbackend.cpp' l='52' u='c' c='_ZN12_GLOBAL__N_117BackendCollection13removeBackendEP11QTlsBackend'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qdatawidgetmapper.cpp' l='481' u='c' c='_ZN17QDataWidgetMapper13removeMappingEP7QWidget'/>
<use f='qtbase-6.5.0/src/widgets/widgets/qlineedit_p.cpp' l='629' u='c' c='_ZN16QLineEditPrivate12removeActionEP7QAction'/>
