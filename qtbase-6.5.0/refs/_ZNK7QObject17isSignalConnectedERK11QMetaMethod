<dec f='qtbase-6.5.0/src/corelib/kernel/qobject.h' l='390' type='bool QObject::isSignalConnected(const QMetaMethod &amp; signal) const'/>
<def f='qtbase-6.5.0/src/corelib/kernel/qobject.cpp' l='2679' ll='2696' type='bool QObject::isSignalConnected(const QMetaMethod &amp; signal) const'/>
<doc f='qtbase-6.5.0/src/corelib/kernel/qobject.cpp' l='2659'>/*!
    \since 5.0
    Returns \c true if the \a signal is connected to at least one receiver,
    otherwise returns \c false.

    \a signal must be a signal member of this object, otherwise the behaviour
    is undefined.

    \snippet code/src_corelib_kernel_qobject.cpp 49

    As the code snippet above illustrates, you can use this function to avoid
    expensive initialization or emitting a signal that nobody listens to.
    However, in a multithreaded application, connections might change after
    this function returns and before the signal gets emitted.

    \warning This function violates the object-oriented principle of
    modularity. In particular, this function must not be called from an
    override of connectNotify() or disconnectNotify(), as those might get
    called from any thread.
*/</doc>
<use f='qtbase-6.5.0/src/dbus/qdbusabstractinterface.cpp' l='621' u='c' c='_ZN29QDBusAbstractInterfacePrivate22finishDisconnectNotifyEP22QDBusAbstractInterfacei'/>
<use f='qtbase-6.5.0/src/dbus/qdbusabstractinterface.cpp' l='631' u='c' c='_ZN29QDBusAbstractInterfacePrivate22finishDisconnectNotifyEP22QDBusAbstractInterfacei'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qtreeview.cpp' l='2743' u='c' c='_ZN9QTreeView11collapseAllEv'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qtreeview.cpp' l='2780' u='c' c='_ZN9QTreeView13expandToDepthEi'/>
<use f='qtbase-6.5.0/src/widgets/itemviews/qtreeview.cpp' l='2781' u='c' c='_ZN9QTreeView13expandToDepthEi'/>
