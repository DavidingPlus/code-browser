<dec f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='7884' type='int sqlite3_blob_reopen(sqlite3_blob * , sqlite3_int64 )'/>
<def f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='99611' ll='99640' type='int sqlite3_blob_reopen(sqlite3_blob * pBlob, sqlite3_int64 iRow)'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='133119'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='191614' u='c' c='sqlite3Fts3ReadBlock'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='202195' u='c' c='nodeAcquire'/>
<use f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='231253' u='c' c='fts5DataRead'/>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='7861'>/*
** CAPI3REF: Move a BLOB Handle to a New Row
** METHOD: sqlite3_blob
**
** ^This function is used to move an existing [BLOB handle] so that it points
** to a different row of the same database table. ^The new row is identified
** by the rowid value passed as the second argument. Only the row can be
** changed. ^The database, table and column on which the blob handle is open
** remain the same. Moving an existing [BLOB handle] to a new row is
** faster than closing the existing handle and opening a new one.
**
** ^(The new row must meet the same criteria as for [sqlite3_blob_open()] -
** it must exist and there must be either a blob or text value stored in
** the nominated column.)^ ^If the new row is not present in the table, or if
** it does not contain a blob or text value, or if another error occurs, an
** SQLite error code is returned and the blob handle is considered aborted.
** ^All subsequent calls to [sqlite3_blob_read()], [sqlite3_blob_write()] or
** [sqlite3_blob_reopen()] on an aborted blob handle immediately return
** SQLITE_ABORT. ^Calling [sqlite3_blob_bytes()] on an aborted blob handle
** always returns zero.
**
** ^This function sets the database handle error code and message.
*/</doc>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.c' l='99601'>/*
** Move an existing blob handle to point to a different row of the same
** database table.
**
** If an error occurs, or if the specified row does not exist or does not
** contain a blob or text value, then an error code is returned and the
** database handle error code and message set. If this happens, then all
** subsequent calls to sqlite3_blob_xxx() functions (except blob_close())
** immediately return SQLITE_ABORT.
*/</doc>
<dec f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='7578' type='int sqlite3_blob_reopen(sqlite3_blob * , sqlite3_int64 )'/>
<doc f='qtbase-6.5.0/src/3rdparty/sqlite/sqlite3.h' l='7555'>/*
** CAPI3REF: Move a BLOB Handle to a New Row
** METHOD: sqlite3_blob
**
** ^This function is used to move an existing [BLOB handle] so that it points
** to a different row of the same database table. ^The new row is identified
** by the rowid value passed as the second argument. Only the row can be
** changed. ^The database, table and column on which the blob handle is open
** remain the same. Moving an existing [BLOB handle] to a new row is
** faster than closing the existing handle and opening a new one.
**
** ^(The new row must meet the same criteria as for [sqlite3_blob_open()] -
** it must exist and there must be either a blob or text value stored in
** the nominated column.)^ ^If the new row is not present in the table, or if
** it does not contain a blob or text value, or if another error occurs, an
** SQLite error code is returned and the blob handle is considered aborted.
** ^All subsequent calls to [sqlite3_blob_read()], [sqlite3_blob_write()] or
** [sqlite3_blob_reopen()] on an aborted blob handle immediately return
** SQLITE_ABORT. ^Calling [sqlite3_blob_bytes()] on an aborted blob handle
** always returns zero.
**
** ^This function sets the database handle error code and message.
*/</doc>
