<dec f='qtbase-6.5.0/src/gui/text/qabstracttextdocumentlayout.h' l='80' type='void QAbstractTextDocumentLayout::documentChanged(int from, int charsRemoved, int charsAdded)'/>
<doc f='qtbase-6.5.0/src/gui/text/qabstracttextdocumentlayout.cpp' l='219'>/*!
    \fn void QAbstractTextDocumentLayout::documentChanged(int position, int charsRemoved, int charsAdded)

    This function is called whenever the contents of the document change. A
    change occurs when text is inserted, removed, or a combination of these
    two. The change is specified by \a position, \a charsRemoved, and
    \a charsAdded corresponding to the starting character position of the
    change, the number of characters removed from the document, and the
    number of characters added.

    For example, when inserting the text &quot;Hello&quot; into an empty document,
    \a charsRemoved would be 0 and \a charsAdded would be 5 (the length of
    the string).

    Replacing text is a combination of removing and inserting. For example, if
    the text &quot;Hello&quot; gets replaced by &quot;Hi&quot;, \a charsRemoved would be 5 and
    \a charsAdded would be 2.

    For subclasses of QAbstractTextDocumentLayout, this is the central function
    where a large portion of the work to lay out and position document contents
    is done.

    For example, in a subclass that only arranges blocks of text, an
    implementation of this function would have to do the following:

    \list
        \li Determine the list of changed \l{QTextBlock}(s) using the parameters
            provided.
        \li Each QTextBlock object&apos;s corresponding QTextLayout object needs to
            be processed. You can access the \l{QTextBlock}&apos;s layout using the
            QTextBlock::layout() function. This processing should take the
            document&apos;s page size into consideration.
        \li If the total number of pages changed, the pageCountChanged() signal
            should be emitted.
        \li If the total size changed, the documentSizeChanged() signal should
            be emitted.
        \li The update() signal should be emitted to schedule a repaint of areas
            in the layout that require repainting.
    \endlist

    \sa QTextLayout
*/</doc>
<use f='qtbase-6.5.0/src/gui/text/qtextdocument.cpp' l='527' u='c' c='_ZN13QTextDocument20setDefaultTextOptionERK11QTextOption'/>
<use f='qtbase-6.5.0/src/gui/text/qtextdocument.cpp' l='558' u='c' c='_ZN13QTextDocument10setBaseUrlERK4QUrl'/>
<use f='qtbase-6.5.0/src/gui/text/qtextdocument.cpp' l='599' u='c' c='_ZN13QTextDocument17markContentsDirtyEii'/>
<use f='qtbase-6.5.0/src/gui/text/qtextdocument.cpp' l='628' u='c' c='_ZN13QTextDocument19setUseDesignMetricsEb'/>
<use f='qtbase-6.5.0/src/gui/text/qtextdocument.cpp' l='662' u='c' c='_ZN13QTextDocument16setLayoutEnabledEb'/>
<use f='qtbase-6.5.0/src/gui/text/qtextdocument.cpp' l='764' u='c' c='_ZN13QTextDocument17setDocumentMarginEd'/>
<use f='qtbase-6.5.0/src/gui/text/qtextdocument.cpp' l='801' u='c' c='_ZN13QTextDocument14setIndentWidthEd'/>
<use f='qtbase-6.5.0/src/gui/text/qtextdocument.cpp' l='1714' u='c' c='_ZN13QTextDocument11setPageSizeERK6QSizeF'/>
<use f='qtbase-6.5.0/src/gui/text/qtextdocument.cpp' l='1739' u='c' c='_ZN13QTextDocument14setDefaultFontERK5QFont'/>
<use f='qtbase-6.5.0/src/gui/text/qtextdocument_p.cpp' l='249' u='c' c='_ZN20QTextDocumentPrivate5clearEv'/>
<use f='qtbase-6.5.0/src/gui/text/qtextdocument_p.cpp' l='285' u='c' c='_ZN20QTextDocumentPrivate9setLayoutEP27QAbstractTextDocumentLayout'/>
<use f='qtbase-6.5.0/src/gui/text/qtextdocument_p.cpp' l='1190' u='c' c='_ZN20QTextDocumentPrivate10finishEditEv'/>
<ovr f='qtbase-6.5.0/src/gui/text/qtextdocumentlayout.cpp' l='3745' c='_ZN19QTextDocumentLayout15documentChangedEiii'/>
<ovr f='qtbase-6.5.0/src/widgets/widgets/qplaintextedit.cpp' l='258' c='_ZN24QPlainTextDocumentLayout15documentChangedEiii'/>
