<inh f='qtbase-6.5.0/src/corelib/kernel/qobject.h' l='89' c='QObject'/>
<def f='qtbase-6.5.0/src/opengl/qopenglcompositor_p.h' l='42' ll='87'/>
<use f='qtbase-6.5.0/src/opengl/qopenglcompositor_p.h' l='47' c='_ZN17QOpenGLCompositor8instanceEv'/>
<use f='qtbase-6.5.0/src/opengl/qopenglcompositor.cpp' l='41'/>
<use f='qtbase-6.5.0/src/opengl/qopenglcompositor.cpp' l='232' c='_ZN17QOpenGLCompositor8instanceEv'/>
<use f='qtbase-6.5.0/src/opengl/qopenglcompositor.cpp' l='235' c='_ZN17QOpenGLCompositor8instanceEv'/>
<size>168</size>
<doc f='qtbase-6.5.0/src/opengl/qopenglcompositor.cpp' l='14'>/*!
    \class QOpenGLCompositor
    \brief A generic OpenGL-based compositor
    \since 5.4
    \internal
    \ingroup qpa

    This class provides a lightweight compositor that maintains the
    basic stacking order of windows and composites them by drawing
    textured quads via OpenGL.

    It it meant to be used by platform plugins that run without a
    windowing system.

    It is up to the platform plugin to manage the lifetime of the
    compositor (instance(), destroy()), set the correct destination
    context and window as early as possible (setTarget()),
    register the composited windows as they are shown, activated,
    raised and lowered (addWindow(), moveToTop(), etc.), and to
    schedule repaints (update()).

    \note To get support for QWidget-based windows, just use
    QOpenGLCompositorBackingStore. It will automatically create
    textures from the raster-rendered content and trigger the
    necessary repaints.
 */</doc>
<smbr r='QOpenGLCompositor::staticMetaObject' t='const QMetaObject'/>
<fun r='_ZNK17QOpenGLCompositor10metaObjectEv'/>
<fun r='_ZN17QOpenGLCompositor11qt_metacastEPKc'/>
<fun r='_ZN17QOpenGLCompositor11qt_metacallEN11QMetaObject4CallEiPPv'/>
<fun r='_ZN17QOpenGLCompositor2trEPKcS1_i'/>
<fun r='_ZN17QOpenGLCompositor18qt_static_metacallEP7QObjectN11QMetaObject4CallEiPPv'/>
<fun r='_ZN17QOpenGLCompositor8instanceEv'/>
<fun r='_ZN17QOpenGLCompositor7destroyEv'/>
<fun r='_ZN17QOpenGLCompositor15setTargetWindowEP7QWindowRK5QRect'/>
<fun r='_ZN17QOpenGLCompositor16setTargetContextEP14QOpenGLContext'/>
<fun r='_ZN17QOpenGLCompositor11setRotationEi'/>
<fun r='_ZNK17QOpenGLCompositor7contextEv'/>
<fun r='_ZNK17QOpenGLCompositor12targetWindowEv'/>
<fun r='_ZN17QOpenGLCompositor6updateEv'/>
<fun r='_ZN17QOpenGLCompositor4grabEv'/>
<fun r='_ZNK17QOpenGLCompositor7windowsEv'/>
<fun r='_ZN17QOpenGLCompositor9addWindowEP23QOpenGLCompositorWindow'/>
<fun r='_ZN17QOpenGLCompositor12removeWindowEP23QOpenGLCompositorWindow'/>
<fun r='_ZN17QOpenGLCompositor9moveToTopEP23QOpenGLCompositorWindow'/>
<fun r='_ZN17QOpenGLCompositor17changeWindowIndexEP23QOpenGLCompositorWindowi'/>
<fun r='_ZN17QOpenGLCompositor16topWindowChangedEP23QOpenGLCompositorWindow'/>
<fun r='_ZN17QOpenGLCompositor22handleRenderAllRequestEv'/>
<fun r='_ZN17QOpenGLCompositorC1Ev'/>
<fun r='_ZN17QOpenGLCompositorD1Ev'/>
<fun r='_ZN17QOpenGLCompositor9renderAllEP24QOpenGLFramebufferObject'/>
<fun r='_ZN17QOpenGLCompositor6renderEP23QOpenGLCompositorWindow'/>
<fun r='_ZN17QOpenGLCompositor19ensureCorrectZOrderEv'/>
<mbr r='QOpenGLCompositor::m_context' o='128' t='QOpenGLContext *'/>
<mbr r='QOpenGLCompositor::m_targetWindow' o='192' t='QWindow *'/>
<mbr r='QOpenGLCompositor::m_nativeTargetGeometry' o='256' t='QRect'/>
<mbr r='QOpenGLCompositor::m_rotation' o='384' t='int'/>
<mbr r='QOpenGLCompositor::m_rotationMatrix' o='416' t='QMatrix4x4'/>
<mbr r='QOpenGLCompositor::m_updateTimer' o='960' t='QTimer'/>
<mbr r='QOpenGLCompositor::m_blitter' o='1088' t='QOpenGLTextureBlitter'/>
<mbr r='QOpenGLCompositor::m_windows' o='1152' t='QList&lt;QOpenGLCompositorWindow *&gt;'/>
<fun r='_ZN17QOpenGLCompositorC1Ev'/>
<fun r='_ZN17QOpenGLCompositorD1Ev'/>
<fun r='_ZN17QOpenGLCompositor15setTargetWindowEP7QWindowRK5QRect'/>
<fun r='_ZN17QOpenGLCompositor16setTargetContextEP14QOpenGLContext'/>
<fun r='_ZN17QOpenGLCompositor11setRotationEi'/>
<fun r='_ZN17QOpenGLCompositor6updateEv'/>
<fun r='_ZN17QOpenGLCompositor4grabEv'/>
<fun r='_ZN17QOpenGLCompositor22handleRenderAllRequestEv'/>
<fun r='_ZN17QOpenGLCompositor9renderAllEP24QOpenGLFramebufferObject'/>
<fun r='_ZN17QOpenGLCompositor6renderEP23QOpenGLCompositorWindow'/>
<fun r='_ZN17QOpenGLCompositor8instanceEv'/>
<fun r='_ZN17QOpenGLCompositor7destroyEv'/>
<fun r='_ZN17QOpenGLCompositor9addWindowEP23QOpenGLCompositorWindow'/>
<fun r='_ZN17QOpenGLCompositor12removeWindowEP23QOpenGLCompositorWindow'/>
<fun r='_ZN17QOpenGLCompositor9moveToTopEP23QOpenGLCompositorWindow'/>
<fun r='_ZN17QOpenGLCompositor17changeWindowIndexEP23QOpenGLCompositorWindowi'/>
<fun r='_ZN17QOpenGLCompositor19ensureCorrectZOrderEv'/>
<use f='qtbase-6.5.0/src/opengl/qopenglcompositorbackingstore.cpp' l='151' c='_ZN29QOpenGLCompositorBackingStore5flushEP7QWindowRK7QRegionRK6QPoint'/>
<use f='qtbase-6.5.0/src/opengl/qopenglcompositorbackingstore.cpp' l='191' c='_ZN29QOpenGLCompositorBackingStore8rhiFlushEP7QWindowdRK7QRegionRK6QPointP20QPlatformTextureListb'/>
<use f='qtbase-6.5.0/src/opengl/qopenglcompositorbackingstore.cpp' l='247' c='_ZN29QOpenGLCompositorBackingStore6resizeERK5QSizeRK7QRegion'/>
<size>168</size>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfsscreen.cpp' l='115' c='_ZN12QEglFSScreen16handleCursorMoveERK6QPoint'/>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfsscreen.cpp' l='162' c='_ZNK12QEglFSScreen10grabWindowEyiiii'/>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfsscreen.cpp' l='218' c='_ZNK12QEglFSScreen10topLevelAtERK6QPoint'/>
<size>168</size>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfswindow.cpp' l='77' c='_ZN12QEglFSWindow6createEv'/>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfswindow.cpp' l='126' c='_ZN12QEglFSWindow15setBackingStoreEP29QOpenGLCompositorBackingStore'/>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfswindow.cpp' l='210' c='_ZN12QEglFSWindow10setVisibleEb'/>
<use f='qtbase-6.5.0/src/plugins/platforms/eglfs/api/qeglfswindow.cpp' l='284' c='_ZN12QEglFSWindow5lowerEv'/>
<size>168</size>
