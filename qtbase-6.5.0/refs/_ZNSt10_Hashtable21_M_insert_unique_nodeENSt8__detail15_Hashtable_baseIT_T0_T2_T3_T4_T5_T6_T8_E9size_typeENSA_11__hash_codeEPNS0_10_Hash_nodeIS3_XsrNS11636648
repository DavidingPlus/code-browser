<dec f='include/c++/9/bits/hashtable.h' l='710' type='std::_Hashtable::iterator std::_Hashtable::_M_insert_unique_node(std::_Hashtable::size_type __bkt, std::_Hashtable::__hash_code __code, std::_Hashtable::__node_type * __n, std::_Hashtable::size_type __n_elt = 1)'/>
<use f='include/c++/9/bits/hashtable.h' l='842' u='c' c='_ZNSt10_Hashtable16_M_reinsert_nodeEOSt12_Node_handleIT_T0_NSt23__allocator_traits_base8__rebindIT1_NSt8__detail10_Hash_nodeIS2_XsrNT8_13__hash_cachedE5valueEEEvE4typeEE'/>
<use f='include/c++/9/bits/hashtable.h' l='927' u='c' c='_ZNSt10_Hashtable15_M_merge_uniqueERTL0__'/>
<use f='include/c++/9/bits/hashtable.h' l='1695' u='c' c='_ZNSt10_Hashtable10_M_emplaceESt17integral_constantIbLb1EEDpOTL0__'/>
<def f='include/c++/9/bits/hashtable.h' l='1728' ll='1764' type='std::_Hashtable::iterator std::_Hashtable::_M_insert_unique_node(std::_Hashtable::size_type __bkt, std::_Hashtable::__hash_code __code, std::_Hashtable::__node_type * __node, std::_Hashtable::size_type __n_elt = 1)'/>
<use f='include/c++/9/bits/hashtable.h' l='1853' u='c' c='_ZNSt10_Hashtable9_M_insertEOTL0__RKTL0_0_St17integral_constantIbLb1EENSt8__detail15_Hashtable_baseIT_T0_T2_T3_T4_T5_T6_T8_E9size_typeE'/>
<doc f='include/c++/9/bits/hashtable.h' l='706'>// Insert node with hash code __code, in bucket bkt if no rehash (assumes
      // no element with its key already present). Take ownership of the node,
      // deallocate it on exception.</doc>
