<def f='googletest-1.12.1/googletest/include/gtest/gtest-assertion-result.h' l='133' ll='221'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest-assertion-result.h' l='137' c='_ZN7testing15AssertionResultC1ERKS0_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest-assertion-result.h' l='168' c='_ZN7testing15AssertionResultaSES0_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest-assertion-result.h' l='168' c='_ZN7testing15AssertionResultaSES0_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest-assertion-result.h' l='177' c='_ZNK7testing15AssertionResultntEv'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest-assertion-result.h' l='191' c='_ZN7testing15AssertionResultlsERKT_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest-assertion-result.h' l='198' c='_ZN7testing15AssertionResultlsEPFRSoS1_E'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest-assertion-result.h' l='212' c='_ZN7testing15AssertionResult4swapERS0_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest-assertion-result.h' l='224' c='_ZN7testing16AssertionSuccessEv'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest-assertion-result.h' l='227' c='_ZN7testing16AssertionFailureEv'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest-assertion-result.h' l='231' c='_ZN7testing16AssertionFailureERKNS_7MessageE'/>
<use f='googletest-1.12.1/googletest/include/gtest/internal/gtest-internal.h' l='203' c='_ZN7testing8internal9EqFailureEPKcS2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_b'/>
<use f='googletest-1.12.1/googletest/include/gtest/internal/gtest-internal.h' l='211' c='_ZN7testing8internal30GetBoolAssertionFailureMessageB5cxx11ERKNS_15AssertionResultEPKcS5_S5_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest_pred_impl.h' l='87' c='_ZN7testing17AssertPred1HelperEPKcS1_T_RKT0_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest_pred_impl.h' l='118' c='_ZN7testing17AssertPred2HelperEPKcS1_S1_T_RKT0_RKT1_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest_pred_impl.h' l='155' c='_ZN7testing17AssertPred3HelperEPKcS1_S1_S1_T_RKT0_RKT1_RKT2_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest_pred_impl.h' l='194' c='_ZN7testing17AssertPred4HelperEPKcS1_S1_S1_S1_T_RKT0_RKT1_RKT2_RKT3_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest_pred_impl.h' l='236' c='_ZN7testing17AssertPred5HelperEPKcS1_S1_S1_S1_S1_T_RKT0_RKT1_RKT2_RKT3_RKT4_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1338' c='_ZN7testing8internal18CmpHelperEQFailureEPKcS2_RKT_RKT0_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1355' c='_ZN7testing8internal11CmpHelperEQEPKcS2_RKT_RKT0_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1374' c='_ZN7testing8internal8EqHelper7CompareEPKcS3_RKT_RKT0_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1386' c='_ZN7testing8internal8EqHelper7CompareEPKcS3_xx'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1393' c='_ZN7testing8internal8EqHelper7CompareEPKcS3_DnPT_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1407' c='_ZN7testing8internal18CmpHelperOpFailureEPKcS2_RKT_RKT0_S2_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1424' c='_ZN7testing8internal11CmpHelperNEEPKcS2_RKT_RKT0_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1424' c='_ZN7testing8internal11CmpHelperLEEPKcS2_RKT_RKT0_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1424' c='_ZN7testing8internal11CmpHelperLTEPKcS2_RKT_RKT0_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1424' c='_ZN7testing8internal11CmpHelperGEEPKcS2_RKT_RKT0_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1424' c='_ZN7testing8internal11CmpHelperGTEPKcS2_RKT_RKT0_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1451' c='_ZN7testing8internal14CmpHelperSTREQEPKcS2_S2_S2_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1458' c='_ZN7testing8internal18CmpHelperSTRCASEEQEPKcS2_S2_S2_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1465' c='_ZN7testing8internal14CmpHelperSTRNEEPKcS2_S2_S2_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1472' c='_ZN7testing8internal18CmpHelperSTRCASENEEPKcS2_S2_S2_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1479' c='_ZN7testing8internal14CmpHelperSTREQEPKcS2_PKwS4_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1486' c='_ZN7testing8internal14CmpHelperSTRNEEPKcS2_PKwS4_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1500' c='_ZN7testing11IsSubstringEPKcS1_S1_S1_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1504' c='_ZN7testing11IsSubstringEPKcS1_PKwS3_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1508' c='_ZN7testing14IsNotSubstringEPKcS1_S1_S1_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1512' c='_ZN7testing14IsNotSubstringEPKcS1_PKwS3_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1516' c='_ZN7testing11IsSubstringEPKcS1_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1520' c='_ZN7testing14IsNotSubstringEPKcS1_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1526' c='_ZN7testing11IsSubstringEPKcS1_RKNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEES9_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1530' c='_ZN7testing14IsNotSubstringEPKcS1_RKNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEES9_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1546' c='_ZN7testing8internal24CmpHelperFloatingPointEQEPKcS2_T_S3_'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1571' c='_ZN7testing8internal20DoubleNearPredFormatEPKcS2_S2_ddd'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1979' c='_ZN7testing7FloatLEEPKcS1_ff'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='1981' c='_ZN7testing8DoubleLEEPKcS1_dd'/>
<use f='googletest-1.12.1/googlemock/include/gmock/gmock-matchers.h' l='1575' c='_ZNK7testing8internal29PredicateFormatterFromMatcherclEPKcRKTL0__'/>
<size>16</size>
<doc f='googletest-1.12.1/googletest/include/gtest/gtest-assertion-result.h' l='54'>// A class for indicating whether an assertion was successful.  When
// the assertion wasn&apos;t successful, the AssertionResult object
// remembers a non-empty message that describes how it failed.
//
// To create an instance of this class, use one of the factory functions
// (AssertionSuccess() and AssertionFailure()).
//
// This class is useful for two purposes:
//   1. Defining predicate functions to be used with Boolean test assertions
//      EXPECT_TRUE/EXPECT_FALSE and their ASSERT_ counterparts
//   2. Defining predicate-format functions to be
//      used with predicate assertions (ASSERT_PRED_FORMAT*, etc).
//
// For example, if you define IsEven predicate:
//
//   testing::AssertionResult IsEven(int n) {
//     if ((n % 2) == 0)
//       return testing::AssertionSuccess();
//     else
//       return testing::AssertionFailure() &lt;&lt; n &lt;&lt; &quot; is odd&quot;;
//   }
//
// Then the failed expectation EXPECT_TRUE(IsEven(Fib(5)))
// will print the message
//
//   Value of: IsEven(Fib(5))
//     Actual: false (5 is odd)
//   Expected: true
//
// instead of a more opaque
//
//   Value of: IsEven(Fib(5))
//     Actual: false
//   Expected: true
//
// in case IsEven is a simple Boolean predicate.
//
// If you expect your predicate to be reused and want to support informative
// messages in EXPECT_FALSE and ASSERT_FALSE (negative assertions show up
// about half as often as positive ones in our tests), supply messages for
// both success and failure cases:
//
//   testing::AssertionResult IsEven(int n) {
//     if ((n % 2) == 0)
//       return testing::AssertionSuccess() &lt;&lt; n &lt;&lt; &quot; is even&quot;;
//     else
//       return testing::AssertionFailure() &lt;&lt; n &lt;&lt; &quot; is odd&quot;;
//   }
//
// Then a statement EXPECT_FALSE(IsEven(Fib(6))) will print
//
//   Value of: IsEven(Fib(6))
//     Actual: true (8 is even)
//   Expected: false
//
// NB: Predicates that support negative Boolean assertions have reduced
// performance in positive ones so be careful not to use them in tests
// that have lots (tens of thousands) of positive Boolean assertions.
//
// To use this class with EXPECT_PRED_FORMAT assertions such as:
//
//   // Verifies that Foo() returns an even number.
//   EXPECT_PRED_FORMAT1(IsEven, Foo());
//
// you need to define:
//
//   testing::AssertionResult IsEven(const char* expr, int n) {
//     if ((n % 2) == 0)
//       return testing::AssertionSuccess();
//     else
//       return testing::AssertionFailure()
//         &lt;&lt; &quot;Expected: &quot; &lt;&lt; expr &lt;&lt; &quot; is even\n  Actual: it&apos;s &quot; &lt;&lt; n;
//   }
//
// If Foo() returns 5, you will see the following message:
//
//   Expected: Foo() is even
//     Actual: it&apos;s 5
//</doc>
<fun r='_ZN7testing15AssertionResultC1ERKS0_'/>
<fun r='_ZN7testing15AssertionResultC1ERKT_PNSt9enable_ifIXntsr3std14is_convertibleIS1_S0_EE5valueEvE4typeE'/>
<fun r='_ZN7testing15AssertionResultaSES0_'/>
<fun r='_ZNK7testing15AssertionResultcvbEv'/>
<fun r='_ZNK7testing15AssertionResultntEv'/>
<fun r='_ZNK7testing15AssertionResult7messageEv'/>
<fun r='_ZNK7testing15AssertionResult15failure_messageEv'/>
<fun r='_ZN7testing15AssertionResultlsERKT_'/>
<fun r='_ZN7testing15AssertionResultlsEPFRSoS1_E'/>
<fun r='_ZN7testing15AssertionResult13AppendMessageERKNS_7MessageE'/>
<fun r='_ZN7testing15AssertionResult4swapERS0_'/>
<mbr r='testing::AssertionResult::success_' o='0' t='bool'/>
<mbr r='testing::AssertionResult::message_' o='64' t='std::unique_ptr&lt; ::std::string&gt;'/>
<use f='googletest-1.12.1/googletest/src/gtest-assertion-result.cc' l='45' c='_ZN7testing15AssertionResultC1ERKS0_'/>
<use f='googletest-1.12.1/googletest/src/gtest-assertion-result.cc' l='52' c='_ZN7testing15AssertionResult4swapERS0_'/>
<use f='googletest-1.12.1/googletest/src/gtest-assertion-result.cc' l='59' c='_ZNK7testing15AssertionResultntEv'/>
<use f='googletest-1.12.1/googletest/src/gtest-assertion-result.cc' l='60' c='_ZNK7testing15AssertionResultntEv'/>
<use f='googletest-1.12.1/googletest/src/gtest-assertion-result.cc' l='66' c='_ZN7testing16AssertionSuccessEv'/>
<use f='googletest-1.12.1/googletest/src/gtest-assertion-result.cc' l='66' c='_ZN7testing16AssertionSuccessEv'/>
<use f='googletest-1.12.1/googletest/src/gtest-assertion-result.cc' l='69' c='_ZN7testing16AssertionFailureEv'/>
<use f='googletest-1.12.1/googletest/src/gtest-assertion-result.cc' l='69' c='_ZN7testing16AssertionFailureEv'/>
<use f='googletest-1.12.1/googletest/src/gtest-assertion-result.cc' l='73' c='_ZN7testing16AssertionFailureERKNS_7MessageE'/>
<use f='googletest-1.12.1/googletest/src/gtest-port.cc' l='714' macro='1' c='_ZN7testing8internal2RE4InitEPKc'/>
<use f='googletest-1.12.1/googletest/src/gtest-port.cc' l='714' macro='1' c='_ZN7testing8internal2RE4InitEPKc'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='936' c='_ZN7testing8internalL13HasOneFailureEPKcS2_S2_RKNS_19TestPartResultArrayENS_14TestPartResult4TypeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='985' macro='1' c='_ZN7testing8internal20SingleFailureCheckerD1Ev'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='1551' c='_ZN7testing8internal9EqFailureEPKcS2_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_b'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='1584' c='_ZN7testing8internal30GetBoolAssertionFailureMessageB5cxx11ERKNS_15AssertionResultEPKcS5_S5_'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='1596' c='_ZN7testing8internal20DoubleNearPredFormatEPKcS2_S2_ddd'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='1637' c='_ZN7testing8internal15FloatingPointLEEPKcS2_T_S3_'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='1672' c='_ZN7testing7FloatLEEPKcS1_ff'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='1679' c='_ZN7testing8DoubleLEEPKcS1_dd'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='1687' c='_ZN7testing8internal14CmpHelperSTREQEPKcS2_S2_S2_'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='1699' c='_ZN7testing8internal18CmpHelperSTRCASEEQEPKcS2_S2_S2_'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='1711' c='_ZN7testing8internal14CmpHelperSTRNEEPKcS2_S2_S2_'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='1724' c='_ZN7testing8internal18CmpHelperSTRCASENEEPKcS2_S2_S2_'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='1769' c='_ZN7testing12_GLOBAL__N_115IsSubstringImplEbPKcS2_RKT_S5_'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='1793' c='_ZN7testing11IsSubstringEPKcS1_S1_S1_'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='1798' c='_ZN7testing11IsSubstringEPKcS1_PKwS3_'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='1803' c='_ZN7testing14IsNotSubstringEPKcS1_S1_S1_'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='1809' c='_ZN7testing14IsNotSubstringEPKcS1_PKwS3_'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='1815' c='_ZN7testing11IsSubstringEPKcS1_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='1821' c='_ZN7testing14IsNotSubstringEPKcS1_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='1829' c='_ZN7testing11IsSubstringEPKcS1_RKNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEES9_'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='1835' c='_ZN7testing14IsNotSubstringEPKcS1_RKNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEES9_'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='2059' c='_ZN7testing8internal14CmpHelperSTREQEPKcS2_PKwS4_'/>
<use f='googletest-1.12.1/googletest/src/gtest.cc' l='2071' c='_ZN7testing8internal14CmpHelperSTRNEEPKcS2_PKwS4_'/>
<size>16</size>
<fun r='_ZN7testing15AssertionResultC1ERKS0_'/>
<fun r='_ZN7testing15AssertionResult4swapERS0_'/>
<fun r='_ZNK7testing15AssertionResultntEv'/>
