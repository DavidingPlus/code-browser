<use f='googletest-1.12.1/googlemock/include/gmock/gmock-matchers.h' l='2240' u='w' c='_ZN7testing8internal15ResultOfMatcher4ImplC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS0_14CallableTraitsIT_E11StorageTypeERKTL1__'/>
<use f='googletest-1.12.1/googlemock/include/gmock/gmock-matchers.h' l='2272' c='_ZNK7testing8internal15ResultOfMatcher4Impl15MatchAndExplainETL0__PNS_19MatchResultListenerE'/>
<dec f='googletest-1.12.1/googlemock/include/gmock/gmock-matchers.h' l='2283' type='testing::internal::ResultOfMatcher::CallableStorageType'/>
<doc f='googletest-1.12.1/googlemock/include/gmock/gmock-matchers.h' l='2278'>// Functors often define operator() as non-const method even though
    // they are actually stateless. But we need to use them even when
    // &apos;this&apos; is a const pointer. It&apos;s the user&apos;s responsibility not to
    // use stateful callables with ResultOf(), which doesn&apos;t guarantee
    // how many times the callable will be invoked.</doc>
