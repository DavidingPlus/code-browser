<def f='include/c++/9/bits/stl_multiset.h' l='239' ll='243' type='void std::multiset::multiset&lt;_Key, _Compare, _Alloc&gt;(initializer_list&lt;std::multiset::value_type&gt; __l, const _Compare &amp; __comp = _Compare(), const std::multiset::allocator_type &amp; __a = std::multiset::allocator_type())'/>
<doc f='include/c++/9/bits/stl_multiset.h' l='229'>/**
       *  @brief  Builds a %multiset from an initializer_list.
       *  @param  __l  An initializer_list.
       *  @param  __comp  A comparison functor.
       *  @param  __a  An allocator object.
       *
       *  Create a %multiset consisting of copies of the elements from
       *  the list.  This is linear in N if the list is already sorted,
       *  and NlogN otherwise (where N is @a __l.size()).
       */</doc>
