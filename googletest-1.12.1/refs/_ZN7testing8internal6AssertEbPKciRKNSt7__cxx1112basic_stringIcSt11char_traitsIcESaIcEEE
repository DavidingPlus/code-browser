<def f='googletest-1.12.1/googlemock/include/gmock/internal/gmock-internal-utils.h' l='228' ll='234' type='void testing::internal::Assert(bool condition, const char * file, int line, const std::string &amp; msg)'/>
<use f='googletest-1.12.1/googlemock/include/gmock/internal/gmock-internal-utils.h' l='236' u='c' c='_ZN7testing8internal6AssertEbPKci'/>
<use f='googletest-1.12.1/googlemock/include/gmock/internal/gmock-internal-utils.h' l='307' u='c' c='_ZN7testing8internal7InvalidEv'/>
<use f='googletest-1.12.1/googlemock/include/gmock/gmock-actions.h' l='179' u='c' c='_ZN7testing8internal25BuiltInDefaultValueGetterIT_Lb0EE3GetEv'/>
<use f='googletest-1.12.1/googlemock/include/gmock/gmock-spec-builders.h' l='258' u='c' c='_ZNK7testing8internal21UntypedOnCallSpecBase18AssertSpecPropertyEbRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='googletest-1.12.1/googlemock/include/gmock/gmock-spec-builders.h' l='734' u='c' c='_ZNK7testing8internal15ExpectationBase18AssertSpecPropertyEbRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='googletest-1.12.1/googlemock/include/gmock/gmock-spec-builders.h' l='1164' u='c' c='_ZNK7testing8internal16TypedExpectationIFT_DpT0_EE16GetCurrentActionEPKNS0_14FunctionMockerIS5_EERKNS0_8FunctionIS5_E13ArgumentTupleE'/>
<use f='googletest-1.12.1/googlemock/src/gmock-internal-utils.cc' l='192' u='c' c='_ZN7testing8internal16IllegalDoDefaultEPKci'/>
<use f='googletest-1.12.1/googlemock/src/gmock-spec-builders.cc' l='348' u='c' c='_ZNK7testing8internal25UntypedFunctionMockerBase10MockObjectEv'/>
<use f='googletest-1.12.1/googlemock/src/gmock-spec-builders.cc' l='365' u='c' c='_ZNK7testing8internal25UntypedFunctionMockerBase4NameEv'/>
<use f='googletest-1.12.1/googlemock/src/gmock-spec-builders.cc' l='385' u='c' c='_ZN7testing8internal25UntypedFunctionMockerBase11GetHandleOfEPNS0_15ExpectationBaseE'/>
<doc f='googletest-1.12.1/googlemock/include/gmock/internal/gmock-internal-utils.h' l='223'>// Asserts that condition is true; aborts the process with the given
// message if condition is false.  We cannot use LOG(FATAL) or CHECK()
// as Google Mock might be used to mock the log sink itself.  We
// inline this function to prevent it from showing up in the stack
// trace.</doc>
