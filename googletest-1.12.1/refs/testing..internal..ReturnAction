<def f='googletest-1.12.1/googlemock/include/gmock/gmock-actions.h' l='924' ll='1082'/>
<def f='googletest-1.12.1/googlemock/include/gmock/gmock-actions.h' l='1089' ll='1114'/>
<use f='googletest-1.12.1/googlemock/include/gmock/gmock-actions.h' l='1844' c='_ZN7testing6ReturnET_'/>
<use f='googletest-1.12.1/googlemock/include/gmock/gmock-actions.h' l='1845' c='_ZN7testing6ReturnET_'/>
<doc f='googletest-1.12.1/googlemock/include/gmock/gmock-actions.h' l='1084'>// A specialization of ReturnAction&lt;R&gt; when R is ByMoveWrapper&lt;T&gt; for some T.
//
// This version applies the type system-defeating hack of moving from T even in
// the const call operator, checking at runtime that it isn&apos;t called more than
// once, since the user has declared their intent to do so by using ByMove.</doc>
<fun r='_ZN7testing8internal12ReturnActionC1ET_'/>
<fun r='_ZNO7testing8internal12ReturnActioncvNS_10OnceActionIFTL0__DpTL0_0_EEEEv'/>
<fun r='_ZNK7testing8internal12ReturnActioncvNS_6ActionIFTL0__DpTL0_0_EEEEv'/>
<mbr r='testing::internal::ReturnAction::value_' t='R'/>
<fun r='_ZN7testing8internal12ReturnActionINS0_13ByMoveWrapperIT_EEEC1ES4_'/>
<fun r='_ZNK7testing8internal12ReturnActionINS0_13ByMoveWrapperIT_EEEclEv'/>
<mbr r='testing::internal::ReturnAction::state_' t='const std::shared_ptr&lt;State&gt;'/>
