<def f='googletest-1.12.1/googlemock/include/gmock/gmock-matchers.h' l='1657' ll='1664' type='void testing::internal::FloatingEqMatcher::FloatingEqMatcher&lt;FloatType&gt;(FloatType expected, bool nan_eq_nan, FloatType max_abs_error)'/>
<use f='googletest-1.12.1/googlemock/include/gmock/gmock-matchers.h' l='4292' u='c' c='_ZN7testing10DoubleNearEdd'/>
<use f='googletest-1.12.1/googlemock/include/gmock/gmock-matchers.h' l='4300' u='c' c='_ZN7testing22NanSensitiveDoubleNearEdd'/>
<use f='googletest-1.12.1/googlemock/include/gmock/gmock-matchers.h' l='4320' u='c' c='_ZN7testing9FloatNearEff'/>
<use f='googletest-1.12.1/googlemock/include/gmock/gmock-matchers.h' l='4328' u='c' c='_ZN7testing21NanSensitiveFloatNearEff'/>
<doc f='googletest-1.12.1/googlemock/include/gmock/gmock-matchers.h' l='1654'>// Constructor that supports a user-specified max_abs_error that will be used
  // for comparison instead of ULP-based approximation.  The max absolute
  // should be non-negative.</doc>
