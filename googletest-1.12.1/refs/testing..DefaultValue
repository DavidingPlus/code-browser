<def f='googletest-1.12.1/googlemock/include/gmock/gmock-actions.h' l='573' ll='645'/>
<def f='googletest-1.12.1/googlemock/include/gmock/gmock-actions.h' l='649' ll='679'/>
<def f='googletest-1.12.1/googlemock/include/gmock/gmock-actions.h' l='683' ll='688'/>
<use f='googletest-1.12.1/googlemock/include/gmock/gmock-actions.h' l='684'/>
<use f='googletest-1.12.1/googlemock/include/gmock/gmock-actions.h' l='692'/>
<use f='googletest-1.12.1/googlemock/include/gmock/gmock-actions.h' l='692'/>
<use f='googletest-1.12.1/googlemock/include/gmock/gmock-actions.h' l='696'/>
<use f='googletest-1.12.1/googlemock/include/gmock/gmock-spec-builders.h' l='1442' c='_ZNK7testing8internal14FunctionMockerIFT_DpT0_EE20PerformDefaultActionEOSt5tupleIJS4_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='googletest-1.12.1/googlemock/include/gmock/gmock-spec-builders.h' l='1448' c='_ZNK7testing8internal14FunctionMockerIFT_DpT0_EE20PerformDefaultActionEOSt5tupleIJS4_EERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<size>1</size>
<doc f='googletest-1.12.1/googlemock/include/gmock/gmock-actions.h' l='647'>// This partial specialization allows a user to set default values for
// reference types.</doc>
<doc f='googletest-1.12.1/googlemock/include/gmock/gmock-actions.h' l='681'>// This specialization allows DefaultValue&lt;void&gt;::Get() to
// compile.</doc>
<fun r='_ZN7testing12DefaultValue3SetET_'/>
<fun r='_ZN7testing12DefaultValue10SetFactoryEPFT_vE'/>
<fun r='_ZN7testing12DefaultValue5ClearEv'/>
<fun r='_ZN7testing12DefaultValue5IsSetEv'/>
<fun r='_ZN7testing12DefaultValue6ExistsEv'/>
<fun r='_ZN7testing12DefaultValue3GetEv'/>
<smbr r='testing::DefaultValue::producer_' t='testing::DefaultValue::ValueProducer *'/>
<fun r='_ZN7testing12DefaultValueIRT_E3SetES2_'/>
<fun r='_ZN7testing12DefaultValueIRT_E5ClearEv'/>
<fun r='_ZN7testing12DefaultValueIRT_E5IsSetEv'/>
<fun r='_ZN7testing12DefaultValueIRT_E6ExistsEv'/>
<fun r='_ZN7testing12DefaultValueIRT_E3GetEv'/>
<smbr r='testing::DefaultValue{type-parameter-0-0&amp;}::address_' t='T *'/>
<fun r='_ZN7testing12DefaultValueIvE6ExistsEv'/>
<fun r='_ZN7testing12DefaultValueIvE3GetEv'/>
<smbr r='testing::DefaultValue::producer_' t='typename DefaultValue&lt;T&gt;::ValueProducer *'/>
<smbr r='testing::DefaultValue{type-parameter-0-0&amp;}::address_' t='T *'/>
