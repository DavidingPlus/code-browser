<dec f='googletest-1.12.1/googletest/include/gtest/internal/gtest-internal.h' l='579' type='testing::TestInfo * testing::internal::MakeAndRegisterTestInfo(const char * test_suite_name, const char * name, const char * type_param, const char * value_param, testing::internal::CodeLocation code_location, testing::internal::TypeId fixture_class_id, testing::internal::SetUpTestSuiteFunc set_up_tc, testing::internal::TearDownTestSuiteFunc tear_down_tc, testing::internal::TestFactoryBase * factory)'/>
<dec f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='592' type='testing::TestInfo * testing::internal::MakeAndRegisterTestInfo(const char * test_suite_name, const char * name, const char * type_param, const char * value_param, internal::CodeLocation code_location, internal::TypeId fixture_class_id, internal::SetUpTestSuiteFunc set_up_tc, internal::TearDownTestSuiteFunc tear_down_tc, internal::TestFactoryBase * factory)'/>
<use f='googletest-1.12.1/googletest/include/gtest/gtest.h' l='2273' u='c' c='_ZN7testing12RegisterTestEPKcS1_S1_S1_S1_iT0_'/>
<def f='googletest-1.12.1/googletest/src/gtest.cc' l='2749' ll='2759' type='testing::TestInfo * testing::internal::MakeAndRegisterTestInfo(const char * test_suite_name, const char * name, const char * type_param, const char * value_param, testing::internal::CodeLocation code_location, testing::internal::TypeId fixture_class_id, testing::internal::SetUpTestSuiteFunc set_up_tc, testing::internal::TearDownTestSuiteFunc tear_down_tc, testing::internal::TestFactoryBase * factory)'/>
<doc f='googletest-1.12.1/googletest/src/gtest.cc' l='2731'>// Creates a new TestInfo object and registers it with Google Test;
// returns the created object.
//
// Arguments:
//
//   test_suite_name:  name of the test suite
//   name:             name of the test
//   type_param:       the name of the test&apos;s type parameter, or NULL if
//                     this is not a typed or a type-parameterized test.
//   value_param:      text representation of the test&apos;s value parameter,
//                     or NULL if this is not a value-parameterized test.
//   code_location:    code location where the test is defined
//   fixture_class_id: ID of the test fixture class
//   set_up_tc:        pointer to the function that sets up the test suite
//   tear_down_tc:     pointer to the function that tears down the test suite
//   factory:          pointer to the factory that creates a test object.
//                     The newly created TestInfo instance will assume
//                     ownership of the factory object.</doc>
