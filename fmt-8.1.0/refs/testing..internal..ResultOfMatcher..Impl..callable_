<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='5052' u='w' c='_ZN7testing8internal15ResultOfMatcher4ImplC1ERKNS0_14CallableTraitsIT_E11StorageTypeERKTL1__'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='5071' c='_ZNK7testing8internal15ResultOfMatcher4Impl15MatchAndExplainETL0__PNS_19MatchResultListenerE'/>
<dec f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='5081' type='testing::internal::ResultOfMatcher::CallableStorageType'/>
<doc f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='5076'>// Functors often define operator() as non-const method even though
    // they are actually stateless. But we need to use them even when
    // &apos;this&apos; is a const pointer. It&apos;s the user&apos;s responsibility not to
    // use stateful callables with ResultOf(), which doesn&apos;t guarantee
    // how many times the callable will be invoked.</doc>
