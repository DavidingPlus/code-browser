<def f='fmt-8.1.0/test/gtest/gtest/gtest.h' l='3755' ll='3763' type='static testing::internal::FloatingPoint::Bits testing::internal::FloatingPoint::SignAndMagnitudeToBiased(const testing::internal::FloatingPoint::Bits &amp; sam)'/>
<use f='fmt-8.1.0/test/gtest/gtest/gtest.h' l='3769' u='c' c='_ZN7testing8internal13FloatingPoint38DistanceBetweenSignAndMagnitudeNumbersERKNS0_12TypeWithSizeIXstT_EE4UIntES7_'/>
<use f='fmt-8.1.0/test/gtest/gtest/gtest.h' l='3770' u='c' c='_ZN7testing8internal13FloatingPoint38DistanceBetweenSignAndMagnitudeNumbersERKNS0_12TypeWithSizeIXstT_EE4UIntES7_'/>
<doc f='fmt-8.1.0/test/gtest/gtest/gtest.h' l='3740'>// Converts an integer from the sign-and-magnitude representation to
  // the biased representation.  More precisely, let N be 2 to the
  // power of (kBitCount - 1), an integer x is represented by the
  // unsigned number x + N.
  //
  // For instance,
  //
  //   -N + 1 (the most negative number representable using
  //          sign-and-magnitude) is represented by 1;
  //   0      is represented by N; and
  //   N - 1  (the biggest number representable using
  //          sign-and-magnitude) is represented by 2N - 1.
  //
  // Read http://en.wikipedia.org/wiki/Signed_number_representations
  // for more details on signed number representations.</doc>
