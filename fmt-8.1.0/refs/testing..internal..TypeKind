<def f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='425' ll='427'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='478'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='478'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='466'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='466'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='466' c='_ZN7testing15SafeMatcherCastERKNS_7MatcherIT0_EE'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='466' c='_ZN7testing15SafeMatcherCastERKNS_7MatcherIT0_EE'/>
<doc f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='420'>// In what follows, we use the term &quot;kind&quot; to indicate whether a type
// is bool, an integer type (excluding bool), a floating-point type,
// or none of them.  This categorization is useful for determining
// when a matcher argument type can be safely converted to another
// type in the implementation of SafeMatcherCast.</doc>
