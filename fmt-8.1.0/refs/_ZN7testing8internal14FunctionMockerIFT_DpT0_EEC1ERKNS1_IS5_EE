<def f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='9698' type='void testing::internal::FunctionMocker&lt;type-parameter-0-0 (type-parameter-0-1...)&gt;::FunctionMocker&lt;type-parameter-0-0 (type-parameter-0-1...)&gt;(const FunctionMocker&lt;type-parameter-0-0 (type-parameter-0-1...)&gt; &amp; )'/>
<doc f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='9686'>// There is no generally useful and implementable semantics of
  // copying a mock object, so copying a mock is usually a user error.
  // Thus we disallow copying function mockers.  If the user really
  // wants to copy a mock object, they should implement their own copy
  // operation, for example:
  //
  //   class MockFoo : public Foo {
  //    public:
  //     // Defines a copy constructor explicitly.
  //     MockFoo(const MockFoo&amp; src) {}
  //     ...
  //   };</doc>
