<def f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='4474' ll='4481' type='void testing::internal::FloatingEqMatcher::FloatingEqMatcher&lt;FloatType&gt;(FloatType expected, bool nan_eq_nan, FloatType max_abs_error)'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='6991' u='c' c='_ZN7testing10DoubleNearEdd'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='6999' u='c' c='_ZN7testing22NanSensitiveDoubleNearEdd'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='7019' u='c' c='_ZN7testing9FloatNearEff'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='7027' u='c' c='_ZN7testing21NanSensitiveFloatNearEff'/>
<doc f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='4471'>// Constructor that supports a user-specified max_abs_error that will be used
  // for comparison instead of ULP-based approximation.  The max absolute
  // should be non-negative.</doc>
