<inh f='fmt-8.1.0/test/gtest/gtest/gtest.h' l='6171' c='testing::MatchResultListener'/>
<def f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='3170' ll='3184'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='3183' c='_ZN7testing25StringMatchResultListenerC1ERKS0_'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='3183' c='_ZN7testing25StringMatchResultListeneraSERKS0_'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='3183' c='_ZN7testing25StringMatchResultListeneraSERKS0_'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='3459' c='_ZN7testing8internal20MatchPrintAndExplainERT_RKNS_7MatcherIT0_EEPNS_19MatchResultListenerE'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='3505' c='_ZN7testing8internal11TuplePrefix22ExplainMatchFailuresToERKTL0__RKTL0_0_PSo'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='4140' c='_ZNK7testing8internal16AllOfMatcherImpl15MatchAndExplainERKT_PNS_19MatchResultListenerE'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='4245' c='_ZNK7testing8internal16AnyOfMatcherImpl15MatchAndExplainERKT_PNS_19MatchResultListenerE'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='4415' c='_ZNK7testing8internal29PredicateFormatterFromMatcherclEPKcRKTL0__'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='5121' c='_ZNK7testing8internal13SizeIsMatcher4Impl15MatchAndExplainETL0__PNS_19MatchResultListenerE'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='5175' c='_ZNK7testing8internal25BeginEndDistanceIsMatcher4Impl15MatchAndExplainETL0__PNS_19MatchResultListenerE'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='5346' c='_ZNK7testing8internal19WhenSortedByMatcher4Impl15MatchAndExplainETL0__PNS_19MatchResultListenerE'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='5448' c='_ZNK7testing8internal16PointwiseMatcher4Impl15MatchAndExplainETL0__PNS_19MatchResultListenerE'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='5510' c='_ZNK7testing8internal21QuantifierMatcherImpl19MatchAndExplainImplEbT_PNS_19MatchResultListenerE'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='5655' c='_ZNK7testing8internal14KeyMatcherImpl15MatchAndExplainET_PNS_19MatchResultListenerE'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='5783' c='_ZNK7testing8internal15PairMatcherImpl15MatchAndExplainET_PNS_19MatchResultListenerE'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='5790' c='_ZNK7testing8internal15PairMatcherImpl15MatchAndExplainET_PNS_19MatchResultListenerE'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='5995' c='_ZNK7testing8internal20FieldsAreMatcherImplIT_NS0_13IndexSequenceIJXspT0_EEEEE13MatchInternalEDTcl12UnpackStructIXsZT0_EEclsr3stdE7declvalIRKS2_EEEEPN14459248'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='6115' c='_ZNK7testing8internal22ElementsAreMatcherImpl15MatchAndExplainET_PNS_19MatchResultListenerE'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='6613' c='_ZNK7testing8internal15OptionalMatcher4Impl15MatchAndExplainETL0__PNS_19MatchResultListenerE'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='6657' c='_ZNK7testing8internal15variant_matcher14VariantMatcher15MatchAndExplainERKTL0__PNS_19MatchResultListenerE'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='6718' c='_ZNK7testing8internal16any_cast_matcher14AnyCastMatcher15MatchAndExplainERKTL0__PNS_19MatchResultListenerE'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='6776' c='_ZNK7testing8internal15ArgsMatcherImpl15MatchAndExplainET_PNS_19MatchResultListenerE'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='9351' c='_ZNK7testing8internal16TypedExpectation20ExplainMatchResultToERKNS0_8FunctionIT_E13ArgumentTupleEPSo'/>
<size>408</size>
<doc f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='3157'>// To implement a matcher Foo for type T, define:
//   1. a class FooMatcherImpl that implements the
//      MatcherInterface&lt;T&gt; interface, and
//   2. a factory function that creates a Matcher&lt;T&gt; object from a
//      FooMatcherImpl*.
//
// The two-level delegation design makes it possible to allow a user
// to write &quot;v&quot; instead of &quot;Eq(v)&quot; where a Matcher is expected, which
// is impossible if we pass matchers by pointers.  It also eases
// ownership management as Matcher objects can now be copied like
// plain values.

// A match result listener that stores the explanation in a string.</doc>
<fun r='_ZN7testing25StringMatchResultListenerC1Ev'/>
<fun r='_ZNK7testing25StringMatchResultListener3strB5cxx11Ev'/>
<fun r='_ZN7testing25StringMatchResultListener5ClearEv'/>
<mbr r='testing::StringMatchResultListener::ss_' o='128' t='::std::stringstream'/>
<fun r='_ZN7testing25StringMatchResultListenerC1ERKS0_'/>
