<def f='fmt-8.1.0/test/gtest/gtest/gtest.h' l='8288' ll='8291' type='const T * testing::internal::ValuesInIteratorRangeGenerator::Iterator::Current() const'/>
<doc f='fmt-8.1.0/test/gtest/gtest/gtest.h' l='8281'>// We need to use cached value referenced by iterator_ because *iterator_
    // can return a temporary object (and of type other then T), so just
    // having &quot;return &amp;*iterator_;&quot; doesn&apos;t work.
    // value_ is updated here and not in Advance() because Advance()
    // can advance iterator_ beyond the end of the range, and we cannot
    // detect that fact. The client code, on the other hand, is
    // responsible for not calling Current() on an out-of-range iterator.</doc>
