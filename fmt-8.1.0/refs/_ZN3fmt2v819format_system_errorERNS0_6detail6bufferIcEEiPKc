<dec f='fmt-8.1.0/include/fmt/format.h' l='2498' type='void fmt::format_system_error(detail::buffer&lt;char&gt; &amp; out, int error_code, const char * message)'/>
<def f='fmt-8.1.0/include/fmt/format-inl.h' l='2562' ll='2571' type='void fmt::format_system_error(detail::buffer&lt;char&gt; &amp; out, int error_code, const char * message)'/>
<use f='fmt-8.1.0/include/fmt/format-inl.h' l='2575' u='r' c='_ZN3fmt2v819report_system_errorEiPKc'/>
<doc f='fmt-8.1.0/include/fmt/format.h' l='2482'>/**
  \rst
  Formats an error message for an error returned by an operating system or a
  language runtime, for example a file opening error, and writes it to *out*.
  The format is the same as the one used by ``std::system_error(ec, message)``
  where ``ec`` is ``std::error_code(error_code, std::generic_category()})``.
  It is implementation-defined but normally looks like:

  .. parsed-literal::
     *&lt;message&gt;*: *&lt;system-message&gt;*

  where *&lt;message&gt;* is the passed message and *&lt;system-message&gt;* is the system
  message corresponding to the error code.
  *error_code* is a system error code as given by ``errno``.
  \endrst
 */</doc>
<use f='fmt-8.1.0/test/format-test.cc' l='136' u='c' c='_ZN34util_test_format_system_error_Test8TestBodyEv'/>
<use f='fmt-8.1.0/test/format-test.cc' l='169' u='c' c='_ZN27util_test_system_error_Test8TestBodyEv'/>
<use f='fmt-8.1.0/test/format-test.cc' l='176' u='c' c='_ZN34util_test_report_system_error_Test8TestBodyEv'/>
