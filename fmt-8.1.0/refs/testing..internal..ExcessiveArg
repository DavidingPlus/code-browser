<def f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='2397'/>
<use f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='2439' c='_ZNK7testing8internal10ActionImplIFT_DpT0_ET1_E5ApplyENS0_13IndexSequenceIJXspTL0__EEEENS8_IJXspTL0_0_EEEERKSt5tupleIJS4_EE'/>
<size>1</size>
<doc f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='2383'>// A macro from the ACTION* family (defined later in gmock-generated-actions.h)
// defines an action that can be used in a mock function.  Typically,
// these actions only care about a subset of the arguments of the mock
// function.  For example, if such an action only uses the second
// argument, it can be used in any mock function that takes &gt;= 2
// arguments where the type of the second argument is compatible.
//
// Therefore, the action implementation must be prepared to take more
// arguments than it needs.  The ExcessiveArg type is used to
// represent those excessive arguments.  In order to keep the compiler
// error messages tractable, we define it in the testing namespace
// instead of testing::internal.  However, this is an INTERNAL TYPE
// and subject to change without notice, so a user MUST NOT USE THIS
// TYPE DIRECTLY.</doc>
