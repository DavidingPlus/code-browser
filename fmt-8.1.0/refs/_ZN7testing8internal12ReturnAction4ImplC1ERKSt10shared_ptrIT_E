<def f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='1596' ll='1598' type='void testing::internal::ReturnAction::Impl::Impl&lt;R_, F&gt;(const std::shared_ptr&lt;R&gt; &amp; value)'/>
<doc f='fmt-8.1.0/test/gtest/gmock/gmock.h' l='1589'>// The implicit cast is necessary when Result has more than one
    // single-argument constructor (e.g. Result is std::vector&lt;int&gt;) and R
    // has a type conversion operator template.  In that case, value_(value)
    // won&apos;t compile as the compiler doesn&apos;t known which constructor of
    // Result to call.  ImplicitCast_ forces the compiler to convert R to
    // Result without considering explicit constructors, thus resolving the
    // ambiguity. value_ is then initialized using its copy constructor.</doc>
