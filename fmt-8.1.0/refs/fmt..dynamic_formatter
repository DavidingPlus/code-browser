<def f='fmt-8.1.0/include/fmt/format.h' l='2637' ll='2675'/>
<doc f='fmt-8.1.0/include/fmt/format.h' l='2625'>// A formatter for types known only at run time such as variant alternatives.
//
// Usage:
//   using variant = std::variant&lt;int, std::string&gt;;
//   template &lt;&gt;
//   struct formatter&lt;variant&gt;: dynamic_formatter&lt;&gt; {
//     auto format(const variant&amp; v, format_context&amp; ctx) {
//       return visit([&amp;](const auto&amp; val) {
//           return dynamic_formatter&lt;&gt;::format(val, ctx);
//       }, v);
//     }
//   };</doc>
<mbr r='fmt::dynamic_formatter::specs_' t='detail::dynamic_format_specs&lt;Char&gt;'/>
<mbr r='fmt::dynamic_formatter::format_str_' t='const Char *'/>
<fun r='_ZN3fmt2v817dynamic_formatter12handle_specsERTL0__'/>
<fun r='_ZN3fmt2v817dynamic_formatter5parseERTL0__'/>
<fun r='_ZN3fmt2v817dynamic_formatter6formatERKTL0__RTL0_0_'/>
<ovr f='fmt-8.1.0/test/format-test.cc' l='1826' c='fmt::formatter'/>
<use f='fmt-8.1.0/test/format-test.cc' l='1829' c='_ZN3fmt2v89formatterI7variantcvE6formatES2_RNS0_20basic_format_contextINS0_8appenderEcEE'/>
<use f='fmt-8.1.0/test/format-test.cc' l='1830' c='_ZN3fmt2v89formatterI7variantcvE6formatES2_RNS0_20basic_format_contextINS0_8appenderEcEE'/>
