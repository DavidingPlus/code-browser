<def f='fmt-8.1.0/include/fmt/format.h' l='497' ll='527' type='const char * fmt::detail::utf8_decode(const char * s, uint32_t * c, int * e)'/>
<use f='fmt-8.1.0/include/fmt/format.h' l='538' u='c' c='_ZN3fmt2v86detail18for_each_codepointENS0_17basic_string_viewIcEET_'/>
<doc f='fmt-8.1.0/include/fmt/format.h' l='482'>/* Decode the next character, c, from s, reporting errors in e.
 *
 * Since this is a branchless decoder, four bytes will be read from the
 * buffer regardless of the actual length of the next character. This
 * means the buffer _must_ have at least three bytes of zero padding
 * following the end of the data stream.
 *
 * Errors are reported in e, which will be non-zero if the parsed
 * character was somehow invalid: invalid byte sequence, non-canonical
 * encoding, or a surrogate half.
 *
 * The function returns a pointer to the next character. When an error
 * occurs, this pointer will be a guess that depends on the particular
 * error, but it will always advance at least one byte.
 */</doc>
