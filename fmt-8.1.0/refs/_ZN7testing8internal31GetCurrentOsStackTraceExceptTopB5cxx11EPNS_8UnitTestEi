<dec f='fmt-8.1.0/test/gtest/gtest/gtest.h' l='4212' type='std::string testing::internal::GetCurrentOsStackTraceExceptTop(testing::UnitTest * unit_test, int skip_count)'/>
<def f='fmt-8.1.0/test/gtest/gmock-gtest-all.cc' l='7716' ll='7721' type='std::string testing::internal::GetCurrentOsStackTraceExceptTop(testing::UnitTest * , int skip_count)'/>
<use f='fmt-8.1.0/test/gtest/gmock-gtest-all.cc' l='12842' u='c' c='_ZN7testing8internal3LogENS0_11LogSeverityERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi'/>
<doc f='fmt-8.1.0/test/gtest/gmock-gtest-all.cc' l='7706'>// Returns the current OS stack trace as an std::string.
//
// The maximum number of stack frames to be included is specified by
// the gtest_stack_trace_depth flag.  The skip_count parameter
// specifies the number of top frames to be skipped, which doesn&apos;t
// count against the number of frames to be included.
//
// For example, if Foo() calls Bar(), which in turn calls
// GetCurrentOsStackTraceExceptTop(..., 1), Foo() will be included in
// the trace but Bar() and GetCurrentOsStackTraceExceptTop() won&apos;t.</doc>
<doc f='fmt-8.1.0/test/gtest/gmock-gtest-all.cc' l='7716'>/*unit_test*/</doc>
