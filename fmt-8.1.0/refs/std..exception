<def f='include/c++/9/bits/exception.h' l='60' ll='76'/>
<use f='include/c++/9/bits/exception.h' l='66' c='_ZNSt9exceptionC1ERKS_'/>
<use f='include/c++/9/bits/exception.h' l='67' c='_ZNSt9exceptionaSERKS_'/>
<use f='include/c++/9/bits/exception.h' l='67' c='_ZNSt9exceptionaSERKS_'/>
<use f='include/c++/9/bits/exception.h' l='68' c='_ZNSt9exceptionC1EOS_'/>
<use f='include/c++/9/bits/exception.h' l='69' c='_ZNSt9exceptionaSEOS_'/>
<use f='include/c++/9/bits/exception.h' l='69' c='_ZNSt9exceptionaSEOS_'/>
<ovr f='include/c++/9/exception' l='46' c='std::bad_exception'/>
<use f='include/c++/9/exception' l='46'/>
<ovr f='include/c++/9/typeinfo' l='187' c='std::bad_cast'/>
<use f='include/c++/9/typeinfo' l='187'/>
<ovr f='include/c++/9/typeinfo' l='204' c='std::bad_typeid'/>
<use f='include/c++/9/typeinfo' l='204'/>
<ovr f='include/c++/9/new' l='54' c='std::bad_alloc'/>
<use f='include/c++/9/new' l='54'/>
<ovr f='include/c++/9/stdexcept' l='113' c='std::logic_error'/>
<use f='include/c++/9/stdexcept' l='113'/>
<ovr f='include/c++/9/stdexcept' l='219' c='std::runtime_error'/>
<use f='include/c++/9/stdexcept' l='219'/>
<ovr f='include/c++/9/ext/concurrence.h' l='64' c='__gnu_cxx::__concurrence_lock_error'/>
<use f='include/c++/9/ext/concurrence.h' l='64'/>
<ovr f='include/c++/9/ext/concurrence.h' l='72' c='__gnu_cxx::__concurrence_unlock_error'/>
<use f='include/c++/9/ext/concurrence.h' l='72'/>
<ovr f='include/c++/9/ext/concurrence.h' l='80' c='__gnu_cxx::__concurrence_broadcast_error'/>
<use f='include/c++/9/ext/concurrence.h' l='80'/>
<ovr f='include/c++/9/ext/concurrence.h' l='88' c='__gnu_cxx::__concurrence_wait_error'/>
<use f='include/c++/9/ext/concurrence.h' l='88'/>
<ovr f='include/c++/9/bits/shared_ptr_base.h' l='73' c='std::bad_weak_ptr'/>
<use f='include/c++/9/bits/shared_ptr_base.h' l='73'/>
<size>8</size>
<doc f='include/c++/9/bits/exception.h' l='52'>/**
   *  @brief Base class for all library exceptions.
   *
   *  This is the base class for all exceptions thrown by the standard
   *  library, and by certain language expressions.  You are free to derive
   *  your own %exception classes, or use a different hierarchy, or to
   *  throw non-class data (e.g., fundamental types).
   */</doc>
<fun r='_ZNSt9exceptionC1Ev'/>
<fun r='_ZNSt9exceptionD1Ev'/>
<fun r='_ZNSt9exceptionC1ERKS_'/>
<fun r='_ZNSt9exceptionaSERKS_'/>
<fun r='_ZNSt9exceptionC1EOS_'/>
<fun r='_ZNSt9exceptionaSEOS_'/>
<fun r='_ZNKSt9exception4whatEv'/>
<ovr f='include/c++/9/bits/std_function.h' l='56' c='std::bad_function_call'/>
<use f='include/c++/9/bits/std_function.h' l='56'/>
<ovr f='include/c++/9/cxxabi.h' l='696' c='__gnu_cxx::recursive_init_error'/>
<use f='include/c++/9/cxxabi.h' l='696'/>
<size>8</size>
<use f='fmt-8.1.0/test/format-test.cc' l='314' c='_ZN47memory_buffer_test_exception_in_deallocate_Test8TestBodyEv'/>
<use f='fmt-8.1.0/test/format-test.cc' l='316' c='_ZN47memory_buffer_test_exception_in_deallocate_Test8TestBodyEv'/>
<use f='fmt-8.1.0/test/format-test.cc' l='354' c='_ZN51memory_buffer_test_max_size_allocator_overflow_Test8TestBodyEv'/>
<size>8</size>
<use f='fmt-8.1.0/test/gtest-extra-test.cc' l='54' c='_ZN51single_evaluation_test_failed_expect_throw_msg_Test8TestBodyEv'/>
<use f='fmt-8.1.0/test/gtest-extra-test.cc' l='74' c='_ZN43single_evaluation_test_exception_tests_Test8TestBodyEv'/>
<use f='fmt-8.1.0/test/gtest-extra-test.cc' l='95' c='_ZN43single_evaluation_test_exception_tests_Test8TestBodyEv'/>
<use f='fmt-8.1.0/test/gtest-extra-test.cc' l='102' c='_ZN43single_evaluation_test_exception_tests_Test8TestBodyEv'/>
<use f='fmt-8.1.0/test/gtest-extra-test.cc' l='226' c='_ZN64gtest_extra_test_expect_throw_behaves_like_single_statement_Test8TestBodyEv'/>
<use f='fmt-8.1.0/test/gtest-extra-test.cc' l='229' c='_ZN64gtest_extra_test_expect_throw_behaves_like_single_statement_Test8TestBodyEv'/>
<use f='fmt-8.1.0/test/gtest-extra-test.cc' l='256' c='_ZN38gtest_extra_test_expect_throw_msg_Test8TestBodyEv'/>
<use f='fmt-8.1.0/test/gtest-extra-test.cc' l='262' c='_ZN38gtest_extra_test_expect_throw_msg_Test8TestBodyEv'/>
<use f='fmt-8.1.0/test/gtest-extra-test.cc' l='266' c='_ZN38gtest_extra_test_expect_throw_msg_Test8TestBodyEv'/>
<use f='fmt-8.1.0/test/gtest-extra-test.cc' l='294' c='_ZN48gtest_extra_test_expect_throw_msg_streaming_Test8TestBodyEv'/>
<use f='fmt-8.1.0/test/gtest-extra-test.cc' l='297' c='_ZN48gtest_extra_test_expect_throw_msg_streaming_Test8TestBodyEv'/>
<size>8</size>
<use f='fmt-8.1.0/test/gtest-extra.cc' l='29' c='_ZN15output_redirectD1Ev'/>
<size>8</size>
<use f='fmt-8.1.0/test/gtest/gmock-gtest-all.cc' l='4142' c='_ZN7testing8internal35HandleExceptionsInMethodIfSupportedEPT_MS1_FT0_vEPKc'/>
<size>8</size>
