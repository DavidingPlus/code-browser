<def f='boost-1.85.0/libs/log/include/boost/log/attributes/attribute_value.hpp' l='93' ll='96' type='intrusive_ptr&lt;boost::log::attribute_value::impl&gt; boost::log::attribute_value::impl::detach_from_thread()'/>
<use f='boost-1.85.0/libs/log/include/boost/log/attributes/attribute_value.hpp' l='186' u='c' c='_ZN5boost3log12v2s_mt_posix15attribute_value18detach_from_threadEv'/>
<doc f='boost-1.85.0/libs/log/include/boost/log/attributes/attribute_value.hpp' l='85'>/*!
         * The method is called when the attribute value is passed to another thread (e.g.
         * in case of asynchronous logging). The value should ensure it properly owns all thread-specific data.
         *
         * \return An actual pointer to the attribute value. It may either point to this object or another.
         *         In the latter case the returned pointer replaces the pointer used by caller to invoke this
         *         method and is considered to be a functional equivalent to the previous pointer.
         */</doc>
<ovr f='boost-1.85.0/libs/log/include/boost/log/sources/severity_feature.hpp' l='84' c='_ZN5boost3log12v2s_mt_posix7sources3aux14severity_level4impl18detach_from_threadEv'/>
<ovr f='boost-1.85.0/libs/log/src/named_scope.cpp' l='114' c='_ZN5boost3log12v2s_mt_posix10attributes9anonymous17named_scope_value18detach_from_threadEv'/>
