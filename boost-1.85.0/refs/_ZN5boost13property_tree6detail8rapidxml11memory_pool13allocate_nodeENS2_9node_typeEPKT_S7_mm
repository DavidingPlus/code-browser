<def f='boost-1.85.0/libs/property_tree/include/boost/property_tree/detail/rapidxml.hpp' l='404' ll='425' type='xml_node&lt;Ch&gt; * boost::property_tree::detail::rapidxml::memory_pool::allocate_node(boost::property_tree::detail::rapidxml::node_type type, const Ch * name = 0, const Ch * value = 0, std::size_t name_size = 0, std::size_t value_size = 0)'/>
<use f='boost-1.85.0/libs/property_tree/include/boost/property_tree/detail/rapidxml.hpp' l='496' u='c' c='_ZN5boost13property_tree6detail8rapidxml11memory_pool10clone_nodeEPKNS2_8xml_nodeIT_EEPS6_'/>
<doc f='boost-1.85.0/libs/property_tree/include/boost/property_tree/detail/rapidxml.hpp' l='394'>//! Allocates a new node from the pool, and optionally assigns name and value to it. 
        //! If the allocation request cannot be accommodated, this function will throw &lt;code&gt;std::bad_alloc&lt;/code&gt;.
        //! If exceptions are disabled by defining RAPIDXML_NO_EXCEPTIONS, this function
        //! will call rapidxml::parse_error_handler() function.
        //! \param type Type of node to create.
        //! \param name Name to assign to the node, or 0 to assign no name.
        //! \param value Value to assign to the node, or 0 to assign no value.
        //! \param name_size Size of name to assign, or 0 to automatically calculate size from name string.
        //! \param value_size Size of value to assign, or 0 to automatically calculate size from value string.
        //! \return Pointer to allocated node. This pointer will never be NULL.</doc>
