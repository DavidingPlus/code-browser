<def f='boost-1.85.0/libs/url/include/boost/url/grammar/ci_string.hpp' l='224' ll='233' type='bool boost::urls::grammar::ci_is_less(core::string_view s0, core::string_view s1)'/>
<use f='boost-1.85.0/libs/url/include/boost/url/grammar/ci_string.hpp' l='347' u='c' c='_ZNK5boost4urls7grammar7ci_lessclENS_4core17basic_string_viewIcEES5_'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/grammar/ci_string.hpp' l='206'>/** Return true if s0 is less than s1 using case-insensitive comparison 

    The comparison algorithm implements a
    case-insensitive total order on the set
    of all strings; however, it is not a
    lexicographical comparison.
    The function is defined only for strings
    containing low-ASCII characters.

    @par Example
    @code
    assert( ! ci_is_less( &quot;Boost&quot;, &quot;boost&quot; ) );
    @endcode

    @see
        @ref ci_compare,
        @ref ci_is_equal.
*/</doc>
