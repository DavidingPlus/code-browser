<dec f='boost-1.85.0/libs/url/include/boost/url/params_view.hpp' l='130' type='void boost::urls::params_view::params_view(const boost::urls::params_view &amp; other, boost::urls::encoding_opts opt)'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/params_view.hpp' l='106'>/** Constructor

        After construction both views will
        reference the same character buffer
        but this instance will use the specified
        @ref encoding_opts when the values
        are decoded.

        Ownership is not transferred; the caller
        is responsible for ensuring the lifetime
        of the buffer extends until it is no
        longer referenced.

        @par Postconditions
        @code
        this-&gt;buffer().data() == other.buffer().data()
        @endcode

        @par Complexity
        Constant.

        @par Exception Safety
        Throws nothing
    */</doc>
<def f='boost-1.85.0/libs/url/src/params_view.cpp' l='31' ll='37' type='void boost::urls::params_view::params_view(const boost::urls::params_view &amp; other, boost::urls::encoding_opts opt)'/>
<use f='boost-1.85.0/libs/url/src/params_view.cpp' l='42' u='c' c='_ZN5boost4urls11params_viewC1ENS_4core17basic_string_viewIcEE'/>
<use f='boost-1.85.0/libs/url/src/params_view.cpp' l='53' u='c' c='_ZN5boost4urls11params_viewC1ENS_4core17basic_string_viewIcEENS0_13encoding_optsE'/>
<doc f='boost-1.85.0/libs/url/src/params_view.cpp' l='29'>//------------------------------------------------</doc>
