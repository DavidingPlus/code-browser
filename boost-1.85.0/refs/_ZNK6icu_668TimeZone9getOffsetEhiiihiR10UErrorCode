<dec f='include/unicode/timezone.h' l='485' type='int32_t icu_66::TimeZone::getOffset(uint8_t era, int32_t year, int32_t month, int32_t day, uint8_t dayOfWeek, int32_t millis, UErrorCode &amp; status) const'/>
<doc f='include/unicode/timezone.h' l='461'>/**
     * Returns the TimeZone&apos;s adjusted GMT offset (i.e., the number of milliseconds to add
     * to GMT to get local time in this time zone, taking daylight savings time into
     * account) as of a particular reference date.  The reference date is used to determine
     * whether daylight savings time is in effect and needs to be figured into the offset
     * that is returned (in other words, what is the adjusted GMT offset in this time zone
     * at this particular date and time?).  For the time zones produced by createTimeZone(),
     * the reference data is specified according to the Gregorian calendar, and the date
     * and time fields are local standard time.
     *
     * &lt;p&gt;Note: Don&apos;t call this method. Instead, call the getOffset(UDate...) overload,
     * which returns both the raw and the DST offset for a given time. This method
     * is retained only for backward compatibility.
     *
     * @param era        The reference date&apos;s era
     * @param year       The reference date&apos;s year
     * @param month      The reference date&apos;s month (0-based; 0 is January)
     * @param day        The reference date&apos;s day-in-month (1-based)
     * @param dayOfWeek  The reference date&apos;s day-of-week (1-based; 1 is Sunday)
     * @param millis     The reference date&apos;s milliseconds in day, local standard time
     * @param status     Output param to filled in with a success or an error.
     * @return           The offset in milliseconds to add to GMT to get local time.
     * @stable ICU 2.0
     */</doc>
