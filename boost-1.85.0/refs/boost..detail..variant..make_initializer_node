<def f='boost-1.85.0/libs/variant/include/boost/variant/detail/initializer.hpp' l='54' ll='123'/>
<size>1</size>
<doc f='boost-1.85.0/libs/variant/include/boost/variant/detail/initializer.hpp' l='37'>///////////////////////////////////////////////////////////////////////////////
// (detail) support to simulate standard overload resolution rules
//
// The below initializers allows variant to follow standard overload
// resolution rules over the specified set of bounded types.
//
// On compilers where using declarations in class templates can correctly
// avoid name hiding, use an optimal solution based on the variant&apos;s typelist.
//
// Otherwise, use a preprocessor workaround based on knowledge of the fixed
// size of the variant&apos;s psuedo-variadic template parameter list.
//

// (detail) quoted metafunction make_initializer_node
//
// Exposes a pair whose first type is a node in the initializer hierarchy.
//</doc>
