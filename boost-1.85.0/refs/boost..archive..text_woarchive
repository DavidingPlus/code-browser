<inh f='boost-1.85.0/libs/serialization/include/boost/archive/text_woarchive.hpp' l='55' c='boost::archive::text_woarchive_impl'/>
<def f='boost-1.85.0/libs/serialization/include/boost/archive/text_woarchive.hpp' l='129' ll='140'/>
<use f='boost-1.85.0/libs/serialization/include/boost/archive/text_woarchive.hpp' l='130'/>
<use f='boost-1.85.0/libs/serialization/include/boost/archive/text_woarchive.hpp' l='134' c='_ZN5boost7archive14text_woarchiveC1ERSt13basic_ostreamIwSt11char_traitsIwEEj'/>
<use f='boost-1.85.0/libs/serialization/include/boost/archive/text_woarchive.hpp' l='146' c='_ZN5boost7archive6detail29instantiate_ptr_serializationEPT_PNS0_14text_woarchiveENS1_7adl_tagE'/>
<use f='boost-1.85.0/libs/serialization/include/boost/archive/polymorphic_text_woarchive.hpp' l='31'/>
<use f='boost-1.85.0/libs/serialization/include/boost/archive/polymorphic_text_woarchive.hpp' l='35' c='_ZN5boost7archive26polymorphic_text_woarchiveC1ERSt13basic_ostreamIwSt11char_traitsIwEEj'/>
<size>136</size>
<doc f='boost-1.85.0/libs/serialization/include/boost/archive/text_woarchive.hpp' l='123'>// we use the following because we can&apos;t use
// typedef text_oarchive_impl&lt;text_oarchive_impl&lt;...&gt; &gt; text_oarchive;

// do not derive from this class.  If you want to extend this functionality
// via inheritance, derived from text_oarchive_impl instead.  This will
// preserve correct static polymorphism.</doc>
<fun r='_ZN5boost7archive14text_woarchiveC1ERSt13basic_ostreamIwSt11char_traitsIwEEj'/>
<fun r='_ZN5boost7archive14text_woarchiveD1Ev'/>
<use f='boost-1.85.0/libs/serialization/src/text_woarchive.cpp' l='29'/>
<use f='boost-1.85.0/libs/serialization/src/text_woarchive.cpp' l='30'/>
<use f='boost-1.85.0/libs/serialization/src/text_woarchive.cpp' l='31'/>
<size>136</size>
