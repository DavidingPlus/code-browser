<def f='boost-1.85.0/libs/log/include/boost/log/utility/ipc/reliable_message_queue.hpp' l='634' ll='640' type='bool boost::log::ipc::reliable_message_queue::try_receive(void * buffer, boost::log::ipc::reliable_message_queue::size_type buffer_size, boost::log::ipc::reliable_message_queue::size_type &amp; message_size)'/>
<doc f='boost-1.85.0/libs/log/include/boost/log/utility/ipc/reliable_message_queue.hpp' l='618'>/*!
     * The method performs an attempt to take a message from the associated message queue. The
     * method is non-blocking, and always returns immediately.
     *
     * Concurrent calls to &lt;tt&gt;send()&lt;/tt&gt;, &lt;tt&gt;try_send()&lt;/tt&gt;, &lt;tt&gt;receive()&lt;/tt&gt;,
     * &lt;tt&gt;try_receive()&lt;/tt&gt;, &lt;tt&gt;stop_local()&lt;/tt&gt;, and &lt;tt&gt;clear()&lt;/tt&gt; are allowed.
     *
     * \pre &lt;tt&gt;is_open() == true&lt;/tt&gt;
     *
     * \param buffer The memory buffer to store the received message in.
     * \param buffer_size The size of the buffer, in bytes.
     * \param message_size Receives the size of the received message, in bytes.
     *
     * \return \c true if a message is successfully received, and \c false otherwise (e.g.,
     *         when the queue is empty).
     */</doc>
