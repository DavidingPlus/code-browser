<use f='boost-1.85.0/libs/concept_check/include/boost/concept_check.hpp' l='986'/>
<def f='boost-1.85.0/libs/concept_check/include/boost/concept_check.hpp' l='986' ll='1033' macro='1'/>
<fun r='_ZN5boost26SortedAssociativeContainer17const_constraintsERKT_'/>
<mbr r='boost::SortedAssociativeContainer::kc' t='typename C::key_compare'/>
<mbr r='boost::SortedAssociativeContainer::vc' t='typename C::value_compare'/>
<mbr r='boost::SortedAssociativeContainer::t' t='typename C::value_type'/>
<mbr r='boost::SortedAssociativeContainer::k' t='typename C::key_type'/>
<mbr r='boost::SortedAssociativeContainer::p' t='boost::SortedAssociativeContainer::iterator'/>
<mbr r='boost::SortedAssociativeContainer::cp' t='boost::SortedAssociativeContainer::const_iterator'/>
<mbr r='boost::SortedAssociativeContainer::r' t='std::pair&lt;typename self::iterator, typename self::iterator&gt;'/>
<mbr r='boost::SortedAssociativeContainer::cr' t='std::pair&lt;typename self::const_iterator, typename self::const_iterator&gt;'/>
<mbr r='boost::SortedAssociativeContainer::first' t='typename C::value_type *'/>
<mbr r='boost::SortedAssociativeContainer::last' t='typename C::value_type *'/>
