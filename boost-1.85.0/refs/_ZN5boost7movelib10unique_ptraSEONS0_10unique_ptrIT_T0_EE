<def f='boost-1.85.0/libs/move/include/boost/move/unique_ptr.hpp' l='577' ll='582' type='unique_ptr&lt;T, D&gt; &amp; boost::movelib::unique_ptr::operator=(unique_ptr&lt;T, D&gt; &amp;&amp; u)'/>
<doc f='boost-1.85.0/libs/move/include/boost/move/unique_ptr.hpp' l='568'>//! &lt;b&gt;Requires&lt;/b&gt;: If D is not a reference type, D shall satisfy the requirements of MoveAssignable
   //!   and assignment of the deleter from an rvalue of type D shall not throw an exception. Otherwise, D
   //!   is a reference type; &lt;tt&gt;remove_reference&lt;D&gt;::type&lt;/tt&gt; shall satisfy the CopyAssignable requirements and
   //!   assignment of the deleter from an lvalue of type D shall not throw an exception.
   //!
   //! &lt;b&gt;Effects&lt;/b&gt;: Transfers ownership from u to *this as if by calling &lt;tt&gt;reset(u.release())&lt;/tt&gt; followed
   //!   by &lt;tt&gt;get_deleter() = std::forward&lt;D&gt;(u.get_deleter())&lt;/tt&gt;.
   //!
   //! &lt;b&gt;Returns&lt;/b&gt;: *this.</doc>
