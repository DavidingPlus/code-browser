<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/traits/cpp_regex_traits.hpp' l='448' ll='456' type='bool boost::xpressive::cpp_regex_traits::in_range_nocase(boost::xpressive::cpp_regex_traits::char_type first, boost::xpressive::cpp_regex_traits::char_type last, boost::xpressive::cpp_regex_traits::char_type ch) const'/>
<doc f='boost-1.85.0/libs/xpressive/include/boost/xpressive/traits/cpp_regex_traits.hpp' l='438'>/// Checks to see if a character is within a character range, irregardless of case.
    ///
    /// \param first The bottom of the range, inclusive.
    /// \param last The top of the range, inclusive.
    /// \param ch The source character.
    /// \return in_range(first, last, ch) || in_range(first, last, tolower(ch, this-&gt;getloc())) ||
    ///     in_range(first, last, toupper(ch, this-&gt;getloc()))
    /// \attention The default implementation doesn&apos;t do proper Unicode
    ///     case folding, but this is the best we can do with the standard
    ///     ctype facet.</doc>
