<dec f='include/c++/9/bits/regex_executor.h' l='109' type='void std::__detail::_Executor::_M_rep_once_more(std::__detail::_Executor::_Match_mode __match_mode, std::__detail::_StateIdT )'/>
<def f='include/c++/9/bits/regex_executor.tcc' l='172' ll='196' type='void std::__detail::_Executor::_M_rep_once_more(std::__detail::_Executor::_Match_mode __match_mode, std::__detail::_StateIdT __i)'/>
<use f='include/c++/9/bits/regex_executor.tcc' l='212' u='c' c='_ZNSt8__detail9_Executor16_M_handle_repeatENS0_11_Match_modeEl'/>
<use f='include/c++/9/bits/regex_executor.tcc' l='224' u='c' c='_ZNSt8__detail9_Executor16_M_handle_repeatENS0_11_Match_modeEl'/>
<use f='include/c++/9/bits/regex_executor.tcc' l='238' u='c' c='_ZNSt8__detail9_Executor16_M_handle_repeatENS0_11_Match_modeEl'/>
<doc f='include/c++/9/bits/regex_executor.tcc' l='166'>// __rep_count records how many times (__rep_count.second)
  // this node is visited under certain input iterator
  // (__rep_count.first). This prevent the executor from entering
  // infinite loop by refusing to continue when it&apos;s already been
  // visited more than twice. It&apos;s `twice` instead of `once` because
  // we need to spare one more time for potential group capture.</doc>
