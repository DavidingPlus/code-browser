<dec f='include/unicode/numfmt.h' l='639' type='void icu_66::NumberFormat::parse(const icu_66::UnicodeString &amp; text, icu_66::Formattable &amp; result, icu_66::ParsePosition &amp; parsePosition) const'/>
<use f='boost-1.85.0/libs/locale/src/boost/locale/icu/formatter.cpp' l='110' u='c' c='_ZNK5boost6locale8impl_icu13number_format8do_parseERKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEERTL0__'/>
<doc f='include/unicode/numfmt.h' l='620'>/**
    * Return a long if possible (e.g. within range LONG_MAX,
    * LONG_MAX], and with no decimals), otherwise a double.  If
    * IntegerOnly is set, will stop at a decimal point (or equivalent;
    * e.g. for rational numbers &quot;1 2/3&quot;, will stop after the 1).
    * &lt;P&gt;
    * If no object can be parsed, index is unchanged, and NULL is
    * returned.
    * &lt;P&gt;
    * This is a pure virtual which concrete subclasses must implement.
    *
    * @param text           The text to be parsed.
    * @param result         Formattable to be set to the parse result.
    *                       If parse fails, return contents are undefined.
    * @param parsePosition  The position to start parsing at on input.
    *                       On output, moved to after the last successfully
    *                       parse character. On parse failure, does not change.
    * @stable ICU 2.0
    */</doc>
