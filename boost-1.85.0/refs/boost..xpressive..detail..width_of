<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='112' ll='113'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='115' ll='118'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='120' ll='126'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='123'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='124'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='128' ll='134'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='131'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='132'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='142'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='156' ll='165'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='167' ll='170'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='169'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/aux_/integral_wrapper.hpp' l='43' c='mpl_::size_t'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='172' ll='175'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/aux_/integral_wrapper.hpp' l='43' c='mpl_::size_t'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='177' ll='180'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/aux_/integral_wrapper.hpp' l='43' c='mpl_::size_t'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='184' ll='192'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/aux_/integral_wrapper.hpp' l='43' c='mpl_::size_t'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='194' ll='197'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/aux_/integral_wrapper.hpp' l='43' c='mpl_::size_t'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='199' ll='202'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/aux_/integral_wrapper.hpp' l='43' c='mpl_::size_t'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='204' ll='207'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/aux_/integral_wrapper.hpp' l='43' c='mpl_::size_t'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='209' ll='212'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='214' ll='224'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='217'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='220'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='226' ll='229'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='228'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='232' ll='235'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='234'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/aux_/integral_wrapper.hpp' l='43' c='mpl_::size_t'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='238' ll='241'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='247'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='258'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='258'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='261' ll='264'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='80'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='203'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='203'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='211'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='211'/>
<doc f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='155'>// either (s1 = ...) or (a1 = ...) or (set = ...)</doc>
<doc f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='182'>// keep() is used to turn off backtracking, so they should only be used
    // for things that are variable-width (eg. quantified)</doc>
<doc f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='231'>// when complementing a set or an assertion, the width is that of the set (1) or the assertion (0)</doc>
<doc f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/width_of.hpp' l='237'>// The comma is used in list-initialized sets, and the width of sets are 1</doc>
