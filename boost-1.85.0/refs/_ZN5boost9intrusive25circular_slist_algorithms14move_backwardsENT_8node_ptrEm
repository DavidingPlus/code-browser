<def f='boost-1.85.0/libs/intrusive/include/boost/intrusive/circular_slist_algorithms.hpp' l='337' ll='379' type='static boost::intrusive::circular_slist_algorithms::node_ptr boost::intrusive::circular_slist_algorithms::move_backwards(boost::intrusive::circular_slist_algorithms::node_ptr p, std::size_t n)'/>
<doc f='boost-1.85.0/libs/intrusive/include/boost/intrusive/circular_slist_algorithms.hpp' l='329'>//! &lt;b&gt;Effects&lt;/b&gt;: Moves the node p n positions towards the end of the list.
   //!
   //! &lt;b&gt;Returns&lt;/b&gt;: The previous node of p after the function if there has been any movement,
   //!   Null if n leads to no movement.
   //!
   //! &lt;b&gt;Throws&lt;/b&gt;: Nothing.
   //!
   //! &lt;b&gt;Complexity&lt;/b&gt;: Linear to the number of elements plus the number moved positions.</doc>
