<def f='boost-1.85.0/libs/pool/include/boost/pool/pool.hpp' l='464' ll='473' type='void boost::pool::free(void *const chunk)'/>
<doc f='boost-1.85.0/libs/pool/include/boost/pool/pool.hpp' l='458'>//! Same as malloc, only allocates enough contiguous chunks to cover n * requested_size bytes. Amortized O(n).
      //! \returns a free chunk from that block.
      //! If a new memory block cannot be allocated, returns 0. Amortized O(1).

    // pre: &apos;chunk&apos; must have been previously
    //        returned by *this.malloc().</doc>
