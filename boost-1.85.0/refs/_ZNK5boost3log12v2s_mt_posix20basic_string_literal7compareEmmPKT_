<def f='boost-1.85.0/libs/log/include/boost/log/utility/string_literal.hpp' l='528' ll='531' type='int boost::log::basic_string_literal::compare(boost::log::basic_string_literal::size_type pos, boost::log::basic_string_literal::size_type n, boost::log::basic_string_literal::const_pointer str) const'/>
<doc f='boost-1.85.0/libs/log/include/boost/log/utility/string_literal.hpp' l='516'>/*!
     * Lexicographically compares the argument string to a part of this string
     *
     * \pre &lt;tt&gt;pos &lt;= size()&lt;/tt&gt;
     * \param pos Starting position within this string to perform comparison to
     * \param n Length of the substring of this string to perform comparison to
     * \param str Comparand. Must point to a zero-terminated sequence of characters, must not be NULL.
     * \return Zero if the comparand equals this string, a negative value if this string is less than the comparand,
     *         a positive value if this string is greater than the comparand.
     *
     * \b Throws: An &lt;tt&gt;std::exception&lt;/tt&gt;-based exception if \a pos is out of range.
     */</doc>
