<dec f='boost-1.85.0/libs/url/include/boost/url/params_ref.hpp' l='185' type='boost::urls::params_ref &amp; boost::urls::params_ref::operator=(const boost::urls::params_ref &amp; other)'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/params_ref.hpp' l='157'>/** Assignment

        The previous contents of this are
        replaced by the contents of `other.

        &lt;br&gt;
        All iterators are invalidated.

        @note
        The strings referenced by `other`
        must not come from the underlying url,
        or else the behavior is undefined.

        @par Effects
        @code
        this-&gt;assign( other.begin(), other.end() );
        @endcode

        @par Complexity
        Linear in `other.buffer().size()`.

        @par Exception Safety
        Strong guarantee.
        Calls to allocate may throw.

        @param other The params to assign.
    */</doc>
<def f='boost-1.85.0/libs/url/src/params_ref.cpp' l='32' ll='40' type='boost::urls::params_ref &amp; boost::urls::params_ref::operator=(const boost::urls::params_ref &amp; other)'/>
<doc f='boost-1.85.0/libs/url/src/params_ref.cpp' l='26'>//------------------------------------------------
//
// Special Members
//
//------------------------------------------------</doc>
