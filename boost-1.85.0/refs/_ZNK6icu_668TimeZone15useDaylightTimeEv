<dec f='include/unicode/timezone.h' l='723' type='UBool icu_66::TimeZone::useDaylightTime() const'/>
<doc f='include/unicode/timezone.h' l='689'>/**
     * Queries if this time zone uses daylight savings time.
     * @return true if this time zone uses daylight savings time,
     * false, otherwise.
     * &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;The default implementation of
     * ICU TimeZone uses the tz database, which supports historic
     * rule changes, for system time zones. With the implementation,
     * there are time zones that used daylight savings time in the
     * past, but no longer used currently. For example, Asia/Tokyo has
     * never used daylight savings time since 1951. Most clients would
     * expect that this method to return &lt;code&gt;FALSE&lt;/code&gt; for such case.
     * The default implementation of this method returns &lt;code&gt;TRUE&lt;/code&gt;
     * when the time zone uses daylight savings time in the current
     * (Gregorian) calendar year.
     * &lt;p&gt;In Java 7, &lt;code&gt;observesDaylightTime()&lt;/code&gt; was added in
     * addition to &lt;code&gt;useDaylightTime()&lt;/code&gt;. In Java, &lt;code&gt;useDaylightTime()&lt;/code&gt;
     * only checks if daylight saving time is observed by the last known
     * rule. This specification might not be what most users would expect
     * if daylight saving time is currently observed, but not scheduled
     * in future. In this case, Java&apos;s &lt;code&gt;userDaylightTime()&lt;/code&gt; returns
     * &lt;code&gt;false&lt;/code&gt;. To resolve the issue, Java 7 added &lt;code&gt;observesDaylightTime()&lt;/code&gt;,
     * which takes the current rule into account. The method &lt;code&gt;observesDaylightTime()&lt;/code&gt;
     * was added in ICU4J for supporting API signature compatibility with JDK.
     * In general, ICU4C also provides JDK compatible methods, but the current
     * implementation &lt;code&gt;userDaylightTime()&lt;/code&gt; serves the purpose
     * (takes the current rule into account), &lt;code&gt;observesDaylightTime()&lt;/code&gt;
     * is not added in ICU4C. In addition to &lt;code&gt;useDaylightTime()&lt;/code&gt;, ICU4C
     * &lt;code&gt;BasicTimeZone&lt;/code&gt; class (Note that &lt;code&gt;TimeZone::createTimeZone(const UnicodeString &amp;ID)&lt;/code&gt;
     * always returns a &lt;code&gt;BasicTimeZone&lt;/code&gt;) provides a series of methods allowing
     * historic and future time zone rule iteration, so you can check if daylight saving
     * time is observed or not within a given period.
     * 
     * @stable ICU 2.0
     */</doc>
