<dec f='boost-1.85.0/libs/json/include/boost/json/object.hpp' l='838' type='std::size_t boost::json::object::size() const'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/object.hpp' l='170' u='c' c='_ZN5boost4json6object13revert_insertC1ERS1_m'/>
<def f='boost-1.85.0/libs/json/include/boost/json/impl/object.hpp' l='318' ll='324' type='std::size_t boost::json::object::size() const'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/object.hpp' l='513' u='c' c='_ZN5boost4json6object6insertET_S2_St20forward_iterator_tag'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/object.hpp' l='548' u='c' c='_ZN5boost4json6object12emplace_implENS_4core17basic_string_viewIcEEDpOT_'/>
<use f='boost-1.85.0/libs/json/include/boost/json/detail/value_to.hpp' l='224' u='c' c='_ZN5boost4json6detail13value_to_implENS1_23map_like_conversion_tagENS0_16try_value_to_tagIT_EERKNS0_5valueERKT0_'/>
<use f='boost-1.85.0/libs/json/include/boost/json/detail/value_to.hpp' l='426' u='c' c='_ZN5boost4json6detail13value_to_implENS1_30described_class_conversion_tagENS0_16try_value_to_tagIT_EERKNS0_5valueERKT0_'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/object.ipp' l='342' u='c' c='_ZN5boost4json6objectC1ERKS1_NS0_11storage_ptrE'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/object.ipp' l='449' u='c' c='_ZN5boost4json6object6insertESt16initializer_listISt4pairINS_4core17basic_string_viewIcEENS0_9value_refEEE'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/object.ipp' l='725' u='c' c='_ZN5boost4json6object12reserve_implEm'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/object.ipp' l='753' u='c' c='_ZNK5boost4json6object5equalERKS1_'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/object.ipp' l='753' u='c' c='_ZNK5boost4json6object5equalERKS1_'/>
<doc f='boost-1.85.0/libs/json/include/boost/json/object.hpp' l='826'>/** Return the number of elements.

        This returns the number of elements in the container.

        @par Complexity
        Constant.

        @par Exception Safety
        No-throw guarantee.
    */</doc>
