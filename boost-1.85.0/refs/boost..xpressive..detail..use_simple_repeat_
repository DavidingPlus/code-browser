<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='61' ll='62'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='64' ll='67'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='69' ll='75'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='72'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='73'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='77' ll='84'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='81'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='82'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='106' ll='113'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='115' ll='118'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='117'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='120' ll='123'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='125' ll='128'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='130' ll='133'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='136' ll='139'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='138'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='142' ll='145'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='159' ll='162'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='165' ll='168'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='170' ll='173'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='175' ll='178'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='180' ll='183'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='185' ll='188'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='187'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='190' ll='193'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='192'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='200'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='208'/>
<doc f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='105'>// either (s1 = ...) or (a1 = ...) or (set = ...)</doc>
<doc f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='135'>// when complementing a set or an assertion, the purity is that of the set (true) or the assertion</doc>
<doc f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='141'>// The comma is used in list-initialized sets, which are pure</doc>
<doc f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/static/is_pure.hpp' l='164'>// Quantified expressions are variable-width and cannot use the simple quantifier</doc>
