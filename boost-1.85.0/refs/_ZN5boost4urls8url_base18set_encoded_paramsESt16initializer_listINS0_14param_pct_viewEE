<dec f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='2304' type='boost::urls::url_base &amp; boost::urls::url_base::set_encoded_params(std::initializer_list&lt;param_pct_view&gt; ps)'/>
<use f='boost-1.85.0/libs/url/include/boost/url/url.hpp' l='476' u='c' c='_ZN5boost4urls3url18set_encoded_paramsESt16initializer_listINS0_14param_pct_viewEE'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='2246'>/** Set the query params

        This sets the query params to the elements
        in the list, which may contain
        percent-escapes and can be empty.

        An empty list of params is distinct from
        having no query.

        Escapes in the string are preserved,
        and reserved characters in the string
        are percent-escaped in the result.

        @par Example
        @code
        assert( url( &quot;http://example.com&quot; ).set_encoded_params( {&quot;id&quot;, &quot;42&quot;} ).encoded_query() == &quot;id=42&quot; );
        @endcode

        @par Postconditions
        @code
        this-&gt;has_query() == true
        @endcode

        @par Complexity
        Linear.

        @par Exception Safety
        Strong guarantee.
        Calls to allocate may throw.
        Exceptions thrown on invalid input.

        @param ps The params to set.

        @throws system_error
        some element in `ps` contains an invalid percent-encoding.

        @par BNF
        @code
        query           = *( pchar / &quot;/&quot; / &quot;?&quot; )

        query-param     = key [ &quot;=&quot; value ]
        query-params    = [ query-param ] *( &quot;&amp;&quot; query-param )
        @endcode

        @par Specification
        @li &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc3986#section-3.4&quot;
            &gt;3.4. Query (rfc3986)&lt;/a&gt;
        @li &lt;a href=&quot;https://en.wikipedia.org/wiki/Query_string&quot;
            &gt;Query string (Wikipedia)&lt;/a&gt;

        @see
            @ref set_params,
            @ref params,
            @ref remove_query,
            @ref set_encoded_query,
            @ref set_query.
    */</doc>
<def f='boost-1.85.0/libs/url/src/url_base.cpp' l='1446' ll='1452' type='boost::urls::url_base &amp; boost::urls::url_base::set_encoded_params(std::initializer_list&lt;param_pct_view&gt; ps)'/>
