<dec f='boost-1.85.0/libs/json/include/boost/json/value.hpp' l='1376' type='boost::json::value &amp; boost::json::value::operator=(boost::json::string &amp;&amp; s)'/>
<def f='boost-1.85.0/libs/json/include/boost/json/impl/value.ipp' l='316' ll='323' type='boost::json::value &amp; boost::json::value::operator=(boost::json::string &amp;&amp; str)'/>
<doc f='boost-1.85.0/libs/json/include/boost/json/value.hpp' l='1351'>/** Assignment.

        The contents of the value are replaced with the
        contents of `s` using move semantics:

        @li If `*other.storage() == *this-&gt;storage()`,
        ownership of the underlying memory is transferred
        in constant time, with no possibility of exceptions.
        After assignment, the moved-from string becomes
        empty with its current storage pointer.

        @li If `*other.storage() != *this-&gt;storage()`, an
        element-wise copy is performed, which may throw.
        In this case, the moved-from string is not
        changed.

        @par Complexity
        Constant, or linear in the size of `*this` plus `s.size()`.

        @par Exception Safety
        Strong guarantee.
        Calls to `memory_resource::allocate` may throw.

        @param s The string to move-assign from.
    */</doc>
