<def f='boost-1.85.0/libs/asio/include/boost/asio/basic_socket.hpp' l='849' ll='860' type='void boost::asio::basic_socket::connect(const boost::asio::basic_socket::endpoint_type &amp; peer_endpoint)'/>
<doc f='boost-1.85.0/libs/asio/include/boost/asio/basic_socket.hpp' l='827'>/**
   * This function is used to connect a socket to the specified remote endpoint.
   * The function call will block until the connection is successfully made or
   * an error occurs.
   *
   * The socket is automatically opened if it is not already open. If the
   * connect fails, and the socket was automatically opened, the socket is
   * not returned to the closed state.
   *
   * @param peer_endpoint The remote endpoint to which the socket will be
   * connected.
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @par Example
   * @code
   * boost::asio::ip::tcp::socket socket(my_context);
   * boost::asio::ip::tcp::endpoint endpoint(
   *     boost::asio::ip::address::from_string(&quot;1.2.3.4&quot;), 12345);
   * socket.connect(endpoint);
   * @endcode
   */</doc>
