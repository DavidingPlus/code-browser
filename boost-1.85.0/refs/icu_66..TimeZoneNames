<inh f='include/unicode/uobject.h' l='223' c='icu_66::UObject'/>
<def f='include/unicode/tznames.h' l='131' ll='411'/>
<use f='include/unicode/tznames.h' l='145' c='_ZNK6icu_6613TimeZoneNameseqERKS0_'/>
<use f='include/unicode/tznames.h' l='154' c='_ZNK6icu_6613TimeZoneNamesneERKS0_'/>
<use f='include/unicode/tznames.h' l='162' c='_ZNK6icu_6613TimeZoneNames5cloneEv'/>
<use f='include/unicode/tznames.h' l='172' c='_ZN6icu_6613TimeZoneNames14createInstanceERKNS_6LocaleER10UErrorCode'/>
<use f='include/unicode/tznames.h' l='184' c='_ZN6icu_6613TimeZoneNames18createTZDBInstanceERKNS_6LocaleER10UErrorCode'/>
<use f='include/unicode/tzfmt.h' l='327' c='_ZNK6icu_6614TimeZoneFormat16getTimeZoneNamesEv'/>
<use f='include/unicode/tzfmt.h' l='336' c='_ZN6icu_6614TimeZoneFormat18adoptTimeZoneNamesEPNS_13TimeZoneNamesE'/>
<use f='include/unicode/tzfmt.h' l='343' c='_ZN6icu_6614TimeZoneFormat16setTimeZoneNamesERKNS_13TimeZoneNamesE'/>
<use f='include/unicode/tzfmt.h' l='684'/>
<size>8</size>
<doc f='include/unicode/tznames.h' l='81'>/**
 * &lt;code&gt;TimeZoneNames&lt;/code&gt; is an abstract class representing the time zone display name data model defined
 * by &lt;a href=&quot;http://www.unicode.org/reports/tr35/&quot;&gt;UTS#35 Unicode Locale Data Markup Language (LDML)&lt;/a&gt;.
 * The model defines meta zone, which is used for storing a set of display names. A meta zone can be shared
 * by multiple time zones. Also a time zone may have multiple meta zone historic mappings.
 * &lt;p&gt;
 * For example, people in the United States refer the zone used by the east part of North America as &quot;Eastern Time&quot;.
 * The tz database contains multiple time zones &quot;America/New_York&quot;, &quot;America/Detroit&quot;, &quot;America/Montreal&quot; and some
 * others that belong to &quot;Eastern Time&quot;. However, assigning different display names to these time zones does not make
 * much sense for most of people.
 * &lt;p&gt;
 * In &lt;a href=&quot;http://cldr.unicode.org/&quot;&gt;CLDR&lt;/a&gt; (which uses LDML for representing locale data), the display name
 * &quot;Eastern Time&quot; is stored as long generic display name of a meta zone identified by the ID &quot;America_Eastern&quot;.
 * Then, there is another table maintaining the historic mapping to meta zones for each time zone. The time zones in
 * the above example (&quot;America/New_York&quot;, &quot;America/Detroit&quot;...) are mapped to the meta zone &quot;America_Eastern&quot;.
 * &lt;p&gt;
 * Sometimes, a time zone is mapped to a different time zone in the past. For example, &quot;America/Indiana/Knox&quot;
 * had been moving &quot;Eastern Time&quot; and &quot;Central Time&quot; back and forth. Therefore, it is necessary that time zone
 * to meta zones mapping data are stored by date range.
 *
 * &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;
 * The methods in this class assume that time zone IDs are already canonicalized. For example, you may not get proper
 * result returned by a method with time zone ID &quot;America/Indiana/Indianapolis&quot;, because it&apos;s not a canonical time zone
 * ID (the canonical time zone ID for the time zone is &quot;America/Indianapolis&quot;. See
 * {@link TimeZone#getCanonicalID(const UnicodeString&amp; id, UnicodeString&amp; canonicalID, UErrorCode&amp; status)} about ICU
 * canonical time zone IDs.
 *
 * &lt;p&gt;
 * In CLDR, most of time zone display names except location names are provided through meta zones. But a time zone may
 * have a specific name that is not shared with other time zones.
 *
 * For example, time zone &quot;Europe/London&quot; has English long name for standard time &quot;Greenwich Mean Time&quot;, which is also
 * shared with other time zones. However, the long name for daylight saving time is &quot;British Summer Time&quot;, which is only
 * used for &quot;Europe/London&quot;.
 *
 * &lt;p&gt;
 * {@link #getTimeZoneDisplayName} is designed for accessing a name only used by a single time zone.
 * But is not necessarily mean that a subclass implementation use the same model with CLDR. A subclass implementation
 * may provide time zone names only through {@link #getTimeZoneDisplayName}, or only through {@link #getMetaZoneDisplayName},
 * or both.
 *
 * &lt;p&gt;
 * The default &lt;code&gt;TimeZoneNames&lt;/code&gt; implementation returned by {@link #createInstance}
 * uses the locale data imported from CLDR. In CLDR, set of meta zone IDs and mappings between zone IDs and meta zone
 * IDs are shared by all locales. Therefore, the behavior of {@link #getAvailableMetaZoneIDs},
 * {@link #getMetaZoneID}, and {@link #getReferenceZoneID} won&apos;t be changed no matter
 * what locale is used for getting an instance of &lt;code&gt;TimeZoneNames&lt;/code&gt;.
 *
 * @stable ICU 50
 */</doc>
<fun r='_ZN6icu_6613TimeZoneNamesD1Ev'/>
<fun r='_ZNK6icu_6613TimeZoneNameseqERKS0_'/>
<fun r='_ZNK6icu_6613TimeZoneNamesneERKS0_'/>
<fun r='_ZNK6icu_6613TimeZoneNames5cloneEv'/>
<fun r='_ZN6icu_6613TimeZoneNames14createInstanceERKNS_6LocaleER10UErrorCode'/>
<fun r='_ZN6icu_6613TimeZoneNames18createTZDBInstanceERKNS_6LocaleER10UErrorCode'/>
<fun r='_ZNK6icu_6613TimeZoneNames23getAvailableMetaZoneIDsER10UErrorCode'/>
<fun r='_ZNK6icu_6613TimeZoneNames23getAvailableMetaZoneIDsERKNS_13UnicodeStringER10UErrorCode'/>
<fun r='_ZNK6icu_6613TimeZoneNames13getMetaZoneIDERKNS_13UnicodeStringEdRS1_'/>
<fun r='_ZNK6icu_6613TimeZoneNames18getReferenceZoneIDERKNS_13UnicodeStringEPKcRS1_'/>
<fun r='_ZNK6icu_6613TimeZoneNames22getMetaZoneDisplayNameERKNS_13UnicodeStringE17UTimeZoneNameTypeRS1_'/>
<fun r='_ZNK6icu_6613TimeZoneNames22getTimeZoneDisplayNameERKNS_13UnicodeStringE17UTimeZoneNameTypeRS1_'/>
<fun r='_ZNK6icu_6613TimeZoneNames23getExemplarLocationNameERKNS_13UnicodeStringERS1_'/>
<fun r='_ZNK6icu_6613TimeZoneNames14getDisplayNameERKNS_13UnicodeStringE17UTimeZoneNameTypedRS1_'/>
<fun r='_ZN6icu_6613TimeZoneNames19loadAllDisplayNamesER10UErrorCode'/>
<fun r='_ZNK6icu_6613TimeZoneNames15getDisplayNamesERKNS_13UnicodeStringEPK17UTimeZoneNameTypeidPS1_R10UErrorCode'/>
<fun r='_ZNK6icu_6613TimeZoneNames4findERKNS_13UnicodeStringEijR10UErrorCode'/>
