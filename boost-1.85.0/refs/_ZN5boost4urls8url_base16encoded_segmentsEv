<dec f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='1913' type='boost::urls::segments_encoded_ref boost::urls::url_base::encoded_segments()'/>
<use f='boost-1.85.0/libs/url/src/detail/pattern.cpp' l='260' u='c' c='_ZNK5boost4urls6detail7pattern5applyERNS0_8url_baseERKNS1_11format_argsE'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='1861'>/** Return the path as a container of segments

        This function returns a bidirectional
        view of segments over the path.
        The returned view references the same
        underlying character buffer; ownership
        is not transferred.
        Strings returned when iterating the
        range may contain percent escapes.
        The container is modifiable; changes
        to the container are reflected in the
        underlying URL.

        @par Example
        @code
        url u( &quot;http://example.com/path/to/file.txt&quot; );

        segments_encoded_ref sv = u.encoded_segments();
        @endcode

        @par Complexity
        Constant.

        @par Exception Safety
        Throws nothing.

        @par BNF
        @code
        path          = path-abempty    ; begins with &quot;/&quot; or is empty
                      / path-absolute   ; begins with &quot;/&quot; but not &quot;//&quot;
                      / path-noscheme   ; begins with a non-colon segment
                      / path-rootless   ; begins with a segment
                      / path-empty      ; zero characters

        path-abempty  = *( &quot;/&quot; segment )
        path-absolute = &quot;/&quot; [ segment-nz *( &quot;/&quot; segment ) ]
        path-noscheme = segment-nz-nc *( &quot;/&quot; segment )
        path-rootless = segment-nz *( &quot;/&quot; segment )
        path-empty    = 0&lt;pchar&gt;
        @endcode

        @par Specification
        @li &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc3986#section-3.3&quot;
            &gt;3.3.  Path (rfc3986)&lt;/a&gt;

        @see
            @ref encoded_segments,
            @ref set_encoded_path,
            @ref set_path,
            @ref set_path_absolute.
    */</doc>
<def f='boost-1.85.0/libs/url/src/url_base.cpp' l='1332' ll='1337' type='boost::urls::segments_encoded_ref boost::urls::url_base::encoded_segments()'/>
<use f='boost-1.85.0/libs/url/src/url_base.cpp' l='1635' u='c' c='_ZN5boost4urls8url_base7resolveERKNS0_13url_view_baseE'/>
