<def f='boost-1.85.0/libs/json/include/boost/json/stream_parser.hpp' l='690' ll='696' type='std::size_t boost::json::stream_parser::write_some(boost::json::string_view s)'/>
<doc f='boost-1.85.0/libs/json/include/boost/json/stream_parser.hpp' l='646'>/** Parse a buffer containing all or part of a complete JSON text.

        This function parses JSON text contained in the
        specified character buffer. If parsing completes,
        any additional characters past the end of the
        complete JSON text are ignored. The function returns the
        actual number of characters parsed, which may be
        less than the size of the input. This allows parsing
        of a buffer containing multiple individual JSON texts or
        containing different protocol data.

        @par Example
        @code
        stream_parser p;                                // construct a parser
        std::size_t n;                                  // number of characters used
        n = p.write_some( &quot;[1,2&quot; );                     // parse the first part of the JSON text
        assert( n == 4 );                               // all characters consumed
        n = p.write_some( &quot;3,4] null&quot; );                // parse the rest of the JSON text
        assert( n == 5 );                               // only some characters consumed
        value jv = p.release();                         // take ownership of the value
        @endcode

        @note

        To indicate there are no more character buffers,
        such as when @ref done returns `false` after
        writing, call @ref finish.

        @par Complexity
        Linear in `size`.

        @par Exception Safety
        Basic guarantee.
        Calls to `memory_resource::allocate` may throw.
        Upon error or exception, subsequent calls will
        fail until @ref reset is called to parse a new JSON text.

        @return The number of characters consumed from
        the buffer.

        @param s The character string to parse.

        @throw `boost::system::system_error` Thrown on error.
    */</doc>
