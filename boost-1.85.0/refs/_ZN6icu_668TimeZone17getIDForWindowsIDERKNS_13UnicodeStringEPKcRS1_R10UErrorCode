<dec f='include/unicode/timezone.h' l='436' type='static icu_66::UnicodeString &amp; icu_66::TimeZone::getIDForWindowsID(const icu_66::UnicodeString &amp; winid, const char * region, icu_66::UnicodeString &amp; id, UErrorCode &amp; status)'/>
<doc f='include/unicode/timezone.h' l='410'>/**
    * Converts a Windows time zone ID to an equivalent system time zone ID
    * for a region. For example, system time zone ID &quot;America/Los_Angeles&quot; is returned
    * for input Windows ID &quot;Pacific Standard Time&quot; and region &quot;US&quot; (or &lt;code&gt;null&lt;/code&gt;),
    * &quot;America/Vancouver&quot; is returned for the same Windows ID &quot;Pacific Standard Time&quot; and
    * region &quot;CA&quot;.
    *
    * &lt;p&gt;Not all Windows time zones can be mapped to system time zones. When the input
    * Windows time zone ID is unknown or unmappable to a system time zone, then the result
    * will be empty, but the operation itself remains successful (no error status set on return).
    *
    * &lt;p&gt;This implementation utilizes &lt;a href=&quot;http://unicode.org/cldr/charts/supplemental/zone_tzid.html&quot;&gt;
    * Zone-Tzid mapping data&lt;/a&gt;. The mapping data is updated time to time. To get the latest changes,
    * please read the ICU user guide section &lt;a href=&quot;http://userguide.icu-project.org/datetime/timezone#TOC-Updating-the-Time-Zone-Data&quot;&gt;
    * Updating the Time Zone Data&lt;/a&gt;.
    *
    * @param winid     A Windows time zone ID.
    * @param region    A null-terminated region code, or &lt;code&gt;NULL&lt;/code&gt; if no regional preference.
    * @param id        Receives a system time zone ID. When the input Windows time zone ID is unknown
    *                  or unmappable to a system time zone ID, then an empty string is set on return.
    * @param status    Receives the status.
    * @return          A reference to the result (&lt;code&gt;id&lt;/code&gt;).
    * @see getWindowsID
    *
    * @stable ICU 52
    */</doc>
