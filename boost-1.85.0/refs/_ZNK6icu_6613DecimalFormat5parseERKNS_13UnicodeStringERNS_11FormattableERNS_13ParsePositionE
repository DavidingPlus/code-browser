<dec f='include/unicode/decimfmt.h' l='1135' type='void icu_66::DecimalFormat::parse(const icu_66::UnicodeString &amp; text, icu_66::Formattable &amp; result, icu_66::ParsePosition &amp; parsePosition) const'/>
<doc f='include/unicode/decimfmt.h' l='1116'>/**
     * Parse the given string using this object&apos;s choices. The method
     * does string comparisons to try to find an optimal match.
     * If no object can be parsed, index is unchanged, and NULL is
     * returned.  The result is returned as the most parsimonious
     * type of Formattable that will accommodate all of the
     * necessary precision.  For example, if the result is exactly 12,
     * it will be returned as a long.  However, if it is 1.5, it will
     * be returned as a double.
     *
     * @param text           The text to be parsed.
     * @param result         Formattable to be set to the parse result.
     *                       If parse fails, return contents are undefined.
     * @param parsePosition  The position to start parsing at on input.
     *                       On output, moved to after the last successfully
     *                       parse character. On parse failure, does not change.
     * @see Formattable
     * @stable ICU 2.0
     */</doc>
