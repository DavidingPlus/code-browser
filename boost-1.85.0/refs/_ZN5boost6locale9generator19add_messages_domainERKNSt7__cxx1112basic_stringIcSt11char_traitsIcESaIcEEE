<dec f='boost-1.85.0/libs/locale/include/boost/locale/generator.hpp' l='137' type='void boost::locale::generator::add_messages_domain(const std::string &amp; domain)'/>
<doc f='boost-1.85.0/libs/locale/include/boost/locale/generator.hpp' l='120'>/// Add a new domain of messages that would be generated. It should be set in order to enable
        /// messages support.
        ///
        /// Messages domain has following format: &quot;name&quot; or &quot;name/encoding&quot;
        /// where name is the base name of the &quot;mo&quot; file where the catalog is stored
        /// without &quot;.mo&quot; extension. For example for file \c /usr/share/locale/he/LC_MESSAGES/blog.mo
        /// it would be \c blog.
        ///
        /// You can optionally specify the encoding of the keys in the sources by adding &quot;/encoding_name&quot;
        /// For example blog/cp1255.
        ///
        /// If not defined all keys are assumed to be UTF-8 encoded.
        ///
        /// \note When you select a domain for the program using dgettext or message API, you
        /// do not specify the encoding part. So for example if the provided
        /// domain name was &quot;blog/windows-1255&quot; then for translation
        /// you should use dgettext(&quot;blog&quot;,&quot;Hello&quot;)</doc>
<def f='boost-1.85.0/libs/locale/src/boost/locale/shared/generator.cpp' l='63' ll='67' type='void boost::locale::generator::add_messages_domain(const std::string &amp; domain)'/>
