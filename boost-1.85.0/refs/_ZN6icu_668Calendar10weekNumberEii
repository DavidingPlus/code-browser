<dec f='include/unicode/calendar.h' l='2135' type='int32_t icu_66::Calendar::weekNumber(int32_t dayOfPeriod, int32_t dayOfWeek)'/>
<def f='include/unicode/calendar.h' l='2539' ll='2542' type='int32_t icu_66::Calendar::weekNumber(int32_t dayOfPeriod, int32_t dayOfWeek)'/>
<doc f='include/unicode/calendar.h' l='2105'>/**
     * Return the week number of a day, within a period. This may be the week number in
     * a year, or the week number in a month. Usually this will be a value &gt;= 1, but if
     * some initial days of the period are excluded from week 1, because
     * {@link #getMinimalDaysInFirstWeek getMinimalDaysInFirstWeek} is &gt; 1,
     * then the week number will be zero for those
     * initial days. This method requires the day of week for the given date in order to
     * determine the result.
     * &lt;p&gt;
     * &lt;b&gt;Subclassing:&lt;/b&gt;
     * &lt;br&gt;
     * This method is intended for use by subclasses in implementing their
     * {@link #computeTime computeTime} and/or {@link #computeFields computeFields} methods.
     * It is often useful in {@link #getActualMinimum getActualMinimum} and
     * {@link #getActualMaximum getActualMaximum} as well.
     * &lt;p&gt;
     * @param dayOfPeriod   The {@link #UCalendarDateFields DAY_OF_YEAR} or
     *                      {@link #UCalendarDateFields DAY_OF_MONTH} whose week number is desired.
     *                      Should be 1 for the first day of the period.
     *
     * @param dayOfWeek     The {@link #UCalendarDateFields DAY_OF_WEEK} for the day
     *                      corresponding to the &lt;code&gt;dayOfPeriod&lt;/code&gt; parameter.
     *                      1-based with 1=Sunday.
     *
     * @return      The week number (one-based), or zero if the day falls before
     *              the first week because
     *              {@link #getMinimalDaysInFirstWeek getMinimalDaysInFirstWeek}
     *              is more than one.
     * @internal
     */</doc>
