<use f='include/unicode/unimatch.h' l='161' c='_ZNK6icu_6614UnicodeMatcher13addMatchSetToERNS_10UnicodeSetE'/>
<inh f='include/unicode/unifilt.h' l='65' c='icu_66::UnicodeFilter'/>
<def f='include/unicode/uniset.h' l='281' ll='1676'/>
<use f='include/unicode/uniset.h' l='464' c='_ZN6icu_6610UnicodeSetC1ERKS0_'/>
<use f='include/unicode/uniset.h' l='477' c='_ZN6icu_6610UnicodeSetaSERKS0_'/>
<use f='include/unicode/uniset.h' l='477' c='_ZN6icu_6610UnicodeSetaSERKS0_'/>
<use f='include/unicode/uniset.h' l='490' c='_ZNK6icu_6610UnicodeSeteqERKS0_'/>
<use f='include/unicode/uniset.h' l='497' c='_ZNK6icu_6610UnicodeSetneERKS0_'/>
<use f='include/unicode/uniset.h' l='508' c='_ZNK6icu_6610UnicodeSet5cloneEv'/>
<use f='include/unicode/uniset.h' l='527' c='_ZN6icu_6610UnicodeSet8fromUSetEP4USet'/>
<use f='include/unicode/uniset.h' l='537' c='_ZN6icu_6610UnicodeSet8fromUSetEPK4USet'/>
<use f='include/unicode/uniset.h' l='586' c='_ZN6icu_6610UnicodeSet6freezeEv'/>
<use f='include/unicode/uniset.h' l='596' c='_ZNK6icu_6610UnicodeSet13cloneAsThawedEv'/>
<use f='include/unicode/uniset.h' l='611' c='_ZN6icu_6610UnicodeSet3setEii'/>
<use f='include/unicode/uniset.h' l='633' c='_ZN6icu_6610UnicodeSet12applyPatternERKNS_13UnicodeStringER10UErrorCode'/>
<use f='include/unicode/uniset.h' l='653' c='_ZN6icu_6610UnicodeSet12applyPatternERKNS_13UnicodeStringEjPKNS_11SymbolTableER10UErrorCode'/>
<use f='include/unicode/uniset.h' l='690' c='_ZN6icu_6610UnicodeSet12applyPatternERKNS_13UnicodeStringERNS_13ParsePositionEjPKNS_11SymbolTableER10UErrorCode'/>
<use f='include/unicode/uniset.h' l='734' c='_ZN6icu_6610UnicodeSet21applyIntPropertyValueE9UPropertyiR10UErrorCode'/>
<use f='include/unicode/uniset.h' l='767' c='_ZN6icu_6610UnicodeSet18applyPropertyAliasERKNS_13UnicodeStringES3_R10UErrorCode'/>
<use f='include/unicode/uniset.h' l='824' c='_ZNK6icu_6610UnicodeSet11containsAllERKS0_'/>
<use f='include/unicode/uniset.h' l='852' c='_ZNK6icu_6610UnicodeSet12containsNoneERKS0_'/>
<use f='include/unicode/uniset.h' l='880' c='_ZNK6icu_6610UnicodeSet12containsSomeERKS0_'/>
<use f='include/unicode/uniset.h' l='1054' c='_ZNK6icu_6610UnicodeSet13addMatchSetToERS0_'/>
<use f='include/unicode/uniset.h' l='1091' c='_ZN6icu_6610UnicodeSet3addEii'/>
<use f='include/unicode/uniset.h' l='1100' c='_ZN6icu_6610UnicodeSet3addEi'/>
<use f='include/unicode/uniset.h' l='1113' c='_ZN6icu_6610UnicodeSet3addERKNS_13UnicodeStringE'/>
<use f='include/unicode/uniset.h' l='1134' c='_ZN6icu_6610UnicodeSet6addAllERKNS_13UnicodeStringE'/>
<use f='include/unicode/uniset.h' l='1144' c='_ZN6icu_6610UnicodeSet9retainAllERKNS_13UnicodeStringE'/>
<use f='include/unicode/uniset.h' l='1154' c='_ZN6icu_6610UnicodeSet13complementAllERKNS_13UnicodeStringE'/>
<use f='include/unicode/uniset.h' l='1164' c='_ZN6icu_6610UnicodeSet9removeAllERKNS_13UnicodeStringE'/>
<use f='include/unicode/uniset.h' l='1174' c='_ZN6icu_6610UnicodeSet10createFromERKNS_13UnicodeStringE'/>
<use f='include/unicode/uniset.h' l='1184' c='_ZN6icu_6610UnicodeSet13createFromAllERKNS_13UnicodeStringE'/>
<use f='include/unicode/uniset.h' l='1199' c='_ZN6icu_6610UnicodeSet6retainEii'/>
<use f='include/unicode/uniset.h' l='1207' c='_ZN6icu_6610UnicodeSet6retainEi'/>
<use f='include/unicode/uniset.h' l='1222' c='_ZN6icu_6610UnicodeSet6removeEii'/>
<use f='include/unicode/uniset.h' l='1231' c='_ZN6icu_6610UnicodeSet6removeEi'/>
<use f='include/unicode/uniset.h' l='1242' c='_ZN6icu_6610UnicodeSet6removeERKNS_13UnicodeStringE'/>
<use f='include/unicode/uniset.h' l='1251' c='_ZN6icu_6610UnicodeSet10complementEv'/>
<use f='include/unicode/uniset.h' l='1267' c='_ZN6icu_6610UnicodeSet10complementEii'/>
<use f='include/unicode/uniset.h' l='1276' c='_ZN6icu_6610UnicodeSet10complementEi'/>
<use f='include/unicode/uniset.h' l='1288' c='_ZN6icu_6610UnicodeSet10complementERKNS_13UnicodeStringE'/>
<use f='include/unicode/uniset.h' l='1302' c='_ZN6icu_6610UnicodeSet6addAllERKS0_'/>
<use f='include/unicode/uniset.h' l='1302' c='_ZN6icu_6610UnicodeSet6addAllERKS0_'/>
<use f='include/unicode/uniset.h' l='1315' c='_ZN6icu_6610UnicodeSet9retainAllERKS0_'/>
<use f='include/unicode/uniset.h' l='1315' c='_ZN6icu_6610UnicodeSet9retainAllERKS0_'/>
<use f='include/unicode/uniset.h' l='1328' c='_ZN6icu_6610UnicodeSet9removeAllERKS0_'/>
<use f='include/unicode/uniset.h' l='1328' c='_ZN6icu_6610UnicodeSet9removeAllERKS0_'/>
<use f='include/unicode/uniset.h' l='1340' c='_ZN6icu_6610UnicodeSet13complementAllERKS0_'/>
<use f='include/unicode/uniset.h' l='1340' c='_ZN6icu_6610UnicodeSet13complementAllERKS0_'/>
<use f='include/unicode/uniset.h' l='1348' c='_ZN6icu_6610UnicodeSet5clearEv'/>
<use f='include/unicode/uniset.h' l='1375' c='_ZN6icu_6610UnicodeSet9closeOverEi'/>
<use f='include/unicode/uniset.h' l='1383' c='_ZN6icu_6610UnicodeSet16removeAllStringsEv'/>
<use f='include/unicode/uniset.h' l='1468' c='_ZN6icu_6610UnicodeSet7compactEv'/>
<use f='include/unicode/uniset.h' l='1521' c='_ZN6icu_6610UnicodeSetC1ERKS0_a'/>
<use f='include/unicode/uniset.h' l='1522' c='_ZN6icu_6610UnicodeSet8copyFromERKS0_a'/>
<use f='include/unicode/uniset.h' l='1522' c='_ZN6icu_6610UnicodeSet8copyFromERKS0_a'/>
<use f='include/unicode/uniset.h' l='1537' c='_ZN6icu_6610UnicodeSet12applyPatternERNS_21RuleCharacterIteratorEPKNS_11SymbolTableERNS_13UnicodeStringEjMS0_FRS0_iEiR10UErrorCode'/>
<use f='include/unicode/uniset.h' l='1537' c='_ZN6icu_6610UnicodeSet12applyPatternERNS_21RuleCharacterIteratorEPKNS_11SymbolTableERNS_13UnicodeStringEjMS0_FRS0_iEiR10UErrorCode'/>
<use f='include/unicode/uniset.h' l='1628' c='_ZN6icu_6610UnicodeSet20applyPropertyPatternERKNS_13UnicodeStringERNS_13ParsePositionER10UErrorCode'/>
<use f='include/unicode/uniset.h' l='1636' c='_ZN6icu_6610UnicodeSet13getInclusionsEiR10UErrorCode'/>
<use f='include/unicode/uniset.h' l='1655' c='_ZN6icu_6610UnicodeSet11applyFilterEPFaiPvES1_PKS0_R10UErrorCode'/>
<use f='include/unicode/uniset.h' l='1680' c='_ZNK6icu_6610UnicodeSetneERKS0_'/>
<use f='include/unicode/uniset.h' l='1692' c='_ZNK6icu_6610UnicodeSet12containsSomeERKS0_'/>
<use f='include/unicode/uniset.h' l='1704' c='_ZN6icu_6610UnicodeSet8fromUSetEP4USet'/>
<use f='include/unicode/uniset.h' l='1705' c='_ZN6icu_6610UnicodeSet8fromUSetEP4USet'/>
<use f='include/unicode/uniset.h' l='1708' c='_ZN6icu_6610UnicodeSet8fromUSetEPK4USet'/>
<use f='include/unicode/uniset.h' l='1709' c='_ZN6icu_6610UnicodeSet8fromUSetEPK4USet'/>
<use f='include/unicode/coll.h' l='989' c='_ZNK6icu_668Collator14getTailoredSetER10UErrorCode'/>
<size>200</size>
<doc f='include/unicode/uniset.h' l='41'>/**
 * A mutable set of Unicode characters and multicharacter strings.  Objects of this class
 * represent &lt;em&gt;character classes&lt;/em&gt; used in regular expressions.
 * A character specifies a subset of Unicode code points.  Legal
 * code points are U+0000 to U+10FFFF, inclusive.
 *
 * &lt;p&gt;The UnicodeSet class is not designed to be subclassed.
 *
 * &lt;p&gt;&lt;code&gt;UnicodeSet&lt;/code&gt; supports two APIs. The first is the
 * &lt;em&gt;operand&lt;/em&gt; API that allows the caller to modify the value of
 * a &lt;code&gt;UnicodeSet&lt;/code&gt; object. It conforms to Java 2&apos;s
 * &lt;code&gt;java.util.Set&lt;/code&gt; interface, although
 * &lt;code&gt;UnicodeSet&lt;/code&gt; does not actually implement that
 * interface. All methods of &lt;code&gt;Set&lt;/code&gt; are supported, with the
 * modification that they take a character range or single character
 * instead of an &lt;code&gt;Object&lt;/code&gt;, and they take a
 * &lt;code&gt;UnicodeSet&lt;/code&gt; instead of a &lt;code&gt;Collection&lt;/code&gt;.  The
 * operand API may be thought of in terms of boolean logic: a boolean
 * OR is implemented by &lt;code&gt;add&lt;/code&gt;, a boolean AND is implemented
 * by &lt;code&gt;retain&lt;/code&gt;, a boolean XOR is implemented by
 * &lt;code&gt;complement&lt;/code&gt; taking an argument, and a boolean NOT is
 * implemented by &lt;code&gt;complement&lt;/code&gt; with no argument.  In terms
 * of traditional set theory function names, &lt;code&gt;add&lt;/code&gt; is a
 * union, &lt;code&gt;retain&lt;/code&gt; is an intersection, &lt;code&gt;remove&lt;/code&gt;
 * is an asymmetric difference, and &lt;code&gt;complement&lt;/code&gt; with no
 * argument is a set complement with respect to the superset range
 * &lt;code&gt;MIN_VALUE-MAX_VALUE&lt;/code&gt;
 *
 * &lt;p&gt;The second API is the
 * &lt;code&gt;applyPattern()&lt;/code&gt;/&lt;code&gt;toPattern()&lt;/code&gt; API from the
 * &lt;code&gt;java.text.Format&lt;/code&gt;-derived classes.  Unlike the
 * methods that add characters, add categories, and control the logic
 * of the set, the method &lt;code&gt;applyPattern()&lt;/code&gt; sets all
 * attributes of a &lt;code&gt;UnicodeSet&lt;/code&gt; at once, based on a
 * string pattern.
 *
 * &lt;p&gt;&lt;b&gt;Pattern syntax&lt;/b&gt;&lt;/p&gt;
 *
 * Patterns are accepted by the constructors and the
 * &lt;code&gt;applyPattern()&lt;/code&gt; methods and returned by the
 * &lt;code&gt;toPattern()&lt;/code&gt; method.  These patterns follow a syntax
 * similar to that employed by version 8 regular expression character
 * classes.  Here are some simple examples:
 *
 * \htmlonly&lt;blockquote&gt;\endhtmlonly
 *   &lt;table&gt;
 *     &lt;tr align=&quot;top&quot;&gt;
 *       &lt;td nowrap valign=&quot;top&quot; align=&quot;left&quot;&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt;
 *       &lt;td valign=&quot;top&quot;&gt;No characters&lt;/td&gt;
 *     &lt;/tr&gt;&lt;tr align=&quot;top&quot;&gt;
 *       &lt;td nowrap valign=&quot;top&quot; align=&quot;left&quot;&gt;&lt;code&gt;[a]&lt;/code&gt;&lt;/td&gt;
 *       &lt;td valign=&quot;top&quot;&gt;The character &apos;a&apos;&lt;/td&gt;
 *     &lt;/tr&gt;&lt;tr align=&quot;top&quot;&gt;
 *       &lt;td nowrap valign=&quot;top&quot; align=&quot;left&quot;&gt;&lt;code&gt;[ae]&lt;/code&gt;&lt;/td&gt;
 *       &lt;td valign=&quot;top&quot;&gt;The characters &apos;a&apos; and &apos;e&apos;&lt;/td&gt;
 *     &lt;/tr&gt;
 *     &lt;tr&gt;
 *       &lt;td nowrap valign=&quot;top&quot; align=&quot;left&quot;&gt;&lt;code&gt;[a-e]&lt;/code&gt;&lt;/td&gt;
 *       &lt;td valign=&quot;top&quot;&gt;The characters &apos;a&apos; through &apos;e&apos; inclusive, in Unicode code
 *       point order&lt;/td&gt;
 *     &lt;/tr&gt;
 *     &lt;tr&gt;
 *       &lt;td nowrap valign=&quot;top&quot; align=&quot;left&quot;&gt;&lt;code&gt;[\\u4E01]&lt;/code&gt;&lt;/td&gt;
 *       &lt;td valign=&quot;top&quot;&gt;The character U+4E01&lt;/td&gt;
 *     &lt;/tr&gt;
 *     &lt;tr&gt;
 *       &lt;td nowrap valign=&quot;top&quot; align=&quot;left&quot;&gt;&lt;code&gt;[a{ab}{ac}]&lt;/code&gt;&lt;/td&gt;
 *       &lt;td valign=&quot;top&quot;&gt;The character &apos;a&apos; and the multicharacter strings &amp;quot;ab&amp;quot; and
 *       &amp;quot;ac&amp;quot;&lt;/td&gt;
 *     &lt;/tr&gt;
 *     &lt;tr&gt;
 *       &lt;td nowrap valign=&quot;top&quot; align=&quot;left&quot;&gt;&lt;code&gt;[\\p{Lu}]&lt;/code&gt;&lt;/td&gt;
 *       &lt;td valign=&quot;top&quot;&gt;All characters in the general category Uppercase Letter&lt;/td&gt;
 *     &lt;/tr&gt;
 *   &lt;/table&gt;
 * \htmlonly&lt;/blockquote&gt;\endhtmlonly
 *
 * Any character may be preceded by a backslash in order to remove any special
 * meaning.  White space characters, as defined by UCharacter.isWhitespace(), are
 * ignored, unless they are escaped.
 *
 * &lt;p&gt;Property patterns specify a set of characters having a certain
 * property as defined by the Unicode standard.  Both the POSIX-like
 * &quot;[:Lu:]&quot; and the Perl-like syntax &quot;\\p{Lu}&quot; are recognized.  For a
 * complete list of supported property patterns, see the User&apos;s Guide
 * for UnicodeSet at
 * &lt;a href=&quot;http://icu-project.org/userguide/unicodeSet.html&quot;&gt;
 * http://icu-project.org/userguide/unicodeSet.html&lt;/a&gt;.
 * Actual determination of property data is defined by the underlying
 * Unicode database as implemented by UCharacter.
 *
 * &lt;p&gt;Patterns specify individual characters, ranges of characters, and
 * Unicode property sets.  When elements are concatenated, they
 * specify their union.  To complement a set, place a &apos;^&apos; immediately
 * after the opening &apos;[&apos;.  Property patterns are inverted by modifying
 * their delimiters; &quot;[:^foo]&quot; and &quot;\\P{foo}&quot;.  In any other location,
 * &apos;^&apos; has no special meaning.
 *
 * &lt;p&gt;Ranges are indicated by placing two a &apos;-&apos; between two
 * characters, as in &quot;a-z&quot;.  This specifies the range of all
 * characters from the left to the right, in Unicode order.  If the
 * left character is greater than or equal to the
 * right character it is a syntax error.  If a &apos;-&apos; occurs as the first
 * character after the opening &apos;[&apos; or &apos;[^&apos;, or if it occurs as the
 * last character before the closing &apos;]&apos;, then it is taken as a
 * literal.  Thus &quot;[a\-b]&quot;, &quot;[-ab]&quot;, and &quot;[ab-]&quot; all indicate the same
 * set of three characters, &apos;a&apos;, &apos;b&apos;, and &apos;-&apos;.
 *
 * &lt;p&gt;Sets may be intersected using the &apos;&amp;&apos; operator or the asymmetric
 * set difference may be taken using the &apos;-&apos; operator, for example,
 * &quot;[[:L:]&amp;[\\u0000-\\u0FFF]]&quot; indicates the set of all Unicode letters
 * with values less than 4096.  Operators (&apos;&amp;&apos; and &apos;|&apos;) have equal
 * precedence and bind left-to-right.  Thus
 * &quot;[[:L:]-[a-z]-[\\u0100-\\u01FF]]&quot; is equivalent to
 * &quot;[[[:L:]-[a-z]]-[\\u0100-\\u01FF]]&quot;.  This only really matters for
 * difference; intersection is commutative.
 *
 * &lt;table&gt;
 * &lt;tr valign=top&gt;&lt;td nowrap&gt;&lt;code&gt;[a]&lt;/code&gt;&lt;td&gt;The set containing &apos;a&apos;
 * &lt;tr valign=top&gt;&lt;td nowrap&gt;&lt;code&gt;[a-z]&lt;/code&gt;&lt;td&gt;The set containing &apos;a&apos;
 * through &apos;z&apos; and all letters in between, in Unicode order
 * &lt;tr valign=top&gt;&lt;td nowrap&gt;&lt;code&gt;[^a-z]&lt;/code&gt;&lt;td&gt;The set containing
 * all characters but &apos;a&apos; through &apos;z&apos;,
 * that is, U+0000 through &apos;a&apos;-1 and &apos;z&apos;+1 through U+10FFFF
 * &lt;tr valign=top&gt;&lt;td nowrap&gt;&lt;code&gt;[[&lt;em&gt;pat1&lt;/em&gt;][&lt;em&gt;pat2&lt;/em&gt;]]&lt;/code&gt;
 * &lt;td&gt;The union of sets specified by &lt;em&gt;pat1&lt;/em&gt; and &lt;em&gt;pat2&lt;/em&gt;
 * &lt;tr valign=top&gt;&lt;td nowrap&gt;&lt;code&gt;[[&lt;em&gt;pat1&lt;/em&gt;]&amp;[&lt;em&gt;pat2&lt;/em&gt;]]&lt;/code&gt;
 * &lt;td&gt;The intersection of sets specified by &lt;em&gt;pat1&lt;/em&gt; and &lt;em&gt;pat2&lt;/em&gt;
 * &lt;tr valign=top&gt;&lt;td nowrap&gt;&lt;code&gt;[[&lt;em&gt;pat1&lt;/em&gt;]-[&lt;em&gt;pat2&lt;/em&gt;]]&lt;/code&gt;
 * &lt;td&gt;The asymmetric difference of sets specified by &lt;em&gt;pat1&lt;/em&gt; and
 * &lt;em&gt;pat2&lt;/em&gt;
 * &lt;tr valign=top&gt;&lt;td nowrap&gt;&lt;code&gt;[:Lu:] or \\p{Lu}&lt;/code&gt;
 * &lt;td&gt;The set of characters having the specified
 * Unicode property; in
 * this case, Unicode uppercase letters
 * &lt;tr valign=top&gt;&lt;td nowrap&gt;&lt;code&gt;[:^Lu:] or \\P{Lu}&lt;/code&gt;
 * &lt;td&gt;The set of characters &lt;em&gt;not&lt;/em&gt; having the given
 * Unicode property
 * &lt;/table&gt;
 *
 * &lt;p&gt;&lt;b&gt;Warning&lt;/b&gt;: you cannot add an empty string (&quot;&quot;) to a UnicodeSet.&lt;/p&gt;
 *
 * &lt;p&gt;&lt;b&gt;Formal syntax&lt;/b&gt;&lt;/p&gt;
 *
 * \htmlonly&lt;blockquote&gt;\endhtmlonly
 *   &lt;table&gt;
 *     &lt;tr align=&quot;top&quot;&gt;
 *       &lt;td nowrap valign=&quot;top&quot; align=&quot;right&quot;&gt;&lt;code&gt;pattern :=&amp;nbsp; &lt;/code&gt;&lt;/td&gt;
 *       &lt;td valign=&quot;top&quot;&gt;&lt;code&gt;(&apos;[&apos; &apos;^&apos;? item* &apos;]&apos;) |
 *       property&lt;/code&gt;&lt;/td&gt;
 *     &lt;/tr&gt;
 *     &lt;tr align=&quot;top&quot;&gt;
 *       &lt;td nowrap valign=&quot;top&quot; align=&quot;right&quot;&gt;&lt;code&gt;item :=&amp;nbsp; &lt;/code&gt;&lt;/td&gt;
 *       &lt;td valign=&quot;top&quot;&gt;&lt;code&gt;char | (char &apos;-&apos; char) | pattern-expr&lt;br&gt;
 *       &lt;/code&gt;&lt;/td&gt;
 *     &lt;/tr&gt;
 *     &lt;tr align=&quot;top&quot;&gt;
 *       &lt;td nowrap valign=&quot;top&quot; align=&quot;right&quot;&gt;&lt;code&gt;pattern-expr :=&amp;nbsp; &lt;/code&gt;&lt;/td&gt;
 *       &lt;td valign=&quot;top&quot;&gt;&lt;code&gt;pattern | pattern-expr pattern |
 *       pattern-expr op pattern&lt;br&gt;
 *       &lt;/code&gt;&lt;/td&gt;
 *     &lt;/tr&gt;
 *     &lt;tr align=&quot;top&quot;&gt;
 *       &lt;td nowrap valign=&quot;top&quot; align=&quot;right&quot;&gt;&lt;code&gt;op :=&amp;nbsp; &lt;/code&gt;&lt;/td&gt;
 *       &lt;td valign=&quot;top&quot;&gt;&lt;code&gt;&apos;&amp;amp;&apos; | &apos;-&apos;&lt;br&gt;
 *       &lt;/code&gt;&lt;/td&gt;
 *     &lt;/tr&gt;
 *     &lt;tr align=&quot;top&quot;&gt;
 *       &lt;td nowrap valign=&quot;top&quot; align=&quot;right&quot;&gt;&lt;code&gt;special :=&amp;nbsp; &lt;/code&gt;&lt;/td&gt;
 *       &lt;td valign=&quot;top&quot;&gt;&lt;code&gt;&apos;[&apos; | &apos;]&apos; | &apos;-&apos;&lt;br&gt;
 *       &lt;/code&gt;&lt;/td&gt;
 *     &lt;/tr&gt;
 *     &lt;tr align=&quot;top&quot;&gt;
 *       &lt;td nowrap valign=&quot;top&quot; align=&quot;right&quot;&gt;&lt;code&gt;char :=&amp;nbsp; &lt;/code&gt;&lt;/td&gt;
 *       &lt;td valign=&quot;top&quot;&gt;&lt;em&gt;any character that is not&lt;/em&gt;&lt;code&gt; special&lt;br&gt;
 *       | (&apos;\&apos; &lt;/code&gt;&lt;em&gt;any character&lt;/em&gt;&lt;code&gt;)&lt;br&gt;
 *       | (&apos;\\u&apos; hex hex hex hex)&lt;br&gt;
 *       &lt;/code&gt;&lt;/td&gt;
 *     &lt;/tr&gt;
 *     &lt;tr align=&quot;top&quot;&gt;
 *       &lt;td nowrap valign=&quot;top&quot; align=&quot;right&quot;&gt;&lt;code&gt;hex :=&amp;nbsp; &lt;/code&gt;&lt;/td&gt;
 *       &lt;td valign=&quot;top&quot;&gt;&lt;em&gt;any character for which
 *       &lt;/em&gt;&lt;code&gt;Character.digit(c, 16)&lt;/code&gt;&lt;em&gt;
 *       returns a non-negative result&lt;/em&gt;&lt;/td&gt;
 *     &lt;/tr&gt;
 *     &lt;tr&gt;
 *       &lt;td nowrap valign=&quot;top&quot; align=&quot;right&quot;&gt;&lt;code&gt;property :=&amp;nbsp; &lt;/code&gt;&lt;/td&gt;
 *       &lt;td valign=&quot;top&quot;&gt;&lt;em&gt;a Unicode property set pattern&lt;/em&gt;&lt;/td&gt;
 *     &lt;/tr&gt;
 *   &lt;/table&gt;
 *   &lt;br&gt;
 *   &lt;table border=&quot;1&quot;&gt;
 *     &lt;tr&gt;
 *       &lt;td&gt;Legend: &lt;table&gt;
 *         &lt;tr&gt;
 *           &lt;td nowrap valign=&quot;top&quot;&gt;&lt;code&gt;a := b&lt;/code&gt;&lt;/td&gt;
 *           &lt;td width=&quot;20&quot; valign=&quot;top&quot;&gt;&amp;nbsp; &lt;/td&gt;
 *           &lt;td valign=&quot;top&quot;&gt;&lt;code&gt;a&lt;/code&gt; may be replaced by &lt;code&gt;b&lt;/code&gt; &lt;/td&gt;
 *         &lt;/tr&gt;
 *         &lt;tr&gt;
 *           &lt;td nowrap valign=&quot;top&quot;&gt;&lt;code&gt;a?&lt;/code&gt;&lt;/td&gt;
 *           &lt;td valign=&quot;top&quot;&gt;&lt;/td&gt;
 *           &lt;td valign=&quot;top&quot;&gt;zero or one instance of &lt;code&gt;a&lt;/code&gt;&lt;br&gt;
 *           &lt;/td&gt;
 *         &lt;/tr&gt;
 *         &lt;tr&gt;
 *           &lt;td nowrap valign=&quot;top&quot;&gt;&lt;code&gt;a*&lt;/code&gt;&lt;/td&gt;
 *           &lt;td valign=&quot;top&quot;&gt;&lt;/td&gt;
 *           &lt;td valign=&quot;top&quot;&gt;one or more instances of &lt;code&gt;a&lt;/code&gt;&lt;br&gt;
 *           &lt;/td&gt;
 *         &lt;/tr&gt;
 *         &lt;tr&gt;
 *           &lt;td nowrap valign=&quot;top&quot;&gt;&lt;code&gt;a | b&lt;/code&gt;&lt;/td&gt;
 *           &lt;td valign=&quot;top&quot;&gt;&lt;/td&gt;
 *           &lt;td valign=&quot;top&quot;&gt;either &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt;&lt;br&gt;
 *           &lt;/td&gt;
 *         &lt;/tr&gt;
 *         &lt;tr&gt;
 *           &lt;td nowrap valign=&quot;top&quot;&gt;&lt;code&gt;&apos;a&apos;&lt;/code&gt;&lt;/td&gt;
 *           &lt;td valign=&quot;top&quot;&gt;&lt;/td&gt;
 *           &lt;td valign=&quot;top&quot;&gt;the literal string between the quotes &lt;/td&gt;
 *         &lt;/tr&gt;
 *       &lt;/table&gt;
 *       &lt;/td&gt;
 *     &lt;/tr&gt;
 *   &lt;/table&gt;
 * \htmlonly&lt;/blockquote&gt;\endhtmlonly
 * 
 * &lt;p&gt;Note:
 *  - Most UnicodeSet methods do not take a UErrorCode parameter because
 *   there are usually very few opportunities for failure other than a shortage
 *   of memory, error codes in low-level C++ string methods would be inconvenient,
 *   and the error code as the last parameter (ICU convention) would prevent
 *   the use of default parameter values.
 *   Instead, such methods set the UnicodeSet into a &quot;bogus&quot; state
 *   (see isBogus()) if an error occurs.
 *
 * @author Alan Liu
 * @stable ICU 2.0
 */</doc>
<smbr r='icu_66::UnicodeSet::INITIAL_CAPACITY' t='const int32_t'/>
<smbr r='icu_66::UnicodeSet::kIsBogus' t='const uint8_t'/>
<mbr r='icu_66::UnicodeSet::list' o='128' t='UChar32 *'/>
<mbr r='icu_66::UnicodeSet::capacity' o='192' t='int32_t'/>
<mbr r='icu_66::UnicodeSet::len' o='224' t='int32_t'/>
<mbr r='icu_66::UnicodeSet::fFlags' o='256' t='uint8_t'/>
<mbr r='icu_66::UnicodeSet::bmpSet' o='320' t='icu_66::BMPSet *'/>
<mbr r='icu_66::UnicodeSet::buffer' o='384' t='UChar32 *'/>
<mbr r='icu_66::UnicodeSet::bufferCapacity' o='448' t='int32_t'/>
<mbr r='icu_66::UnicodeSet::pat' o='512' t='char16_t *'/>
<mbr r='icu_66::UnicodeSet::patLen' o='576' t='int32_t'/>
<mbr r='icu_66::UnicodeSet::strings' o='640' t='icu_66::UVector *'/>
<mbr r='icu_66::UnicodeSet::stringSpan' o='704' t='icu_66::UnicodeSetStringSpan *'/>
<mbr r='icu_66::UnicodeSet::stackList' o='768' t='UChar32[25]'/>
<fun r='_ZNK6icu_6610UnicodeSet7isBogusEv'/>
<fun r='_ZN6icu_6610UnicodeSet10setToBogusEv'/>
<fun r='_ZN6icu_6610UnicodeSetC1Ev'/>
<fun r='_ZN6icu_6610UnicodeSetC1Eii'/>
<fun r='_ZN6icu_6610UnicodeSetC1EPKtiNS0_14ESerializationER10UErrorCode'/>
<fun r='_ZN6icu_6610UnicodeSetC1ERKNS_13UnicodeStringER10UErrorCode'/>
<fun r='_ZN6icu_6610UnicodeSetC1ERKNS_13UnicodeStringEjPKNS_11SymbolTableER10UErrorCode'/>
<fun r='_ZN6icu_6610UnicodeSetC1ERKNS_13UnicodeStringERNS_13ParsePositionEjPKNS_11SymbolTableER10UErrorCode'/>
<fun r='_ZN6icu_6610UnicodeSetC1ERKS0_'/>
<fun r='_ZN6icu_6610UnicodeSetD1Ev'/>
<fun r='_ZN6icu_6610UnicodeSetaSERKS0_'/>
<fun r='_ZNK6icu_6610UnicodeSeteqERKS0_'/>
<fun r='_ZNK6icu_6610UnicodeSetneERKS0_'/>
<fun r='_ZNK6icu_6610UnicodeSet5cloneEv'/>
<fun r='_ZNK6icu_6610UnicodeSet8hashCodeEv'/>
<fun r='_ZN6icu_6610UnicodeSet8fromUSetEP4USet'/>
<fun r='_ZN6icu_6610UnicodeSet8fromUSetEPK4USet'/>
<fun r='_ZN6icu_6610UnicodeSet6toUSetEv'/>
<fun r='_ZNK6icu_6610UnicodeSet6toUSetEv'/>
<fun r='_ZNK6icu_6610UnicodeSet8isFrozenEv'/>
<fun r='_ZN6icu_6610UnicodeSet6freezeEv'/>
<fun r='_ZNK6icu_6610UnicodeSet13cloneAsThawedEv'/>
<fun r='_ZN6icu_6610UnicodeSet3setEii'/>
<fun r='_ZN6icu_6610UnicodeSet16resemblesPatternERKNS_13UnicodeStringEi'/>
<fun r='_ZN6icu_6610UnicodeSet12applyPatternERKNS_13UnicodeStringER10UErrorCode'/>
<fun r='_ZN6icu_6610UnicodeSet12applyPatternERKNS_13UnicodeStringEjPKNS_11SymbolTableER10UErrorCode'/>
<fun r='_ZN6icu_6610UnicodeSet12applyPatternERKNS_13UnicodeStringERNS_13ParsePositionEjPKNS_11SymbolTableER10UErrorCode'/>
<fun r='_ZNK6icu_6610UnicodeSet9toPatternERNS_13UnicodeStringEa'/>
<fun r='_ZN6icu_6610UnicodeSet21applyIntPropertyValueE9UPropertyiR10UErrorCode'/>
<fun r='_ZN6icu_6610UnicodeSet18applyPropertyAliasERKNS_13UnicodeStringES3_R10UErrorCode'/>
<fun r='_ZNK6icu_6610UnicodeSet4sizeEv'/>
<fun r='_ZNK6icu_6610UnicodeSet7isEmptyEv'/>
<fun r='_ZNK6icu_6610UnicodeSet8containsEi'/>
<fun r='_ZNK6icu_6610UnicodeSet8containsEii'/>
<fun r='_ZNK6icu_6610UnicodeSet8containsERKNS_13UnicodeStringE'/>
<fun r='_ZNK6icu_6610UnicodeSet11containsAllERKS0_'/>
<fun r='_ZNK6icu_6610UnicodeSet11containsAllERKNS_13UnicodeStringE'/>
<fun r='_ZNK6icu_6610UnicodeSet12containsNoneEii'/>
<fun r='_ZNK6icu_6610UnicodeSet12containsNoneERKS0_'/>
<fun r='_ZNK6icu_6610UnicodeSet12containsNoneERKNS_13UnicodeStringE'/>
<fun r='_ZNK6icu_6610UnicodeSet12containsSomeEii'/>
<fun r='_ZNK6icu_6610UnicodeSet12containsSomeERKS0_'/>
<fun r='_ZNK6icu_6610UnicodeSet12containsSomeERKNS_13UnicodeStringE'/>
<fun r='_ZNK6icu_6610UnicodeSet4spanEPKDsi17USetSpanCondition'/>
<fun r='_ZNK6icu_6610UnicodeSet4spanERKNS_13UnicodeStringEi17USetSpanCondition'/>
<fun r='_ZNK6icu_6610UnicodeSet8spanBackEPKDsi17USetSpanCondition'/>
<fun r='_ZNK6icu_6610UnicodeSet8spanBackERKNS_13UnicodeStringEi17USetSpanCondition'/>
<fun r='_ZNK6icu_6610UnicodeSet8spanUTF8EPKci17USetSpanCondition'/>
<fun r='_ZNK6icu_6610UnicodeSet12spanBackUTF8EPKci17USetSpanCondition'/>
<fun r='_ZN6icu_6610UnicodeSet7matchesERKNS_11ReplaceableERiia'/>
<fun r='_ZN6icu_6610UnicodeSet9matchRestERKNS_11ReplaceableEiiRKNS_13UnicodeStringE'/>
<fun r='_ZNK6icu_6610UnicodeSet13findCodePointEi'/>
<fun r='_ZNK6icu_6610UnicodeSet13addMatchSetToERS0_'/>
<fun r='_ZNK6icu_6610UnicodeSet7indexOfEi'/>
<fun r='_ZNK6icu_6610UnicodeSet6charAtEi'/>
<fun r='_ZN6icu_6610UnicodeSet3addEii'/>
<fun r='_ZN6icu_6610UnicodeSet3addEi'/>
<fun r='_ZN6icu_6610UnicodeSet3addERKNS_13UnicodeStringE'/>
<fun r='_ZN6icu_6610UnicodeSet11getSingleCPERKNS_13UnicodeStringE'/>
<fun r='_ZN6icu_6610UnicodeSet4_addERKNS_13UnicodeStringE'/>
<fun r='_ZN6icu_6610UnicodeSet6addAllERKNS_13UnicodeStringE'/>
<fun r='_ZN6icu_6610UnicodeSet9retainAllERKNS_13UnicodeStringE'/>
<fun r='_ZN6icu_6610UnicodeSet13complementAllERKNS_13UnicodeStringE'/>
<fun r='_ZN6icu_6610UnicodeSet9removeAllERKNS_13UnicodeStringE'/>
<fun r='_ZN6icu_6610UnicodeSet10createFromERKNS_13UnicodeStringE'/>
<fun r='_ZN6icu_6610UnicodeSet13createFromAllERKNS_13UnicodeStringE'/>
<fun r='_ZN6icu_6610UnicodeSet6retainEii'/>
<fun r='_ZN6icu_6610UnicodeSet6retainEi'/>
<fun r='_ZN6icu_6610UnicodeSet6removeEii'/>
<fun r='_ZN6icu_6610UnicodeSet6removeEi'/>
<fun r='_ZN6icu_6610UnicodeSet6removeERKNS_13UnicodeStringE'/>
<fun r='_ZN6icu_6610UnicodeSet10complementEv'/>
<fun r='_ZN6icu_6610UnicodeSet10complementEii'/>
<fun r='_ZN6icu_6610UnicodeSet10complementEi'/>
<fun r='_ZN6icu_6610UnicodeSet10complementERKNS_13UnicodeStringE'/>
<fun r='_ZN6icu_6610UnicodeSet6addAllERKS0_'/>
<fun r='_ZN6icu_6610UnicodeSet9retainAllERKS0_'/>
<fun r='_ZN6icu_6610UnicodeSet9removeAllERKS0_'/>
<fun r='_ZN6icu_6610UnicodeSet13complementAllERKS0_'/>
<fun r='_ZN6icu_6610UnicodeSet5clearEv'/>
<fun r='_ZN6icu_6610UnicodeSet9closeOverEi'/>
<fun r='_ZN6icu_6610UnicodeSet16removeAllStringsEv'/>
<fun r='_ZNK6icu_6610UnicodeSet13getRangeCountEv'/>
<fun r='_ZNK6icu_6610UnicodeSet13getRangeStartEi'/>
<fun r='_ZNK6icu_6610UnicodeSet11getRangeEndEi'/>
<fun r='_ZNK6icu_6610UnicodeSet9serializeEPtiR10UErrorCode'/>
<fun r='_ZN6icu_6610UnicodeSet7compactEv'/>
<fun r='_ZN6icu_6610UnicodeSet16getStaticClassIDEv'/>
<fun r='_ZNK6icu_6610UnicodeSet17getDynamicClassIDEv'/>
<fun r='_ZNK6icu_6610UnicodeSet9getStringEi'/>
<fun r='_ZNK6icu_6610UnicodeSet17matchesIndexValueEh'/>
<fun r='_ZN6icu_6610UnicodeSetC1ERKS0_a'/>
<fun r='_ZN6icu_6610UnicodeSet8copyFromERKS0_a'/>
<fun r='_ZN6icu_6610UnicodeSet23applyPatternIgnoreSpaceERKNS_13UnicodeStringERNS_13ParsePositionEPKNS_11SymbolTableER10UErrorCode'/>
<fun r='_ZN6icu_6610UnicodeSet12applyPatternERNS_21RuleCharacterIteratorEPKNS_11SymbolTableERNS_13UnicodeStringEjMS0_FRS0_iEiR10UErrorCode'/>
<fun r='_ZN6icu_6610UnicodeSet12nextCapacityEi'/>
<fun r='_ZN6icu_6610UnicodeSet14ensureCapacityEi'/>
<fun r='_ZN6icu_6610UnicodeSet20ensureBufferCapacityEi'/>
<fun r='_ZN6icu_6610UnicodeSet11swapBuffersEv'/>
<fun r='_ZN6icu_6610UnicodeSet15allocateStringsER10UErrorCode'/>
<fun r='_ZNK6icu_6610UnicodeSet10hasStringsEv'/>
<fun r='_ZNK6icu_6610UnicodeSet11stringsSizeEv'/>
<fun r='_ZNK6icu_6610UnicodeSet15stringsContainsERKNS_13UnicodeStringE'/>
<fun r='_ZNK6icu_6610UnicodeSet10_toPatternERNS_13UnicodeStringEa'/>
<fun r='_ZNK6icu_6610UnicodeSet16_generatePatternERNS_13UnicodeStringEa'/>
<fun r='_ZN6icu_6610UnicodeSet12_appendToPatERNS_13UnicodeStringERKS1_a'/>
<fun r='_ZN6icu_6610UnicodeSet12_appendToPatERNS_13UnicodeStringEia'/>
<fun r='_ZN6icu_6610UnicodeSet11exclusiveOrEPKiia'/>
<fun r='_ZN6icu_6610UnicodeSet3addEPKiia'/>
<fun r='_ZN6icu_6610UnicodeSet6retainEPKiia'/>
<fun r='_ZN6icu_6610UnicodeSet24resemblesPropertyPatternERKNS_13UnicodeStringEi'/>
<fun r='_ZN6icu_6610UnicodeSet24resemblesPropertyPatternERNS_21RuleCharacterIteratorEi'/>
<fun r='_ZN6icu_6610UnicodeSet20applyPropertyPatternERKNS_13UnicodeStringERNS_13ParsePositionER10UErrorCode'/>
<fun r='_ZN6icu_6610UnicodeSet20applyPropertyPatternERNS_21RuleCharacterIteratorERNS_13UnicodeStringER10UErrorCode'/>
<fun r='_ZN6icu_6610UnicodeSet13getInclusionsEiR10UErrorCode'/>
<fun r='_ZN6icu_6610UnicodeSet11applyFilterEPFaiPvES1_PKS0_R10UErrorCode'/>
<fun r='_ZN6icu_6610UnicodeSet21applyIntPropertyValueEPK6UCPMapPFjPKvjES5_R10UErrorCode'/>
<fun r='_ZN6icu_6610UnicodeSet10setPatternERKNS_13UnicodeStringE'/>
<fun r='_ZN6icu_6610UnicodeSet10setPatternEPKDsi'/>
<fun r='_ZN6icu_6610UnicodeSet14releasePatternEv'/>
<fun r='_ZNK6icu_6610UnicodeSetneERKS0_'/>
<fun r='_ZNK6icu_6610UnicodeSet8isFrozenEv'/>
<fun r='_ZNK6icu_6610UnicodeSet12containsSomeEii'/>
<fun r='_ZNK6icu_6610UnicodeSet12containsSomeERKS0_'/>
<fun r='_ZNK6icu_6610UnicodeSet12containsSomeERKNS_13UnicodeStringE'/>
<fun r='_ZNK6icu_6610UnicodeSet7isBogusEv'/>
<fun r='_ZN6icu_6610UnicodeSet8fromUSetEP4USet'/>
<fun r='_ZN6icu_6610UnicodeSet8fromUSetEPK4USet'/>
<fun r='_ZN6icu_6610UnicodeSet6toUSetEv'/>
<fun r='_ZNK6icu_6610UnicodeSet6toUSetEv'/>
<fun r='_ZNK6icu_6610UnicodeSet4spanERKNS_13UnicodeStringEi17USetSpanCondition'/>
<fun r='_ZNK6icu_6610UnicodeSet8spanBackERKNS_13UnicodeStringEi17USetSpanCondition'/>
<use f='include/unicode/normalizer2.h' l='515' c='_ZN6icu_6619FilteredNormalizer2C1ERKNS_11Normalizer2ERKNS_10UnicodeSetE'/>
<use f='include/unicode/normalizer2.h' l='770'/>
<size>200</size>
