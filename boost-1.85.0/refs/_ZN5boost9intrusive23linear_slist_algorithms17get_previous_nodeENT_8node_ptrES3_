<def f='boost-1.85.0/libs/intrusive/include/boost/intrusive/linear_slist_algorithms.hpp' l='201' ll='203' type='static boost::intrusive::linear_slist_algorithms::node_ptr boost::intrusive::linear_slist_algorithms::get_previous_node(boost::intrusive::linear_slist_algorithms::node_ptr prev_init_node, boost::intrusive::linear_slist_algorithms::node_ptr this_node)'/>
<use f='boost-1.85.0/libs/intrusive/include/boost/intrusive/linear_slist_algorithms.hpp' l='385' u='c' c='_ZN5boost9intrusive23linear_slist_algorithms14transfer_afterENT_8node_ptrES3_'/>
<doc f='boost-1.85.0/libs/intrusive/include/boost/intrusive/linear_slist_algorithms.hpp' l='192'>//! &lt;b&gt;Requires&lt;/b&gt;: this_node and prev_init_node must be in the same linear list.
   //!
   //! &lt;b&gt;Effects&lt;/b&gt;: Returns the previous node of this_node in the linear list starting.
   //!   the search from prev_init_node. The first node checked for equality
   //!   is NodeTraits::get_next(prev_init_node).
   //!
   //! &lt;b&gt;Complexity&lt;/b&gt;: Linear to the number of elements between prev_init_node and this_node.
   //!
   //! &lt;b&gt;Throws&lt;/b&gt;: Nothing.</doc>
