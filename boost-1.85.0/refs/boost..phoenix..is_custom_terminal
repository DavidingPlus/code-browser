<use f='boost-1.85.0/libs/phoenix/include/boost/phoenix/core/actor.hpp' l='144'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/phoenix/include/boost/phoenix/core/terminal.hpp' l='46' ll='47'/>
<use f='boost-1.85.0/libs/phoenix/include/boost/phoenix/core/terminal.hpp' l='89'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/log/include/boost/log/detail/custom_terminal_spec.hpp' l='36' ll='40'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/phoenix/include/boost/phoenix/core/value.hpp' l='67' ll='70'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/spirit/include/boost/spirit/home/support/terminal.hpp' l='582' ll='585'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/spirit/include/boost/spirit/home/support/argument.hpp' l='67' macro='1'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/spirit/include/boost/spirit/home/support/argument.hpp' l='81' macro='1'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/spirit/include/boost/spirit/home/support/context.hpp' l='67' macro='1'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/spirit/include/boost/spirit/home/support/context.hpp' l='81' macro='1'/>
<doc f='boost-1.85.0/libs/phoenix/include/boost/phoenix/core/value.hpp' l='55'>// Identifies this Expr as a value.
    // I think this is wrong. It is identifying all actors as values.
    // Yes, it is giving false positives and needs a rethink.
    // And this gives no positives.
    //template &lt;typename T&gt;
    //struct is_value&lt;expression::value&lt;T&gt; &gt;
    //    : mpl::true_
    //{};

    // Call out actor for special handling
  // Is this correct? It applies to any actor.
  // In which case why is it here?</doc>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/phoenix/include/boost/phoenix/core/reference.hpp' l='83' ll='86'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/phoenix/include/boost/phoenix/core/nothing.hpp' l='39' ll='42'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/phoenix/include/boost/phoenix/scope/local_variable.hpp' l='82' ll='85'/>
<doc f='boost-1.85.0/libs/phoenix/include/boost/phoenix/core/reference.hpp' l='82'>// Call out boost::reference_wrapper for special handling</doc>
