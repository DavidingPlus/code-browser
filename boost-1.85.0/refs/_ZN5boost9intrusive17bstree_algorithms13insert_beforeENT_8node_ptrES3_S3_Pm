<def f='boost-1.85.0/libs/intrusive/include/boost/intrusive/bstree_algorithms.hpp' l='1199' ll='1210' type='static boost::intrusive::bstree_algorithms::node_ptr boost::intrusive::bstree_algorithms::insert_before(boost::intrusive::bstree_algorithms::node_ptr header, boost::intrusive::bstree_algorithms::node_ptr pos, boost::intrusive::bstree_algorithms::node_ptr new_node, std::size_t * pdepth = 0)'/>
<doc f='boost-1.85.0/libs/intrusive/include/boost/intrusive/bstree_algorithms.hpp' l='1185'>//! &lt;b&gt;Requires&lt;/b&gt;: &quot;header&quot; must be the header node of a tree.
   //!   &quot;pos&quot; must be a valid iterator or header (end) node.
   //!   &quot;pos&quot; must be an iterator pointing to the successor to &quot;new_node&quot;
   //!   once inserted according to the order of already inserted nodes. This function does not
   //!   check &quot;pos&quot; and this precondition must be guaranteed by the caller.
   //!
   //! &lt;b&gt;Effects&lt;/b&gt;: Inserts new_node into the tree before &quot;pos&quot;.
   //!
   //! &lt;b&gt;Complexity&lt;/b&gt;: Constant-time.
   //!
   //! &lt;b&gt;Throws&lt;/b&gt;: Nothing.
   //!
   //! &lt;b&gt;Note&lt;/b&gt;: If &quot;pos&quot; is not the successor of the newly inserted &quot;new_node&quot;
   //! tree invariants might be broken.</doc>
