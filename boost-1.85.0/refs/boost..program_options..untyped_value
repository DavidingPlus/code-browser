<inh f='boost-1.85.0/libs/program_options/include/boost/program_options/value_semantic.hpp' l='91' c='boost::program_options::value_semantic_codecvt_helper'/>
<def f='boost-1.85.0/libs/program_options/include/boost/program_options/value_semantic.hpp' l='126' ll='157'/>
<size>16</size>
<doc f='boost-1.85.0/libs/program_options/include/boost/program_options/value_semantic.hpp' l='124'>/** Class which specifies a simple handling of a value: the value will
        have string type and only one token is allowed. */</doc>
<fun r='_ZN5boost15program_options13untyped_valueC1Eb'/>
<fun r='_ZNK5boost15program_options13untyped_value4nameB5cxx11Ev'/>
<fun r='_ZNK5boost15program_options13untyped_value10min_tokensEv'/>
<fun r='_ZNK5boost15program_options13untyped_value10max_tokensEv'/>
<fun r='_ZNK5boost15program_options13untyped_value12is_composingEv'/>
<fun r='_ZNK5boost15program_options13untyped_value11is_requiredEv'/>
<fun r='_ZNK5boost15program_options13untyped_value6xparseERNS_3anyERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISA_EE'/>
<fun r='_ZNK5boost15program_options13untyped_value13apply_defaultERNS_3anyE'/>
<fun r='_ZNK5boost15program_options13untyped_value6notifyERKNS_3anyE'/>
<mbr r='boost::program_options::untyped_value::m_zero_tokens' o='64' t='bool'/>
<use f='boost-1.85.0/libs/program_options/src/options_description.cpp' l='270' c='_ZN5boost15program_options29options_description_easy_initclEPKcS3_'/>
<size>16</size>
