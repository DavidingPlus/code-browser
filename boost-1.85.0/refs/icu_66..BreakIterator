<use f='include/unicode/unistr.h' l='71'/>
<use f='include/unicode/unistr.h' l='2711' c='_ZN6icu_6613UnicodeString7toTitleEPNS_13BreakIteratorE'/>
<use f='include/unicode/unistr.h' l='2740' c='_ZN6icu_6613UnicodeString7toTitleEPNS_13BreakIteratorERKNS_6LocaleE'/>
<use f='include/unicode/unistr.h' l='2773' c='_ZN6icu_6613UnicodeString7toTitleEPNS_13BreakIteratorERKNS_6LocaleEj'/>
<use f='include/unicode/unistr.h' l='3687' c='_ZN6icu_6613UnicodeString7caseMapEijPNS_13BreakIteratorEPFiijS2_PDsiPKDsiPNS_5EditsER10UErrorCodeE'/>
<inh f='include/unicode/uobject.h' l='223' c='icu_66::UObject'/>
<def f='include/unicode/brkiter.h' l='106' ll='652'/>
<use f='include/unicode/brkiter.h' l='127' c='_ZNK6icu_6613BreakIteratoreqERKS0_'/>
<use f='include/unicode/brkiter.h' l='135' c='_ZNK6icu_6613BreakIteratorneERKS0_'/>
<use f='include/unicode/brkiter.h' l='142' c='_ZNK6icu_6613BreakIterator5cloneEv'/>
<use f='include/unicode/brkiter.h' l='368' c='_ZN6icu_6613BreakIterator18createWordInstanceERKNS_6LocaleER10UErrorCode'/>
<use f='include/unicode/brkiter.h' l='392' c='_ZN6icu_6613BreakIterator18createLineInstanceERKNS_6LocaleER10UErrorCode'/>
<use f='include/unicode/brkiter.h' l='414' c='_ZN6icu_6613BreakIterator23createCharacterInstanceERKNS_6LocaleER10UErrorCode'/>
<use f='include/unicode/brkiter.h' l='435' c='_ZN6icu_6613BreakIterator22createSentenceInstanceERKNS_6LocaleER10UErrorCode'/>
<use f='include/unicode/brkiter.h' l='461' c='_ZN6icu_6613BreakIterator19createTitleInstanceERKNS_6LocaleER10UErrorCode'/>
<use f='include/unicode/brkiter.h' l='520' c='_ZN6icu_6613BreakIterator17createBufferCloneEPvRiR10UErrorCode'/>
<use f='include/unicode/brkiter.h' l='553' c='_ZN6icu_6613BreakIterator16registerInstanceEPS0_RKNS_6LocaleE18UBreakIteratorTypeR10UErrorCode'/>
<use f='include/unicode/brkiter.h' l='623' c='_ZN6icu_6613BreakIterator16refreshInputTextEP5UTextR10UErrorCode'/>
<use f='include/unicode/brkiter.h' l='626' c='_ZN6icu_6613BreakIterator13buildInstanceERKNS_6LocaleEPKcR10UErrorCode'/>
<use f='include/unicode/brkiter.h' l='627' c='_ZN6icu_6613BreakIterator14createInstanceERKNS_6LocaleEiR10UErrorCode'/>
<use f='include/unicode/brkiter.h' l='628' c='_ZN6icu_6613BreakIterator12makeInstanceERKNS_6LocaleEiR10UErrorCode'/>
<use f='include/unicode/brkiter.h' l='639' c='_ZN6icu_6613BreakIteratorC1ERKS0_'/>
<use f='include/unicode/brkiter.h' l='644' c='_ZN6icu_6613BreakIteratoraSERKS0_'/>
<use f='include/unicode/brkiter.h' l='644' c='_ZN6icu_6613BreakIteratoraSERKS0_'/>
<ovr f='include/unicode/rbbi.h' l='55' c='icu_66::RuleBasedBreakIterator'/>
<use f='include/unicode/rbbi.h' l='55'/>
<use f='include/unicode/rbbi.h' l='162'/>
<use f='include/unicode/rbbi.h' l='256' c='_ZNK6icu_6622RuleBasedBreakIteratoreqERKNS_13BreakIteratorE'/>
<use f='include/unicode/rbbi.h' l='265' c='_ZNK6icu_6622RuleBasedBreakIteratorneERKNS_13BreakIteratorE'/>
<use f='include/unicode/rbbi.h' l='694' c='_ZNK6icu_6622RuleBasedBreakIteratorneERKNS_13BreakIteratorE'/>
<use f='boost-1.85.0/libs/locale/src/boost/locale/icu/boundary.cpp' l='43' c='_ZN5boost6locale8boundary8impl_icu10map_directENS1_13boundary_typeEPN6icu_6613BreakIteratorEi'/>
<use f='boost-1.85.0/libs/locale/src/boost/locale/icu/boundary.cpp' l='48' c='_ZN5boost6locale8boundary8impl_icu10map_directENS1_13boundary_typeEPN6icu_6613BreakIteratorEi'/>
<use f='boost-1.85.0/libs/locale/src/boost/locale/icu/boundary.cpp' l='112' c='_ZN5boost6locale8boundary8impl_icu12get_iteratorENS1_13boundary_typeERKN6icu_666LocaleE'/>
<use f='boost-1.85.0/libs/locale/src/boost/locale/icu/boundary.cpp' l='115' c='_ZN5boost6locale8boundary8impl_icu12get_iteratorENS1_13boundary_typeERKN6icu_666LocaleE'/>
<use f='boost-1.85.0/libs/locale/src/boost/locale/icu/boundary.cpp' l='135' c='_ZN5boost6locale8boundary8impl_icu6do_mapENS1_13boundary_typeEPKT_S6_RKN6icu_666LocaleERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<size>328</size>
<doc f='include/unicode/brkiter.h' l='61'>/**
 * The BreakIterator class implements methods for finding the location
 * of boundaries in text. BreakIterator is an abstract base class.
 * Instances of BreakIterator maintain a current position and scan over
 * text returning the index of characters where boundaries occur.
 * &lt;p&gt;
 * Line boundary analysis determines where a text string can be broken
 * when line-wrapping. The mechanism correctly handles punctuation and
 * hyphenated words.
 * &lt;p&gt;
 * Sentence boundary analysis allows selection with correct
 * interpretation of periods within numbers and abbreviations, and
 * trailing punctuation marks such as quotation marks and parentheses.
 * &lt;p&gt;
 * Word boundary analysis is used by search and replace functions, as
 * well as within text editing applications that allow the user to
 * select words with a double click. Word selection provides correct
 * interpretation of punctuation marks within and following
 * words. Characters that are not part of a word, such as symbols or
 * punctuation marks, have word-breaks on both sides.
 * &lt;p&gt;
 * Character boundary analysis allows users to interact with
 * characters as they expect to, for example, when moving the cursor
 * through a text string. Character boundary analysis provides correct
 * navigation of through character strings, regardless of how the
 * character is stored.  For example, an accented character might be
 * stored as a base character and a diacritical mark. What users
 * consider to be a character can differ between languages.
 * &lt;p&gt;
 * The text boundary positions are found according to the rules
 * described in Unicode Standard Annex #29, Text Boundaries, and
 * Unicode Standard Annex #14, Line Breaking Properties.  These
 * are available at http://www.unicode.org/reports/tr14/ and
 * http://www.unicode.org/reports/tr29/.
 * &lt;p&gt;
 * In addition to the C++ API defined in this header file, a
 * plain C API with equivalent functionality is defined in the
 * file ubrk.h
 * &lt;p&gt;
 * Code snippets illustrating the use of the Break Iterator APIs
 * are available in the ICU User Guide,
 * http://icu-project.org/userguide/boundaryAnalysis.html
 * and in the sample program icu/source/samples/break/break.cpp
 *
 */</doc>
<fun r='_ZN6icu_6613BreakIteratorD1Ev'/>
<fun r='_ZNK6icu_6613BreakIteratoreqERKS0_'/>
<fun r='_ZNK6icu_6613BreakIteratorneERKS0_'/>
<fun r='_ZNK6icu_6613BreakIterator5cloneEv'/>
<fun r='_ZNK6icu_6613BreakIterator17getDynamicClassIDEv'/>
<fun r='_ZNK6icu_6613BreakIterator7getTextEv'/>
<fun r='_ZNK6icu_6613BreakIterator8getUTextEP5UTextR10UErrorCode'/>
<fun r='_ZN6icu_6613BreakIterator7setTextERKNS_13UnicodeStringE'/>
<fun r='_ZN6icu_6613BreakIterator7setTextEP5UTextR10UErrorCode'/>
<fun r='_ZN6icu_6613BreakIterator9adoptTextEPNS_17CharacterIteratorE'/>
<fun r='_ZN6icu_6613BreakIterator5firstEv'/>
<fun r='_ZN6icu_6613BreakIterator4lastEv'/>
<fun r='_ZN6icu_6613BreakIterator8previousEv'/>
<fun r='_ZN6icu_6613BreakIterator4nextEv'/>
<fun r='_ZNK6icu_6613BreakIterator7currentEv'/>
<fun r='_ZN6icu_6613BreakIterator9followingEi'/>
<fun r='_ZN6icu_6613BreakIterator9precedingEi'/>
<fun r='_ZN6icu_6613BreakIterator10isBoundaryEi'/>
<fun r='_ZN6icu_6613BreakIterator4nextEi'/>
<fun r='_ZNK6icu_6613BreakIterator13getRuleStatusEv'/>
<fun r='_ZN6icu_6613BreakIterator16getRuleStatusVecEPiiR10UErrorCode'/>
<fun r='_ZN6icu_6613BreakIterator18createWordInstanceERKNS_6LocaleER10UErrorCode'/>
<fun r='_ZN6icu_6613BreakIterator18createLineInstanceERKNS_6LocaleER10UErrorCode'/>
<fun r='_ZN6icu_6613BreakIterator23createCharacterInstanceERKNS_6LocaleER10UErrorCode'/>
<fun r='_ZN6icu_6613BreakIterator22createSentenceInstanceERKNS_6LocaleER10UErrorCode'/>
<fun r='_ZN6icu_6613BreakIterator19createTitleInstanceERKNS_6LocaleER10UErrorCode'/>
<fun r='_ZN6icu_6613BreakIterator19getAvailableLocalesERi'/>
<fun r='_ZN6icu_6613BreakIterator14getDisplayNameERKNS_6LocaleES3_RNS_13UnicodeStringE'/>
<fun r='_ZN6icu_6613BreakIterator14getDisplayNameERKNS_6LocaleERNS_13UnicodeStringE'/>
<fun r='_ZN6icu_6613BreakIterator17createBufferCloneEPvRiR10UErrorCode'/>
<fun r='_ZN6icu_6613BreakIterator13isBufferCloneEv'/>
<fun r='_ZN6icu_6613BreakIterator16registerInstanceEPS0_RKNS_6LocaleE18UBreakIteratorTypeR10UErrorCode'/>
<fun r='_ZN6icu_6613BreakIterator10unregisterEPKvR10UErrorCode'/>
<fun r='_ZN6icu_6613BreakIterator19getAvailableLocalesEv'/>
<fun r='_ZNK6icu_6613BreakIterator9getLocaleE18ULocDataLocaleTypeR10UErrorCode'/>
<fun r='_ZNK6icu_6613BreakIterator11getLocaleIDE18ULocDataLocaleTypeR10UErrorCode'/>
<fun r='_ZN6icu_6613BreakIterator16refreshInputTextEP5UTextR10UErrorCode'/>
<fun r='_ZN6icu_6613BreakIterator13buildInstanceERKNS_6LocaleEPKcR10UErrorCode'/>
<fun r='_ZN6icu_6613BreakIterator14createInstanceERKNS_6LocaleEiR10UErrorCode'/>
<fun r='_ZN6icu_6613BreakIterator12makeInstanceERKNS_6LocaleEiR10UErrorCode'/>
<fun r='_ZN6icu_6613BreakIteratorC1Ev'/>
<fun r='_ZN6icu_6613BreakIteratorC1ERKS0_'/>
<fun r='_ZN6icu_6613BreakIteratorC1ERKNS_6LocaleES3_'/>
<fun r='_ZN6icu_6613BreakIteratoraSERKS0_'/>
<mbr r='icu_66::BreakIterator::actualLocale' o='64' t='char[157]'/>
<mbr r='icu_66::BreakIterator::validLocale' o='1320' t='char[157]'/>
<fun r='_ZN6icu_6613BreakIterator13isBufferCloneEv'/>
<use f='include/unicode/smpdtfmt.h' l='1648'/>
<use f='include/unicode/rbnf.h' l='1094'/>
<size>328</size>
