<dec f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='536' type='boost::urls::url_base &amp; boost::urls::url_base::set_encoded_userinfo(boost::urls::pct_string_view s)'/>
<use f='boost-1.85.0/libs/url/include/boost/url/url.hpp' l='423' u='c' c='_ZN5boost4urls3url20set_encoded_userinfoENS0_15pct_string_viewE'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='473'>/** Set the userinfo.

        The userinfo is set to the given string,
        which may contain percent-escapes.
        Escapes in the string are preserved,
        and reserved characters in the string
        are percent-escaped in the result.
        The effects on the user and password
        depend on the presence of a colon (&apos;:&apos;)
        in the string:

        @li If an unescaped colon exists, the
        characters up to the colon become
        the user and the rest of the characters
        after the colon become the password.
        In this case @ref has_password returns
        true. Otherwise,

        @li If there is no colon, the user is
        set to the string. The function
        @ref has_password returns false.

        @note
        The interpretation of the userinfo as
        individual user and password components
        is scheme-dependent. Transmitting
        passwords in URLs is deprecated.

        @par Example
        @code
        assert( url( &quot;http://example.com&quot; ).set_encoded_userinfo( &quot;john%20doe&quot; ).user() == &quot;john doe&quot; );
        @endcode

        @par Complexity
        Linear in `this-&gt;size() + s.size()`.

        @par Exception Safety
        Strong guarantee.
        Calls to allocate may throw.
        Exceptions thrown on invalid input.

        @throw system_error
        `s` contains an invalid percent-encoding.

        @param s The string to set.

        @par BNF
        @code
        userinfo      = [ [ user ] [ &apos;:&apos; password ] ]

        user          = *( unreserved / pct-encoded / sub-delims )
        password      = *( unreserved / pct-encoded / sub-delims / &quot;:&quot; )
        @endcode

        @par Specification
        @li &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc3986#section-3.2.1&quot;&gt;
            3.2.1. User Information (rfc3986)&lt;/a&gt;

        @see
            @ref remove_userinfo,
            @ref set_userinfo.
    */</doc>
<use f='boost-1.85.0/libs/url/include/boost/url/static_url.hpp' l='359' u='c' c='_ZN5boost4urls10static_url20set_encoded_userinfoENS0_15pct_string_viewE'/>
<def f='boost-1.85.0/libs/url/src/url_base.cpp' l='388' ll='447' type='boost::urls::url_base &amp; boost::urls::url_base::set_encoded_userinfo(boost::urls::pct_string_view s)'/>
