<def f='boost-1.85.0/libs/url/include/boost/url/url_view_base.hpp' l='139' ll='145' type='static std::size_t boost::urls::url_view_base::max_size()'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/url_view_base.hpp' l='124'>/** Return the maximum number of characters possible

        This represents the largest number
        of characters that are theoretically
        possible to represent in a url,
        not including any null terminator.
        In practice the actual possible size
        may be lower than this number.

        @par Complexity
        Constant.

        @par Exception Safety
        Throws nothing.
    */</doc>
<use f='boost-1.85.0/libs/url/src/url.cpp' l='113' u='c' c='_ZN5boost4urls3url12reserve_implEmRNS0_8url_base4op_tE'/>
<use f='boost-1.85.0/libs/url/src/url.cpp' l='123' u='c' c='_ZN5boost4urls3url12reserve_implEmRNS0_8url_base4op_tE'/>
<use f='boost-1.85.0/libs/url/src/url.cpp' l='126' u='c' c='_ZN5boost4urls3url12reserve_implEmRNS0_8url_base4op_tE'/>
<use f='boost-1.85.0/libs/url/src/url_base.cpp' l='2579' u='c' c='_ZN5boost4urls8url_base13edit_segmentsERKNS0_6detail18segments_iter_implES5_ONS2_17any_segments_iterEi'/>
<use f='boost-1.85.0/libs/url/src/url_base.cpp' l='2581' u='c' c='_ZN5boost4urls8url_base13edit_segmentsERKNS0_6detail18segments_iter_implES5_ONS2_17any_segments_iterEi'/>
<use f='boost-1.85.0/libs/url/src/url_base.cpp' l='2586' u='c' c='_ZN5boost4urls8url_base13edit_segmentsERKNS0_6detail18segments_iter_implES5_ONS2_17any_segments_iterEi'/>
<use f='boost-1.85.0/libs/url/src/url_base.cpp' l='2734' u='c' c='_ZN5boost4urls8url_base11edit_paramsERKNS0_6detail16params_iter_implES5_ONS2_15any_params_iterE'/>
