<dec f='boost-1.85.0/libs/url/include/boost/url/param.hpp' l='304' type='boost::urls::param &amp; boost::urls::param::operator=(const boost::urls::param_view &amp; other)'/>
<def f='boost-1.85.0/libs/url/include/boost/url/param.hpp' l='890' ll='912' type='boost::urls::param &amp; boost::urls::param::operator=(const boost::urls::param_view &amp; other)'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/param.hpp' l='285'>/** Assignment

        The members of `other` are copied,
        re-using already existing string capacity.

        @par Postconditions
        @code
        this-&gt;key == other.key &amp;&amp; this-&gt;value == other.value &amp;&amp; this-&gt;has_value == other.has_value
        @endcode

        @par Complexity
        Linear in `other.key.size() + other.value.size()`.

        @par Exception Safety
        Calls to allocate may throw.

        @param other The parameter to copy.
    */</doc>
<doc f='boost-1.85.0/libs/url/include/boost/url/param.hpp' l='888'>//------------------------------------------------</doc>
