<dec f='boost-1.85.0/libs/url/include/boost/url/url_view_base.hpp' l='2049' type='boost::urls::params_encoded_view boost::urls::url_view_base::encoded_params() const'/>
<use f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='2143' u='c' c='_ZNK5boost4urls8url_base14encoded_paramsEv'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/url_view_base.hpp' l='2003'>/** Return the query as a container of parameters

        This function returns a bidirectional
        view of key/value pairs over the query.
        The returned view references the same
        underlying character buffer; ownership
        is not transferred.
        Strings returned when iterating the
        range may contain percent escapes.

        @par Example
        @code
        params_encoded_view pv = url_view( &quot;/sql?id=42&amp;name=jane%2Ddoe&amp;page+size=20&quot; ).encoded_params();
        @endcode

        @par Complexity
        Constant.

        @par Exception Safety
        Throws nothing.

        @par Specification
        @li &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc3986#section-3.4&quot;
            &gt;3.4. Query (rfc3986)&lt;/a&gt;

        @par BNF
        @code
        query           = *( pchar / &quot;/&quot; / &quot;?&quot; )

        query-param     = key [ &quot;=&quot; value ]
        query-params    = [ query-param ] *( &quot;&amp;&quot; query-param )
        @endcode

        @par Specification
        @li &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc3986#section-3.4
            &gt;3.4.  Query (rfc3986)&lt;/a&gt;
        @li &lt;a href=&quot;https://en.wikipedia.org/wiki/Query_string&quot;
            &gt;Query string (Wikipedia)&lt;/a&gt;

        @see
            @ref encoded_query,
            @ref has_query,
            @ref params,
            @ref query.
    */</doc>
<def f='boost-1.85.0/libs/url/src/url_view_base.cpp' l='535' ll='540' type='boost::urls::params_encoded_view boost::urls::url_view_base::encoded_params() const'/>
