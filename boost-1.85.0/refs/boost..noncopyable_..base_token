<def f='boost-1.85.0/libs/core/include/boost/core/noncopyable.hpp' l='34'/>
<ovr f='boost-1.85.0/libs/core/include/boost/core/noncopyable.hpp' l='38' c='boost::noncopyable_::noncopyable'/>
<use f='boost-1.85.0/libs/core/include/boost/core/noncopyable.hpp' l='38'/>
<size>1</size>
<doc f='boost-1.85.0/libs/core/include/boost/core/noncopyable.hpp' l='26'>// noncopyable derives from base_token to enable Type Traits to detect
// whether a type derives from noncopyable without needing the definition
// of noncopyable itself.
//
// The definition of base_token is macro-guarded so that Type Traits can
// define it locally without including this header, to avoid a dependency
// on Core.</doc>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/is_noncopyable.hpp' l='33'/>
<size>1</size>
