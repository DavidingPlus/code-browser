<dec f='boost-1.85.0/libs/wave/include/boost/wave/cpplexer/cpp_lex_interface_generator.hpp' l='60' type='static lex_input_interface&lt;TokenT&gt; * boost::wave::cpplexer::new_lexer_gen::new_lexer(const IteratorT &amp; first, const IteratorT &amp; last, const PositionT &amp; pos, boost::wave::language_support language)'/>
<doc f='boost-1.85.0/libs/wave/include/boost/wave/cpplexer/cpp_lex_interface_generator.hpp' l='56'>//  The NewLexer function allows the opaque generation of a new lexer object.
    //  It is coupled to the token type to allow to decouple the lexer/token
    //  configurations at compile time.</doc>
<def f='boost-1.85.0/libs/wave/include/boost/wave/cpplexer/re2clex/cpp_re2c_lexer.hpp' l='408' ll='417' type='static lex_input_interface&lt;TokenT&gt; * boost::wave::cpplexer::new_lexer_gen::new_lexer(const IteratorT &amp; first, const IteratorT &amp; last, const PositionT &amp; pos, boost::wave::language_support language)'/>
<doc f='boost-1.85.0/libs/wave/include/boost/wave/cpplexer/re2clex/cpp_re2c_lexer.hpp' l='391'>///////////////////////////////////////////////////////////////////////////////
//
//  The &apos;new_lexer&apos; function allows the opaque generation of a new lexer object.
//  It is coupled to the iterator type to allow to decouple the lexer/iterator
//  configurations at compile time.
//
//  This function is declared inside the cpp_lex_token.hpp file, which is
//  referenced by the source file calling the lexer and the source file, which
//  instantiates the lex_functor. But it is defined here, so it will be
//  instantiated only while compiling the source file, which instantiates the
//  lex_functor. While the cpp_re2c_token.hpp file may be included everywhere,
//  this file (cpp_re2c_lexer.hpp) should be included only once. This allows
//  to decouple the lexer interface from the lexer implementation and reduces
//  compilation time.
//
///////////////////////////////////////////////////////////////////////////////</doc>
