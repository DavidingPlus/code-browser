<def f='boost-1.85.0/libs/property_tree/include/boost/property_tree/detail/rapidxml.hpp' l='541' ll='546' type='void boost::property_tree::detail::rapidxml::memory_pool::set_allocator(boost::property_tree::detail::rapidxml::memory_pool::boost_ptree_raw_alloc_func * af, boost::property_tree::detail::rapidxml::memory_pool::boost_ptree_raw_free_func * ff)'/>
<doc f='boost-1.85.0/libs/property_tree/include/boost/property_tree/detail/rapidxml.hpp' l='528'>//! Sets or resets the user-defined memory allocation functions for the pool.
        //! This can only be called when no memory is allocated from the pool yet, otherwise results are undefined.
        //! Allocation function must not return invalid pointer on failure. It should either throw,
        //! stop the program, or use &lt;code&gt;longjmp()&lt;/code&gt; function to pass control to other place of program. 
        //! If it returns invalid pointer, results are undefined.
        //! &lt;br&gt;&lt;br&gt;
        //! User defined allocation functions must have the following forms:
        //! &lt;br&gt;&lt;code&gt;
        //! &lt;br&gt;void *allocate(std::size_t size);
        //! &lt;br&gt;void free(void *pointer);
        //! &lt;/code&gt;&lt;br&gt;
        //! \param af Allocation function, or 0 to restore default function
        //! \param ff Free function, or 0 to restore default function</doc>
