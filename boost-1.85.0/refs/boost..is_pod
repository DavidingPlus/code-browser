<def f='boost-1.85.0/libs/type_traits/include/boost/type_traits/is_pod.hpp' l='35' ll='37'/>
<def f='boost-1.85.0/libs/type_traits/include/boost/type_traits/is_pod.hpp' l='40'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/is_pod.hpp' l='40'/>
<inh f='boost-1.85.0/libs/type_traits/include/boost/type_traits/integral_constant.hpp' l='73' c='boost::integral_constant'/>
<def f='boost-1.85.0/libs/type_traits/include/boost/type_traits/is_pod.hpp' l='45'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/is_pod.hpp' l='45'/>
<inh f='boost-1.85.0/libs/type_traits/include/boost/type_traits/integral_constant.hpp' l='73' c='boost::integral_constant'/>
<def f='boost-1.85.0/libs/type_traits/include/boost/type_traits/is_pod.hpp' l='48'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/is_pod.hpp' l='48'/>
<inh f='boost-1.85.0/libs/type_traits/include/boost/type_traits/integral_constant.hpp' l='73' c='boost::integral_constant'/>
<def f='boost-1.85.0/libs/type_traits/include/boost/type_traits/is_pod.hpp' l='49'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/is_pod.hpp' l='49'/>
<inh f='boost-1.85.0/libs/type_traits/include/boost/type_traits/integral_constant.hpp' l='73' c='boost::integral_constant'/>
<def f='boost-1.85.0/libs/type_traits/include/boost/type_traits/is_pod.hpp' l='50'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/is_pod.hpp' l='50'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/is_pod.hpp' l='53'/>
<inh f='boost-1.85.0/libs/type_traits/include/boost/type_traits/integral_constant.hpp' l='73' c='boost::integral_constant'/>
<def f='boost-1.85.0/libs/type_traits/include/boost/type_traits/type_with_alignment.hpp' l='106'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/type_with_alignment.hpp' l='106'/>
<inh f='boost-1.85.0/libs/type_traits/include/boost/type_traits/integral_constant.hpp' l='73' c='boost::integral_constant'/>
<def f='boost-1.85.0/libs/type_traits/include/boost/type_traits/type_with_alignment.hpp' l='107'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/type_with_alignment.hpp' l='107'/>
<inh f='boost-1.85.0/libs/type_traits/include/boost/type_traits/integral_constant.hpp' l='73' c='boost::integral_constant'/>
<def f='boost-1.85.0/libs/type_traits/include/boost/type_traits/type_with_alignment.hpp' l='108'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/type_with_alignment.hpp' l='108'/>
<inh f='boost-1.85.0/libs/type_traits/include/boost/type_traits/integral_constant.hpp' l='73' c='boost::integral_constant'/>
<def f='boost-1.85.0/libs/type_traits/include/boost/type_traits/type_with_alignment.hpp' l='109'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/type_with_alignment.hpp' l='109'/>
<inh f='boost-1.85.0/libs/type_traits/include/boost/type_traits/integral_constant.hpp' l='73' c='boost::integral_constant'/>
<def f='boost-1.85.0/libs/type_traits/include/boost/type_traits/type_with_alignment.hpp' l='110'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/type_with_alignment.hpp' l='110'/>
<inh f='boost-1.85.0/libs/type_traits/include/boost/type_traits/integral_constant.hpp' l='73' c='boost::integral_constant'/>
<def f='boost-1.85.0/libs/type_traits/include/boost/type_traits/type_with_alignment.hpp' l='111'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/type_with_alignment.hpp' l='111'/>
<inh f='boost-1.85.0/libs/type_traits/include/boost/type_traits/integral_constant.hpp' l='73' c='boost::integral_constant'/>
<def f='boost-1.85.0/libs/type_traits/include/boost/type_traits/type_with_alignment.hpp' l='112'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/type_with_alignment.hpp' l='112'/>
<size>1</size>
<doc f='boost-1.85.0/libs/type_traits/include/boost/type_traits/is_pod.hpp' l='44'>// the following help compilers without partial specialization support:</doc>
<inh f='boost-1.85.0/libs/type_traits/include/boost/type_traits/integral_constant.hpp' l='73' c='boost::integral_constant'/>
<def f='boost-1.85.0/libs/type_traits/include/boost/type_traits/aligned_storage.hpp' l='133' ll='134'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/has_trivial_constructor.hpp' l='41'/>
<use f='boost-1.85.0/libs/proto/include/boost/proto/traits.hpp' l='170'/>
<doc f='boost-1.85.0/libs/type_traits/include/boost/type_traits/aligned_storage.hpp' l='129'>//
// Make sure that is_pod recognises aligned_storage&lt;&gt;::type
// as a POD (Note that aligned_storage&lt;&gt; itself is not a POD):
//</doc>
<inh f='boost-1.85.0/libs/type_traits/include/boost/type_traits/integral_constant.hpp' l='73' c='boost::integral_constant'/>
<def f='boost-1.85.0/libs/detail/include/boost/blank.hpp' l='37' ll='41'/>
<use f='boost-1.85.0/libs/detail/include/boost/blank.hpp' l='38'/>
<size>1</size>
<doc f='boost-1.85.0/libs/detail/include/boost/blank.hpp' l='34'>// type traits specializations
//</doc>
<use f='boost-1.85.0/libs/log/include/boost/log/detail/thread_specific.hpp' l='64'/>
