<inh f='include/c++/9/typeinfo' l='187' c='std::bad_cast'/>
<inh f='boost-1.85.0/libs/contract/include/boost/contract/core/exception.hpp' l='49' c='boost::contract::exception'/>
<def f='boost-1.85.0/libs/contract/include/boost/contract/core/exception.hpp' l='82' ll='114'/>
<size>48</size>
<doc f='boost-1.85.0/libs/contract/include/boost/contract/core/exception.hpp' l='65'>/**
Exception thrown when inconsistent return values are passed to overridden
virtual public functions.

This exception is thrown when programmers pass to this library return value
parameters for public function overrides in derived classes that are not
consistent with the return type parameter passed for the virtual public function
being overridden from the base classes.
This allows this library to give more descriptive error messages in such cases
of misuse.

This exception is internally thrown by this library and programmers should not
need to throw it from user code.

@see    @RefSect{tutorial.public_function_overrides__subcontracting_,
        Public Function Overrides}
*/</doc>
<doc f='boost-1.85.0/libs/contract/include/boost/contract/core/exception.hpp' l='82'>// Copy (as str).</doc>
<fun r='_ZN5boost8contract23bad_virtual_result_castC1EPKcS3_'/>
<fun r='_ZN5boost8contract23bad_virtual_result_castD1Ev'/>
<fun r='_ZNK5boost8contract23bad_virtual_result_cast4whatEv'/>
<mbr r='boost::contract::bad_virtual_result_cast::what_' o='128' t='std::string'/>
<fun r='_ZN5boost8contract23bad_virtual_result_castC1EPKcS3_'/>
<fun r='_ZN5boost8contract23bad_virtual_result_castD1Ev'/>
<fun r='_ZNK5boost8contract23bad_virtual_result_cast4whatEv'/>
