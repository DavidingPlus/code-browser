<dec f='include/unicode/locid.h' l='824' type='icu_66::UnicodeString &amp; icu_66::Locale::getDisplayLanguage(const icu_66::Locale &amp; displayLocale, icu_66::UnicodeString &amp; dispLang) const'/>
<doc f='include/unicode/locid.h' l='811'>/**
     * Fills in &quot;dispLang&quot; with the name of this locale&apos;s language in a format suitable for
     * user display in the locale specified by &quot;displayLocale&quot;.  For example, if the locale&apos;s
     * language code is &quot;en&quot; and displayLocale&apos;s language code is &quot;fr&quot;, this function would set
     * dispLang to &quot;Anglais&quot;.
     * @param displayLocale  Specifies the locale to be used to display the name.  In other words,
     *                  if the locale&apos;s language code is &quot;en&quot;, passing Locale::getFrench() for
     *                  displayLocale would result in &quot;Anglais&quot;, while passing Locale::getGerman()
     *                  for displayLocale would result in &quot;Englisch&quot;.
     * @param dispLang  Receives the language&apos;s display name.
     * @return          A reference to &quot;dispLang&quot;.
     * @stable ICU 2.0
     */</doc>
