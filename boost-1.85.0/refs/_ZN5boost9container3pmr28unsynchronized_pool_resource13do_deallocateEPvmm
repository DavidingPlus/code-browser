<dec f='boost-1.85.0/libs/container/include/boost/container/pmr/unsynchronized_pool_resource.hpp' l='144' type='void boost::container::pmr::unsynchronized_pool_resource::do_deallocate(void * p, std::size_t bytes, std::size_t alignment)'/>
<inh f='boost-1.85.0/libs/container/include/boost/container/pmr/memory_resource.hpp' l='104' c='_ZN5boost9container3pmr15memory_resource13do_deallocateEPvmm'/>
<def f='boost-1.85.0/libs/container/src/unsynchronized_pool_resource.cpp' l='54' ll='55' type='void boost::container::pmr::unsynchronized_pool_resource::do_deallocate(void * p, std::size_t bytes, std::size_t alignment)'/>
<doc f='boost-1.85.0/libs/container/src/unsynchronized_pool_resource.cpp' l='54'>//virtual</doc>
<doc f='boost-1.85.0/libs/container/include/boost/container/pmr/unsynchronized_pool_resource.hpp' l='139'>//! &lt;b&gt;Effects&lt;/b&gt;: Return the memory at p to the pool. It is unspecified if or under
   //!   what circumstances this operation will result in a call to
   //!   `upstream_resource()-&gt;deallocate()`.
   //!
   //! &lt;b&gt;Throws&lt;/b&gt;: Nothing.</doc>
