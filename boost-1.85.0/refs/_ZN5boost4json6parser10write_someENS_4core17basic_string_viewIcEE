<def f='boost-1.85.0/libs/json/include/boost/json/parser.hpp' l='611' ll='617' type='std::size_t boost::json::parser::write_some(boost::json::string_view s)'/>
<doc f='boost-1.85.0/libs/json/include/boost/json/parser.hpp' l='576'>/** Parse a buffer containing a complete JSON text.

        This function parses a complete JSON text contained
        in the specified character buffer. Additional
        characters past the end of the complete JSON text
        are ignored. The function returns the actual
        number of characters parsed, which may be less
        than the size of the input. This allows parsing
        of a buffer containing multiple individual JSON texts
        or containing different protocol data:

        @par Example
        @code
        parser p;                                       // construct a parser
        size_t n = p.write_some( &quot;[1,2,3] null&quot; );      // parse a complete JSON text
        assert( n == 8 );                               // only some characters consumed
        value jv = p.release();                         // take ownership of the value
        @endcode

        @par Complexity
        Linear in `size`.

        @par Exception Safety
        Basic guarantee.
        Calls to `memory_resource::allocate` may throw.
        Upon error or exception, subsequent calls will
        fail until @ref reset is called to parse a new JSON text.

        @return The number of characters consumed from
        the buffer.

        @param s The character string to parse.

        @throw `boost::system::system_error` Thrown on error.
    */</doc>
