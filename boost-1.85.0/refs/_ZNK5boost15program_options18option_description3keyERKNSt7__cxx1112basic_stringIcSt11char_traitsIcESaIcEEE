<dec f='boost-1.85.0/libs/program_options/include/boost/program_options/options_description.hpp' l='104' type='const std::string &amp; boost::program_options::option_description::key(const std::string &amp; option) const'/>
<use f='boost-1.85.0/libs/program_options/src/cmdline.cpp' l='435' u='c' c='_ZN5boost15program_options6detail7cmdline13finish_optionERNS0_12basic_optionIcEERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISC_E13271751'/>
<doc f='boost-1.85.0/libs/program_options/include/boost/program_options/options_description.hpp' l='96'>/** Returns the key that should identify the option, in
            particular in the variables_map class.
            The &apos;option&apos; parameter is the option spelling from the
            input source.
            If option name contains &apos;*&apos;, returns &apos;option&apos;.
            If long name was specified, it&apos;s the long name, otherwise
            it&apos;s a short name with prepended &apos;-&apos;.
        */</doc>
<def f='boost-1.85.0/libs/program_options/src/options_description.cpp' l='128' ll='147' type='const std::string &amp; boost::program_options::option_description::key(const std::string &amp; option) const'/>
<use f='boost-1.85.0/libs/program_options/src/options_description.cpp' l='390' u='c' c='_ZNK5boost15program_options19options_description12find_nothrowERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbbb'/>
<use f='boost-1.85.0/libs/program_options/src/options_description.cpp' l='398' u='c' c='_ZNK5boost15program_options19options_description12find_nothrowERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbbb'/>
<use f='boost-1.85.0/libs/program_options/src/variables_map.cpp' l='112' u='c' c='_ZN5boost15program_options5storeERKNS0_20basic_parsed_optionsIcEERNS0_13variables_mapEb'/>
