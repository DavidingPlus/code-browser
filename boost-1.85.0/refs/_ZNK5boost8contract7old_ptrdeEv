<def f='boost-1.85.0/libs/contract/include/boost/contract/old.hpp' l='283' ll='291' type='const T &amp; boost::contract::old_ptr::operator*() const'/>
<doc f='boost-1.85.0/libs/contract/include/boost/contract/old.hpp' l='269'>/**
    Dereference this old value pointer.

    This will generate a run-time error if this pointer is null and a
    compile-time error if the pointed type @c T is not copyable (i.e., if
    @c boost::contract::is_old_value_copyable&lt;T&gt;::value is @c false).
    
    @return The pointed old value.
            Contract assertions should not change the state of the program so
            this member function is @c const and it returns the old value as a
            reference to a constant object (see
            @RefSect{contract_programming_overview.constant_correctness,
            Constant Correctness}).
    */</doc>
