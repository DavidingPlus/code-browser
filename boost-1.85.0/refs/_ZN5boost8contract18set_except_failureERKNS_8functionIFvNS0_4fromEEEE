<def f='boost-1.85.0/libs/contract/include/boost/contract/core/exception.hpp' l='653' ll='660' type='const boost::contract::from_failure_handler &amp; boost::contract::set_except_failure(const boost::contract::from_failure_handler &amp; f)'/>
<doc f='boost-1.85.0/libs/contract/include/boost/contract/core/exception.hpp' l='638'>/**
Set failure handler for exception guarantees.

Set a new failure handler and returns it.

@b Throws: This is declared @c noexcept (or @c throw() before C++11).

@param f New failure handler functor to set.

@return Same failure handler functor @p f passed as parameter (e.g., for
        concatenating function calls).

@see    @RefSect{advanced.throw_on_failures__and__noexcept__, Throw on Failure},
        @RefSect{tutorial.exception_guarantees, Exception Guarantees}
*/</doc>
