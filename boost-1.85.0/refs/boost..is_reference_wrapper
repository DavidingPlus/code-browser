<def f='boost-1.85.0/libs/core/include/boost/core/ref.hpp' l='238' ll='241'/>
<def f='boost-1.85.0/libs/core/include/boost/core/ref.hpp' l='246' ll='249'/>
<def f='boost-1.85.0/libs/core/include/boost/core/ref.hpp' l='253' ll='256'/>
<def f='boost-1.85.0/libs/core/include/boost/core/ref.hpp' l='258' ll='261'/>
<def f='boost-1.85.0/libs/core/include/boost/core/ref.hpp' l='263' ll='266'/>
<use f='boost-1.85.0/libs/function/include/boost/function/function_base.hpp' l='142'/>
<doc f='boost-1.85.0/libs/core/include/boost/core/ref.hpp' l='231'>/**
 @brief Determine if a type `T` is an instantiation of
 `reference_wrapper`.

 The value static constant will be true if the type `T` is a
 specialization of `reference_wrapper`.
*/</doc>
<doc f='boost-1.85.0/libs/core/include/boost/core/ref.hpp' l='243'>/**
 @cond
*/</doc>
<smbr r='boost::is_reference_wrapper::value' t='const bool'/>
<smbr r='boost::is_reference_wrapper{reference_wrapper{type-parameter-0-0}}::value' t='const bool'/>
<smbr r='boost::is_reference_wrapper{constreference_wrapper{type-parameter-0-0}}::value' t='const bool'/>
<smbr r='boost::is_reference_wrapper{volatilereference_wrapper{type-parameter-0-0}}::value' t='const bool'/>
<smbr r='boost::is_reference_wrapper{constvolatilereference_wrapper{type-parameter-0-0}}::value' t='const bool'/>
