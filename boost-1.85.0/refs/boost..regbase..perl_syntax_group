<dec f='boost-1.85.0/libs/regex/include/boost/regex/v5/regbase.hpp' l='42' type='0'/>
<use f='boost-1.85.0/libs/regex/include/boost/regex/v5/regbase.hpp' l='45' u='r'/>
<use f='boost-1.85.0/libs/regex/include/boost/regex/v5/basic_regex_parser.hpp' l='133' u='r' c='_ZN5boost13re_detail_50018basic_regex_parser5parseEPKT_S4_j'/>
<use f='boost-1.85.0/libs/regex/include/boost/regex/v5/basic_regex_parser.hpp' l='144' c='_ZN5boost13re_detail_50018basic_regex_parser5parseEPKT_S4_j'/>
<use f='boost-1.85.0/libs/regex/include/boost/regex/v5/basic_regex_parser.hpp' l='1280' c='_ZN5boost13re_detail_50018basic_regex_parser9parse_altEv'/>
<use f='boost-1.85.0/libs/regex/include/boost/regex/v5/basic_regex_parser.hpp' l='1937' c='_ZN5boost13re_detail_50018basic_regex_parser13parse_backrefEv'/>
<use f='boost-1.85.0/libs/regex/include/boost/regex/v5/basic_regex_parser.hpp' l='3089' c='_ZN5boost13re_detail_50018basic_regex_parser11unwind_altsEl'/>
<doc f='boost-1.85.0/libs/regex/include/boost/regex/v5/regbase.hpp' l='32'>//
      // Divide the flags up into logical groups:
      // bits 0-7 indicate main synatx type.
      // bits 8-15 indicate syntax subtype.
      // bits 16-31 indicate options that are common to all
      // regex syntaxes.
      // In all cases the default is 0.
      //
      // Main synatx group:
      //</doc>
<doc f='boost-1.85.0/libs/regex/include/boost/regex/v5/regbase.hpp' l='42'>// default</doc>
