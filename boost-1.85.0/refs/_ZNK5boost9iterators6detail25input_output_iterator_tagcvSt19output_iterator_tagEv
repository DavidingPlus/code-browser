<def f='boost-1.85.0/libs/iterator/include/boost/iterator/detail/facade_iterator_category.hpp' l='50' ll='53' type='std::output_iterator_tag boost::iterators::detail::input_output_iterator_tag::operator output_iterator_tag() const'/>
<doc f='boost-1.85.0/libs/iterator/include/boost/iterator/detail/facade_iterator_category.hpp' l='44'>// Using inheritance for only input_iterator_tag helps to avoid
    // ambiguities when a stdlib implementation dispatches on a
    // function which is overloaded on both input_iterator_tag and
    // output_iterator_tag, as STLPort does, in its __valid_range
    // function.  I claim it&apos;s better to avoid the ambiguity in these
    // cases.</doc>
