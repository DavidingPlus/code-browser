<def f='boost-1.85.0/libs/json/include/boost/json/value.hpp' l='922' ll='925' type='void boost::json::value::value(boost::json::object other)'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/value_ref.ipp' l='119' u='c' c='_ZN5boost4json9value_ref10make_valueESt16initializer_listIS1_ENS0_11storage_ptrE'/>
<doc f='boost-1.85.0/libs/json/include/boost/json/value.hpp' l='898'>/** Construct an @ref object.

        The value is constructed from `other`, using the
        same memory resource. To transfer ownership, use `std::move`:

        @par Example
        @code
        object obj( {{&quot;a&quot;,1}, {&quot;b&quot;,2}, {&quot;c&quot;},3}} );

        // transfer ownership
        value jv( std::move(obj) );

        assert( obj.empty() );
        assert( *obj.storage() == *jv.storage() );
        @endcode

        @par Complexity
        Constant.

        @par Exception Safety
        No-throw guarantee.

        @param other The object to construct with.
    */</doc>
