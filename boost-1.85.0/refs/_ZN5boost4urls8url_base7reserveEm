<def f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='186' ll='190' type='void boost::urls::url_base::reserve(std::size_t n)'/>
<use f='boost-1.85.0/libs/url/src/detail/pattern.cpp' l='137' u='c' c='_ZNK5boost4urls6detail7pattern5applyERNS0_8url_baseERKNS1_11format_argsE'/>
<use f='boost-1.85.0/libs/url/src/detail/pattern.cpp' l='266' u='c' c='_ZNK5boost4urls6detail7pattern5applyERNS0_8url_baseERKNS1_11format_argsE'/>
<use f='boost-1.85.0/libs/url/src/detail/pattern.cpp' l='293' u='c' c='_ZNK5boost4urls6detail7pattern5applyERNS0_8url_baseERKNS1_11format_argsE'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='170'>/** Adjust the capacity without changing the size

        This function adjusts the capacity
        of the container in characters, without
        affecting the current contents. Has
        no effect if `n &lt;= this-&gt;capacity()`.

        @par Exception Safety
        Strong guarantee.
        Calls to allocate may throw.

        @throw bad_alloc Allocation failure

        @param n The capacity in characters,
        excluding any null terminator.
    */</doc>
