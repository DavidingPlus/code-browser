<inh f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/core/quant_style.hpp' l='48' c='boost::xpressive::detail::quant_style'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/core/quant_style.hpp' l='113' ll='116'/>
<ovr f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/core/matcher/alternate_end_matcher.hpp' l='28' c='boost::xpressive::detail::alternate_end_matcher'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/core/matcher/alternate_end_matcher.hpp' l='29'/>
<ovr f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/core/matcher/assert_line_base.hpp' l='27' c='boost::xpressive::detail::assert_line_base'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/core/matcher/assert_line_base.hpp' l='28'/>
<ovr f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/core/matcher/assert_word_matcher.hpp' l='81' c='boost::xpressive::detail::assert_word_matcher'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/core/matcher/assert_word_matcher.hpp' l='82'/>
<ovr f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/core/matcher/end_matcher.hpp' l='29' c='boost::xpressive::detail::end_matcher'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/core/matcher/end_matcher.hpp' l='30'/>
<ovr f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/core/matcher/end_matcher.hpp' l='80' c='boost::xpressive::detail::independent_end_matcher'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/core/matcher/end_matcher.hpp' l='81'/>
<ovr f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/core/matcher/true_matcher.hpp' l='26' c='boost::xpressive::detail::true_matcher'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/core/matcher/true_matcher.hpp' l='27'/>
<size>1</size>
<doc f='boost-1.85.0/libs/xpressive/include/boost/xpressive/detail/core/quant_style.hpp' l='110'>///////////////////////////////////////////////////////////////////////////////
// quant_style_assertion
//  a zero-width assertion.</doc>
