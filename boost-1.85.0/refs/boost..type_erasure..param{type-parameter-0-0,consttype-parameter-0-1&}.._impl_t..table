<use f='boost-1.85.0/libs/type_erasure/include/boost/type_erasure/param.hpp' l='205' u='w' c='_ZN5boost12type_erasure5paramIT_RKT0_E7_impl_tC1ERKNS0_6detail7storageERKNS0_7bindingIS2_EE'/>
<use f='boost-1.85.0/libs/type_erasure/include/boost/type_erasure/param.hpp' l='208' u='w' c='_ZN5boost12type_erasure5paramIT_RKT0_E7_impl_tC1ERKNS0_3anyIS2_S3_EE'/>
<dec f='boost-1.85.0/libs/type_erasure/include/boost/type_erasure/param.hpp' l='214' type='const ::boost::type_erasure::binding&lt;Concept&gt; &amp;'/>
<doc f='boost-1.85.0/libs/type_erasure/include/boost/type_erasure/param.hpp' l='211'>// It&apos;s safe to capture the table by reference, because
        // the user&apos;s argument should out-live us.  storage is
        // just a void*, so we don&apos;t need to add indirection.</doc>
