<use f='boost-1.85.0/libs/range/include/boost/range/concepts.hpp' l='289' u='r' c='_ZN5boost22SinglePassRangeConceptD1Ev'/>
<use f='boost-1.85.0/libs/range/include/boost/range/concepts.hpp' l='290' u='r' c='_ZN5boost22SinglePassRangeConceptD1Ev'/>
<use f='boost-1.85.0/libs/range/include/boost/range/concepts.hpp' l='295' u='r' c='_ZN5boost22SinglePassRangeConceptD1Ev'/>
<dec f='boost-1.85.0/libs/range/include/boost/range/concepts.hpp' l='312' type='boost::SinglePassRangeConcept::Rng *'/>
<doc f='boost-1.85.0/libs/range/include/boost/range/concepts.hpp' l='308'>// Rationale:
       // The type of m_range is T* rather than T because it allows
       // T to be an abstract class. The other obvious alternative of
       // T&amp; produces a warning on some compilers.</doc>
