<inh f='boost-1.85.0/libs/log/include/boost/log/attributes/attribute.hpp' l='59' c='boost::log::attribute'/>
<def f='boost-1.85.0/libs/log/include/boost/log/attributes/timer.hpp' l='53' ll='73'/>
<size>8</size>
<doc f='boost-1.85.0/libs/log/include/boost/log/attributes/timer.hpp' l='34'>/*!
 * \brief A class of an attribute that makes an attribute value of the time interval since construction
 *
 * The timer attribute calculates the time passed since its construction and returns it on value acquisition.
 * The attribute value type is &lt;tt&gt;boost::posix_time::time_duration&lt;/tt&gt;.
 *
 * On Windows platform there are two implementations of the attribute. The default one is more precise but
 * a bit slower. This version uses &lt;tt&gt;QueryPerformanceFrequence&lt;/tt&gt;/&lt;tt&gt;QueryPerformanceCounter&lt;/tt&gt; API
 * to calculate elapsed time.
 *
 * There are known problems with these functions when used with some CPUs, notably AMD Athlon with
 * Cool&apos;n&apos;Quiet technology enabled. See the following links for more information and possible resolutions:
 *
 * http://support.microsoft.com/?scid=kb;en-us;895980
 * http://support.microsoft.com/?id=896256
 *
 * In case if none of these solutions apply, you are free to define &lt;tt&gt;BOOST_LOG_NO_QUERY_PERFORMANCE_COUNTER&lt;/tt&gt; macro to
 * fall back to another implementation based on Boost.DateTime.
 */</doc>
<fun r='_ZN5boost3log12v2s_mt_posix10attributes5timerC1Ev'/>
<fun r='_ZN5boost3log12v2s_mt_posix10attributes5timerC1ERKNS2_11cast_sourceE'/>
<fun r='_ZN5boost3log12v2s_mt_posix10attributes5timerC1Ev'/>
<fun r='_ZN5boost3log12v2s_mt_posix10attributes5timerC1ERKNS2_11cast_sourceE'/>
