<dec f='include/unicode/unistr.h' l='2861' type='void icu_66::UnicodeString::releaseBuffer(int32_t newLength = -1)'/>
<doc f='include/unicode/unistr.h' l='2841'>/**
   * Release a read/write buffer on a UnicodeString object with an
   * &quot;open&quot; getBuffer(minCapacity).
   * This function must be called in a matched pair with getBuffer(minCapacity).
   * releaseBuffer(newLength) must be called if and only if a getBuffer(minCapacity) is &quot;open&quot;.
   *
   * It will set the string length to newLength, at most to the current capacity.
   * If newLength==-1 then it will set the length according to the
   * first NUL in the buffer, or to the capacity if there is no NUL.
   *
   * After calling releaseBuffer(newLength) the UnicodeString is back to normal operation.
   *
   * @param newLength the new length of the UnicodeString object;
   *        defaults to the current capacity if newLength is greater than that;
   *        if newLength==-1, it defaults to u_strlen(buffer) but not more than
   *        the current capacity of the string
   *
   * @see getBuffer(int32_t minCapacity)
   * @stable ICU 2.0
   */</doc>
