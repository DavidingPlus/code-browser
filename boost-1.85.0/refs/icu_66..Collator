<inh f='include/unicode/uobject.h' l='223' c='icu_66::UObject'/>
<def f='include/unicode/coll.h' l='167' ll='1213'/>
<use f='include/unicode/coll.h' l='256' c='_ZNK6icu_668CollatoreqERKS0_'/>
<use f='include/unicode/coll.h' l='265' c='_ZNK6icu_668CollatorneERKS0_'/>
<use f='include/unicode/coll.h' l='272' c='_ZNK6icu_668Collator5cloneEv'/>
<use f='include/unicode/coll.h' l='293' c='_ZN6icu_668Collator14createInstanceER10UErrorCode'/>
<use f='include/unicode/coll.h' l='328' c='_ZN6icu_668Collator14createInstanceERKNS_6LocaleER10UErrorCode'/>
<use f='include/unicode/coll.h' l='820' c='_ZN6icu_668Collator16registerInstanceEPS0_RKNS_6LocaleER10UErrorCode'/>
<use f='include/unicode/coll.h' l='909' c='_ZN6icu_668Collator14setMaxVariableE15UColReorderCodeR10UErrorCode'/>
<use f='include/unicode/coll.h' l='999' c='_ZNK6icu_668Collator9safeCloneEv'/>
<use f='include/unicode/coll.h' l='1124' c='_ZN6icu_668CollatorC1ERKS0_'/>
<use f='include/unicode/coll.h' l='1184' c='_ZN6icu_668Collator13fromUCollatorEP9UCollator'/>
<use f='include/unicode/coll.h' l='1185' c='_ZN6icu_668Collator13fromUCollatorEP9UCollator'/>
<use f='include/unicode/coll.h' l='1188' c='_ZN6icu_668Collator13fromUCollatorEPK9UCollator'/>
<use f='include/unicode/coll.h' l='1189' c='_ZN6icu_668Collator13fromUCollatorEPK9UCollator'/>
<use f='include/unicode/coll.h' l='1205' c='_ZN6icu_668CollatoraSERKS0_'/>
<use f='include/unicode/coll.h' l='1205' c='_ZN6icu_668CollatoraSERKS0_'/>
<use f='include/unicode/coll.h' l='1211' c='_ZN6icu_668Collator12makeInstanceERKNS_6LocaleER10UErrorCode'/>
<use f='include/unicode/coll.h' l='1257' c='_ZN6icu_6615CollatorFactory14createCollatorERKNS_6LocaleE'/>
<use f='boost-1.85.0/libs/locale/src/boost/locale/icu/collator.cpp' l='106' c='_ZNK5boost6locale8impl_icu12collate_impl18do_basic_transformENS0_13collate_levelEPKT_S6_'/>
<use f='boost-1.85.0/libs/locale/src/boost/locale/icu/collator.cpp' l='131' c='_ZNK5boost6locale8impl_icu12collate_impl12get_collatorENS0_13collate_levelE'/>
<use f='boost-1.85.0/libs/locale/src/boost/locale/icu/collator.cpp' l='140' c='_ZNK5boost6locale8impl_icu12collate_impl12get_collatorENS0_13collate_levelE'/>
<use f='boost-1.85.0/libs/locale/src/boost/locale/icu/collator.cpp' l='143' c='_ZNK5boost6locale8impl_icu12collate_impl12get_collatorENS0_13collate_levelE'/>
<use f='boost-1.85.0/libs/locale/src/boost/locale/icu/collator.cpp' l='158'/>
<size>8</size>
<doc f='include/unicode/coll.h' l='86'>/**
* The &lt;code&gt;Collator&lt;/code&gt; class performs locale-sensitive string
* comparison.&lt;br&gt;
* You use this class to build searching and sorting routines for natural
* language text.
* &lt;p&gt;
* &lt;code&gt;Collator&lt;/code&gt; is an abstract base class. Subclasses implement
* specific collation strategies. One subclass,
* &lt;code&gt;RuleBasedCollator&lt;/code&gt;, is currently provided and is applicable
* to a wide set of languages. Other subclasses may be created to handle more
* specialized needs.
* &lt;p&gt;
* Like other locale-sensitive classes, you can use the static factory method,
* &lt;code&gt;createInstance&lt;/code&gt;, to obtain the appropriate
* &lt;code&gt;Collator&lt;/code&gt; object for a given locale. You will only need to
* look at the subclasses of &lt;code&gt;Collator&lt;/code&gt; if you need to
* understand the details of a particular collation strategy or if you need to
* modify that strategy.
* &lt;p&gt;
* The following example shows how to compare two strings using the
* &lt;code&gt;Collator&lt;/code&gt; for the default locale.
* \htmlonly&lt;blockquote&gt;\endhtmlonly
* &lt;pre&gt;
* \code
* // Compare two strings in the default locale
* UErrorCode success = U_ZERO_ERROR;
* Collator* myCollator = Collator::createInstance(success);
* if (myCollator-&gt;compare(&quot;abc&quot;, &quot;ABC&quot;) &lt; 0)
*   cout &lt;&lt; &quot;abc is less than ABC&quot; &lt;&lt; endl;
* else
*   cout &lt;&lt; &quot;abc is greater than or equal to ABC&quot; &lt;&lt; endl;
* \endcode
* &lt;/pre&gt;
* \htmlonly&lt;/blockquote&gt;\endhtmlonly
* &lt;p&gt;
* You can set a &lt;code&gt;Collator&lt;/code&gt;&apos;s &lt;em&gt;strength&lt;/em&gt; attribute to
* determine the level of difference considered significant in comparisons.
* Five strengths are provided: &lt;code&gt;PRIMARY&lt;/code&gt;, &lt;code&gt;SECONDARY&lt;/code&gt;,
* &lt;code&gt;TERTIARY&lt;/code&gt;, &lt;code&gt;QUATERNARY&lt;/code&gt; and &lt;code&gt;IDENTICAL&lt;/code&gt;.
* The exact assignment of strengths to language features is locale dependent.
* For example, in Czech, &quot;e&quot; and &quot;f&quot; are considered primary differences,
* while &quot;e&quot; and &quot;\u00EA&quot; are secondary differences, &quot;e&quot; and &quot;E&quot; are tertiary
* differences and &quot;e&quot; and &quot;e&quot; are identical. The following shows how both case
* and accents could be ignored for US English.
* \htmlonly&lt;blockquote&gt;\endhtmlonly
* &lt;pre&gt;
* \code
* //Get the Collator for US English and set its strength to PRIMARY
* UErrorCode success = U_ZERO_ERROR;
* Collator* usCollator = Collator::createInstance(Locale::getUS(), success);
* usCollator-&gt;setStrength(Collator::PRIMARY);
* if (usCollator-&gt;compare(&quot;abc&quot;, &quot;ABC&quot;) == 0)
*     cout &lt;&lt; &quot;&apos;abc&apos; and &apos;ABC&apos; strings are equivalent with strength PRIMARY&quot; &lt;&lt; endl;
* \endcode
* &lt;/pre&gt;
* \htmlonly&lt;/blockquote&gt;\endhtmlonly
*
* The &lt;code&gt;getSortKey&lt;/code&gt; methods
* convert a string to a series of bytes that can be compared bitwise against
* other sort keys using &lt;code&gt;strcmp()&lt;/code&gt;. Sort keys are written as
* zero-terminated byte strings.
*
* Another set of APIs returns a &lt;code&gt;CollationKey&lt;/code&gt; object that wraps
* the sort key bytes instead of returning the bytes themselves.
* &lt;/p&gt;
* &lt;p&gt;
* &lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;Collator&lt;/code&gt;s with different Locale,
* and CollationStrength settings will return different sort
* orders for the same set of strings. Locales have specific collation rules,
* and the way in which secondary and tertiary differences are taken into
* account, for example, will result in a different sorting order for same
* strings.
* &lt;/p&gt;
* @see         RuleBasedCollator
* @see         CollationKey
* @see         CollationElementIterator
* @see         Locale
* @see         Normalizer2
* @version     2.0 11/15/01
*/</doc>
<fun r='_ZN6icu_668CollatorD1Ev'/>
<fun r='_ZNK6icu_668CollatoreqERKS0_'/>
<fun r='_ZNK6icu_668CollatorneERKS0_'/>
<fun r='_ZNK6icu_668Collator5cloneEv'/>
<fun r='_ZN6icu_668Collator14createInstanceER10UErrorCode'/>
<fun r='_ZN6icu_668Collator14createInstanceERKNS_6LocaleER10UErrorCode'/>
<fun r='_ZNK6icu_668Collator7compareERKNS_13UnicodeStringES3_'/>
<fun r='_ZNK6icu_668Collator7compareERKNS_13UnicodeStringES3_R10UErrorCode'/>
<fun r='_ZNK6icu_668Collator7compareERKNS_13UnicodeStringES3_i'/>
<fun r='_ZNK6icu_668Collator7compareERKNS_13UnicodeStringES3_iR10UErrorCode'/>
<fun r='_ZNK6icu_668Collator7compareEPKDsiS2_i'/>
<fun r='_ZNK6icu_668Collator7compareEPKDsiS2_iR10UErrorCode'/>
<fun r='_ZNK6icu_668Collator7compareER13UCharIteratorS2_R10UErrorCode'/>
<fun r='_ZNK6icu_668Collator11compareUTF8ERKNS_11StringPieceES3_R10UErrorCode'/>
<fun r='_ZNK6icu_668Collator15getCollationKeyERKNS_13UnicodeStringERNS_12CollationKeyER10UErrorCode'/>
<fun r='_ZNK6icu_668Collator15getCollationKeyEPKDsiRNS_12CollationKeyER10UErrorCode'/>
<fun r='_ZNK6icu_668Collator8hashCodeEv'/>
<fun r='_ZNK6icu_668Collator9getLocaleE18ULocDataLocaleTypeR10UErrorCode'/>
<fun r='_ZNK6icu_668Collator7greaterERKNS_13UnicodeStringES3_'/>
<fun r='_ZNK6icu_668Collator14greaterOrEqualERKNS_13UnicodeStringES3_'/>
<fun r='_ZNK6icu_668Collator6equalsERKNS_13UnicodeStringES3_'/>
<fun r='_ZNK6icu_668Collator11getStrengthEv'/>
<fun r='_ZN6icu_668Collator11setStrengthENS0_18ECollationStrengthE'/>
<fun r='_ZNK6icu_668Collator15getReorderCodesEPiiR10UErrorCode'/>
<fun r='_ZN6icu_668Collator15setReorderCodesEPKiiR10UErrorCode'/>
<fun r='_ZN6icu_668Collator25getEquivalentReorderCodesEiPiiR10UErrorCode'/>
<fun r='_ZN6icu_668Collator14getDisplayNameERKNS_6LocaleES3_RNS_13UnicodeStringE'/>
<fun r='_ZN6icu_668Collator14getDisplayNameERKNS_6LocaleERNS_13UnicodeStringE'/>
<fun r='_ZN6icu_668Collator19getAvailableLocalesERi'/>
<fun r='_ZN6icu_668Collator19getAvailableLocalesEv'/>
<fun r='_ZN6icu_668Collator11getKeywordsER10UErrorCode'/>
<fun r='_ZN6icu_668Collator16getKeywordValuesEPKcR10UErrorCode'/>
<fun r='_ZN6icu_668Collator25getKeywordValuesForLocaleEPKcRKNS_6LocaleEaR10UErrorCode'/>
<fun r='_ZN6icu_668Collator23getFunctionalEquivalentEPKcRKNS_6LocaleERaR10UErrorCode'/>
<fun r='_ZN6icu_668Collator16registerInstanceEPS0_RKNS_6LocaleER10UErrorCode'/>
<fun r='_ZN6icu_668Collator15registerFactoryEPNS_15CollatorFactoryER10UErrorCode'/>
<fun r='_ZN6icu_668Collator10unregisterEPKvR10UErrorCode'/>
<fun r='_ZNK6icu_668Collator10getVersionEPh'/>
<fun r='_ZNK6icu_668Collator17getDynamicClassIDEv'/>
<fun r='_ZN6icu_668Collator12setAttributeE13UColAttribute18UColAttributeValueR10UErrorCode'/>
<fun r='_ZNK6icu_668Collator12getAttributeE13UColAttributeR10UErrorCode'/>
<fun r='_ZN6icu_668Collator14setMaxVariableE15UColReorderCodeR10UErrorCode'/>
<fun r='_ZNK6icu_668Collator14getMaxVariableEv'/>
<fun r='_ZN6icu_668Collator14setVariableTopEPKDsiR10UErrorCode'/>
<fun r='_ZN6icu_668Collator14setVariableTopERKNS_13UnicodeStringER10UErrorCode'/>
<fun r='_ZN6icu_668Collator14setVariableTopEjR10UErrorCode'/>
<fun r='_ZNK6icu_668Collator14getVariableTopER10UErrorCode'/>
<fun r='_ZNK6icu_668Collator14getTailoredSetER10UErrorCode'/>
<fun r='_ZNK6icu_668Collator9safeCloneEv'/>
<fun r='_ZNK6icu_668Collator10getSortKeyERKNS_13UnicodeStringEPhi'/>
<fun r='_ZNK6icu_668Collator10getSortKeyEPKDsiPhi'/>
<fun r='_ZN6icu_668Collator8getBoundEPKhi13UColBoundModejPhiR10UErrorCode'/>
<fun r='_ZN6icu_668CollatorC1Ev'/>
<fun r='_ZN6icu_668CollatorC1E18UColAttributeValue18UNormalizationMode'/>
<fun r='_ZN6icu_668CollatorC1ERKS0_'/>
<fun r='_ZN6icu_668Collator10setLocalesERKNS_6LocaleES3_S3_'/>
<fun r='_ZNK6icu_668Collator32internalGetShortDefinitionStringEPKcPciR10UErrorCode'/>
<fun r='_ZNK6icu_668Collator19internalCompareUTF8EPKciS2_iR10UErrorCode'/>
<fun r='_ZNK6icu_668Collator23internalNextSortKeyPartEP13UCharIteratorPjPhiR10UErrorCode'/>
<fun r='_ZN6icu_668Collator13fromUCollatorEP9UCollator'/>
<fun r='_ZN6icu_668Collator13fromUCollatorEPK9UCollator'/>
<fun r='_ZN6icu_668Collator11toUCollatorEv'/>
<fun r='_ZNK6icu_668Collator11toUCollatorEv'/>
<fun r='_ZN6icu_668CollatoraSERKS0_'/>
<fun r='_ZN6icu_668Collator12makeInstanceERKNS_6LocaleER10UErrorCode'/>
