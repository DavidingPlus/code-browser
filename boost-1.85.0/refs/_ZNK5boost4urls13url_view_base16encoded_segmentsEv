<dec f='boost-1.85.0/libs/url/include/boost/url/url_view_base.hpp' l='1807' type='boost::urls::segments_encoded_view boost::urls::url_view_base::encoded_segments() const'/>
<use f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='1919' u='c' c='_ZNK5boost4urls8url_base16encoded_segmentsEv'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/url_view_base.hpp' l='1759'>/** Return the path as a container of segments

        This function returns a bidirectional
        view of strings over the path.
        The returned view references the same
        underlying character buffer; ownership
        is not transferred.
        Strings returned when iterating the
        range may contain percent escapes.

        @par Example
        @code
        segments_encoded_view sv = url_view( &quot;/path/to/file.txt&quot; ).encoded_segments();
        @endcode

        @par Complexity
        Constant.

        @par Exception Safety
        Throws nothing.

        @par BNF
        @code
        path          = path-abempty    ; begins with &quot;/&quot; or is empty
                      / path-absolute   ; begins with &quot;/&quot; but not &quot;//&quot;
                      / path-noscheme   ; begins with a non-colon segment
                      / path-rootless   ; begins with a segment
                      / path-empty      ; zero characters

        path-abempty  = *( &quot;/&quot; segment )
        path-absolute = &quot;/&quot; [ segment-nz *( &quot;/&quot; segment ) ]
        path-noscheme = segment-nz-nc *( &quot;/&quot; segment )
        path-rootless = segment-nz *( &quot;/&quot; segment )
        path-empty    = 0&lt;pchar&gt;
        @endcode

        @par Specification
        @li &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc3986#section-3.3&quot;
            &gt;3.3. Path (rfc3986)&lt;/a&gt;

        @see
            @ref is_path_absolute,
            @ref encoded_path,
            @ref path,
            @ref segments,
            @ref segments_encoded_view.
    */</doc>
<use f='boost-1.85.0/libs/url/src/url_base.cpp' l='1641' u='c' c='_ZN5boost4urls8url_base7resolveERKNS0_13url_view_baseE'/>
<use f='boost-1.85.0/libs/url/src/url_base.cpp' l='1642' u='c' c='_ZN5boost4urls8url_base7resolveERKNS0_13url_view_baseE'/>
<def f='boost-1.85.0/libs/url/src/url_view_base.cpp' l='495' ll='501' type='boost::urls::segments_encoded_view boost::urls::url_view_base::encoded_segments() const'/>
<use f='boost-1.85.0/libs/url/src/url_view_base.cpp' l='693' u='c' c='_ZNK5boost4urls13url_view_base7compareERKS1_'/>
<use f='boost-1.85.0/libs/url/src/url_view_base.cpp' l='694' u='c' c='_ZNK5boost4urls13url_view_base7compareERKS1_'/>
