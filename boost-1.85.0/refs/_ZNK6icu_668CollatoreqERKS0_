<dec f='include/unicode/coll.h' l='256' type='UBool icu_66::Collator::operator==(const icu_66::Collator &amp; other) const'/>
<doc f='include/unicode/coll.h' l='238'>/**
     * Returns TRUE if &quot;other&quot; is the same as &quot;this&quot;.
     *
     * The base class implementation returns TRUE if &quot;other&quot; has the same type/class as &quot;this&quot;:
     * `typeid(*this) == typeid(other)`.
     *
     * Subclass implementations should do something like the following:
     *
     *     if (this == &amp;other) { return TRUE; }
     *     if (!Collator::operator==(other)) { return FALSE; }  // not the same class
     *
     *     const MyCollator &amp;o = (const MyCollator&amp;)other;
     *     (compare this vs. o&apos;s subclass fields)
     *
     * @param other Collator object to be compared
     * @return TRUE if other is the same as this.
     * @stable ICU 2.0
     */</doc>
