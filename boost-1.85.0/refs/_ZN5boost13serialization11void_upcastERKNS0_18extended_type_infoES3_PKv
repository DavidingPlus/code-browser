<dec f='boost-1.85.0/libs/serialization/include/boost/serialization/void_cast.hpp' l='52' type='const void * boost::serialization::void_upcast(const boost::serialization::extended_type_info &amp; derived, const boost::serialization::extended_type_info &amp; base, const void *const t)'/>
<use f='boost-1.85.0/libs/serialization/include/boost/serialization/void_cast.hpp' l='64' u='c' c='_ZN5boost13serialization11void_upcastERKNS0_18extended_type_infoES3_Pv'/>
<dec f='boost-1.85.0/libs/serialization/include/boost/serialization/void_cast.hpp' l='98' type='const void * boost::serialization::void_upcast(const boost::serialization::extended_type_info &amp; derived, const boost::serialization::extended_type_info &amp; base, const void *const )'/>
<doc f='boost-1.85.0/libs/serialization/include/boost/serialization/void_cast.hpp' l='46'>// Given a void *, assume that it really points to an instance of one type
// and alter it so that it would point to an instance of a related type.
// Return the altered pointer. If there exists no sequence of casts that
// can transform from_type to to_type, return a NULL.</doc>
<use f='boost-1.85.0/libs/serialization/src/void_cast.cpp' l='173' u='c' c='_ZNK5boost13serialization16void_cast_detail20void_caster_shortcut10vbc_upcastEPKv'/>
<dec f='boost-1.85.0/libs/serialization/src/void_cast.cpp' l='318' type='const void * boost::serialization::void_upcast(const boost::serialization::extended_type_info &amp; derived, const boost::serialization::extended_type_info &amp; base, const void *const t)'/>
<def f='boost-1.85.0/libs/serialization/src/void_cast.cpp' l='328' ll='349' type='const void * boost::serialization::void_upcast(const boost::serialization::extended_type_info &amp; derived, const boost::serialization::extended_type_info &amp; base, const void *const t)'/>
<doc f='boost-1.85.0/libs/serialization/src/void_cast.cpp' l='324'>// Given a void *, assume that it really points to an instance of one type
// and alter it so that it would point to an instance of a related type.
// Return the altered pointer. If there exists no sequence of casts that
// can transform from_type to to_type, return a NULL.  </doc>
