<def f='boost-1.85.0/libs/wave/include/boost/wave/cpplexer/validate_universal_char.hpp' l='72' ll='205' type='boost::wave::cpplexer::impl::universal_char_type boost::wave::cpplexer::impl::classify_universal_char(unsigned long ch)'/>
<doc f='boost-1.85.0/libs/wave/include/boost/wave/cpplexer/validate_universal_char.hpp' l='51'>///////////////////////////////////////////////////////////////////////////////
//
//  classify_universal_char
//
//      This function classifies an universal character value into 4 subranges:
//      universal_char_type_valid
//          the universal character value is valid for identifiers
//      universal_char_type_invalid
//          the universal character value is not valid for its usage inside
//          identifiers (see C++ Standard: 2.2.2 [lex.charset])
//      universal_char_type_base_charset
//          the universal character value designates a character from the base
//          character set
//      universal_char_type_not_allowed_for_identifiers
//          the universal character value is not allowed in an identifier
//
//  Implementation note:
//      This classification isn&apos;t implemented very effectively here. This
//      function should be rewritten with some range run matching algorithm.
//
///////////////////////////////////////////////////////////////////////////////</doc>
