<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/basic_regex.hpp' l='161' ll='164' type='void boost::xpressive::basic_regex::swap(basic_regex&lt;BidiIter&gt; &amp; that)'/>
<doc f='boost-1.85.0/libs/xpressive/include/boost/xpressive/basic_regex.hpp' l='151'>/// Swaps the contents of this basic_regex object with another.
    ///
    /// \param      that The other basic_regex object.
    /// \attention  This is a shallow swap that does not do reference tracking.
    ///             If you embed a basic_regex object by reference in another
    ///             regular expression and then swap its contents with another
    ///             basic_regex object, the change will not be visible to the
    ///             enclosing regular expression. It is done this way to ensure
    ///             that swap() cannot throw.
    /// \throw      nothrow</doc>
<doc f='boost-1.85.0/libs/xpressive/include/boost/xpressive/basic_regex.hpp' l='161'>// throw()</doc>
