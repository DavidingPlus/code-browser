<def f='boost-1.85.0/libs/json/include/boost/json/parser.hpp' l='797' ll='803' type='std::size_t boost::json::parser::write(boost::json::string_view s)'/>
<doc f='boost-1.85.0/libs/json/include/boost/json/parser.hpp' l='765'>/** Parse a buffer containing a complete JSON text.

        This function parses a complete JSON text contained
        in the specified character buffer. The entire
        buffer must be consumed; if there are additional
        characters past the end of the complete JSON text,
        the parse fails and an error is returned.

        @par Example
        @code
        parser p;                                       // construct a parser
        size_t n = p.write( &quot;[1,2,3]&quot; );                // parse a complete JSON text
        assert( n == 7 );                               // all characters consumed
        value jv = p.release();                         // take ownership of the value
        @endcode

        @par Complexity
        Linear in `size`.

        @par Exception Safety
        Basic guarantee.
        Calls to `memory_resource::allocate` may throw.
        Upon error or exception, subsequent calls will
        fail until @ref reset is called to parse a new JSON text.

        @return The number of characters consumed from
        the buffer.

        @param s The character string to parse.

        @throw `boost::system::system_error` Thrown on error.
    */</doc>
