<dec f='boost-1.85.0/libs/url/include/boost/url/params_ref.hpp' l='849' type='boost::urls::params_base::iterator boost::urls::params_ref::set(boost::urls::params_base::iterator pos, core::string_view value)'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/params_ref.hpp' l='814'>/** Set a value

        This function replaces the value of an
        element at the specified position.

        &lt;br&gt;
        All iterators that are equal to
        `pos` or come after are invalidated.

        @par Example
        @code
        url u( &quot;?id=42&amp;id=69&quot; );

        u.params().set( u.params().begin(), &quot;none&quot; );

        assert( u.encoded_query() == &quot;id=none&amp;id=69&quot; );
        @endcode

        @par Complexity
        Linear in `this-&gt;url().encoded_query().size()`.

        @par Exception Safety
        Strong guarantee.
        Calls to allocate may throw.

        @return An iterator to the element.

        @param pos An iterator to the element.

        @param value The value to assign. The
        empty string still counts as a value.
        That is, `has_value` for the element
        is true.
    */</doc>
<def f='boost-1.85.0/libs/url/src/params_ref.cpp' l='172' ll='187' type='boost::urls::params_base::iterator boost::urls::params_ref::set(boost::urls::params_base::iterator pos, core::string_view value)'/>
<use f='boost-1.85.0/libs/url/src/params_ref.cpp' l='203' u='c' c='_ZN5boost4urls10params_ref3setENS_4core17basic_string_viewIcEES4_NS0_17ignore_case_paramE'/>
