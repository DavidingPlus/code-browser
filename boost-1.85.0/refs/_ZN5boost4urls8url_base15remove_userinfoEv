<dec f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='577' type='boost::urls::url_base &amp; boost::urls::url_base::remove_userinfo()'/>
<use f='boost-1.85.0/libs/url/include/boost/url/url.hpp' l='425' u='c' c='_ZN5boost4urls3url15remove_userinfoEv'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='539'>/** Remove the userinfo

        This function removes the userinfo if
        present, without removing any authority.

        @par Example
        @code
        assert( url( &quot;http://user@example.com&quot; ).remove_userinfo().has_userinfo() == false );
        @endcode

        @par Postconditions
        @code
        this-&gt;has_userinfo() == false &amp;&amp; this-&gt;encoded_userinfo().empty == true
        @endcode

        @par Complexity
        Linear in `this-&gt;size()`.

        @par Exception Safety
        Throws nothing.

        @par BNF
        @code
        userinfo      = [ [ user ] [ &apos;:&apos; password ] ]

        user          = *( unreserved / pct-encoded / sub-delims )
        password      = *( unreserved / pct-encoded / sub-delims / &quot;:&quot; )
        @endcode

        @par Specification
        @li &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc3986#section-3.2.1&quot;&gt;
            3.2.1. User Information (rfc3986)&lt;/a&gt;

        @see
            @ref set_encoded_userinfo,
            @ref set_userinfo.
    */</doc>
<use f='boost-1.85.0/libs/url/include/boost/url/static_url.hpp' l='361' u='c' c='_ZN5boost4urls10static_url15remove_userinfoEv'/>
<def f='boost-1.85.0/libs/url/src/url_base.cpp' l='449' ll='463' type='boost::urls::url_base &amp; boost::urls::url_base::remove_userinfo()'/>
