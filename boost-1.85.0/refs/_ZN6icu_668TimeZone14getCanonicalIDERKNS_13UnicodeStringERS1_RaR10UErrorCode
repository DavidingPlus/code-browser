<dec f='include/unicode/timezone.h' l='382' type='static icu_66::UnicodeString &amp; icu_66::TimeZone::getCanonicalID(const icu_66::UnicodeString &amp; id, icu_66::UnicodeString &amp; canonicalID, UBool &amp; isSystemID, UErrorCode &amp; status)'/>
<doc f='include/unicode/timezone.h' l='367'>/**
     * Returns the canonical system time zone ID or the normalized
     * custom time zone ID for the given time zone ID.
     * @param id            The input time zone ID to be canonicalized.
     * @param canonicalID   Receives the canonical system time zone ID
     *                      or the custom time zone ID in normalized format.
     * @param isSystemID    Receives if the given ID is a known system
     *                      time zone ID.
     * @param status        Receives the status.  When the given time zone ID
     *                      is neither a known system time zone ID nor a
     *                      valid custom time zone ID, U_ILLEGAL_ARGUMENT_ERROR
     *                      is set.
     * @return A reference to the result.
     * @stable ICU 4.0
     */</doc>
