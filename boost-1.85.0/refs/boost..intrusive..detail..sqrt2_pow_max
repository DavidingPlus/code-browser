<def f='boost-1.85.0/libs/intrusive/include/boost/intrusive/detail/math.hpp' l='211' ll='216'/>
<def f='boost-1.85.0/libs/intrusive/include/boost/intrusive/detail/math.hpp' l='220' ll='225'/>
<use f='boost-1.85.0/libs/intrusive/include/boost/intrusive/detail/math.hpp' l='233' c='_ZN5boost9intrusive6detail17sqrt2_pow_2xplus1Em'/>
<use f='boost-1.85.0/libs/intrusive/include/boost/intrusive/detail/math.hpp' l='234' c='_ZN5boost9intrusive6detail17sqrt2_pow_2xplus1Em'/>
<smbr r='boost::intrusive::detail::sqrt2_pow_max{type-parameter-0-0,typenamevoider{typenameenable_if{numbits_eq{type-parameter-0-0,32UL},enable_if_nat}::type}::type}::value' t='const SizeType'/>
<smbr r='boost::intrusive::detail::sqrt2_pow_max{type-parameter-0-0,typenamevoider{typenameenable_if{numbits_eq{type-parameter-0-0,32UL},enable_if_nat}::type}::type}::pow' t='const std::size_t'/>
<smbr r='boost::intrusive::detail::sqrt2_pow_max{type-parameter-0-0,typenamevoider{typenameenable_if{numbits_eq{type-parameter-0-0,64UL},enable_if_nat}::type}::type}::value' t='const SizeType'/>
<smbr r='boost::intrusive::detail::sqrt2_pow_max{type-parameter-0-0,typenamevoider{typenameenable_if{numbits_eq{type-parameter-0-0,64UL},enable_if_nat}::type}::type}::pow' t='const std::size_t'/>
