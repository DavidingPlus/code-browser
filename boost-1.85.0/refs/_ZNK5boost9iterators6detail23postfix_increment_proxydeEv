<def f='boost-1.85.0/libs/iterator/include/boost/iterator/iterator_facade.hpp' l='169' ll='172' type='boost::iterators::detail::postfix_increment_proxy::value_type &amp; boost::iterators::detail::postfix_increment_proxy::operator*() const'/>
<doc f='boost-1.85.0/libs/iterator/include/boost/iterator/iterator_facade.hpp' l='164'>// Returning a mutable reference allows nonsense like
        // (*r++).mutate(), but it imposes fewer assumptions about the
        // behavior of the value_type.  In particular, recall that
        // (*r).mutate() is legal if operator* returns by value.
        // Provides readability of *r++</doc>
