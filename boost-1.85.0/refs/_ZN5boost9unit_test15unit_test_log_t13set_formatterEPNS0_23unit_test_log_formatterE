<dec f='boost-1.85.0/libs/test/include/boost/test/unit_test_log.hpp' l='192' type='void boost::unit_test::unit_test_log_t::set_formatter(boost::unit_test::unit_test_log_formatter * )'/>
<doc f='boost-1.85.0/libs/test/include/boost/test/unit_test_log.hpp' l='178'>//! Sets the logger instance
    //!
    //! The specified logger becomes the unique active one. The custom log formatter has the
    //! format @c OF_CUSTOM_LOGGER. If such a format exists already, its formatter gets replaced by the one
    //! given in argument.
    //!
    //! The log level and output stream of the new formatter are taken from the currently active logger. In case
    //! several loggers are active, the order of priority is CUSTOM, HRF, XML, and JUNIT.
    //! If (unit_test_log_formatter*)0 is given as argument, the custom logger (if any) is removed.
    //!
    //! @note The ownership of the pointer is transferred to the Boost.Test framework. This call is equivalent to
    //! - a call to @c add_formatter
    //! - a call to @c set_format(OF_CUSTOM_LOGGER)
    //! - a configuration of the newly added logger with a previously configured stream and log level.</doc>
<def f='boost-1.85.0/libs/test/include/boost/test/impl/unit_test_log.ipp' l='723' ll='753' type='void boost::unit_test::unit_test_log_t::set_formatter(boost::unit_test::unit_test_log_formatter * the_formatter)'/>
