<def f='boost-1.85.0/libs/json/include/boost/json/string.hpp' l='1084' ll='1088' type='const char * boost::json::string::data() const'/>
<use f='boost-1.85.0/libs/json/include/boost/json/string.hpp' l='1122' u='c' c='_ZNK5boost4json6stringcvNS_4core17basic_string_viewIcEEEv'/>
<use f='boost-1.85.0/libs/json/include/boost/json/string.hpp' l='2251' u='c' c='_ZNK5boost4json6string7subviewEv'/>
<use f='boost-1.85.0/libs/json/include/boost/json/detail/value_to.hpp' l='458' u='c' c='_ZN5boost4json6detail13value_to_implENS1_29described_enum_conversion_tagENS0_16try_value_to_tagIT_EERKNS0_5valueERKT0_'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/serializer.ipp' l='636' u='c' c='_ZN5boost4json10serializer11write_valueERNS0_6detail6streamE'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/serializer.ipp' l='794' u='c' c='_ZN5boost4json10serializer5resetEPKNS0_6stringE'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/string.ipp' l='150' u='c' c='_ZN5boost4json6string6assignERKS1_'/>
<doc f='boost-1.85.0/libs/json/include/boost/json/string.hpp' l='1069'>/** Return the underlying character array directly.

        Returns a pointer to the underlying array
        serving as storage.

        @note The value returned is such that
        the range `{data(), data() + size())` is always a
        valid range, even if the container is empty.
        The value returned from
        this function is never equal to `nullptr`.

        @par Complexity

        Constant.
    */</doc>
