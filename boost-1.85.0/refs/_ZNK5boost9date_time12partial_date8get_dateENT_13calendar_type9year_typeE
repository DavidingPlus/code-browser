<def f='boost-1.85.0/libs/date_time/include/boost/date_time/date_generators.hpp' l='101' ll='109' type='date_type boost::date_time::partial_date::get_date(boost::date_time::partial_date::year_type y) const'/>
<use f='boost-1.85.0/libs/date_time/include/boost/date_time/date_generators.hpp' l='112' u='c' c='_ZNK5boost9date_time12partial_dateclENT_13calendar_type9year_typeE'/>
<doc f='boost-1.85.0/libs/date_time/include/boost/date_time/date_generators.hpp' l='92'>/*! Will throw an &apos;invalid_argument&apos; exception if a partial_date object,
    * instantiated with Feb-29, has get_date called with a non-leap year.
    * Example:
    * @code
    * partial_date pd(29, Feb);
    * pd.get_date(2003); // throws invalid_argument exception
    * pg.get_date(2000); // returns 2000-2-29
    * @endcode
         */</doc>
