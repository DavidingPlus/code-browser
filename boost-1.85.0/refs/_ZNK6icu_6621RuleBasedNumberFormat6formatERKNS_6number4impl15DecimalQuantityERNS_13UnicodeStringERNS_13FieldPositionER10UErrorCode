<dec f='include/unicode/rbnf.h' l='888' type='icu_66::UnicodeString &amp; icu_66::RuleBasedNumberFormat::format(const number::impl::DecimalQuantity &amp; number, icu_66::UnicodeString &amp; appendTo, icu_66::FieldPosition &amp; pos, UErrorCode &amp; status) const'/>
<doc f='include/unicode/rbnf.h' l='871'>/**
     * Format a decimal number.
     * The number is a DigitList wrapper onto a floating point decimal number.
     * The default implementation in NumberFormat converts the decimal number
     * to a double and formats that.  Subclasses of NumberFormat that want
     * to specifically handle big decimal numbers must override this method.
     * class DecimalFormat does so.
     *
     * @param number    The number, a DigitList format Decimal Floating Point.
     * @param appendTo  Output parameter to receive result.
     *                  Result is appended to existing contents.
     * @param pos       On input: an alignment field, if desired.
     *                  On output: the offsets of the alignment field.
     * @param status    Output param filled with success/failure status.
     * @return          Reference to &apos;appendTo&apos; parameter.
     * @internal
     */</doc>
