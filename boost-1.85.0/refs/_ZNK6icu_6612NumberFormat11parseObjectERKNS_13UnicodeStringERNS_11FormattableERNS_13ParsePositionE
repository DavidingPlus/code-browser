<dec f='include/unicode/numfmt.h' l='353' type='void icu_66::NumberFormat::parseObject(const icu_66::UnicodeString &amp; source, icu_66::Formattable &amp; result, icu_66::ParsePosition &amp; parse_pos) const'/>
<doc f='include/unicode/numfmt.h' l='325'>/**
     * Parse a string to produce an object.  This methods handles
     * parsing of numeric strings into Formattable objects with numeric
     * types.
     * &lt;P&gt;
     * Before calling, set parse_pos.index to the offset you want to
     * start parsing at in the source. After calling, parse_pos.index
     * indicates the position after the successfully parsed text.  If
     * an error occurs, parse_pos.index is unchanged.
     * &lt;P&gt;
     * When parsing, leading whitespace is discarded (with successful
     * parse), while trailing whitespace is left as is.
     * &lt;P&gt;
     * See Format::parseObject() for more.
     *
     * @param source    The string to be parsed into an object.
     * @param result    Formattable to be set to the parse result.
     *                  If parse fails, return contents are undefined.
     * @param parse_pos The position to start parsing at. Upon return
     *                  this param is set to the position after the
     *                  last character successfully parsed. If the
     *                  source is not parsed successfully, this param
     *                  will remain unchanged.
     * @return          A newly created Formattable* object, or NULL
     *                  on failure.  The caller owns this and should
     *                  delete it when done.
     * @stable ICU 2.0
     */</doc>
