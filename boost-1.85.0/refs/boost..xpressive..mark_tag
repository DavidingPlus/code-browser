<inh f='boost-1.85.0/libs/proto/include/boost/proto/extends.hpp' l='545' c='boost::proto::exprns_::extends'/>
<def f='boost-1.85.0/libs/xpressive/include/boost/xpressive/regex_primitives.hpp' l='539' ll='570'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/regex_primitives.hpp' l='540'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/regex_primitives.hpp' l='543'/>
<use f='boost-1.85.0/libs/xpressive/include/boost/xpressive/regex_primitives.hpp' l='569' c='_ZN5boost9xpressive8mark_tagaSERKS1_'/>
<size>4</size>
<doc f='boost-1.85.0/libs/xpressive/include/boost/xpressive/regex_primitives.hpp' l='515'>///////////////////////////////////////////////////////////////////////////////
/// \brief Sub-match placeholder type, used to create named captures in
/// static regexes.
///
/// \c mark_tag is the type of the global sub-match placeholders \c s0, \c s1, etc.. You
/// can use the \c mark_tag type to create your own sub-match placeholders with
/// more meaningful names. This is roughly equivalent to the &quot;named capture&quot;
/// feature of dynamic regular expressions.
///
/// To create a named sub-match placeholder, initialize it with a unique integer.
/// The integer must only be unique within the regex in which the placeholder
/// is used. Then you can use it within static regexes to created sub-matches
/// by assigning a sub-expression to it, or to refer back to already created
/// sub-matches.
/// 
/// \code
/// mark_tag number(1); // &quot;number&quot; is now equivalent to &quot;s1&quot;
/// // Match a number, followed by a space and the same number again
/// sregex rx = (number = +_d) &gt;&gt; &apos; &apos; &gt;&gt; number;
/// \endcode
///
/// After a successful \c regex_match() or \c regex_search(), the sub-match placeholder
/// can be used to index into the &lt;tt&gt;match_results\&lt;\&gt;&lt;/tt&gt; object to retrieve the
/// corresponding sub-match.</doc>
<fun r='_ZN5boost9xpressive8mark_tag8make_tagEi'/>
<fun r='_ZN5boost9xpressive8mark_tagC1Ei'/>
<fun r='_ZNK5boost9xpressive8mark_tagcvRKNS_5proto7exprns_4exprINS2_6tagns_3tag8terminalENS2_7argsns_4termINS0_6detail16mark_placeholderEEELl0EEEEv'/>
