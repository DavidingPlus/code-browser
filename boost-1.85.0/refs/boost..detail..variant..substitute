<def f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='45' ll='48'/>
<def f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='67' macro='1'/>
<def f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='68' macro='1'/>
<def f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='69' macro='1'/>
<def f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='70' macro='1'/>
<def f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='92' macro='1'/>
<use f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='86'/>
<def f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='93' macro='1'/>
<use f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='86'/>
<def f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='94' macro='1'/>
<use f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='86'/>
<def f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='95' macro='1'/>
<use f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='86'/>
<def f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='102' ll='113'/>
<use f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='110'/>
<def f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='119' ll='136'/>
<use f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='133'/>
<def f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='141' ll='161'/>
<use f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='155'/>
<use f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='158'/>
<use f='boost-1.85.0/libs/variant/include/boost/variant/detail/enable_recursive.hpp' l='40'/>
<use f='boost-1.85.0/libs/variant/include/boost/variant/detail/enable_recursive.hpp' l='40'/>
<def f='boost-1.85.0/libs/variant/include/boost/variant/recursive_variant.hpp' l='48' ll='67'/>
<def f='boost-1.85.0/libs/variant/include/boost/variant/recursive_variant.hpp' l='69' ll='103'/>
<def f='boost-1.85.0/libs/variant/include/boost/variant/recursive_variant.hpp' l='105' ll='129'/>
<doc f='boost-1.85.0/libs/variant/include/boost/variant/recursive_variant.hpp' l='42'>///////////////////////////////////////////////////////////////////////////////
// (detail) metafunction specialization substitute
//
// Handles embedded variant types when substituting for recursive_variant_.
//</doc>
<doc f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='99'>//
// reference specializations
//</doc>
<doc f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='115'>//
// template expression (i.e., F&lt;...&gt;) specializations
//</doc>
<doc f='boost-1.85.0/libs/variant/include/boost/variant/detail/substitute.hpp' l='138'>//
// function specializations
//</doc>
