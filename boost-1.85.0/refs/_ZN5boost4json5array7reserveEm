<dec f='boost-1.85.0/libs/json/include/boost/json/array.hpp' l='1076' type='void boost::json::array::reserve(std::size_t new_capacity)'/>
<def f='boost-1.85.0/libs/json/include/boost/json/impl/array.hpp' l='478' ll='487' type='void boost::json::array::reserve(std::size_t new_capacity)'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/array.hpp' l='507' u='c' c='_ZN5boost4json5arrayC1ET_S2_NS0_11storage_ptrESt18input_iterator_tag'/>
<use f='boost-1.85.0/libs/json/include/boost/json/detail/value_from.hpp' l='121' u='c' c='_ZN5boost4json6detail15value_from_implENS1_23sequence_conversion_tagERNS0_5valueEOT_RKT0_'/>
<use f='boost-1.85.0/libs/json/include/boost/json/detail/value_from.hpp' l='140' u='c' c='_ZN5boost4json6detail15value_from_implENS1_20tuple_conversion_tagERNS0_5valueEOT_RKT0_'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/array.ipp' l='559' u='c' c='_ZN5boost4json5array6resizeEm'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/value_ref.ipp' l='149' u='c' c='_ZN5boost4json9value_ref10make_arrayESt16initializer_listIS1_ENS0_11storage_ptrE'/>
<doc f='boost-1.85.0/libs/json/include/boost/json/array.hpp' l='1048'>/** Increase the capacity to at least a certain amount.

        This increases the @ref capacity() to a value
        that is greater than or equal to `new_capacity`.
        If `new_capacity &gt; capacity()`, new memory is
        allocated. Otherwise, the call has no effect.
        The number of elements and therefore the
        @ref size() of the container is not changed.
    \n
        If new memory is allocated, all iterators
        including any past-the-end iterators, and all
        references to the elements are invalidated.
        Otherwise, no iterators or references are
        invalidated.

        @par Complexity
        At most, linear in @ref size().

        @par Exception Safety
        Strong guarantee.
        Calls to `memory_resource::allocate` may throw.

        @param new_capacity The new capacity of the array.

        @throw `boost::system::system_error` `new_capacity &gt; max_size()`.
    */</doc>
