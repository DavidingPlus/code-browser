<dec f='boost-1.85.0/libs/url/include/boost/url/params_encoded_ref.hpp' l='880' type='boost::urls::params_encoded_base::iterator boost::urls::params_encoded_ref::set(boost::urls::params_encoded_base::iterator pos, boost::urls::pct_string_view value)'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/params_encoded_ref.hpp' l='836'>/** Set a value

        This function replaces the value of an
        element at the specified position.

        &lt;br&gt;
        All iterators that are equal to
        `pos` or come after are invalidated.

        @note
        The string passed in must not come
        from the element being replaced,
        or else the behavior is undefined.

        @par Example
        @code
        url u( &quot;?id=42&amp;id=69&quot; );

        u.encoded_params().set( u.encoded_params().begin(), &quot;none&quot; );

        assert( u.encoded_query() == &quot;id=none&amp;id=69&quot; );
        @endcode

        @par Complexity
        Linear in `this-&gt;url().encoded_query().size()`.

        @par Exception Safety
        Strong guarantee.
        Calls to allocate may throw.
        Exceptions thrown on invalid input.

        @throw system_error
        `value` contains an invalid percent-encoding.

        @return An iterator to the element.

        @param pos An iterator to the element.

        @param value The value to assign. The
        empty string still counts as a value.
        That is, `has_value` for the element
        is true.
    */</doc>
<def f='boost-1.85.0/libs/url/src/params_encoded_ref.cpp' l='182' ll='195' type='boost::urls::params_encoded_base::iterator boost::urls::params_encoded_ref::set(boost::urls::params_encoded_base::iterator pos, boost::urls::pct_string_view value)'/>
<use f='boost-1.85.0/libs/url/src/params_encoded_ref.cpp' l='211' u='c' c='_ZN5boost4urls18params_encoded_ref3setENS0_15pct_string_viewES2_NS0_17ignore_case_paramE'/>
