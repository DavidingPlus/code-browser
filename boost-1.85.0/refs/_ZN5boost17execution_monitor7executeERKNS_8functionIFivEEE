<dec f='boost-1.85.0/libs/test/include/boost/test/execution_monitor.hpp' l='371' type='int boost::execution_monitor::execute(const boost::function&lt;int ()&gt; &amp; F)'/>
<doc f='boost-1.85.0/libs/test/include/boost/test/execution_monitor.hpp' l='359'>// @name Monitoring entry points

    /// @brief Execution monitor entry point for functions returning integer value
    ///
    /// This method executes supplied function F inside a try/catch block and also may include other unspecified platform dependent error detection code.
    ///
    /// This method throws an execution_exception on an uncaught C++ exception, a hardware or software signal, trap, or other user exception.
    ///
    /// @note execute() doesn&apos;t consider it an error for F to return a non-zero value.
    /// @param[in] F  Function to monitor
    /// @returns  value returned by function call F().
    /// @see vexecute</doc>
<use f='boost-1.85.0/libs/test/include/boost/test/impl/cpp_main.ipp' l='77' u='c' c='_ZN5boost21prg_exec_monitor_mainEPFiiPPcEiS1_'/>
<def f='boost-1.85.0/libs/test/include/boost/test/impl/execution_monitor.ipp' l='1308' ll='1396' type='int boost::execution_monitor::execute(const boost::function&lt;int ()&gt; &amp; F)'/>
<use f='boost-1.85.0/libs/test/include/boost/test/impl/execution_monitor.ipp' l='1414' u='c' c='_ZN5boost17execution_monitor8vexecuteERKNS_8functionIFvvEEE'/>
<doc f='boost-1.85.0/libs/test/include/boost/test/impl/execution_monitor.ipp' l='1306'>//____________________________________________________________________________//</doc>
