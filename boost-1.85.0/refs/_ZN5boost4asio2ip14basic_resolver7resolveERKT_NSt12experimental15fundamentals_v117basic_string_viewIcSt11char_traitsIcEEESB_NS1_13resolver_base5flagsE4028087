<def f='boost-1.85.0/libs/asio/include/boost/asio/ip/basic_resolver.hpp' l='634' ll='642' type='boost::asio::ip::basic_resolver::results_type boost::asio::ip::basic_resolver::resolve(const boost::asio::ip::basic_resolver::protocol_type &amp; protocol, boost::asio::string_view host, boost::asio::string_view service, resolver_base::flags resolve_flags, boost::system::error_code &amp; ec)'/>
<doc f='boost-1.85.0/libs/asio/include/boost/asio/ip/basic_resolver.hpp' l='594'>/**
   * This function is used to resolve host and service names into a list of
   * endpoint entries.
   *
   * @param protocol A protocol object, normally representing either the IPv4 or
   * IPv6 version of an internet protocol.
   *
   * @param host A string identifying a location. May be a descriptive name or
   * a numeric address string. If an empty string and the passive flag has been
   * specified, the resolved endpoints are suitable for local service binding.
   * If an empty string and passive is not specified, the resolved endpoints
   * will use the loopback address.
   *
   * @param service A string identifying the requested service. This may be a
   * descriptive name or a numeric string corresponding to a port number. May
   * be an empty string, in which case all resolved endpoints will have a port
   * number of 0.
   *
   * @param resolve_flags A set of flags that determine how name resolution
   * should be performed. The default flags are suitable for communication with
   * remote hosts. See the @ref resolver_base documentation for the set of
   * available flags.
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @returns A range object representing the list of endpoint entries. An
   * empty range is returned if an error occurs. A successful call to this
   * function is guaranteed to return a non-empty range.
   *
   * @note On POSIX systems, host names may be locally defined in the file
   * &lt;tt&gt;/etc/hosts&lt;/tt&gt;. On Windows, host names may be defined in the file
   * &lt;tt&gt;c:\\windows\\system32\\drivers\\etc\\hosts&lt;/tt&gt;. Remote host name
   * resolution is performed using DNS. Operating systems may use additional
   * locations when resolving host names (such as NETBIOS names on Windows).
   *
   * On POSIX systems, service names are typically defined in the file
   * &lt;tt&gt;/etc/services&lt;/tt&gt;. On Windows, service names may be found in the file
   * &lt;tt&gt;c:\\windows\\system32\\drivers\\etc\\services&lt;/tt&gt;. Operating systems
   * may use additional locations when resolving service names.
   */</doc>
