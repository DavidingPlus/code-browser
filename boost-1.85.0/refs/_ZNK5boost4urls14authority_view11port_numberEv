<dec f='boost-1.85.0/libs/url/include/boost/url/authority_view.hpp' l='1169' type='std::uint16_t boost::urls::authority_view::port_number() const'/>
<def f='boost-1.85.0/libs/url/src/authority_view.cpp' l='314' ll='322' type='std::uint16_t boost::urls::authority_view::port_number() const'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/authority_view.hpp' l='1136'>/** Return the port

        If a port is present and the numerical
        value is representable, it is returned
        as an unsigned integer. Otherwise, the
        number zero is returned.

        @par Example
        @code
        assert( url_view( &quot;http://localhost.com:8080&quot; ).port_number() == 8080 );
        @endcode

        @par Complexity
        Constant.

        @par Exception Safety
        Throws nothing.

        @par BNF
        @code
        port        = *DIGIT
        @endcode

        @par Specification
        @li &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc3986#section-3.2.3&quot;
            &gt;3.2.3. Port (rfc3986)&lt;/a&gt;

        @see
            @ref encoded_host_and_port,
            @ref has_port,
            @ref port.
    */</doc>
