<dec f='boost-1.85.0/libs/url/include/boost/url/url_view_base.hpp' l='376' type='core::string_view boost::urls::url_view_base::scheme() const'/>
<use f='boost-1.85.0/libs/url/src/detail/pattern.cpp' l='257' u='c' c='_ZNK5boost4urls6detail7pattern5applyERNS0_8url_baseERKNS1_11format_argsE'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/url_view_base.hpp' l='342'>/** Return the scheme

        This function returns the scheme if it
        exists, without a trailing colon (&apos;:&apos;).
        Otherwise it returns an empty string.
        Note that schemes are case-insensitive,
        and the canonical form is lowercased.

        @par Example
        @code
        assert( url_view( &quot;http://www.example.com&quot; ).scheme() == &quot;http&quot; );
        @endcode

        @par Exception Safety
        Throws nothing.

        @par BNF
        @code
        scheme          = ALPHA *( ALPHA / DIGIT / &quot;+&quot; / &quot;-&quot; / &quot;.&quot; )

        URI             = scheme &quot;:&quot; hier-part [ &quot;?&quot; query ] [ &quot;#&quot; fragment ]

        absolute-URI    = scheme &quot;:&quot; hier-part [ &quot;?&quot; query ]
        @endcode

        @par Specification
        @li &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc3986#section-3.1&quot;
            &gt;3.1. Scheme (rfc3986)&lt;/a&gt;

        @see
            @ref has_scheme,
            @ref scheme_id.
    */</doc>
<use f='boost-1.85.0/libs/url/src/url_base.cpp' l='1563' u='c' c='_ZN5boost4urls8url_base7resolveERKNS0_13url_view_baseE'/>
<use f='boost-1.85.0/libs/url/src/url_base.cpp' l='1563' u='c' c='_ZN5boost4urls8url_base7resolveERKNS0_13url_view_baseE'/>
<def f='boost-1.85.0/libs/url/src/url_view_base.cpp' l='120' ll='132' type='core::string_view boost::urls::url_view_base::scheme() const'/>
<use f='boost-1.85.0/libs/url/src/url_view_base.cpp' l='673' u='c' c='_ZNK5boost4urls13url_view_base7compareERKS1_'/>
<use f='boost-1.85.0/libs/url/src/url_view_base.cpp' l='674' u='c' c='_ZNK5boost4urls13url_view_base7compareERKS1_'/>
