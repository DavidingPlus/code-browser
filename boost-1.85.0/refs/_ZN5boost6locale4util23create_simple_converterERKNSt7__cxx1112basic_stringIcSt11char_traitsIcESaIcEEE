<dec f='boost-1.85.0/libs/locale/include/boost/locale/util.hpp' l='162' type='std::unique_ptr&lt;base_converter&gt; boost::locale::util::create_simple_converter(const std::string &amp; encoding)'/>
<use f='boost-1.85.0/libs/locale/include/boost/locale/util.hpp' l='167' u='c' c='_ZN5boost6locale4util34create_simple_converter_unique_ptrERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<doc f='boost-1.85.0/libs/locale/include/boost/locale/util.hpp' l='157'>/// This function creates a \a base_converter that can be used for conversion between single byte
        /// character encodings like ISO-8859-1, koi8-r, windows-1255 and Unicode code points,
        ///
        /// If \a encoding is not supported, empty pointer is returned.
        /// So you should check whether the returned pointer is valid/non-NULL</doc>
<def f='boost-1.85.0/libs/locale/src/boost/locale/util/codecvt_converter.cpp' l='206' ll='211' type='std::unique_ptr&lt;base_converter&gt; boost::locale::util::create_simple_converter(const std::string &amp; encoding)'/>
<use f='boost-1.85.0/libs/locale/src/boost/locale/util/codecvt_converter.cpp' l='219' u='c' c='_ZN5boost6locale4util31create_simple_converter_new_ptrERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
