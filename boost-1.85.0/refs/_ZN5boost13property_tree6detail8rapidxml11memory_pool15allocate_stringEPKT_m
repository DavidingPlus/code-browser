<def f='boost-1.85.0/libs/property_tree/include/boost/property_tree/detail/rapidxml.hpp' l='465' ll='475' type='Ch * boost::property_tree::detail::rapidxml::memory_pool::allocate_string(const Ch * source = 0, std::size_t size = 0)'/>
<doc f='boost-1.85.0/libs/property_tree/include/boost/property_tree/detail/rapidxml.hpp' l='458'>//! Allocates a char array of given size from the pool, and optionally copies a given string to it.
        //! If the allocation request cannot be accommodated, this function will throw &lt;code&gt;std::bad_alloc&lt;/code&gt;.
        //! If exceptions are disabled by defining RAPIDXML_NO_EXCEPTIONS, this function
        //! will call rapidxml::parse_error_handler() function.
        //! \param source String to initialize the allocated memory with, or 0 to not initialize it.
        //! \param size Number of characters to allocate, or zero to calculate it automatically from source string length; if size is 0, source string must be specified and null terminated.
        //! \return Pointer to allocated char array. This pointer will never be NULL.</doc>
