<dec f='boost-1.85.0/libs/program_options/include/boost/program_options/parsers.hpp' l='263' type='std::vector&lt;std::string&gt; boost::program_options::split_unix(const std::string &amp; cmdline, const std::string &amp; seperator = &quot; \t&quot;, const std::string &amp; quote = &quot;&apos;\&quot;&quot;, const std::string &amp; escape = &quot;\\&quot;)'/>
<doc f='boost-1.85.0/libs/program_options/include/boost/program_options/parsers.hpp' l='255'>/** Splits a given string to a collection of single strings which
        can be passed to command_line_parser. The second parameter is
        used to specify a collection of possible seperator chars used
        for splitting. The seperator is defaulted to space &quot; &quot;.
        Splitting is done in a unix style way, with respect to quotes &apos;&quot;&apos;
        and escape characters &apos;\&apos;
    */</doc>
<def f='boost-1.85.0/libs/program_options/src/split.cpp' l='47' ll='52' type='std::vector&lt;std::string&gt; boost::program_options::split_unix(const std::string &amp; cmdline, const std::string &amp; seperator = &quot; \t&quot;, const std::string &amp; quote = &quot;&apos;\&quot;&quot;, const std::string &amp; escape = &quot;\\&quot;)'/>
<doc f='boost-1.85.0/libs/program_options/src/split.cpp' l='45'>// Take a command line string and splits in into tokens, according
   // to the given collection of seperators chars.</doc>
