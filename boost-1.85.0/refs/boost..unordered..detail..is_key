<def f='boost-1.85.0/libs/unordered/include/boost/unordered/detail/implementation.hpp' l='2782' ll='2794'/>
<use f='boost-1.85.0/libs/unordered/include/boost/unordered/detail/implementation.hpp' l='2883' c='_ZN5boost9unordered6detail13map_extractor7extractESt21piecewise_construct_tRKTL0__IJTL0_0_DpTL0_2_EERKTL0_1_'/>
<use f='boost-1.85.0/libs/unordered/include/boost/unordered/detail/implementation.hpp' l='2886' c='_ZN5boost9unordered6detail13map_extractor7extractESt21piecewise_construct_tRKTL0__IJTL0_0_DpTL0_2_EERKTL0_1_'/>
<doc f='boost-1.85.0/libs/unordered/include/boost/unordered/detail/implementation.hpp' l='2770'>////////////////////////////////////////////////////////////////////////
      // key extractors
      //
      // no throw
      //
      // &apos;extract_key&apos; is called with the emplace parameters to return a
      // key if available or &apos;no_key&apos; is one isn&apos;t and will need to be
      // constructed. This could be done by overloading the emplace
      // implementation
      // for the different cases, but that&apos;s a bit tricky on compilers without
      // variadic templates.</doc>
<fun r='_ZN5boost9unordered6detail6is_key4testERKTL0__'/>
<fun r='_ZN5boost9unordered6detail6is_key4testERKT_'/>
