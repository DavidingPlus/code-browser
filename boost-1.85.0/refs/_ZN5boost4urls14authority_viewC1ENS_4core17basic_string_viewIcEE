<dec f='boost-1.85.0/libs/url/include/boost/url/authority_view.hpp' l='159' type='void boost::urls::authority_view::authority_view(core::string_view s)'/>
<def f='boost-1.85.0/libs/url/src/authority_view.cpp' l='60' ll='67' type='void boost::urls::authority_view::authority_view(core::string_view s)'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/authority_view.hpp' l='123'>/** Construct from a string.

        This function attempts to construct
        an authority from the string `s`,
        which must be a valid [&apos;authority] or
        else an exception is thrown. Upon
        successful construction, the view
        refers to the characters in the
        buffer pointed to by `s`.
        Ownership is not transferred; The
        caller is responsible for ensuring
        that the lifetime of the buffer
        extends until the view is destroyed.

        @par BNF
        @code
        authority     = [ userinfo &quot;@&quot; ] host [ &quot;:&quot; port ]

        userinfo      = user [ &quot;:&quot; [ password ] ]

        user          = *( unreserved / pct-encoded / sub-delims )
        password      = *( unreserved / pct-encoded / sub-delims / &quot;:&quot; )

        host          = IP-literal / IPv4address / reg-name

        port          = *DIGIT
        @endcode

        @par Specification
        @li &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc3986#section-3.2&quot;
            &gt;3.2. Authority (rfc3986)&lt;/a&gt;

        @see
            @ref parse_authority.
    */</doc>
