<def f='include/c++/9/bits/regex.h' l='2670' ll='2675' type='void std::regex_token_iterator::regex_token_iterator&lt;_Bi_iter, _Ch_type, _Rx_traits&gt;(_Bi_iter __a, _Bi_iter __b, const std::regex_token_iterator::regex_type &amp; __re, int __submatch = 0, regex_constants::match_flag_type __m = regex_constants::match_default)'/>
<doc f='include/c++/9/bits/regex.h' l='2653'>/**
       * Constructs a %regex_token_iterator...
       * @param __a          [IN] The start of the text to search.
       * @param __b          [IN] One-past-the-end of the text to search.
       * @param __re         [IN] The regular expression to search for.
       * @param __submatch   [IN] Which submatch to return.  There are some
       *                        special values for this parameter:
       *                        - -1 each enumerated subexpression does NOT
       *                          match the regular expression (aka field
       *                          splitting)
       *                        - 0 the entire string matching the
       *                          subexpression is returned for each match
       *                          within the text.
       *                        - &gt;0 enumerates only the indicated
       *                          subexpression from a match within the text.
       * @param __m          [IN] Policy flags for match rules.
       */</doc>
