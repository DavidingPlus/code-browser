<inh f='include/unicode/uobject.h' l='223' c='icu_66::UObject'/>
<def f='include/unicode/calendar.h' l='187' ll='2494'/>
<use f='include/unicode/calendar.h' l='293' c='_ZNK6icu_668Calendar5cloneEv'/>
<use f='include/unicode/calendar.h' l='306' c='_ZN6icu_668Calendar14createInstanceER10UErrorCode'/>
<use f='include/unicode/calendar.h' l='320' c='_ZN6icu_668Calendar14createInstanceEPNS_8TimeZoneER10UErrorCode'/>
<use f='include/unicode/calendar.h' l='333' c='_ZN6icu_668Calendar14createInstanceERKNS_8TimeZoneER10UErrorCode'/>
<use f='include/unicode/calendar.h' l='345' c='_ZN6icu_668Calendar14createInstanceERKNS_6LocaleER10UErrorCode'/>
<use f='include/unicode/calendar.h' l='360' c='_ZN6icu_668Calendar14createInstanceEPNS_8TimeZoneERKNS_6LocaleER10UErrorCode'/>
<use f='include/unicode/calendar.h' l='374' c='_ZN6icu_668Calendar14createInstanceERKNS_8TimeZoneERKNS_6LocaleER10UErrorCode'/>
<use f='include/unicode/calendar.h' l='454' c='_ZNK6icu_668CalendareqERKS0_'/>
<use f='include/unicode/calendar.h' l='464' c='_ZNK6icu_668CalendarneERKS0_'/>
<use f='include/unicode/calendar.h' l='476' c='_ZNK6icu_668Calendar14isEquivalentToERKS0_'/>
<use f='include/unicode/calendar.h' l='492' c='_ZNK6icu_668Calendar6equalsERKS0_R10UErrorCode'/>
<use f='include/unicode/calendar.h' l='507' c='_ZNK6icu_668Calendar6beforeERKS0_R10UErrorCode'/>
<use f='include/unicode/calendar.h' l='522' c='_ZNK6icu_668Calendar5afterERKS0_R10UErrorCode'/>
<use f='include/unicode/calendar.h' l='1450' c='_ZN6icu_668CalendarC1ERKS0_'/>
<use f='include/unicode/calendar.h' l='1458' c='_ZN6icu_668CalendaraSERKS0_'/>
<use f='include/unicode/calendar.h' l='1458' c='_ZN6icu_668CalendaraSERKS0_'/>
<use f='include/unicode/calendar.h' l='2475' c='_ZN6icu_668Calendar12makeInstanceERKNS_6LocaleER10UErrorCode'/>
<use f='include/unicode/calendar.h' l='2498' c='_ZN6icu_668Calendar14createInstanceEPNS_8TimeZoneER10UErrorCode'/>
<ovr f='include/unicode/gregocal.h' l='153' c='icu_66::GregorianCalendar'/>
<use f='include/unicode/gregocal.h' l='153'/>
<use f='include/unicode/gregocal.h' l='353' c='_ZNK6icu_6617GregorianCalendar14isEquivalentToERKNS_8CalendarE'/>
<use f='boost-1.85.0/libs/locale/src/boost/locale/icu/date_time.cpp' l='198' c='_ZNK5boost6locale8impl_icu13calendar_impl10differenceERKNS0_17abstract_calendarENS0_6period5marks11period_markE'/>
<use f='boost-1.85.0/libs/locale/src/boost/locale/icu/date_time.cpp' l='228'/>
<size>616</size>
<doc f='include/unicode/calendar.h' l='56'>/**
 * `Calendar` is an abstract base class for converting between
 * a `UDate` object and a set of integer fields such as
 * `YEAR`, `MONTH`, `DAY`, `HOUR`, and so on.
 * (A `UDate` object represents a specific instant in
 * time with millisecond precision. See UDate
 * for information about the `UDate` class.)
 *
 * Subclasses of `Calendar` interpret a `UDate`
 * according to the rules of a specific calendar system.
 * The most commonly used subclass of `Calendar` is
 * `GregorianCalendar`. Other subclasses could represent
 * the various types of lunar calendars in use in many parts of the world.
 *
 * **NOTE**: (ICU 2.6) The subclass interface should be considered unstable -
 * it WILL change.
 *
 * Like other locale-sensitive classes, `Calendar` provides a
 * static method, `createInstance`, for getting a generally useful
 * object of this type. `Calendar`&apos;s `createInstance` method
 * returns the appropriate `Calendar` subclass whose
 * time fields have been initialized with the current date and time:
 *
 *     Calendar *rightNow = Calendar::createInstance(errCode);
 *
 * A `Calendar` object can produce all the time field values
 * needed to implement the date-time formatting for a particular language
 * and calendar style (for example, Japanese-Gregorian, Japanese-Traditional).
 *
 * When computing a `UDate` from time fields, some special circumstances
 * may arise: there may be insufficient information to compute the
 * `UDate` (such as only year and month but no day in the month),
 * there may be inconsistent information (such as &quot;Tuesday, July 15, 1996&quot;
 * -- July 15, 1996 is actually a Monday), or the input time might be ambiguous
 * because of time zone transition.
 *
 * **Insufficient information.** The calendar will use default
 * information to specify the missing fields. This may vary by calendar; for
 * the Gregorian calendar, the default for a field is the same as that of the
 * start of the epoch: i.e., YEAR = 1970, MONTH = JANUARY, DATE = 1, etc.
 *
 * **Inconsistent information.** If fields conflict, the calendar
 * will give preference to fields set more recently. For example, when
 * determining the day, the calendar will look for one of the following
 * combinations of fields.  The most recent combination, as determined by the
 * most recently set single field, will be used.
 *
 *     MONTH + DAY_OF_MONTH
 *     MONTH + WEEK_OF_MONTH + DAY_OF_WEEK
 *     MONTH + DAY_OF_WEEK_IN_MONTH + DAY_OF_WEEK
 *     DAY_OF_YEAR
 *     DAY_OF_WEEK + WEEK_OF_YEAR
 *
 * For the time of day:
 *
 *     HOUR_OF_DAY
 *     AM_PM + HOUR
 *
 * **Ambiguous Wall Clock Time.** When time offset from UTC has
 * changed, it produces an ambiguous time slot around the transition. For example,
 * many US locations observe daylight saving time. On the date switching to daylight
 * saving time in US, wall clock time jumps from 12:59 AM (standard) to 2:00 AM
 * (daylight). Therefore, wall clock time from 1:00 AM to 1:59 AM do not exist on
 * the date. When the input wall time fall into this missing time slot, the ICU
 * Calendar resolves the time using the UTC offset before the transition by default.
 * In this example, 1:30 AM is interpreted as 1:30 AM standard time (non-exist),
 * so the final result will be 2:30 AM daylight time.
 *
 * On the date switching back to standard time, wall clock time is moved back one
 * hour at 2:00 AM. So wall clock time from 1:00 AM to 1:59 AM occur twice. In this
 * case, the ICU Calendar resolves the time using the UTC offset after the transition
 * by default. For example, 1:30 AM on the date is resolved as 1:30 AM standard time.
 *
 * Ambiguous wall clock time resolution behaviors can be customized by Calendar APIs
 * {@link #setRepeatedWallTimeOption} and {@link #setSkippedWallTimeOption}.
 * These methods are available in ICU 49 or later versions.
 *
 * **Note:** for some non-Gregorian calendars, different
 * fields may be necessary for complete disambiguation. For example, a full
 * specification of the historical Arabic astronomical calendar requires year,
 * month, day-of-month *and* day-of-week in some cases.
 *
 * **Note:** There are certain possible ambiguities in
 * interpretation of certain singular times, which are resolved in the
 * following ways:
 *
 *   1. 24:00:00 &quot;belongs&quot; to the following day. That is,
 *      23:59 on Dec 31, 1969 &lt; 24:00 on Jan 1, 1970 &lt; 24:01:00 on Jan 1, 1970
 *   2. Although historically not precise, midnight also belongs to &quot;am&quot;,
 *      and noon belongs to &quot;pm&quot;, so on the same day,
 *      12:00 am (midnight) &lt; 12:01 am, and 12:00 pm (noon) &lt; 12:01 pm
 *
 * The date or time format strings are not part of the definition of a
 * calendar, as those must be modifiable or overridable by the user at
 * runtime. Use `DateFormat` to format dates.
 *
 * `Calendar` provides an API for field &quot;rolling&quot;, where fields
 * can be incremented or decremented, but wrap around. For example, rolling the
 * month up in the date December 12, **1996** results in
 * January 12, **1996**.
 *
 * `Calendar` also provides a date arithmetic function for
 * adding the specified (signed) amount of time to a particular time field.
 * For example, subtracting 5 days from the date `September 12, 1996`
 * results in `September 7, 1996`.
 *
 * ***Supported range***
 *
 * The allowable range of `Calendar` has been narrowed. `GregorianCalendar` used
 * to attempt to support the range of dates with millisecond values from
 * `Long.MIN_VALUE` to `Long.MAX_VALUE`. The new `Calendar` protocol specifies the
 * maximum range of supportable dates as those having Julian day numbers
 * of `-0x7F000000` to `+0x7F000000`. This corresponds to years from ~5,800,000 BCE
 * to ~5,800,000 CE. Programmers should use the protected constants in `Calendar` to
 * specify an extremely early or extremely late date.
 *
 * &lt;p&gt;
 * The Japanese calendar uses a combination of era name and year number.
 * When an emperor of Japan abdicates and a new emperor ascends the throne,
 * a new era is declared and year number is reset to 1. Even if the date of
 * abdication is scheduled ahead of time, the new era name might not be
 * announced until just before the date. In such case, ICU4C may include
 * a start date of future era without actual era name, but not enabled
 * by default. ICU4C users who want to test the behavior of the future era
 * can enable the tentative era by:
 * &lt;ul&gt;
 * &lt;li&gt;Environment variable &lt;code&gt;ICU_ENABLE_TENTATIVE_ERA=true&lt;/code&gt;.&lt;/li&gt;
 * &lt;/ul&gt;
 *
 * @stable ICU 2.0
 */</doc>
<fun r='_ZN6icu_668CalendarD1Ev'/>
<fun r='_ZNK6icu_668Calendar5cloneEv'/>
<fun r='_ZN6icu_668Calendar14createInstanceER10UErrorCode'/>
<fun r='_ZN6icu_668Calendar14createInstanceEPNS_8TimeZoneER10UErrorCode'/>
<fun r='_ZN6icu_668Calendar14createInstanceERKNS_8TimeZoneER10UErrorCode'/>
<fun r='_ZN6icu_668Calendar14createInstanceERKNS_6LocaleER10UErrorCode'/>
<fun r='_ZN6icu_668Calendar14createInstanceEPNS_8TimeZoneERKNS_6LocaleER10UErrorCode'/>
<fun r='_ZN6icu_668Calendar14createInstanceERKNS_8TimeZoneERKNS_6LocaleER10UErrorCode'/>
<fun r='_ZN6icu_668Calendar19getAvailableLocalesERi'/>
<fun r='_ZN6icu_668Calendar25getKeywordValuesForLocaleEPKcRKNS_6LocaleEaR10UErrorCode'/>
<fun r='_ZN6icu_668Calendar6getNowEv'/>
<fun r='_ZNK6icu_668Calendar7getTimeER10UErrorCode'/>
<fun r='_ZN6icu_668Calendar7setTimeEdR10UErrorCode'/>
<fun r='_ZNK6icu_668CalendareqERKS0_'/>
<fun r='_ZNK6icu_668CalendarneERKS0_'/>
<fun r='_ZNK6icu_668Calendar14isEquivalentToERKS0_'/>
<fun r='_ZNK6icu_668Calendar6equalsERKS0_R10UErrorCode'/>
<fun r='_ZNK6icu_668Calendar6beforeERKS0_R10UErrorCode'/>
<fun r='_ZNK6icu_668Calendar5afterERKS0_R10UErrorCode'/>
<fun r='_ZN6icu_668Calendar3addENS0_11EDateFieldsEiR10UErrorCode'/>
<fun r='_ZN6icu_668Calendar3addE19UCalendarDateFieldsiR10UErrorCode'/>
<fun r='_ZN6icu_668Calendar4rollENS0_11EDateFieldsEaR10UErrorCode'/>
<fun r='_ZN6icu_668Calendar4rollE19UCalendarDateFieldsaR10UErrorCode'/>
<fun r='_ZN6icu_668Calendar4rollENS0_11EDateFieldsEiR10UErrorCode'/>
<fun r='_ZN6icu_668Calendar4rollE19UCalendarDateFieldsiR10UErrorCode'/>
<fun r='_ZN6icu_668Calendar15fieldDifferenceEdNS0_11EDateFieldsER10UErrorCode'/>
<fun r='_ZN6icu_668Calendar15fieldDifferenceEd19UCalendarDateFieldsR10UErrorCode'/>
<fun r='_ZN6icu_668Calendar13adoptTimeZoneEPNS_8TimeZoneE'/>
<fun r='_ZN6icu_668Calendar11setTimeZoneERKNS_8TimeZoneE'/>
<fun r='_ZNK6icu_668Calendar11getTimeZoneEv'/>
<fun r='_ZN6icu_668Calendar14orphanTimeZoneEv'/>
<fun r='_ZNK6icu_668Calendar14inDaylightTimeER10UErrorCode'/>
<fun r='_ZN6icu_668Calendar10setLenientEa'/>
<fun r='_ZNK6icu_668Calendar9isLenientEv'/>
<fun r='_ZN6icu_668Calendar25setRepeatedWallTimeOptionE23UCalendarWallTimeOption'/>
<fun r='_ZNK6icu_668Calendar25getRepeatedWallTimeOptionEv'/>
<fun r='_ZN6icu_668Calendar24setSkippedWallTimeOptionE23UCalendarWallTimeOption'/>
<fun r='_ZNK6icu_668Calendar24getSkippedWallTimeOptionEv'/>
<fun r='_ZN6icu_668Calendar17setFirstDayOfWeekENS0_11EDaysOfWeekE'/>
<fun r='_ZN6icu_668Calendar17setFirstDayOfWeekE19UCalendarDaysOfWeek'/>
<fun r='_ZNK6icu_668Calendar17getFirstDayOfWeekEv'/>
<fun r='_ZNK6icu_668Calendar17getFirstDayOfWeekER10UErrorCode'/>
<fun r='_ZN6icu_668Calendar25setMinimalDaysInFirstWeekEh'/>
<fun r='_ZNK6icu_668Calendar25getMinimalDaysInFirstWeekEv'/>
<fun r='_ZNK6icu_668Calendar10getMinimumENS0_11EDateFieldsE'/>
<fun r='_ZNK6icu_668Calendar10getMinimumE19UCalendarDateFields'/>
<fun r='_ZNK6icu_668Calendar10getMaximumENS0_11EDateFieldsE'/>
<fun r='_ZNK6icu_668Calendar10getMaximumE19UCalendarDateFields'/>
<fun r='_ZNK6icu_668Calendar18getGreatestMinimumENS0_11EDateFieldsE'/>
<fun r='_ZNK6icu_668Calendar18getGreatestMinimumE19UCalendarDateFields'/>
<fun r='_ZNK6icu_668Calendar15getLeastMaximumENS0_11EDateFieldsE'/>
<fun r='_ZNK6icu_668Calendar15getLeastMaximumE19UCalendarDateFields'/>
<fun r='_ZNK6icu_668Calendar16getActualMinimumENS0_11EDateFieldsER10UErrorCode'/>
<fun r='_ZNK6icu_668Calendar16getActualMinimumE19UCalendarDateFieldsR10UErrorCode'/>
<fun r='_ZNK6icu_668Calendar16getActualMaximumENS0_11EDateFieldsER10UErrorCode'/>
<fun r='_ZNK6icu_668Calendar16getActualMaximumE19UCalendarDateFieldsR10UErrorCode'/>
<fun r='_ZNK6icu_668Calendar3getENS0_11EDateFieldsER10UErrorCode'/>
<fun r='_ZNK6icu_668Calendar3getE19UCalendarDateFieldsR10UErrorCode'/>
<fun r='_ZNK6icu_668Calendar5isSetENS0_11EDateFieldsE'/>
<fun r='_ZNK6icu_668Calendar5isSetE19UCalendarDateFields'/>
<fun r='_ZN6icu_668Calendar3setENS0_11EDateFieldsEi'/>
<fun r='_ZN6icu_668Calendar3setE19UCalendarDateFieldsi'/>
<fun r='_ZN6icu_668Calendar3setEiii'/>
<fun r='_ZN6icu_668Calendar3setEiiiii'/>
<fun r='_ZN6icu_668Calendar3setEiiiiii'/>
<fun r='_ZN6icu_668Calendar5clearEv'/>
<fun r='_ZN6icu_668Calendar5clearENS0_11EDateFieldsE'/>
<fun r='_ZN6icu_668Calendar5clearE19UCalendarDateFields'/>
<fun r='_ZNK6icu_668Calendar17getDynamicClassIDEv'/>
<fun r='_ZNK6icu_668Calendar7getTypeEv'/>
<fun r='_ZNK6icu_668Calendar16getDayOfWeekTypeE19UCalendarDaysOfWeekR10UErrorCode'/>
<fun r='_ZNK6icu_668Calendar20getWeekendTransitionE19UCalendarDaysOfWeekR10UErrorCode'/>
<fun r='_ZNK6icu_668Calendar9isWeekendEdR10UErrorCode'/>
<fun r='_ZNK6icu_668Calendar9isWeekendEv'/>
<fun r='_ZN6icu_668CalendarC1ER10UErrorCode'/>
<fun r='_ZN6icu_668CalendarC1ERKS0_'/>
<fun r='_ZN6icu_668CalendaraSERKS0_'/>
<fun r='_ZN6icu_668CalendarC1EPNS_8TimeZoneERKNS_6LocaleER10UErrorCode'/>
<fun r='_ZN6icu_668CalendarC1ERKNS_8TimeZoneERKNS_6LocaleER10UErrorCode'/>
<fun r='_ZN6icu_668Calendar11computeTimeER10UErrorCode'/>
<fun r='_ZN6icu_668Calendar13computeFieldsER10UErrorCode'/>
<fun r='_ZNK6icu_668Calendar15getTimeInMillisER10UErrorCode'/>
<fun r='_ZN6icu_668Calendar15setTimeInMillisEdR10UErrorCode'/>
<fun r='_ZN6icu_668Calendar8completeER10UErrorCode'/>
<fun r='_ZNK6icu_668Calendar11internalGetENS0_11EDateFieldsE'/>
<fun r='_ZNK6icu_668Calendar11internalGetE19UCalendarDateFieldsi'/>
<fun r='_ZNK6icu_668Calendar11internalGetE19UCalendarDateFields'/>
<fun r='_ZN6icu_668Calendar11internalSetENS0_11EDateFieldsEi'/>
<fun r='_ZN6icu_668Calendar11internalSetE19UCalendarDateFieldsi'/>
<fun r='_ZN6icu_668Calendar16prepareGetActualE19UCalendarDateFieldsaR10UErrorCode'/>
<fun r='_ZNK6icu_668Calendar14handleGetLimitE19UCalendarDateFieldsNS0_10ELimitTypeE'/>
<fun r='_ZNK6icu_668Calendar8getLimitE19UCalendarDateFieldsNS0_10ELimitTypeE'/>
<fun r='_ZNK6icu_668Calendar23handleComputeMonthStartEiia'/>
<fun r='_ZNK6icu_668Calendar20handleGetMonthLengthEii'/>
<fun r='_ZNK6icu_668Calendar19handleGetYearLengthEi'/>
<fun r='_ZN6icu_668Calendar21handleGetExtendedYearEv'/>
<fun r='_ZN6icu_668Calendar22handleComputeJulianDayE19UCalendarDateFields'/>
<fun r='_ZN6icu_668Calendar35handleGetExtendedYearFromWeekFieldsEii'/>
<fun r='_ZN6icu_668Calendar13validateFieldE19UCalendarDateFieldsR10UErrorCode'/>
<fun r='_ZN6icu_668Calendar16computeJulianDayEv'/>
<fun r='_ZN6icu_668Calendar18computeMillisInDayEv'/>
<fun r='_ZN6icu_668Calendar17computeZoneOffsetEddR10UErrorCode'/>
<fun r='_ZNK6icu_668Calendar11newestStampE19UCalendarDateFieldsS1_i'/>
<smbr r='icu_66::Calendar::kDatePrecedence' t='const icu_66::UFieldResolutionTable[]'/>
<smbr r='icu_66::Calendar::kYearPrecedence' t='const icu_66::UFieldResolutionTable[]'/>
<smbr r='icu_66::Calendar::kDOWPrecedence' t='const icu_66::UFieldResolutionTable[]'/>
<fun r='_ZN6icu_668Calendar13resolveFieldsEPA12_A8_Ki'/>
<fun r='_ZNK6icu_668Calendar23getFieldResolutionTableEv'/>
<fun r='_ZNK6icu_668Calendar10newerFieldE19UCalendarDateFieldsS1_'/>
<fun r='_ZNK6icu_668Calendar15getActualHelperE19UCalendarDateFieldsiiR10UErrorCode'/>
<mbr r='icu_66::Calendar::fIsTimeSet' o='64' t='UBool'/>
<mbr r='icu_66::Calendar::fAreFieldsSet' o='72' t='UBool'/>
<mbr r='icu_66::Calendar::fAreAllFieldsSet' o='80' t='UBool'/>
<mbr r='icu_66::Calendar::fAreFieldsVirtuallySet' o='88' t='UBool'/>
<fun r='_ZNK6icu_668Calendar15internalGetTimeEv'/>
<fun r='_ZN6icu_668Calendar15internalSetTimeEd'/>
<mbr r='icu_66::Calendar::fFields' o='96' t='int32_t[23]'/>
<mbr r='icu_66::Calendar::fIsSet' o='832' t='UBool[23]'/>
<mbr r='icu_66::Calendar::fStamp' o='1024' t='int32_t[23]'/>
<fun r='_ZN6icu_668Calendar19handleComputeFieldsEiR10UErrorCode'/>
<fun r='_ZNK6icu_668Calendar16getGregorianYearEv'/>
<fun r='_ZNK6icu_668Calendar17getGregorianMonthEv'/>
<fun r='_ZNK6icu_668Calendar21getGregorianDayOfYearEv'/>
<fun r='_ZNK6icu_668Calendar22getGregorianDayOfMonthEv'/>
<fun r='_ZN6icu_668Calendar21getDefaultMonthInYearEi'/>
<fun r='_ZN6icu_668Calendar20getDefaultDayInMonthEii'/>
<fun r='_ZN6icu_668Calendar8pinFieldE19UCalendarDateFieldsR10UErrorCode'/>
<fun r='_ZN6icu_668Calendar10weekNumberEiii'/>
<fun r='_ZN6icu_668Calendar10weekNumberEii'/>
<fun r='_ZN6icu_668Calendar11getLocalDOWEv'/>
<mbr r='icu_66::Calendar::fNextStamp' o='1760' t='int32_t'/>
<fun r='_ZN6icu_668Calendar16recalculateStampEv'/>
<mbr r='icu_66::Calendar::fTime' o='1792' t='UDate'/>
<mbr r='icu_66::Calendar::fLenient' o='1856' t='UBool'/>
<mbr r='icu_66::Calendar::fZone' o='1920' t='icu_66::TimeZone *'/>
<mbr r='icu_66::Calendar::fRepeatedWallTime' o='1984' t='UCalendarWallTimeOption'/>
<mbr r='icu_66::Calendar::fSkippedWallTime' o='2016' t='UCalendarWallTimeOption'/>
<mbr r='icu_66::Calendar::fFirstDayOfWeek' o='2048' t='UCalendarDaysOfWeek'/>
<mbr r='icu_66::Calendar::fMinimalDaysInFirstWeek' o='2080' t='uint8_t'/>
<mbr r='icu_66::Calendar::fWeekendOnset' o='2112' t='UCalendarDaysOfWeek'/>
<mbr r='icu_66::Calendar::fWeekendOnsetMillis' o='2144' t='int32_t'/>
<mbr r='icu_66::Calendar::fWeekendCease' o='2176' t='UCalendarDaysOfWeek'/>
<mbr r='icu_66::Calendar::fWeekendCeaseMillis' o='2208' t='int32_t'/>
<fun r='_ZN6icu_668Calendar11setWeekDataERKNS_6LocaleEPKcR10UErrorCode'/>
<fun r='_ZN6icu_668Calendar10updateTimeER10UErrorCode'/>
<mbr r='icu_66::Calendar::fGregorianYear' o='2240' t='int32_t'/>
<mbr r='icu_66::Calendar::fGregorianMonth' o='2272' t='int32_t'/>
<mbr r='icu_66::Calendar::fGregorianDayOfYear' o='2304' t='int32_t'/>
<mbr r='icu_66::Calendar::fGregorianDayOfMonth' o='2336' t='int32_t'/>
<fun r='_ZN6icu_668Calendar28computeGregorianAndDOWFieldsEiR10UErrorCode'/>
<fun r='_ZN6icu_668Calendar22computeGregorianFieldsEiR10UErrorCode'/>
<fun r='_ZN6icu_668Calendar17computeWeekFieldsER10UErrorCode'/>
<fun r='_ZN6icu_668Calendar14validateFieldsER10UErrorCode'/>
<fun r='_ZN6icu_668Calendar13validateFieldE19UCalendarDateFieldsiiR10UErrorCode'/>
<fun r='_ZN6icu_668Calendar20julianDayToDayOfWeekEd'/>
<mbr r='icu_66::Calendar::validLocale' o='2368' t='char[157]'/>
<mbr r='icu_66::Calendar::actualLocale' o='3624' t='char[157]'/>
<fun r='_ZN6icu_668Calendar19getAvailableLocalesEv'/>
<fun r='_ZN6icu_668Calendar15registerFactoryEPNS_17ICUServiceFactoryER10UErrorCode'/>
<fun r='_ZN6icu_668Calendar10unregisterEPKvR10UErrorCode'/>
<fun r='_ZNK6icu_668Calendar18haveDefaultCenturyEv'/>
<fun r='_ZNK6icu_668Calendar19defaultCenturyStartEv'/>
<fun r='_ZNK6icu_668Calendar23defaultCenturyStartYearEv'/>
<fun r='_ZNK6icu_668Calendar9getLocaleE18ULocDataLocaleTypeR10UErrorCode'/>
<fun r='_ZNK6icu_668Calendar14getRelatedYearER10UErrorCode'/>
<fun r='_ZN6icu_668Calendar14setRelatedYearEi'/>
<fun r='_ZNK6icu_668Calendar11getLocaleIDE18ULocDataLocaleTypeR10UErrorCode'/>
<fun r='_ZNK6icu_668Calendar16getBasicTimeZoneEv'/>
<fun r='_ZNK6icu_668Calendar34getImmediatePreviousZoneTransitionEdPdR10UErrorCode'/>
<fun r='_ZN6icu_668Calendar12makeInstanceERKNS_6LocaleER10UErrorCode'/>
<fun r='_ZN6icu_668Calendar25getCalendarTypeFromLocaleERKNS_6LocaleEPciR10UErrorCode'/>
<fun r='_ZN6icu_668Calendar14createInstanceEPNS_8TimeZoneER10UErrorCode'/>
<fun r='_ZN6icu_668Calendar4rollE19UCalendarDateFieldsaR10UErrorCode'/>
<fun r='_ZN6icu_668Calendar4rollENS0_11EDateFieldsEaR10UErrorCode'/>
<fun r='_ZN6icu_668Calendar11internalSetE19UCalendarDateFieldsi'/>
<fun r='_ZN6icu_668Calendar10weekNumberEii'/>
<use f='include/unicode/datefmt.h' l='314' c='_ZNK6icu_6610DateFormat6formatERNS_8CalendarERNS_13UnicodeStringERNS_13FieldPositionE'/>
<use f='include/unicode/datefmt.h' l='336' c='_ZNK6icu_6610DateFormat6formatERNS_8CalendarERNS_13UnicodeStringEPNS_21FieldPositionIteratorER10UErrorCode'/>
<use f='include/unicode/datefmt.h' l='465' c='_ZNK6icu_6610DateFormat5parseERKNS_13UnicodeStringERNS_8CalendarERNS_13ParsePositionE'/>
<use f='include/unicode/datefmt.h' l='656' c='_ZN6icu_6610DateFormat25createInstanceForSkeletonEPNS_8CalendarERKNS_13UnicodeStringERKNS_6LocaleER10UErrorCode'/>
<use f='include/unicode/datefmt.h' l='728' c='_ZNK6icu_6610DateFormat11getCalendarEv'/>
<use f='include/unicode/datefmt.h' l='739' c='_ZN6icu_6610DateFormat13adoptCalendarEPNS_8CalendarE'/>
<use f='include/unicode/datefmt.h' l='748' c='_ZN6icu_6610DateFormat11setCalendarERKNS_8CalendarE'/>
<use f='include/unicode/datefmt.h' l='872'/>
<use f='include/unicode/smpdtfmt.h' l='900' c='_ZNK6icu_6616SimpleDateFormat6formatERNS_8CalendarERNS_13UnicodeStringERNS_13FieldPositionE'/>
<use f='include/unicode/smpdtfmt.h' l='922' c='_ZNK6icu_6616SimpleDateFormat6formatERNS_8CalendarERNS_13UnicodeStringEPNS_21FieldPositionIteratorER10UErrorCode'/>
<use f='include/unicode/smpdtfmt.h' l='956' c='_ZNK6icu_6616SimpleDateFormat5parseERKNS_13UnicodeStringERNS_8CalendarERNS_13ParsePositionE'/>
<use f='include/unicode/smpdtfmt.h' l='1111' c='_ZN6icu_6616SimpleDateFormat13adoptCalendarEPNS_8CalendarE'/>
<use f='include/unicode/smpdtfmt.h' l='1254' c='_ZNK6icu_6616SimpleDateFormat7_formatERNS_8CalendarERNS_13UnicodeStringERNS_20FieldPositionHandlerER10UErrorCode'/>
<use f='include/unicode/smpdtfmt.h' l='1278' c='_ZNK6icu_6616SimpleDateFormat9subFormatERNS_13UnicodeStringEDsi15UDisplayContextiRNS_20FieldPositionHandlerERNS_8CalendarER10UErrorCode'/>
<use f='include/unicode/smpdtfmt.h' l='1323' c='_ZN6icu_6616SimpleDateFormat18initializeCalendarEPNS_8TimeZoneERKNS_6LocaleER10UErrorCode'/>
<use f='include/unicode/smpdtfmt.h' l='1359' c='_ZNK6icu_6616SimpleDateFormat11matchStringERKNS_13UnicodeStringEi19UCalendarDateFieldsPS2_iS5_RNS_8CalendarE'/>
<use f='include/unicode/smpdtfmt.h' l='1374' c='_ZNK6icu_6616SimpleDateFormat18matchQuarterStringERKNS_13UnicodeStringEi19UCalendarDateFieldsPS2_iRNS_8CalendarE'/>
<use f='include/unicode/smpdtfmt.h' l='1423' c='_ZNK6icu_6616SimpleDateFormat8subParseERKNS_13UnicodeStringERiDsiaaPaS4_RNS_8CalendarEiPNS_13MessageFormatEP23UTimeZoneFormatTimeTypePi'/>
<size>616</size>
