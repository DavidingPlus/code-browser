<def f='boost-1.85.0/libs/log/include/boost/log/utility/ipc/reliable_message_queue.hpp' l='99' ll='770'/>
<use f='boost-1.85.0/libs/log/include/boost/log/utility/ipc/reliable_message_queue.hpp' l='126' c='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1ERKS3_'/>
<use f='boost-1.85.0/libs/log/include/boost/log/utility/ipc/reliable_message_queue.hpp' l='126' c='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueaSERKS3_'/>
<use f='boost-1.85.0/libs/log/include/boost/log/utility/ipc/reliable_message_queue.hpp' l='126' c='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueaSERKS3_'/>
<use f='boost-1.85.0/libs/log/include/boost/log/utility/ipc/reliable_message_queue.hpp' l='273' c='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1EOS3_'/>
<use f='boost-1.85.0/libs/log/include/boost/log/utility/ipc/reliable_message_queue.hpp' l='289' c='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueaSEOS3_'/>
<use f='boost-1.85.0/libs/log/include/boost/log/utility/ipc/reliable_message_queue.hpp' l='289' c='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueaSEOS3_'/>
<use f='boost-1.85.0/libs/log/include/boost/log/utility/ipc/reliable_message_queue.hpp' l='291' c='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueaSEOS3_'/>
<use f='boost-1.85.0/libs/log/include/boost/log/utility/ipc/reliable_message_queue.hpp' l='291' c='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueaSEOS3_'/>
<use f='boost-1.85.0/libs/log/include/boost/log/utility/ipc/reliable_message_queue.hpp' l='301' c='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue4swapERS3_'/>
<use f='boost-1.85.0/libs/log/include/boost/log/utility/ipc/reliable_message_queue.hpp' l='309' c='_ZN5boost3log12v2s_mt_posix3ipc4swapERNS2_22reliable_message_queueES4_'/>
<use f='boost-1.85.0/libs/log/include/boost/log/utility/ipc/reliable_message_queue.hpp' l='309' c='_ZN5boost3log12v2s_mt_posix3ipc4swapERNS2_22reliable_message_queueES4_'/>
<size>8</size>
<doc f='boost-1.85.0/libs/log/include/boost/log/utility/ipc/reliable_message_queue.hpp' l='63'>/*!
 * \brief A reliable interprocess message queue
 *
 * The queue implements a reliable one-way channel of passing messages from one or multiple writers to a single reader.
 * The format of the messages is user-defined and must be consistent across all writers and the reader. The queue does
 * not enforce any specific format of the messages, other than they should be supplied as a contiguous array of bytes.
 *
 * The queue internally uses a process-shared storage identified by an \c object_name (the queue name). Refer to \c object_name
 * documentation for details on restrictions imposed on object names.
 *
 * The queue storage is organized as a fixed number of blocks of a fixed size. The block size must be an integer power of 2 and
 * is expressed in bytes. Each written message, together with some metadata added by the queue, consumes an integer number
 * of blocks. Each read message received by the reader releases the blocks allocated for that message. As such the maximum size
 * of a message is slightly less than block size times capacity of the queue. For efficiency, it is recommended to choose
 * block size large enough to accommodate most of the messages to be passed through the queue.
 *
 * The queue is considered empty when no messages are enqueued (all blocks are free). The queue is considered full at the point
 * of enqueueing a message when there is not enough free blocks to accommodate the message.
 *
 * The queue is reliable in that it will not drop successfully sent messages that are not received by the reader, other than the
 * case when a non-empty queue is destroyed by the last user. If a message cannot be enqueued by the writer because the queue is
 * full, the queue can either block the writer or return an error or throw an exception, depending on the policy specified at
 * the queue creation. The policy is object local, i.e. different writers and the reader can have different overflow policies.
 *
 * If the queue is empty and the reader attempts to dequeue a message, it will block until a message is enqueued by a writer.
 *
 * A blocked reader or writer can be unblocked by calling \c stop_local. After this method is called, all threads blocked on
 * this particular object are released and return \c operation_result::aborted. The other instances of the queue (in the current
 * or other processes) are unaffected. In order to restore the normal functioning of the queue instance after the \c stop_local
 * call the user has to invoke \c reset_local.
 *
 * The queue does not guarantee any particular order of received messages from different writer threads. Messages sent by a
 * particular writer thread will be received in the order of sending.
 *
 * Methods of this class are not thread-safe, unless otherwise specified.
 */</doc>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1ERKS3_'/>
<mbr r='boost::log::ipc::reliable_message_queue::m_impl' o='0' t='boost::log::ipc::reliable_message_queue::implementation *'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1Ev'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1ENS1_9open_mode15create_only_tagERKNS2_11object_nameEjjNS3_15overflow_policyERKNS1_11permissionsE'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1ENS1_9open_mode18open_or_create_tagERKNS2_11object_nameEjjNS3_15overflow_policyERKNS1_11permissionsE'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1ENS1_9open_mode13open_only_tagERKNS2_11object_nameENS3_15overflow_policyERKNS1_11permissionsE'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1ERKT_NS_11enable_if_cIXsr5boost3mpl3or_INS_10is_base_ofINS_9parameter3aux20tagged_argument_ba11602017'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1ERKT_RKT0_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1ERKT_RKT0_RKT1_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1ERKT_RKT0_RKT1_RKT2_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1ERKT_RKT0_RKT1_RKT2_RKT3_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1ERKT_RKT0_RKT1_RKT2_RKT3_RKT4_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1ERKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1ERKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_RKT6_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1ERKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_RKT6_RKT7_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1ERKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_RKT6_RKT7_RKT8_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1ERKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_RKT6_RKT7_RKT8_RKT9_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1ERKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_RKT6_RKT7_RKT8_RKT9_RKT10_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1ERKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_RKT6_RKT7_RKT8_RKT9_RKT10_RKT11_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1ERKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_RKT6_RKT7_RKT8_RKT9_RKT10_RKT11_RKT12_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1ERKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_RKT6_RKT7_RKT8_RKT9_RKT10_RKT11_RKT12_RKT13_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueD1Ev'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueC1EOS3_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueaSEOS3_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue4swapERS3_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue6createERKNS2_11object_nameEjjNS3_15overflow_policyERKNS1_11permissionsE'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue14open_or_createERKNS2_11object_nameEjjNS3_15overflow_policyERKNS1_11permissionsE'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue4openERKNS2_11object_nameENS3_15overflow_policyERKNS1_11permissionsE'/>
<fun r='_ZNK5boost3log12v2s_mt_posix3ipc22reliable_message_queue7is_openEv'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue5clearEv'/>
<fun r='_ZNK5boost3log12v2s_mt_posix3ipc22reliable_message_queue4nameEv'/>
<fun r='_ZNK5boost3log12v2s_mt_posix3ipc22reliable_message_queue8capacityEv'/>
<fun r='_ZNK5boost3log12v2s_mt_posix3ipc22reliable_message_queue10block_sizeEv'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue10stop_localEv'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue11reset_localEv'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue5closeEv'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue4sendEPKvj'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue8try_sendEPKvj'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue7receiveEPvjRj'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue7receiveERAT0__T_Rj'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue7receiveERT_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue11try_receiveEPvjRj'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue11try_receiveERAT0__T_Rj'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue11try_receiveERT_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue6removeERKNS2_11object_nameE'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue9constructERKT_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue18construct_dispatchENS1_9open_mode15create_only_tagERKT_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue18construct_dispatchENS1_9open_mode18open_or_create_tagERKT_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue18construct_dispatchENS1_9open_mode13open_only_tagERKT_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue8do_closeEv'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue10do_receiveEPFvPvPKvjES4_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue14do_try_receiveEPFvPvPKvjES4_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue28fixed_buffer_receive_handlerEPvPKvj'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue25container_receive_handlerEPvPKvj'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue6createERKNS2_11object_nameEjjNS3_15overflow_policyERKNS1_11permissionsE'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue14open_or_createERKNS2_11object_nameEjjNS3_15overflow_policyERKNS1_11permissionsE'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue4openERKNS2_11object_nameENS3_15overflow_policyERKNS1_11permissionsE'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue5clearEv'/>
<fun r='_ZNK5boost3log12v2s_mt_posix3ipc22reliable_message_queue4nameEv'/>
<fun r='_ZNK5boost3log12v2s_mt_posix3ipc22reliable_message_queue8capacityEv'/>
<fun r='_ZNK5boost3log12v2s_mt_posix3ipc22reliable_message_queue10block_sizeEv'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue10stop_localEv'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue11reset_localEv'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue8do_closeEv'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue4sendEPKvj'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue8try_sendEPKvj'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue10do_receiveEPFvPvPKvjES4_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue14do_try_receiveEPFvPvPKvjES4_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue28fixed_buffer_receive_handlerEPvPKvj'/>
<fun r='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queue6removeERKNS2_11object_nameE'/>
