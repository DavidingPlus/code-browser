<def f='boost-1.85.0/libs/intrusive/include/boost/intrusive/slist.hpp' l='1293' ll='1297' type='void boost::intrusive::slist_impl::splice_after(boost::intrusive::slist_impl::const_iterator prev_pos, slist_impl&lt;ValueTraits, SizeType, BoolFlags, HeaderHolder&gt; &amp; x, boost::intrusive::slist_impl::const_iterator prev_ele)'/>
<doc f='boost-1.85.0/libs/intrusive/include/boost/intrusive/slist.hpp' l='1280'>//! &lt;b&gt;Requires&lt;/b&gt;: prev must point to an element contained by this list or
   //!   to the before_begin() element. prev_ele must point to an element contained in list
   //!   x or must be x.before_begin().
   //!
   //! &lt;b&gt;Effects&lt;/b&gt;: Transfers the element after prev_ele, from list x to this list,
   //!   after the element pointed by prev. No destructors or copy constructors are called.
   //!
   //! &lt;b&gt;Throws&lt;/b&gt;: Nothing.
   //!
   //! &lt;b&gt;Complexity&lt;/b&gt;: Constant.
   //!
   //! &lt;b&gt;Note&lt;/b&gt;: Iterators of values obtained from list x now point to elements of this
   //! list. Iterators of this list and all the references are not invalidated.</doc>
