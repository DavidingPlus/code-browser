<dec f='boost-1.85.0/libs/url/include/boost/url/segments_base.hpp' l='273' type='std::string boost::urls::segments_base::back() const'/>
<def f='boost-1.85.0/libs/url/include/boost/url/impl/segments_base.hpp' l='114' ll='121' type='std::string boost::urls::segments_base::back() const'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/segments_base.hpp' l='244'>/** Return the last segment

        @par Preconditions
        @code
        this-&gt;empty() == false
        @endcode

        @par Example
        @code
        assert( url_view( &quot;/path/to/file.txt&quot; ).segments().back() == &quot;file.txt&quot; );
        @endcode

        @par Preconditions
        @code
        this-&gt;empty() == false
        @endcode

        @par Effects
        @code
        return *--end();
        @endcode

        @par Complexity
        Linear in `this-&gt;back().size()`.

        @par Exception Safety
        Calls to allocate may throw.
    */</doc>
