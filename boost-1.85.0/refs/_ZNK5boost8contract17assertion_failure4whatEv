<dec f='boost-1.85.0/libs/contract/include/boost/contract/core/exception.hpp' l='183' type='const char * boost::contract::assertion_failure::what() const'/>
<inh f='include/c++/9/bits/exception.h' l='75' c='_ZNKSt9exception4whatEv'/>
<def f='boost-1.85.0/libs/contract/include/boost/contract/detail/inlined/core/exception.hpp' l='65' ll='67' type='const char * boost::contract::assertion_failure::what() const'/>
<use f='boost-1.85.0/libs/contract/include/boost/contract/detail/inlined/core/exception.hpp' l='118' u='c' c='_ZN5boost8contract10exception_15default_handlerEv'/>
<doc f='boost-1.85.0/libs/contract/include/boost/contract/core/exception.hpp' l='172'>/**
    String describing the failed assertion.
    
    @b Throws: This is declared @c noexcept (or @c throw() before C++11).
    
    @return A string formatted similarly to the following:
      &lt;c&gt;assertion &quot;`code()`&quot; failed: file &quot;`file()`&quot;, line \`line()\`&lt;/c&gt;
            (where `` indicate execution quotes).
            File, line, and code will be omitted from this string if they were
            not specified when constructing this object.
    */</doc>
