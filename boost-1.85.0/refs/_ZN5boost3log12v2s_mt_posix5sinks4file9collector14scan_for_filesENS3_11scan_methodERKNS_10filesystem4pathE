<dec f='boost-1.85.0/libs/log/include/boost/log/sinks/text_file_backend.hpp' l='149' type='boost::log::sinks::file::scan_result boost::log::sinks::file::collector::scan_for_files(boost::log::sinks::file::scan_method method, const filesystem::path &amp; pattern = filesystem::path())'/>
<doc f='boost-1.85.0/libs/log/include/boost/log/sinks/text_file_backend.hpp' l='120'>/*!
     * Scans the target directory for the files that have already been stored. The found
     * files are added to the collector in order to be tracked and erased, if needed.
     *
     * The function may scan the directory in two ways: it will either consider every
     * file in the directory a log file, or will only consider files with names that
     * match the specified pattern. The pattern may contain the following placeholders:
     *
     * \li %y, %Y, %m, %d - date components, in Boost.DateTime meaning.
     * \li %H, %M, %S, %f - time components, in Boost.DateTime meaning.
     * \li %N - numeric file counter. May also contain width specification
     *     in printf-compatible form (e.g. %5N). The resulting number will always be zero-filled.
     * \li %% - a percent sign
     *
     * All other placeholders are not supported.
     *
     * \param method The method of scanning. If \c no_scan is specified, the call has no effect.
     * \param pattern The file name pattern if \a method is \c scan_matching. Otherwise the parameter
     *                is not used.
     * \return The result of filesystem scanning. The last file counter is only populated if
     *         \a method is \c scan_matching, the \a pattern contains %N placeholder, and at least
     *         one file matching the pattern is found.
     *
     * \note In case if \a method is \c scan_matching the effect of this function is highly dependent
     *       on the \a pattern definition. It is recommended to choose patterns with easily
     *       distinguished placeholders (i.e. having delimiters between them). Otherwise
     *       either some files can be mistakenly found or not found, which in turn may lead
     *       to deletion of an unintended file.
     */</doc>
<ovr f='boost-1.85.0/libs/log/src/text_file_backend.cpp' l='967' c='_ZN5boost3log12v2s_mt_posix5sinks9anonymous14file_collector14scan_for_filesENS2_4file11scan_methodERKNS_10filesystem4pathE'/>
<use f='boost-1.85.0/libs/log/src/text_file_backend.cpp' l='1696' u='c' c='_ZN5boost3log12v2s_mt_posix5sinks17text_file_backend14scan_for_filesENS2_4file11scan_methodEb'/>
