<dec f='include/unicode/schriter.h' l='87' type='void icu_66::StringCharacterIterator::StringCharacterIterator(const icu_66::UnicodeString &amp; textStr, int32_t textBegin, int32_t textEnd, int32_t textPos)'/>
<doc f='include/unicode/schriter.h' l='71'>/**
   * Create an iterator over the UnicodeString referred to by &quot;textStr&quot;.
   * The UnicodeString object is copied.
   * The iteration range begins with the code unit specified by
   * &quot;textBegin&quot; and ends with the code unit BEFORE the code unit specified
   * by &quot;textEnd&quot;.  The starting position is specified by &quot;textPos&quot;.  If
   * &quot;textBegin&quot; and &quot;textEnd&quot; don&apos;t form a valid range on &quot;text&quot; (i.e.,
   * textBegin &gt;= textEnd or either is negative or greater than text.size()),
   * or &quot;textPos&quot; is outside the range defined by &quot;textBegin&quot; and &quot;textEnd&quot;,
   * the behavior of this iterator is undefined.
   * @param textStr    The unicode string used to create the StringCharacterIterator
   * @param textBegin  The begin position of the iteration range
   * @param textEnd    The end position of the iteration range
   * @param textPos    The starting position of the iteration
   * @stable ICU 2.0
   */</doc>
