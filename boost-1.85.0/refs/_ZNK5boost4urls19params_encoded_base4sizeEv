<dec f='boost-1.85.0/libs/url/include/boost/url/params_encoded_base.hpp' l='209' type='std::size_t boost::urls::params_encoded_base::size() const'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/params_encoded_base.hpp' l='195'>/** Return the number of params
    
        @par Example
        @code
        assert( url_view( &quot;?key=value&quot;).encoded_params().size() == 1 );
        @endcode

        @par Complexity
        Constant.

        @par Exception Safety
        Throws nothing.
    */</doc>
<def f='boost-1.85.0/libs/url/src/params_encoded_base.cpp' l='72' ll='77' type='std::size_t boost::urls::params_encoded_base::size() const'/>
<use f='boost-1.85.0/libs/url/src/parse_query.cpp' l='40' u='c' c='_ZN5boost4urls11parse_queryENS_4core17basic_string_viewIcEE'/>
<use f='boost-1.85.0/libs/url/src/rfc/detail/query_part_rule.hpp' l='57' u='c' c='_ZNK5boost4urls6detail17query_part_rule_t5parseERPKcS4_'/>
