<def f='boost-1.85.0/libs/intrusive/include/boost/intrusive/list.hpp' l='1004' ll='1005' type='void boost::intrusive::list_impl::sort()'/>
<doc f='boost-1.85.0/libs/intrusive/include/boost/intrusive/list.hpp' l='993'>//! &lt;b&gt;Effects&lt;/b&gt;: This function sorts the list *this according to operator &lt;.
   //!   The sort is stable, that is, the relative order of equivalent elements is preserved.
   //!
   //! &lt;b&gt;Throws&lt;/b&gt;: If value_traits::node_traits::node
   //!   constructor throws (this does not happen with predefined Boost.Intrusive hooks)
   //!   or operator &lt; throws. Basic guarantee.
   //!
   //! &lt;b&gt;Notes&lt;/b&gt;: Iterators and references are not invalidated.
   //!
   //! &lt;b&gt;Complexity&lt;/b&gt;: The number of comparisons is approximately N log N, where N
   //!   is the list&apos;s size.</doc>
