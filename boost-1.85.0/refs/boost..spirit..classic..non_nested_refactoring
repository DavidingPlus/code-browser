<def f='boost-1.85.0/libs/spirit/include/boost/spirit/home/classic/meta/impl/refactoring.ipp' l='27'/>
<use f='boost-1.85.0/libs/spirit/include/boost/spirit/home/classic/meta/impl/refactoring.ipp' l='27'/>
<use f='boost-1.85.0/libs/spirit/include/boost/spirit/home/classic/meta/impl/refactoring.ipp' l='138'/>
<use f='boost-1.85.0/libs/spirit/include/boost/spirit/home/classic/meta/impl/refactoring.ipp' l='143' c='_ZN5boost6spirit7classic4impl19refactor_unary_typeINS1_22non_nested_refactoringEE5parseERKT_RKT0_RKT1_RKS4_'/>
<use f='boost-1.85.0/libs/spirit/include/boost/spirit/home/classic/meta/impl/refactoring.ipp' l='273'/>
<use f='boost-1.85.0/libs/spirit/include/boost/spirit/home/classic/meta/impl/refactoring.ipp' l='278' c='_ZN5boost6spirit7classic4impl20refactor_action_typeINS1_22non_nested_refactoringEE5parseERKT_RKT0_RKT1_RKS4_'/>
<use f='boost-1.85.0/libs/spirit/include/boost/spirit/home/classic/meta/impl/refactoring.ipp' l='408'/>
<use f='boost-1.85.0/libs/spirit/include/boost/spirit/home/classic/meta/impl/refactoring.ipp' l='413' c='_ZN5boost6spirit7classic4impl18attach_action_typeINS1_22non_nested_refactoringEE5parseERKT_RKT0_RKT1_RKS4_'/>
<use f='boost-1.85.0/libs/spirit/include/boost/spirit/home/classic/meta/refactoring.hpp' l='53'/>
<use f='boost-1.85.0/libs/spirit/include/boost/spirit/home/classic/meta/refactoring.hpp' l='56'/>
<use f='boost-1.85.0/libs/spirit/include/boost/spirit/home/classic/meta/refactoring.hpp' l='95' c='_ZN5boost6spirit7classic18refactor_unary_genC1ERKT_'/>
<use f='boost-1.85.0/libs/spirit/include/boost/spirit/home/classic/meta/refactoring.hpp' l='136'/>
<use f='boost-1.85.0/libs/spirit/include/boost/spirit/home/classic/meta/refactoring.hpp' l='139'/>
<use f='boost-1.85.0/libs/spirit/include/boost/spirit/home/classic/meta/refactoring.hpp' l='178' c='_ZN5boost6spirit7classic19refactor_action_genC1ERKT_'/>
<use f='boost-1.85.0/libs/spirit/include/boost/spirit/home/classic/meta/refactoring.hpp' l='218'/>
<use f='boost-1.85.0/libs/spirit/include/boost/spirit/home/classic/meta/refactoring.hpp' l='221'/>
<use f='boost-1.85.0/libs/spirit/include/boost/spirit/home/classic/meta/refactoring.hpp' l='260' c='_ZN5boost6spirit7classic17attach_action_genC1ERKT_'/>
<size>1</size>
<doc f='boost-1.85.0/libs/spirit/include/boost/spirit/home/classic/meta/impl/refactoring.ipp' l='17'>///////////////////////////////////////////////////////////////////////////////
//
//  The struct &apos;self_nested_refactoring&apos; is used to indicate, that the
//  refactoring algorithm should be &apos;self-nested&apos;.
//
//  The struct &apos;non_nested_refactoring&apos; is used to indicate, that no nesting
//  of refactoring algorithms is reqired.
//
///////////////////////////////////////////////////////////////////////////////</doc>
