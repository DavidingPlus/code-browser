<dec f='boost-1.85.0/libs/url/include/boost/url/url_view_base.hpp' l='1257' type='boost::urls::ipv6_address boost::urls::url_view_base::host_ipv6_address() const'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/url_view_base.hpp' l='1212'>/** Return the host IPv6 address

        If the host type is @ref host_type::ipv6,
        this function returns the address as
        a value of type @ref ipv6_address.
        Otherwise, if the host type is not an IPv6
        address, it returns a default-constructed
        value which is equal to the unspecified
        address &quot;0:0:0:0:0:0:0:0&quot;.

        @par Example
        @code
        assert( url_view( &quot;ftp://[::1]/&quot; ).host_ipv6_address() == ipv6_address( &quot;::1&quot; ) );
        @endcode

        @par Complexity
        Constant.

        @par Exception Safety
        Throws nothing.

        @par BNF
        @code
        IPv6address =                            6( h16 &quot;:&quot; ) ls32
                    /                       &quot;::&quot; 5( h16 &quot;:&quot; ) ls32
                    / [               h16 ] &quot;::&quot; 4( h16 &quot;:&quot; ) ls32
                    / [ *1( h16 &quot;:&quot; ) h16 ] &quot;::&quot; 3( h16 &quot;:&quot; ) ls32
                    / [ *2( h16 &quot;:&quot; ) h16 ] &quot;::&quot; 2( h16 &quot;:&quot; ) ls32
                    / [ *3( h16 &quot;:&quot; ) h16 ] &quot;::&quot;    h16 &quot;:&quot;   ls32
                    / [ *4( h16 &quot;:&quot; ) h16 ] &quot;::&quot;              ls32
                    / [ *5( h16 &quot;:&quot; ) h16 ] &quot;::&quot;              h16
                    / [ *6( h16 &quot;:&quot; ) h16 ] &quot;::&quot;

        ls32        = ( h16 &quot;:&quot; h16 ) / IPv4address
                    ; least-significant 32 bits of address

        h16         = 1*4HEXDIG
                    ; 16 bits of address represented in hexadecimal
        @endcode

        @par Specification
        @li &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc3986#section-3.2.2&quot;
            &gt;3.2.2. Host (rfc3986)&lt;/a&gt;
    */</doc>
<def f='boost-1.85.0/libs/url/src/url_view_base.cpp' l='380' ll='391' type='urls::ipv6_address boost::urls::url_view_base::host_ipv6_address() const'/>
