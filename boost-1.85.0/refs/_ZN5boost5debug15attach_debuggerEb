<dec f='boost-1.85.0/libs/test/include/boost/test/debug.hpp' l='106' type='bool boost::debug::attach_debugger(bool break_or_continue = true)'/>
<def f='boost-1.85.0/libs/test/include/boost/test/impl/debug.ipp' l='820' ll='989' type='bool boost::debug::attach_debugger(bool break_or_continue = true)'/>
<doc f='boost-1.85.0/libs/test/include/boost/test/debug.hpp' l='96'>// ************************************************************************** //
/// Attaches debugger to the current process

/// Using  currently selected debugger, this routine attempts to attach the debugger to this process.
/// @param[in] break_or_continue tells what we wan to do after the debugger is attached. If true - process execution breaks
///                              in the point in invocation of this function. Otherwise execution continues, but now it is
///                              under the debugger
/// @returns true if debugger successfully attached. False otherwise
// ************************************************************************** //</doc>
<use f='boost-1.85.0/libs/test/include/boost/test/impl/execution_monitor.ipp' l='880' u='c' c='_ZN5boost6detailL48boost_execution_monitor_attaching_signal_handlerEiP9siginfo_tPv'/>
