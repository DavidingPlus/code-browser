<def f='boost-1.85.0/libs/log/include/boost/log/detail/adaptive_mutex.hpp' l='161' ll='220'/>
<use f='boost-1.85.0/libs/log/include/boost/log/detail/adaptive_mutex.hpp' l='211' c='_ZN5boost3log12v2s_mt_posix3aux14adaptive_mutexC1ERKS3_'/>
<use f='boost-1.85.0/libs/log/include/boost/log/detail/adaptive_mutex.hpp' l='212' c='_ZN5boost3log12v2s_mt_posix3aux14adaptive_mutexaSERKS3_'/>
<use f='boost-1.85.0/libs/log/include/boost/log/detail/adaptive_mutex.hpp' l='212' c='_ZN5boost3log12v2s_mt_posix3aux14adaptive_mutexaSERKS3_'/>
<use f='boost-1.85.0/libs/log/src/threadsafe_queue.cpp' l='52'/>
<size>40</size>
<doc f='boost-1.85.0/libs/log/include/boost/log/detail/adaptive_mutex.hpp' l='160'>//! A mutex that performs spinning or thread yielding in case of contention</doc>
<mbr r='boost::log::aux::adaptive_mutex::m_State' o='0' t='pthread_mutex_t'/>
<fun r='_ZN5boost3log12v2s_mt_posix3aux14adaptive_mutexC1Ev'/>
<fun r='_ZN5boost3log12v2s_mt_posix3aux14adaptive_mutexD1Ev'/>
<fun r='_ZN5boost3log12v2s_mt_posix3aux14adaptive_mutex8try_lockEv'/>
<fun r='_ZN5boost3log12v2s_mt_posix3aux14adaptive_mutex4lockEv'/>
<fun r='_ZN5boost3log12v2s_mt_posix3aux14adaptive_mutex6unlockEv'/>
<fun r='_ZN5boost3log12v2s_mt_posix3aux14adaptive_mutexC1ERKS3_'/>
<fun r='_ZN5boost3log12v2s_mt_posix3aux14adaptive_mutex15throw_exceptionEiPKcS5_S5_i'/>
