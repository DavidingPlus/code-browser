<inh f='boost-1.85.0/libs/log/include/boost/log/sinks/basic_sink_backend.hpp' l='70' c='boost::log::sinks::basic_formatted_sink_backend'/>
<def f='boost-1.85.0/libs/log/include/boost/log/sinks/syslog_backend.hpp' l='150' ll='276'/>
<use f='boost-1.85.0/libs/log/src/setup/init_from_settings.cpp' l='584' c='_ZN5boost3log12v2s_mt_posix9anonymous27default_syslog_sink_factory11create_sinkERKNS2_26basic_default_sink_factoryIT_E16settings_sectionE'/>
<size>8</size>
<doc f='boost-1.85.0/libs/log/include/boost/log/sinks/syslog_backend.hpp' l='123'>/*!
 * \brief An implementation of a syslog sink backend
 *
 * The backend provides support for the syslog protocol, defined in RFC3164.
 * The backend sends log records to a remote host via UDP. The host name can
 * be specified by calling the \c set_target_address method. By default log
 * records will be sent to localhost:514. The local address can be specified
 * as well, by calling the \c set_local_address method. By default syslog
 * packets will be sent from any local address available.
 *
 * It is safe to create several sink backends with the same local addresses -
 * the backends within the process will share the same socket. The same applies
 * to different processes that use the syslog backends to send records from
 * the same socket. However, it is not guaranteed to work if some third party
 * facility is using the socket.
 *
 * On systems with native syslog implementation it may be preferable to utilize
 * the POSIX syslog API instead of direct socket management in order to bypass
 * possible security limitations that may be in action. To do so one has to pass
 * the &lt;tt&gt;use_impl = native&lt;/tt&gt; to the backend constructor. Note, however,
 * that in that case you will only have one chance to specify syslog facility and
 * process identification string - on the first native syslog backend construction.
 * Other native syslog backends will ignore these parameters.
 * Obviously, the \c set_local_address and \c set_target_address
 * methods have no effect for native backends. Using &lt;tt&gt;use_impl = native&lt;/tt&gt;
 * on platforms with no native support for POSIX syslog API will have no effect.
 */</doc>
<mbr r='boost::log::sinks::syslog_backend::m_pImpl' o='0' t='boost::log::sinks::syslog_backend::implementation *'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backendC1Ev'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backendC1ERKT_NS_11enable_if_cIXsr5boost3mpl3or_INS_10is_base_ofINS_9parameter3aux20tagged_argument_baseES4_10473605'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backendC1ERKT_RKT0_'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backendC1ERKT_RKT0_RKT1_'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backendC1ERKT_RKT0_RKT1_RKT2_'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backendC1ERKT_RKT0_RKT1_RKT2_RKT3_'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backendC1ERKT_RKT0_RKT1_RKT2_RKT3_RKT4_'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backendC1ERKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backendC1ERKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_RKT6_'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backendC1ERKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_RKT6_RKT7_'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backendC1ERKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_RKT6_RKT7_RKT8_'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backendC1ERKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_RKT6_RKT7_RKT8_RKT9_'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backendC1ERKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_RKT6_RKT7_RKT8_RKT9_RKT10_'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backendC1ERKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_RKT6_RKT7_RKT8_RKT9_RKT10_RKT11_'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backendC1ERKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_RKT6_RKT7_RKT8_RKT9_RKT10_RKT11_RKT12_'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backendC1ERKT_RKT0_RKT1_RKT2_RKT3_RKT4_RKT5_RKT6_RKT7_RKT8_RKT9_RKT10_RKT11_RKT12_RKT13_'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backendD1Ev'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backend19set_severity_mapperERKNS1_3aux14light_functionIFNS2_6syslog5levelERKNS1_11record_viewEEEE'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backend17set_local_addressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEt'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backend17set_local_addressERKNS_4asio2ip7addressEt'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backend18set_target_addressERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEt'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backend18set_target_addressERKNS_4asio2ip7addressEt'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backend7consumeERKNS1_11record_viewERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backend9constructERKT_'/>
<fun r='_ZN5boost3log12v2s_mt_posix5sinks14syslog_backend9constructENS2_6syslog8facilityENS4_10impl_typesENS2_11ip_versionsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
