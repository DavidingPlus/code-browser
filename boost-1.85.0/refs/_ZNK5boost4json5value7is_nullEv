<def f='boost-1.85.0/libs/json/include/boost/json/value.hpp' l='1880' ll='1884' type='bool boost::json::value::is_null() const'/>
<use f='boost-1.85.0/libs/json/include/boost/json/detail/value_to.hpp' l='181' u='c' c='_ZN5boost4json6detail13value_to_implENS1_24null_like_conversion_tagENS0_16try_value_to_tagIT_EERKNS0_5valueERKT0_'/>
<use f='boost-1.85.0/libs/json/include/boost/json/detail/value_to.hpp' l='478' u='c' c='_ZN5boost4json6detail13value_to_implENS1_23optional_conversion_tagENS0_16try_value_to_tagIT_EERKNS0_5valueERKT0_'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/pointer.ipp' l='446' u='c' c='_ZN5boost4json5value14set_at_pointerENS_4core17basic_string_viewIcEENS0_9value_refERNS_6system10error_codeERKNS0_19set_pointer_optionsE'/>
<doc f='boost-1.85.0/libs/json/include/boost/json/value.hpp' l='1864'>/** Returns true if this is a null.

        This function is used to determine if the underlying
        representation is a certain kind.

        @par Effects
        @code
        return this-&gt;kind() == kind::null;
        @endcode

        @par Complexity
        Constant.

        @par Exception Safety
        No-throw guarantee.
    */</doc>
