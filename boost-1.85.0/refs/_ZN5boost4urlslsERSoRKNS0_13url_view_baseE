<def f='boost-1.85.0/libs/url/include/boost/url/url_view_base.hpp' l='2722' ll='2729' type='std::ostream &amp; boost::urls::operator&lt;&lt;(std::ostream &amp; os, const boost::urls::url_view_base &amp; u)'/>
<dec f='boost-1.85.0/libs/url/include/boost/url/url_view_base.hpp' l='2779' type='std::ostream &amp; boost::urls::operator&lt;&lt;(std::ostream &amp; os, const boost::urls::url_view_base &amp; u)'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/url_view_base.hpp' l='2746'>/** Format the url to the output stream

    This function serializes the url to
    the specified output stream. Any
    percent-escapes are emitted as-is;
    no decoding is performed.

    @par Example
    @code
    url_view u( &quot;http://www.example.com/index.htm&quot; );
    std::stringstream ss;
    ss &lt;&lt; u;
    assert( ss.str() == &quot;http://www.example.com/index.htm&quot; );
    @endcode

    @par Effects
    @code
    return os &lt;&lt; u.buffer();
    @endcode

    @par Complexity
    Linear in `u.buffer().size()`

    @par Exception Safety
    Basic guarantee.

    @return A reference to the output stream, for chaining

    @param os The output stream to write to.

    @param u The url to write.
*/</doc>
