<dec f='boost-1.85.0/libs/core/include/boost/core/explicit_operator_bool.hpp' l='50'/>
<use f='boost-1.85.0/libs/optional/include/boost/optional/optional.hpp' l='1512' u='c'/>
<use f='boost-1.85.0/libs/optional/include/boost/optional/detail/optional_reference_spec.hpp' l='164' u='c'/>
<doc f='boost-1.85.0/libs/core/include/boost/core/explicit_operator_bool.hpp' l='43'>/*!
 * \brief The macro defines a noexcept explicit operator of conversion to \c bool
 *
 * The macro should be used inside the definition of a class that has to
 * support the conversion. The class should also implement &lt;tt&gt;operator!&lt;/tt&gt;,
 * in terms of which the conversion operator will be implemented.
 */</doc>
<use f='boost-1.85.0/libs/log/include/boost/log/attributes/attribute_name.hpp' l='143' u='c'/>
<use f='boost-1.85.0/libs/log/include/boost/log/attributes/attribute.hpp' l='140' u='c'/>
<use f='boost-1.85.0/libs/log/include/boost/log/utility/type_dispatch/type_dispatcher.hpp' l='113' u='c'/>
<use f='boost-1.85.0/libs/log/include/boost/log/attributes/attribute_value.hpp' l='157' u='c'/>
<use f='boost-1.85.0/libs/log/include/boost/log/detail/light_function.hpp' l='273' u='c'/>
<use f='boost-1.85.0/libs/log/include/boost/log/detail/light_function.hpp' l='479' u='c'/>
<use f='boost-1.85.0/libs/log/include/boost/log/core/record_view.hpp' l='193' u='c'/>
<use f='boost-1.85.0/libs/log/include/boost/log/core/record.hpp' l='122' u='c'/>
<use f='boost-1.85.0/libs/log/include/boost/log/utility/value_ref.hpp' l='471' u='c'/>
<use f='boost-1.85.0/libs/log/include/boost/log/attributes/value_visitation.hpp' l='74' u='c'/>
<use f='boost-1.85.0/libs/log/include/boost/log/sources/record_ostream.hpp' l='141' u='c'/>
<use f='boost-1.85.0/libs/log/include/boost/log/detail/locking_ptr.hpp' l='113' u='c'/>
<use f='boost-1.85.0/libs/log/include/boost/log/utility/setup/settings.hpp' l='371' u='c'/>
