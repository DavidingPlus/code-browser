<dec f='boost-1.85.0/libs/foreach/include/boost/foreach.hpp' l='1105'/>
<use f='boost-1.85.0/libs/graph/include/boost/graph/graphviz.hpp' l='892' u='c'/>
<use f='boost-1.85.0/libs/graph/include/boost/graph/graphviz.hpp' l='898' u='c'/>
<use f='boost-1.85.0/libs/graph/src/graphml.cpp' l='47' u='c'/>
<use f='boost-1.85.0/libs/graph/src/graphml.cpp' l='57' u='c'/>
<use f='boost-1.85.0/libs/graph/src/graphml.cpp' l='86' u='c'/>
<use f='boost-1.85.0/libs/graph/src/graphml.cpp' l='130' u='c'/>
<use f='boost-1.85.0/libs/graph/src/graphml.cpp' l='133' u='c'/>
<use f='boost-1.85.0/libs/graph/src/graphml.cpp' l='140' u='c'/>
<use f='boost-1.85.0/libs/graph/src/graphml.cpp' l='151' u='c'/>
<use f='boost-1.85.0/libs/graph/src/graphml.cpp' l='157' u='c'/>
<use f='boost-1.85.0/libs/graph/src/graphml.cpp' l='183' u='c'/>
<doc f='boost-1.85.0/libs/foreach/include/boost/foreach.hpp' l='1079'>///////////////////////////////////////////////////////////////////////////////
// BOOST_FOREACH
//
//   For iterating over collections. Collections can be
//   arrays, null-terminated strings, or STL containers.
//   The loop variable can be a value or reference. For
//   example:
//
//   std::list&lt;int&gt; int_list(/*stuff*/);
//   BOOST_FOREACH(int &amp;i, int_list)
//   {
//       /* 
//        * loop body goes here.
//        * i is a reference to the int in int_list.
//        */
//   }
//
//   Alternately, you can declare the loop variable first,
//   so you can access it after the loop finishes. Obviously,
//   if you do it this way, then the loop variable cannot be
//   a reference.
//
//   int i;
//   BOOST_FOREACH(i, int_list)
//       { ... }
//</doc>
