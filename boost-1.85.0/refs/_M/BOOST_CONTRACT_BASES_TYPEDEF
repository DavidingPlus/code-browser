<dec f='boost-1.85.0/libs/contract/include/boost/contract/core/config.hpp' l='187'/>
<doc f='boost-1.85.0/libs/contract/include/boost/contract/core/config.hpp' l='161'>/**
    Define the name of the base type @c typedef (@c base_types by default).

    This macro expands to the name of the @c typedef that lists the base
    classes for subcontracting via @RefMacro{BOOST_CONTRACT_BASE_TYPES}:

    @code
        class u
            #define BASES public b, private w
            : BASES
        {
            friend class boost::contract:access;

            typedef BOOST_CONTRACT_BASE_TYPES(BASES) BOOST_CONTRACT_TYPEDEF;
            #undef BASES

            ...
        };
    @endcode

    When used this way, users can redefine this macro if the @c typedef must
    have a name different from @c base_types (because of name clashes in user
    code, etc.).
    
    @see @RefSect{tutorial.base_classes__subcontracting_, Base Classes}
    */</doc>
