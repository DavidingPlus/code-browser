<dec f='boost-1.85.0/libs/container/src/dlmalloc_2_8_6.c' l='3711'/>
<use f='boost-1.85.0/libs/container/src/dlmalloc_2_8_6.c' l='4266' u='c'/>
<use f='boost-1.85.0/libs/container/src/dlmalloc_2_8_6.c' l='4484' u='c'/>
<use f='boost-1.85.0/libs/container/src/dlmalloc_2_8_6.c' l='4522' u='c'/>
<doc f='boost-1.85.0/libs/container/src/dlmalloc_2_8_6.c' l='3694'>/*
  Unlink steps:

  1. If x is a chained node, unlink it from its same-sized fd/bk links
     and choose its bk node as its replacement.
  2. If x was the last node of its size, but not a leaf node, it must
     be replaced with a leaf node (not merely one with an open left or
     right), to make sure that lefts and rights of descendents
     correspond properly to bit masks.  We use the rightmost descendent
     of x.  We could use any other leaf, but this is easy to locate and
     tends to counteract removal of leftmosts elsewhere, and so keeps
     paths shorter than minimally guaranteed.  This doesn&apos;t loop much
     because on average a node in a tree is near the bottom.
  3. If x is the base of a chain (i.e., has parent links) relink
     x&apos;s parent and children to x&apos;s replacement (or null if none).
*/</doc>
