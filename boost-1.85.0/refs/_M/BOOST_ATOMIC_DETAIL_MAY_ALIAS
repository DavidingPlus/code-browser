<dec f='boost-1.85.0/libs/atomic/include/boost/atomic/detail/config.hpp' l='83'/>
<doc f='boost-1.85.0/libs/atomic/include/boost/atomic/detail/config.hpp' l='78'>// Enable pointer/reference casts between storage and value when possible.
// Note: Despite that MSVC does not employ strict aliasing rules for optimizations
// and does not require an explicit markup for types that may alias, we still don&apos;t
// enable the optimization for this compiler because at least MSVC-8 and 9 are known
// to generate broken code sometimes when casts are used.</doc>
<use f='boost-1.85.0/libs/atomic/include/boost/atomic/detail/storage_traits.hpp' l='42' u='c'/>
<use f='boost-1.85.0/libs/atomic/include/boost/atomic/detail/storage_traits.hpp' l='83' u='c'/>
<use f='boost-1.85.0/libs/atomic/include/boost/atomic/detail/storage_traits.hpp' l='92' u='c'/>
<use f='boost-1.85.0/libs/atomic/include/boost/atomic/detail/storage_traits.hpp' l='101' u='c'/>
<use f='boost-1.85.0/libs/atomic/include/boost/atomic/detail/storage_traits.hpp' l='110' u='c'/>
<use f='boost-1.85.0/libs/atomic/include/boost/atomic/detail/storage_traits.hpp' l='121' u='c'/>
