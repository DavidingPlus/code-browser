<dec f='boost-1.85.0/libs/optional/include/boost/optional/detail/optional_config.hpp' l='52'/>
<use f='boost-1.85.0/libs/optional/include/boost/optional/detail/optional_aligned_storage.hpp' l='38' u='a'/>
<use f='boost-1.85.0/libs/optional/include/boost/optional/detail/optional_aligned_storage.hpp' l='46' u='a'/>
<doc f='boost-1.85.0/libs/optional/include/boost/optional/detail/optional_config.hpp' l='48'>// GCC since 3.3 and some other compilers have may_alias attribute that helps to alleviate
// optimizer issues with regard to violation of the strict aliasing rules. The optional&lt; T &gt;
// storage type is marked with this attribute in order to let the compiler know that it will
// alias objects of type T and silence compilation warnings.</doc>
