<def f='boost-1.85.0/libs/url/include/boost/url/decode_view.hpp' l='263' ll='267' type='boost::urls::decode_view::size_type boost::urls::decode_view::size() const'/>
<use f='boost-1.85.0/libs/url/src/decode_view.cpp' l='27' u='c' c='_ZN5boost4urls6detail14decoded_strcmpENS0_11decode_viewET_'/>
<use f='boost-1.85.0/libs/url/src/decode_view.cpp' l='141' u='c' c='_ZNK5boost4urls11decode_view11starts_withENS_4core17basic_string_viewIcEE'/>
<use f='boost-1.85.0/libs/url/src/decode_view.cpp' l='161' u='c' c='_ZNK5boost4urls11decode_view9ends_withENS_4core17basic_string_viewIcEE'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/decode_view.hpp' l='245'>/** Return the number of decoded characters

        @par Example
        @code
        assert( decode_view( &quot;Program%20Files&quot; ).size() == 13 );
        @endcode

        @par Effects
        @code
        return std::distance( this-&gt;begin(), this-&gt;end() );
        @endcode

        @par Complexity
        Constant.

        @par Exception Safety
        Throws nothing.
    */</doc>
<use f='boost-1.85.0/libs/url/src/detail/normalize.cpp' l='741' u='c' c='_ZN5boost4urls6detail16segments_compareENS0_21segments_encoded_viewES2_'/>
