<dec f='include/unicode/tznames.h' l='276' type='icu_66::UnicodeString &amp; icu_66::TimeZoneNames::getExemplarLocationName(const icu_66::UnicodeString &amp; tzID, icu_66::UnicodeString &amp; name) const'/>
<doc f='include/unicode/tznames.h' l='257'>/**
     * Returns the exemplar location name for the given time zone. When this object does not have a localized location
     * name, the default implementation may still returns a programmatically generated name with the logic described
     * below.
     * &lt;ol&gt;
     * &lt;li&gt;Check if the ID contains &quot;/&quot;. If not, return null.
     * &lt;li&gt;Check if the ID does not start with &quot;Etc/&quot; or &quot;SystemV/&quot;. If it does, return null.
     * &lt;li&gt;Extract a substring after the last occurrence of &quot;/&quot;.
     * &lt;li&gt;Replace &quot;_&quot; with &quot; &quot;.
     * &lt;/ol&gt;
     * For example, &quot;New York&quot; is returned for the time zone ID &quot;America/New_York&quot; when this object does not have the
     * localized location name.
     *
     * @param tzID The canonical time zone ID
     * @param name Receives the exemplar location name for the given time zone, or &quot;bogus&quot; state is set when a localized
     *          location name is not available and the fallback logic described above cannot extract location from the ID.
     * @return A reference to the result.
     * @stable ICU 50
     */</doc>
