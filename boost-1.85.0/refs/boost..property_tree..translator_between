<def f='boost-1.85.0/libs/property_tree/include/boost/property_tree/id_translator.hpp' l='34' ll='38'/>
<def f='boost-1.85.0/libs/property_tree/include/boost/property_tree/id_translator.hpp' l='42' ll='47'/>
<def f='boost-1.85.0/libs/property_tree/include/boost/property_tree/stream_translator.hpp' l='221' ll='225'/>
<use f='boost-1.85.0/libs/property_tree/include/boost/property_tree/detail/ptree_implementation.hpp' l='682' c='_ZNK5boost13property_tree11basic_ptree9get_valueEv'/>
<use f='boost-1.85.0/libs/property_tree/include/boost/property_tree/detail/ptree_implementation.hpp' l='710' c='_ZNK5boost13property_tree11basic_ptree9get_valueERKTL0__'/>
<use f='boost-1.85.0/libs/property_tree/include/boost/property_tree/detail/ptree_implementation.hpp' l='737' c='_ZNK5boost13property_tree11basic_ptree18get_value_optionalEv'/>
<use f='boost-1.85.0/libs/property_tree/include/boost/property_tree/detail/ptree_implementation.hpp' l='838' c='_ZN5boost13property_tree11basic_ptree9put_valueERKTL0__'/>
<use f='boost-1.85.0/libs/property_tree/include/boost/property_tree/detail/ptree_implementation.hpp' l='862' c='_ZN5boost13property_tree11basic_ptree3putERKNS0_7path_ofIT_E4typeERKTL0__'/>
<use f='boost-1.85.0/libs/property_tree/include/boost/property_tree/detail/ptree_implementation.hpp' l='881' c='_ZN5boost13property_tree11basic_ptree3addERKNS0_7path_ofIT_E4typeERKTL0__'/>
<doc f='boost-1.85.0/libs/property_tree/include/boost/property_tree/id_translator.hpp' l='33'>// This is the default translator whenever you get two equal types.</doc>
<doc f='boost-1.85.0/libs/property_tree/include/boost/property_tree/id_translator.hpp' l='40'>// A more specific specialization for std::basic_string. Otherwise,
    // stream_translator&apos;s specialization wins.</doc>
<doc f='boost-1.85.0/libs/property_tree/include/boost/property_tree/stream_translator.hpp' l='218'>// This is the default translator when basic_string is the internal type.
    // Unless the external type is also basic_string, in which case
    // id_translator takes over.</doc>
