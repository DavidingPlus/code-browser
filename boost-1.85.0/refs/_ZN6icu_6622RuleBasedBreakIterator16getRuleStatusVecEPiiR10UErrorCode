<dec f='include/unicode/rbbi.h' l='513' type='int32_t icu_66::RuleBasedBreakIterator::getRuleStatusVec(int32_t * fillInVec, int32_t capacity, UErrorCode &amp; status)'/>
<doc f='include/unicode/rbbi.h' l='490'>/**
    * Get the status (tag) values from the break rule(s) that determined the boundary
    * at the current iteration position.
    * &lt;p&gt;
    * The returned status value(s) are stored into an array provided by the caller.
    * The values are stored in sorted (ascending) order.
    * If the capacity of the output array is insufficient to hold the data,
    *  the output will be truncated to the available length, and a
    *  U_BUFFER_OVERFLOW_ERROR will be signaled.
    *
    * @param fillInVec an array to be filled in with the status values.
    * @param capacity  the length of the supplied vector.  A length of zero causes
    *                  the function to return the number of status values, in the
    *                  normal way, without attempting to store any values.
    * @param status    receives error codes.
    * @return          The number of rule status values from the rules that determined
    *                  the boundary at the current iteration position.
    *                  In the event of a U_BUFFER_OVERFLOW_ERROR, the return value
    *                  is the total number of status values that were available,
    *                  not the reduced number that were actually returned.
    * @see getRuleStatus
    * @stable ICU 3.0
    */</doc>
