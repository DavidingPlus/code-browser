<dec f='boost-1.85.0/libs/pool/include/boost/pool/simple_segregated_storage.hpp' l='80' type='void * boost::simple_segregated_storage::find_prev(void * ptr)'/>
<use f='boost-1.85.0/libs/pool/include/boost/pool/simple_segregated_storage.hpp' l='130' u='c' c='_ZN5boost25simple_segregated_storage17add_ordered_blockEPvT_S2_'/>
<use f='boost-1.85.0/libs/pool/include/boost/pool/simple_segregated_storage.hpp' l='178' u='c' c='_ZN5boost25simple_segregated_storage12ordered_freeEPv'/>
<def f='boost-1.85.0/libs/pool/include/boost/pool/simple_segregated_storage.hpp' l='252' ll='268' type='void * boost::simple_segregated_storage::find_prev(void *const ptr)'/>
<doc f='boost-1.85.0/libs/pool/include/boost/pool/simple_segregated_storage.hpp' l='239'>//! Traverses the free list referred to by &quot;first&quot;,
//!  and returns the iterator previous to where
//!  &quot;ptr&quot; would go if it was in the free list.
//!  Returns 0 if &quot;ptr&quot; would go at the beginning
//!  of the free list (i.e., before &quot;first&quot;).

//! \note Note that this function finds the location previous to where ptr would go
//! if it was in the free list.
//! It does not find the entry in the free list before ptr
//! (unless ptr is already in the free list).
//! Specifically, find_prev(0) will return 0,
//! not the last entry in the free list.
//! \returns location previous to where ptr would go if it was in the free list.</doc>
