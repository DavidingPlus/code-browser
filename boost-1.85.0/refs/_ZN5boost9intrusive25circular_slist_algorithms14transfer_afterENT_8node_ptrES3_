<def f='boost-1.85.0/libs/intrusive/include/boost/intrusive/circular_slist_algorithms.hpp' l='437' ll='441' type='static void boost::intrusive::circular_slist_algorithms::transfer_after(boost::intrusive::circular_slist_algorithms::node_ptr p, boost::intrusive::circular_slist_algorithms::node_ptr other)'/>
<doc f='boost-1.85.0/libs/intrusive/include/boost/intrusive/circular_slist_algorithms.hpp' l='430'>//! &lt;b&gt;Requires&lt;/b&gt;: other must be a list and p must be a node of a different list.
   //!
   //! &lt;b&gt;Effects&lt;/b&gt;: Transfers all nodes from other after p in p&apos;s list.
   //!
   //! &lt;b&gt;Complexity&lt;/b&gt;: Linear
   //!
   //! &lt;b&gt;Throws&lt;/b&gt;: Nothing.</doc>
