<dec f='boost-1.85.0/libs/interprocess/include/boost/interprocess/mapped_region.hpp' l='194' type='bool boost::interprocess::mapped_region::shrink_by(std::size_t bytes, bool from_back = true)'/>
<def f='boost-1.85.0/libs/interprocess/include/boost/interprocess/mapped_region.hpp' l='723' ll='737' type='bool boost::interprocess::mapped_region::shrink_by(std::size_t bytes, bool from_back = true)'/>
<doc f='boost-1.85.0/libs/interprocess/include/boost/interprocess/mapped_region.hpp' l='188'>//!Shrinks current mapped region. If after shrinking there is no longer need for a previously
   //!mapped memory page, accessing that page can trigger a segmentation fault.
   //!Depending on the OS, this operation might fail (XSI shared memory), it can decommit storage
   //!and free a portion of the virtual address space (e.g.POSIX) or this
   //!function can release some physical memory without freeing any virtual address space(Windows).
   //!Returns true on success. Never throws.</doc>
