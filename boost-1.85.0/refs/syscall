<dec f='include/unistd.h' l='1056' type='long syscall(long __sysno)'/>
<doc f='include/unistd.h' l='1046'>/* Invoke `system call&apos; number SYSNO, passing it the remaining arguments.
   This is completely system-dependent, and not often useful.

   In Unix, `syscall&apos; sets `errno&apos; for all errors and most calls return -1
   for errors; in many systems you cannot pass arguments or get return
   values for all system calls (`pipe&apos;, `fork&apos;, and `getppid&apos; typically
   among them).

   In Mach, all system calls take normal arguments and always return an
   error code (zero for success).  */</doc>
<use f='boost-1.85.0/libs/atomic/include/boost/atomic/detail/futex.hpp' l='78' u='c' c='_ZN5boost7atomics6detail12futex_invokeEPvijPKvS2_j'/>
<use f='boost-1.85.0/libs/atomic/include/boost/atomic/detail/futex.hpp' l='89' u='c' c='_ZN5boost7atomics6detail12futex_invokeEPvijjS2_j'/>
<use f='boost-1.85.0/libs/fiber/include/boost/fiber/detail/futex.hpp' l='35' u='c' c='_ZN5boost6fibers6detail9sys_futexEPvii'/>
<use f='boost-1.85.0/libs/filesystem/src/operations.cpp' l='903' u='c' c='_ZN5boost10filesystem6detail12_GLOBAL__N_130copy_file_data_copy_file_range4implEiimm'/>
