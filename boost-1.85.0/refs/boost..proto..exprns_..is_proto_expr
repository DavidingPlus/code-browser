<def f='boost-1.85.0/libs/proto/include/boost/proto/extends.hpp' l='508' ll='509'/>
<size>1</size>
<doc f='boost-1.85.0/libs/proto/include/boost/proto/extends.hpp' l='483'>/// \brief Empty type to be used as a dummy template parameter of
        ///     POD expression wrappers. It allows argument-dependent lookup
        ///     to find Proto&apos;s operator overloads.
        ///
        /// \c proto::is_proto_expr allows argument-dependent lookup
        ///     to find Proto&apos;s operator overloads. For example:
        ///
        /// \code
        /// template&lt;typename T, typename Dummy = proto::is_proto_expr&gt;
        /// struct my_terminal
        /// {
        ///     BOOST_PROTO_BASIC_EXTENDS(
        ///         typename proto::terminal&lt;T&gt;::type
        ///       , my_terminal&lt;T&gt;
        ///       , default_domain
        ///     )
        /// };
        ///
        /// // ...
        /// my_terminal&lt;int&gt; _1, _2;
        /// _1 + _2; // OK, uses proto::operator+
        /// \endcode
        ///
        /// Without the second \c Dummy template parameter, Proto&apos;s operator
        /// overloads would not be considered by name lookup.</doc>
