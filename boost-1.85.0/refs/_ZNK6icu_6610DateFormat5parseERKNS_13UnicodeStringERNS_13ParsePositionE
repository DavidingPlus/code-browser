<dec f='include/unicode/datefmt.h' l='498' type='UDate icu_66::DateFormat::parse(const icu_66::UnicodeString &amp; text, icu_66::ParsePosition &amp; pos) const'/>
<use f='boost-1.85.0/libs/locale/src/boost/locale/icu/formatter.cpp' l='153' u='c' c='_ZNK5boost6locale8impl_icu11date_format8do_parseERKNSt7__cxx1112basic_stringIT_St11char_traitsIS5_ESaIS5_EEERTL0__'/>
<doc f='include/unicode/datefmt.h' l='468'>/**
     * Parse a date/time string beginning at the given parse position. For
     * example, a time text &quot;07/10/96 4:5 PM, PDT&quot; will be parsed into a Date
     * that is equivalent to Date(837039928046).
     * &lt;P&gt;
     * By default, parsing is lenient: If the input is not in the form used by
     * this object&apos;s format method but can still be parsed as a date, then the
     * parse succeeds. Clients may insist on strict adherence to the format by
     * calling setLenient(false).
     * @see DateFormat::setLenient(boolean)
     * &lt;P&gt;
     * Note that the normal date formats associated with some calendars - such
     * as the Chinese lunar calendar - do not specify enough fields to enable
     * dates to be parsed unambiguously. In the case of the Chinese lunar
     * calendar, while the year within the current 60-year cycle is specified,
     * the number of such cycles since the start date of the calendar (in the
     * ERA field of the Calendar object) is not normally part of the format,
     * and parsing may assume the wrong era. For cases such as this it is
     * recommended that clients parse using the method
     * parse(const UnicodeString&amp;, Calendar&amp; cal, ParsePosition&amp;)
     * with the Calendar passed in set to the current date, or to a date
     * within the era/cycle that should be assumed if absent in the format.
     *
     * @param text  The date/time string to be parsed into a UDate value.
     * @param pos   On input, the position at which to start parsing; on
     *              output, the position at which parsing terminated, or the
     *              start position if the parse failed.
     * @return      A valid UDate if the input could be parsed.
     * @stable ICU 2.0
     */</doc>
