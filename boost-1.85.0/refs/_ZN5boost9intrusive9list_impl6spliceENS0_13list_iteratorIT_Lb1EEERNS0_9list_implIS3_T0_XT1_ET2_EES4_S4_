<def f='boost-1.85.0/libs/intrusive/include/boost/intrusive/list.hpp' l='955' ll='961' type='void boost::intrusive::list_impl::splice(boost::intrusive::list_impl::const_iterator p, list_impl&lt;ValueTraits, SizeType, ConstantTimeSize, HeaderHolder&gt; &amp; x, boost::intrusive::list_impl::const_iterator f, boost::intrusive::list_impl::const_iterator e)'/>
<doc f='boost-1.85.0/libs/intrusive/include/boost/intrusive/list.hpp' l='942'>//! &lt;b&gt;Requires&lt;/b&gt;: p must be a valid iterator of *this.
   //!   f and e must point to elements contained in list x.
   //!
   //! &lt;b&gt;Effects&lt;/b&gt;: Transfers the range pointed by f and e from list x to this list,
   //!   before the element pointed by p. No destructors or copy constructors are called.
   //!
   //! &lt;b&gt;Throws&lt;/b&gt;: Nothing.
   //!
   //! &lt;b&gt;Complexity&lt;/b&gt;: Linear to the number of elements transferred
   //!   if constant-time size option is enabled. Constant-time otherwise.
   //!
   //! &lt;b&gt;Note&lt;/b&gt;: Iterators of values obtained from list x now point to elements of this
   //!   list. Iterators of this list and all the references are not invalidated.</doc>
