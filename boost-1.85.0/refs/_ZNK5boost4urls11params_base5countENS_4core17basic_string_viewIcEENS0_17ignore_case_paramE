<dec f='boost-1.85.0/libs/url/include/boost/url/params_base.hpp' l='297' type='std::size_t boost::urls::params_base::count(core::string_view key, boost::urls::ignore_case_param ic = {}) const'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/params_base.hpp' l='267'>/** Return the number of matching keys

        This function examines the
        parameters in the container to
        find the number of matches for
        the specified key.
        The comparison is performed as if all
        escaped characters were decoded first.

        @par Example
        @code
        assert( url_view( &quot;?first=John&amp;last=Doe&quot; ).params().count( &quot;first&quot; ) == 1 );
        @endcode

        @par Complexity
        Linear in `this-&gt;buffer().size()`.

        @par Exception Safety
        Throws nothing.

        @param key The key to match.
        By default, a case-sensitive
        comparison is used.

        @param ic An optional parameter. If
        the value @ref ignore_case is passed
        here, the comparison is
        case-insensitive.
    */</doc>
<def f='boost-1.85.0/libs/url/src/params_base.cpp' l='190' ll='206' type='std::size_t boost::urls::params_base::count(core::string_view key, boost::urls::ignore_case_param ic = {}) const'/>
<doc f='boost-1.85.0/libs/url/src/params_base.cpp' l='188'>//------------------------------------------------</doc>
