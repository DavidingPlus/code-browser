<dec f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='1426' type='boost::urls::url_base &amp; boost::urls::url_base::set_host_name(core::string_view s)'/>
<use f='boost-1.85.0/libs/url/include/boost/url/url.hpp' l='452' u='c' c='_ZN5boost4urls3url13set_host_nameENS_4core17basic_string_viewIcEE'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='1382'>/** Set the host to a name

        The host is set to the specified string,
        which may be empty.
        Reserved characters in the string are
        percent-escaped in the result.
        The host type is @ref host_type::name.

        @par Example
        @code
        assert( url( &quot;http://www.example.com/index.htm&quot;).set_host_name( &quot;localhost&quot; ).host_address() == &quot;localhost&quot; );
        @endcode

        @par Postconditions
        @code
        this-&gt;has_authority() == true &amp;&amp; this-&gt;host_ipv6_address() == addr &amp;&amp; this-&gt;host_type() == host_type::name
        @endcode

        @par Exception Safety
        Strong guarantee.
        Calls to allocate may throw.

        @param s The string to set.

        @par BNF
        @code
        reg-name    = *( unreserved / pct-encoded / &quot;-&quot; / &quot;.&quot;)
        @endcode

        @par Specification
        @li &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc3986#section-3.2.2&quot;&gt;
            3.2.2. Host (rfc3986)&lt;/a&gt;

        @see
            @ref set_encoded_host,
            @ref set_encoded_host_address,
            @ref set_encoded_host_name,
            @ref set_host,
            @ref set_host_address,
            @ref set_host_ipv4,
            @ref set_host_ipv6,
            @ref set_host_ipvfuture.
    */</doc>
<use f='boost-1.85.0/libs/url/include/boost/url/static_url.hpp' l='388' u='c' c='_ZN5boost4urls10static_url13set_host_nameENS_4core17basic_string_viewIcEE'/>
<def f='boost-1.85.0/libs/url/src/url_base.cpp' l='871' ll='902' type='boost::urls::url_base &amp; boost::urls::url_base::set_host_name(core::string_view s)'/>
