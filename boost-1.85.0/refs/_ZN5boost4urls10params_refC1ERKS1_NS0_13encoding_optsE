<dec f='boost-1.85.0/libs/url/include/boost/url/params_ref.hpp' l='153' type='void boost::urls::params_ref::params_ref(const boost::urls::params_ref &amp; other, boost::urls::encoding_opts opt)'/>
<def f='boost-1.85.0/libs/url/include/boost/url/impl/params_ref.hpp' l='39' ll='46' type='void boost::urls::params_ref::params_ref(const boost::urls::params_ref &amp; other, boost::urls::encoding_opts opt)'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/params_ref.hpp' l='123'>/** Constructor

        After construction, both views will
        reference the same url but this
        instance will use the specified
        @ref encoding_opts when the values
        are decoded.

        Ownership is not transferred; the
        caller is responsible for ensuring
        the lifetime of the url extends
        until it is no longer referenced.

        @par Postconditions
        @code
        &amp;this-&gt;url() == &amp;other.url()
        @endcode

        @par Complexity
        Constant.

        @par Exception Safety
        Throws nothing.

        @param other The other view.
        @param opt The options for decoding. If
        this parameter is omitted, `space_as_plus`
        is used.

    */</doc>
<doc f='boost-1.85.0/libs/url/include/boost/url/impl/params_ref.hpp' l='33'>//------------------------------------------------
//
// Special Members
//
//------------------------------------------------</doc>
