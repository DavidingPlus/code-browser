<def f='boost-1.85.0/libs/intrusive/include/boost/intrusive/circular_slist_algorithms.hpp' l='196' ll='197' type='static boost::intrusive::circular_slist_algorithms::node_ptr boost::intrusive::circular_slist_algorithms::get_previous_node(boost::intrusive::circular_slist_algorithms::node_ptr prev_init_node, boost::intrusive::circular_slist_algorithms::node_ptr this_node)'/>
<doc f='boost-1.85.0/libs/intrusive/include/boost/intrusive/circular_slist_algorithms.hpp' l='187'>//! &lt;b&gt;Requires&lt;/b&gt;: this_node and prev_init_node must be in the same circular list.
   //!
   //! &lt;b&gt;Effects&lt;/b&gt;: Returns the previous node of this_node in the circular list starting.
   //!   the search from prev_init_node. The first node checked for equality
   //!   is NodeTraits::get_next(prev_init_node).
   //!
   //! &lt;b&gt;Complexity&lt;/b&gt;: Linear to the number of elements between prev_init_node and this_node.
   //!
   //! &lt;b&gt;Throws&lt;/b&gt;: Nothing.</doc>
