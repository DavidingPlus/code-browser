<dec f='include/unicode/smpdtfmt.h' l='815' type='void icu_66::SimpleDateFormat::SimpleDateFormat(const icu_66::UnicodeString &amp; pattern, const icu_66::UnicodeString &amp; override, const icu_66::Locale &amp; locale, UErrorCode &amp; status)'/>
<doc f='include/unicode/smpdtfmt.h' l='794'>/**
     * Construct a SimpleDateFormat using the given pattern, numbering system override, and locale.
     * The locale is used to obtain the symbols used in formatting (e.g., the
     * names of the months), but not to provide the pattern.
     * &lt;P&gt;
     * A numbering system override is a string containing either the name of a known numbering system,
     * or a set of field and numbering system pairs that specify which fields are to be formattied with
     * the alternate numbering system.  For example, to specify that all numeric fields in the specified
     * date or time pattern are to be rendered using Thai digits, simply specify the numbering system override
     * as &quot;thai&quot;.  To specify that just the year portion of the date be formatted using Hebrew numbering,
     * use the override string &quot;y=hebrew&quot;.  Numbering system overrides can be combined using a semi-colon
     * character in the override string, such as &quot;d=decimal;M=arabic;y=hebrew&quot;, etc.
     * &lt;P&gt;
     * [Note:] Not all locales support SimpleDateFormat; for full generality,
     * use the factory methods in the DateFormat class.
     * @param pattern    the pattern for the format.
     * @param override   the numbering system override.
     * @param locale     the given locale.
     * @param status     Output param set to success/failure code.
     * @stable ICU 4.2
     */</doc>
