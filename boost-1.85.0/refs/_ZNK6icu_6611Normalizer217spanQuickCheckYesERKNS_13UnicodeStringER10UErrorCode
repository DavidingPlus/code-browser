<dec f='include/unicode/normalizer2.h' l='443' type='int32_t icu_66::Normalizer2::spanQuickCheckYes(const icu_66::UnicodeString &amp; s, UErrorCode &amp; errorCode) const'/>
<doc f='include/unicode/normalizer2.h' l='420'>/**
     * Returns the end of the normalized substring of the input string.
     * In other words, with &lt;code&gt;end=spanQuickCheckYes(s, ec);&lt;/code&gt;
     * the substring &lt;code&gt;UnicodeString(s, 0, end)&lt;/code&gt;
     * will pass the quick check with a &quot;yes&quot; result.
     *
     * The returned end index is usually one or more characters before the
     * &quot;no&quot; or &quot;maybe&quot; character: The end index is at a normalization boundary.
     * (See the class documentation for more about normalization boundaries.)
     *
     * When the goal is a normalized string and most input strings are expected
     * to be normalized already, then call this method,
     * and if it returns a prefix shorter than the input string,
     * copy that prefix and use normalizeSecondAndAppend() for the remainder.
     * @param s input string
     * @param errorCode Standard ICU error code. Its input value must
     *                  pass the U_SUCCESS() test, or else the function returns
     *                  immediately. Check for U_FAILURE() on output or use with
     *                  function chaining. (See User Guide for details.)
     * @return &quot;yes&quot; span end index
     * @stable ICU 4.4
     */</doc>
