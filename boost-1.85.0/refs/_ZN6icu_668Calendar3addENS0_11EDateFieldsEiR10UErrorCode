<dec f='include/unicode/calendar.h' l='545' type='void icu_66::Calendar::add(icu_66::Calendar::EDateFields field, int32_t amount, UErrorCode &amp; status)'/>
<doc f='include/unicode/calendar.h' l='525'>/**
     * UDate Arithmetic function. Adds the specified (signed) amount of time to the given
     * time field, based on the calendar&apos;s rules. For example, to subtract 5 days from
     * the current time of the calendar, call add(Calendar::DATE, -5). When adding on
     * the month or Calendar::MONTH field, other fields like date might conflict and
     * need to be changed. For instance, adding 1 month on the date 01/31/96 will result
     * in 02/29/96.
     * Adding a positive value always means moving forward in time, so for the Gregorian calendar,
     * starting with 100 BC and adding +1 to year results in 99 BC (even though this actually reduces
     * the numeric value of the field itself).
     *
     * @param field   Specifies which date field to modify.
     * @param amount  The amount of time to be added to the field, in the natural unit
     *                for that field (e.g., days for the day fields, hours for the hour
     *                field.)
     * @param status  Output param set to success/failure code on exit. If any value
     *                previously set in the time field is invalid or restricted by
     *                leniency, this will be set to an error status.
     * @deprecated ICU 2.6. use add(UCalendarDateFields field, int32_t amount, UErrorCode&amp; status) instead.
     */</doc>
