<dec f='boost-1.85.0/libs/url/include/boost/url/params_base.hpp' l='342' type='boost::urls::params_base::iterator boost::urls::params_base::find(core::string_view key, boost::urls::ignore_case_param ic = {}) const'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/params_base.hpp' l='301'>/** Find a matching key

        This function examines the parameters
        in the container to find a match for
        the specified key.
        The comparison is performed as if all
        escaped characters were decoded first.

        &lt;br&gt;

        The search starts from the first param
        and proceeds forward until either the
        key is found or the end of the range is
        reached, in which case `end()` is
        returned.

        @par Example
        @code
        assert( (*url_view( &quot;?first=John&amp;last=Doe&quot; ).params().find( &quot;First&quot;, ignore_case )).value == &quot;John&quot; );
        @endcode

        @par Effects
        @code
        return this-&gt;find( this-&gt;begin(), key, ic );
        @endcode

        @par Complexity
        Linear in `this-&gt;buffer().size()`.

        @return an iterator to the param

        @param key The key to match.
        By default, a case-sensitive
        comparison is used.

        @param ic An optional parameter. If
        the value @ref ignore_case is passed
        here, the comparison is
        case-insensitive.
    */</doc>
<def f='boost-1.85.0/libs/url/src/params_base.cpp' l='88' ll='99' type='boost::urls::params_base::iterator boost::urls::params_base::find(core::string_view key, boost::urls::ignore_case_param ic = {}) const'/>
<use f='boost-1.85.0/libs/url/src/params_base.cpp' l='197' u='c' c='_ZNK5boost4urls11params_base5countENS_4core17basic_string_viewIcEENS0_17ignore_case_paramE'/>
<use f='boost-1.85.0/libs/url/src/params_ref.cpp' l='200' u='c' c='_ZN5boost4urls10params_ref3setENS_4core17basic_string_viewIcEES4_NS0_17ignore_case_paramE'/>
