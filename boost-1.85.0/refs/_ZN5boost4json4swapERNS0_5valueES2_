<def f='boost-1.85.0/libs/json/include/boost/json/value.hpp' l='1676' ll='1681' type='void boost::json::swap(boost::json::value &amp; lhs, boost::json::value &amp; rhs)'/>
<doc f='boost-1.85.0/libs/json/include/boost/json/value.hpp' l='1640'>/** Swap the given values.

        Exchanges the contents of value `lhs` with another value `rhs`.
        Ownership of the respective `boost::container::pmr::memory_resource`
        objects is not transferred.

        @li If `*lhs.storage() == *rhs.storage()`,
        ownership of the underlying memory is swapped in
        constant time, with no possibility of exceptions.
        All iterators and references remain valid.

        @li If `*lhs.storage() != *rhs.storage`,
        the contents are logically swapped by a copy,
        which can throw. In this case all iterators and
        references are invalidated.

        @par Effects
        @code
        lhs.swap( rhs );
        @endcode

        @par Complexity
        Constant or linear in the sum of the sizes of
        the values.

        @par Exception Safety
        Strong guarantee.
        Calls to `memory_resource::allocate` may throw.

        @param lhs The value to exchange.

        @param rhs The value to exchange.
        If `&amp;lhs == &amp;rhs`, this function call has no effect.

        @see @ref value::swap
    */</doc>
