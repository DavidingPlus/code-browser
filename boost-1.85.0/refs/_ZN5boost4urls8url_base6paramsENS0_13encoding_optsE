<dec f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='2137' type='boost::urls::params_ref boost::urls::url_base::params(boost::urls::encoding_opts opt)'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='2086'>/** Return the query as a container of parameters

        This function returns a bidirectional
        view of key/value pairs over the query.
        The returned view references the same
        underlying character buffer; ownership
        is not transferred.
        Any percent-escapes in strings returned
        when iterating the view are decoded first.
        The container is modifiable; changes
        to the container are reflected in the
        underlying URL.

        @par Example
        @code
        encoding_opts opt;
        opt.space_as_plus = true;
        params_ref pv = url( &quot;/sql?id=42&amp;name=jane+doe&amp;page+size=20&quot; ).params(opt);
        @endcode

        @par Complexity
        Constant.

        @par Exception Safety
        Throws nothing.

        @param opt The options for decoding. If
        this parameter is omitted, the `space_as_plus`
        is used.

        @par BNF
        @code
        query           = *( pchar / &quot;/&quot; / &quot;?&quot; )

        query-param     = key [ &quot;=&quot; value ]
        query-params    = [ query-param ] *( &quot;&amp;&quot; query-param )
        @endcode

        @par Specification
        @li &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc3986#section-3.4&quot;
            &gt;3.4.  Query (rfc3986)&lt;/a&gt;
        @li &lt;a href=&quot;https://en.wikipedia.org/wiki/Query_string&quot;
            &gt;Query string (Wikipedia)&lt;/a&gt;

        @see
            @ref encoded_params,
            @ref remove_query,
            @ref set_encoded_query,
            @ref set_query.
    */</doc>
<def f='boost-1.85.0/libs/url/src/url_base.cpp' l='1424' ll='1429' type='boost::urls::params_ref boost::urls::url_base::params(boost::urls::encoding_opts opt)'/>
