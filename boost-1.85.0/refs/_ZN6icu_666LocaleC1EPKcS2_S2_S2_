<dec f='include/unicode/locid.h' l='277' type='void icu_66::Locale::Locale(const char * language, const char * country = 0, const char * variant = 0, const char * keywordsAndValues = 0)'/>
<doc f='include/unicode/locid.h' l='253'>/**
     * Construct a locale from language, country, variant.
     * If an error occurs, then the constructed object will be &quot;bogus&quot;
     * (isBogus() will return TRUE).
     *
     * @param language Lowercase two-letter or three-letter ISO-639 code.
     *  This parameter can instead be an ICU style C locale (e.g. &quot;en_US&quot;),
     *  but the other parameters must not be used.
     *  This parameter can be NULL; if so,
     *  the locale is initialized to match the current default locale.
     *  (This is the same as using the default constructor.)
     *  Please note: The Java Locale class does NOT accept the form
     *  &apos;new Locale(&quot;en_US&quot;)&apos; but only &apos;new Locale(&quot;en&quot;,&quot;US&quot;)&apos;
     *
     * @param country  Uppercase two-letter ISO-3166 code. (optional)
     * @param variant  Uppercase vendor and browser specific code. See class
     *                 description. (optional)
     * @param keywordsAndValues A string consisting of keyword/values pairs, such as
     *                 &quot;collation=phonebook;currency=euro&quot;
     *
     * @see getDefault
     * @see uloc_getDefault
     * @stable ICU 2.0
     */</doc>
