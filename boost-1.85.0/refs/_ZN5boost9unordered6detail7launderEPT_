<def f='boost-1.85.0/libs/unordered/include/boost/unordered/detail/implementation.hpp' l='822' ll='825' type='T * boost::unordered::detail::launder(T * p)'/>
<doc f='boost-1.85.0/libs/unordered/include/boost/unordered/detail/implementation.hpp' l='816'>// gcc-12 warns when accessing the `current_functions` of our `functions`
      // class below with `-Wmaybe-unitialized`. By laundering the pointer, we
      // silence the warning and assure the compiler that a valid object exists
      // in that region of storage. This warning is also generated in C++03
      // which does not have `std::launder`. The compiler builtin is always
      // available, regardless of the C++ standard used when compiling.</doc>
