<dec f='boost-1.85.0/libs/locale/include/boost/locale/boundary/index.hpp' l='773' type='boundary_point_index&lt;BaseIterator&gt; &amp; boost::locale::boundary::boundary_point_index::operator=(const segment_index&lt;boost::locale::boundary::boundary_point_index::base_iterator&gt; &amp; other)'/>
<def f='boost-1.85.0/libs/locale/include/boost/locale/boundary/index.hpp' l='860' ll='866' type='boundary_point_index&lt;BaseIterator&gt; &amp; boost::locale::boundary::boundary_point_index::operator=(const segment_index&lt;BaseIterator&gt; &amp; other)'/>
<doc f='boost-1.85.0/libs/locale/include/boost/locale/boundary/index.hpp' l='765'>/// Copy a boundary_point_index from a \ref segment_index. It copies all indexing information
        /// and keeps the current \ref rule() unchanged
        ///
        /// This operation is very cheap, so if you use boundary_point_index and segment_index on the same text
        /// range it is much better to create one from another rather then indexing the same
        /// range twice.
        ///
        /// \note \ref rule() flags are not copied</doc>
