<dec f='boost-1.85.0/libs/test/include/boost/test/debug.hpp' l='118' type='void boost::debug::detect_memory_leaks(bool on_off, unit_test::const_string report_file = unit_test::const_string())'/>
<def f='boost-1.85.0/libs/test/include/boost/test/impl/debug.ipp' l='997' ll='1024' type='void boost::debug::detect_memory_leaks(bool on_off, unit_test::const_string report_file = unit_test::const_string())'/>
<doc f='boost-1.85.0/libs/test/include/boost/test/impl/debug.ipp' l='991'>//____________________________________________________________________________//

// ************************************************************************** //
// **************   switch on/off detect memory leaks feature  ************** //
// ************************************************************************** //</doc>
<doc f='boost-1.85.0/libs/test/include/boost/test/debug.hpp' l='108'>// ************************************************************************** //
/// Switches on/off memory leaks detection

/// On platforms where memory leak detection is possible inside of running application (at the moment this is only Windows family) you can
/// switch this feature on and off using this interface. In addition you can specify the name of the file to write a report into. Otherwise
/// the report is going to be generated in standard error stream.
/// @param[in] on_off boolean switch
/// @param[in] report_file file, where the report should be directed to
// ************************************************************************** //</doc>
<use f='boost-1.85.0/libs/test/include/boost/test/impl/framework.ipp' l='1199' u='c' c='_ZN5boost9unit_test9framework4initEPFPNS0_10test_suiteEiPPcEiS5_'/>
