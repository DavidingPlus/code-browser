<inh f='include/unicode/unifunct.h' l='38' c='icu_66::UnicodeFunctor'/>
<inh f='include/unicode/unimatch.h' l='71' c='icu_66::UnicodeMatcher'/>
<def f='include/unicode/unifilt.h' l='65' ll='128'/>
<use f='include/unicode/unifilt.h' l='80' c='_ZNK6icu_6613UnicodeFilter5cloneEv'/>
<ovr f='include/unicode/uniset.h' l='281' c='icu_66::UnicodeSet'/>
<use f='include/unicode/uniset.h' l='281'/>
<size>16</size>
<doc f='include/unicode/unifilt.h' l='39'>/**
 *
 * &lt;code&gt;UnicodeFilter&lt;/code&gt; defines a protocol for selecting a
 * subset of the full range (U+0000 to U+10FFFF) of Unicode characters.
 * Currently, filters are used in conjunction with classes like {@link
 * Transliterator} to only process selected characters through a
 * transformation.
 *
 * &lt;p&gt;Note: UnicodeFilter currently stubs out two pure virtual methods
 * of its base class, UnicodeMatcher.  These methods are toPattern()
 * and matchesIndexValue().  This is done so that filter classes that
 * are not actually used as matchers -- specifically, those in the
 * UnicodeFilterLogic component, and those in tests -- can continue to
 * work without defining these methods.  As long as a filter is not
 * used in an RBT during real transliteration, these methods will not
 * be called.  However, this breaks the UnicodeMatcher base class
 * protocol, and it is not a correct solution.
 *
 * &lt;p&gt;In the future we may revisit the UnicodeMatcher / UnicodeFilter
 * hierarchy and either redesign it, or simply remove the stubs in
 * UnicodeFilter and force subclasses to implement the full
 * UnicodeMatcher protocol.
 *
 * @see UnicodeFilterLogic
 * @stable ICU 2.0
 */</doc>
<fun r='_ZN6icu_6613UnicodeFilterD1Ev'/>
<fun r='_ZNK6icu_6613UnicodeFilter5cloneEv'/>
<fun r='_ZNK6icu_6613UnicodeFilter8containsEi'/>
<fun r='_ZNK6icu_6613UnicodeFilter9toMatcherEv'/>
<fun r='_ZN6icu_6613UnicodeFilter7matchesERKNS_11ReplaceableERiia'/>
<fun r='_ZN6icu_6613UnicodeFilter7setDataEPKNS_23TransliterationRuleDataE'/>
<fun r='_ZN6icu_6613UnicodeFilter16getStaticClassIDEv'/>
