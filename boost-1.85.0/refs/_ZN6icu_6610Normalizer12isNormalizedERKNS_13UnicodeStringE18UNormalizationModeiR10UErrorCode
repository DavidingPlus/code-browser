<dec f='include/unicode/normlzr.h' l='349' type='static UBool icu_66::Normalizer::isNormalized(const icu_66::UnicodeString &amp; src, UNormalizationMode mode, int32_t options, UErrorCode &amp; errorCode)'/>
<use f='include/unicode/normlzr.h' l='795' u='c' c='_ZN6icu_6610Normalizer12isNormalizedERKNS_13UnicodeStringE18UNormalizationModeR10UErrorCode'/>
<doc f='include/unicode/normlzr.h' l='333'>/**
   * Test if a string is in a given normalization form; same as the other version of isNormalized
   * but takes an extra options parameter like most normalization functions.
   *
   * @param src        String that is to be tested if it is in a normalization format.
   * @param mode       Which normalization form to test for.
   * @param options      the optional features to be enabled (0 for no options)
   * @param errorCode  ICU error code in/out parameter.
   *                   Must fulfill U_SUCCESS before the function call.
   * @return Boolean value indicating whether the source string is in the
   *         &quot;mode&quot; normalization form.
   *
   * @see quickCheck
   * @deprecated ICU 56 Use Normalizer2 instead.
   */</doc>
