<dec f='include/unicode/calendar.h' l='1161' type='int32_t icu_66::Calendar::getActualMaximum(icu_66::Calendar::EDateFields field, UErrorCode &amp; status) const'/>
<doc f='include/unicode/calendar.h' l='1145'>/**
     * Return the maximum value that this field could have, given the current date.
     * For example, with the date &quot;Feb 3, 1997&quot; and the DAY_OF_MONTH field, the actual
     * maximum would be 28; for &quot;Feb 3, 1996&quot; it s 29.  Similarly for a Hebrew calendar,
     * for some years the actual maximum for MONTH is 12, and for others 13.
     *
     * The version of this function on Calendar uses an iterative algorithm to determine the
     * actual maximum value for the field.  There is almost always a more efficient way to
     * accomplish this (in most cases, you can simply return getMaximum()).  GregorianCalendar
     * overrides this function with a more efficient implementation.
     *
     * @param field    the field to determine the maximum of
     * @param status   Fill-in parameter which receives the status of this operation.
     * @return         the maximum of the given field for the current date of this Calendar
     * @deprecated ICU 2.6. Use getActualMaximum(UCalendarDateFields field, UErrorCode&amp; status) instead.
     */</doc>
