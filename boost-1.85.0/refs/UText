<use f='include/unicode/utext.h' l='153'/>
<def f='include/unicode/utext.h' l='1347' ll='1538'/>
<size>144</size>
<doc f='include/unicode/utext.h' l='1336'>/**
  *   UText struct.  Provides the interface between the generic UText access code
  *                  and the UText provider code that works on specific kinds of
  *                  text  (UTF-8, noncontiguous UTF-16, whatever.)
  *
  *                  Applications that are using predefined types of text providers
  *                  to pass text data to ICU services will have no need to view the
  *                  internals of the UText structs that they open.
  *
  * @stable ICU 3.6
  */</doc>
<mbr r='UText::magic' o='0' t='uint32_t'/>
<mbr r='UText::flags' o='32' t='int32_t'/>
<mbr r='UText::providerProperties' o='64' t='int32_t'/>
<mbr r='UText::sizeOfStruct' o='96' t='int32_t'/>
<mbr r='UText::chunkNativeLimit' o='128' t='int64_t'/>
<mbr r='UText::extraSize' o='192' t='int32_t'/>
<mbr r='UText::nativeIndexingLimit' o='224' t='int32_t'/>
<mbr r='UText::chunkNativeStart' o='256' t='int64_t'/>
<mbr r='UText::chunkOffset' o='320' t='int32_t'/>
<mbr r='UText::chunkLength' o='352' t='int32_t'/>
<mbr r='UText::chunkContents' o='384' t='const UChar *'/>
<mbr r='UText::pFuncs' o='448' t='const UTextFuncs *'/>
<mbr r='UText::pExtra' o='512' t='void *'/>
<mbr r='UText::context' o='576' t='const void *'/>
<mbr r='UText::p' o='640' t='const void *'/>
<mbr r='UText::q' o='704' t='const void *'/>
<mbr r='UText::r' o='768' t='const void *'/>
<mbr r='UText::privP' o='832' t='void *'/>
<mbr r='UText::a' o='896' t='int64_t'/>
<mbr r='UText::b' o='960' t='int32_t'/>
<mbr r='UText::c' o='992' t='int32_t'/>
<mbr r='UText::privA' o='1024' t='int64_t'/>
<mbr r='UText::privB' o='1088' t='int32_t'/>
<mbr r='UText::privC' o='1120' t='int32_t'/>
