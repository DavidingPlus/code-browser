<def f='include/c++/9/bits/stl_list.h' l='1450' ll='1460' type='std::list::iterator std::list::erase(std::list::const_iterator __first, std::list::const_iterator __last)'/>
<doc f='include/c++/9/bits/stl_list.h' l='1432'>/**
       *  @brief  Remove a range of elements.
       *  @param  __first  Iterator pointing to the first element to be erased.
       *  @param  __last  Iterator pointing to one past the last element to be
       *                erased.
       *  @return  An iterator pointing to the element pointed to by @a last
       *           prior to erasing (or end()).
       *
       *  This function will erase the elements in the range @a
       *  [first,last) and shorten the %list accordingly.
       *
       *  This operation is linear time in the size of the range and only
       *  invalidates iterators/references to the element being removed.
       *  The user is also cautioned that this function only erases the
       *  elements, and that if the elements themselves are pointers, the
       *  pointed-to memory is not touched in any way.  Managing the pointer
       *  is the user&apos;s responsibility.
       */</doc>
