<def f='boost-1.85.0/libs/type_traits/include/boost/type_traits/has_new_operator.hpp' l='34' ll='136'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/has_new_operator.hpp' l='105'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/has_new_operator.hpp' l='106'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/has_new_operator.hpp' l='107'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/has_new_operator.hpp' l='108'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/has_new_operator.hpp' l='109'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/has_new_operator.hpp' l='110'/>
<use f='boost-1.85.0/libs/type_traits/include/boost/type_traits/has_new_operator.hpp' l='139'/>
<fun r='_ZN5boost6detail21has_new_operator_impl10check_sig1EPTL0__PNS0_4testIPFPvmEXadsrS2_onnwEEE'/>
<fun r='_ZN5boost6detail21has_new_operator_impl10check_sig1Ez'/>
<fun r='_ZN5boost6detail21has_new_operator_impl10check_sig2EPTL0__PNS0_4testIPFPvmRKSt9nothrow_tEXadsrS2_onnwEEE'/>
<fun r='_ZN5boost6detail21has_new_operator_impl10check_sig2Ez'/>
<fun r='_ZN5boost6detail21has_new_operator_impl10check_sig3EPTL0__PNS0_4testIPFPvmS5_EXadsrS2_onnwEEE'/>
<fun r='_ZN5boost6detail21has_new_operator_impl10check_sig3Ez'/>
<fun r='_ZN5boost6detail21has_new_operator_impl10check_sig4EPTL0__PNS0_4testIPFPvmEXadsrS2_onnaEEE'/>
<fun r='_ZN5boost6detail21has_new_operator_impl10check_sig4Ez'/>
<fun r='_ZN5boost6detail21has_new_operator_impl10check_sig5EPTL0__PNS0_4testIPFPvmRKSt9nothrow_tEXadsrS2_onnaEEE'/>
<fun r='_ZN5boost6detail21has_new_operator_impl10check_sig5Ez'/>
<fun r='_ZN5boost6detail21has_new_operator_impl10check_sig6EPTL0__PNS0_4testIPFPvmS5_EXadsrS2_onnaEEE'/>
<fun r='_ZN5boost6detail21has_new_operator_impl10check_sig6Ez'/>
<smbr r='boost::detail::has_new_operator_impl::s1' t='const unsigned int'/>
<smbr r='boost::detail::has_new_operator_impl::s2' t='const unsigned int'/>
<smbr r='boost::detail::has_new_operator_impl::s3' t='const unsigned int'/>
<smbr r='boost::detail::has_new_operator_impl::s4' t='const unsigned int'/>
<smbr r='boost::detail::has_new_operator_impl::s5' t='const unsigned int'/>
<smbr r='boost::detail::has_new_operator_impl::s6' t='const unsigned int'/>
<smbr r='boost::detail::has_new_operator_impl::value' t='const bool'/>
