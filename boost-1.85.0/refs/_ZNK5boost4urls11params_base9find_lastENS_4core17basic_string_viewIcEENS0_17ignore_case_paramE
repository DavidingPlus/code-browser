<dec f='boost-1.85.0/libs/url/include/boost/url/params_base.hpp' l='428' type='boost::urls::params_base::iterator boost::urls::params_base::find_last(core::string_view key, boost::urls::ignore_case_param ic = {}) const'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/params_base.hpp' l='392'>/** Find a matching key
    
        This function examines the
        parameters in the container to
        find a match for the specified key.
        The comparison is performed as if all
        escaped characters were decoded first.

        &lt;br&gt;

        The search starts from the last param
        and proceeds backwards until either the
        key is found or the beginning of the
        range is reached, in which case `end()`
        is returned.

        @par Example
        @code
        assert( (*url_view( &quot;?first=John&amp;last=Doe&quot; ).params().find_last( &quot;last&quot; )).value == &quot;Doe&quot; );
        @endcode

        @par Complexity
        Linear in `this-&gt;buffer().size()`.

        @return an iterator to the param

        @param key The key to match.
        By default, a case-sensitive
        comparison is used.

        @param ic An optional parameter. If
        the value @ref ignore_case is passed
        here, the comparison is
        case-insensitive.
    */</doc>
<def f='boost-1.85.0/libs/url/src/params_base.cpp' l='115' ll='126' type='boost::urls::params_base::iterator boost::urls::params_base::find_last(core::string_view key, boost::urls::ignore_case_param ic = {}) const'/>
