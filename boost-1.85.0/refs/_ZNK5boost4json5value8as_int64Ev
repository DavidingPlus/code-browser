<def f='boost-1.85.0/libs/json/include/boost/json/value.hpp' l='2680' ll='2687' type='std::int64_t boost::json::value::as_int64() const'/>
<doc f='boost-1.85.0/libs/json/include/boost/json/value.hpp' l='2658'>/** Return the underlying `std::int64_t`, or throw an exception.

        If @ref is_int64() is `true`, returns
        the underlying `std::int64_t`,
        otherwise throws an exception.

        @par Complexity
        Constant.

        @par Exception Safety
        Strong guarantee.

        @throw `boost::system::system_error` `! this-&gt;is_int64()`.

        @par Note
        This function is the const-qualified overload of @ref as_int64, which
        is intended for direct access to the underlying object, __if__ it has
        the type `std::int64_t`. It does not convert the underlying object to
        type `std::int64_t` even if a lossless conversion is possible. If you
        are not sure which kind your `value` has, and you only care about
        getting a `std::int64_t` number, consider using @ref to_number instead.
    */</doc>
