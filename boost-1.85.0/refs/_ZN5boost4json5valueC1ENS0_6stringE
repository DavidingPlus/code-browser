<def f='boost-1.85.0/libs/json/include/boost/json/value.hpp' l='687' ll='691' type='void boost::json::value::value(boost::json::string other)'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/value_ref.ipp' l='88' u='c' c='_ZNK5boost4json9value_ref10make_valueENS0_11storage_ptrE'/>
<doc f='boost-1.85.0/libs/json/include/boost/json/value.hpp' l='663'>/** Construct a @ref string.

        The value is constructed from `other`, using the
        same memory resource. To transfer ownership, use `std::move`:

        @par Example
        @code
        string str = &quot;The Boost C++ Library Collection&quot;;

        // transfer ownership
        value jv( std::move(str) );

        assert( str.empty() );
        assert( *str.storage() == *jv.storage() );
        @endcode

        @par Complexity
        Constant.

        @par Exception Safety
        No-throw guarantee.

        @param other The string to construct with.
    */</doc>
