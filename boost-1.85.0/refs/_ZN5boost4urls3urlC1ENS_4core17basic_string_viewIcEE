<dec f='boost-1.85.0/libs/url/include/boost/url/url.hpp' l='170' type='void boost::urls::url::url(core::string_view s)'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/url.hpp' l='122'>/** Constructor

        This function constructs a URL from
        the string `s`, which must contain a
        valid &lt;em&gt;URI&lt;/em&gt; or &lt;em&gt;relative-ref&lt;/em&gt;
        or else an exception is thrown.
        The new url retains ownership by
        allocating a copy of the passed string.

        @par Example
        @code
        url u( &quot;https://www.example.com&quot; );
        @endcode

        @par Effects
        @code
        return url( parse_uri_reference( s ).value() );
        @endcode

        @par Postconditions
        @code
        this-&gt;buffer().data() != s.data()
        @endcode

        @par Complexity
        Linear in `s.size()`.

        @par Exception Safety
        Calls to allocate may throw.
        Exceptions thrown on invalid input.

        @throw system_error
        The input does not contain a valid url.

        @param s The string to parse.

        @par BNF
        @code
        URI           = scheme &quot;:&quot; hier-part [ &quot;?&quot; query ] [ &quot;#&quot; fragment ]

        relative-ref  = relative-part [ &quot;?&quot; query ] [ &quot;#&quot; fragment ]
        @endcode

        @par Specification
        @li &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc3986#section-4.1&quot;
            &gt;4.1. URI Reference&lt;/a&gt;
    */</doc>
<def f='boost-1.85.0/libs/url/src/url.cpp' l='39' ll='44' type='void boost::urls::url::url(core::string_view s)'/>
