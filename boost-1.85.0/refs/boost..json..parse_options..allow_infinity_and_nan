<dec f='boost-1.85.0/libs/json/include/boost/json/parse_options.hpp' l='129' type='bool'/>
<use f='boost-1.85.0/libs/json/include/boost/json/basic_parser_impl.hpp' l='664' u='r' c='_ZN5boost4json12basic_parser11parse_valueEPKcSt17integral_constantIbXTL0__EES4_IbXTL0_0_EEbb'/>
<use f='boost-1.85.0/libs/json/include/boost/json/basic_parser_impl.hpp' l='672' u='r' c='_ZN5boost4json12basic_parser11parse_valueEPKcSt17integral_constantIbXTL0__EES4_IbXTL0_0_EEbb'/>
<use f='boost-1.85.0/libs/json/include/boost/json/basic_parser_impl.hpp' l='2067' u='r' c='_ZN5boost4json12basic_parser12parse_numberEPKcSt17integral_constantIbXTL0__EES4_IcXTL0_0_EES4_INS0_16number_precisionEXTL0_1_EE'/>
<use f='boost-1.85.0/libs/json/include/boost/json/basic_parser_impl.hpp' l='2214' u='r' c='_ZN5boost4json12basic_parser12parse_numberEPKcSt17integral_constantIbXTL0__EES4_IcXTL0_0_EES4_INS0_16number_precisionEXTL0_1_EE'/>
<offset>96</offset>
<doc f='boost-1.85.0/libs/json/include/boost/json/parse_options.hpp' l='119'>/** Non-standard extension option

        Allow `Infinity`, `-Infinity`, and `NaN` JSON literals. These values
        are produced by some popular JSON implementations for positive
        infinity, negative infinity and NaN special numbers respectively.

        @see
            @ref basic_parser,
            @ref stream_parser.
    */</doc>
