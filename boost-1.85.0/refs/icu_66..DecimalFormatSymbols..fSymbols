<dec f='include/unicode/dcfmtsym.h' l='461' type='icu_66::UnicodeString[28]'/>
<use f='include/unicode/dcfmtsym.h' l='502' u='a' c='_ZNK6icu_6620DecimalFormatSymbols9getSymbolENS0_19ENumberFormatSymbolE'/>
<use f='include/unicode/dcfmtsym.h' l='514' u='a' c='_ZNK6icu_6620DecimalFormatSymbols14getConstSymbolENS0_19ENumberFormatSymbolE'/>
<use f='include/unicode/dcfmtsym.h' l='527' u='a' c='_ZNK6icu_6620DecimalFormatSymbols19getConstDigitSymbolEi'/>
<use f='include/unicode/dcfmtsym.h' l='530' u='a' c='_ZNK6icu_6620DecimalFormatSymbols19getConstDigitSymbolEi'/>
<use f='include/unicode/dcfmtsym.h' l='545' u='w' c='_ZN6icu_6620DecimalFormatSymbols9setSymbolENS0_19ENumberFormatSymbolERKNS_13UnicodeStringEa'/>
<use f='include/unicode/dcfmtsym.h' l='557' u='w' c='_ZN6icu_6620DecimalFormatSymbols9setSymbolENS0_19ENumberFormatSymbolERKNS_13UnicodeStringEa'/>
<offset>64</offset>
<doc f='include/unicode/dcfmtsym.h' l='447'>/**
     * Private symbol strings.
     * They are either loaded from a resource bundle or otherwise owned.
     * setSymbol() clones the symbol string.
     * Readonly aliases can only come from a resource bundle, so that we can always
     * use fastCopyFrom() with them.
     *
     * If DecimalFormatSymbols becomes subclassable and the status of fSymbols changes
     * from private to protected,
     * or when fSymbols can be set any other way that allows them to be readonly aliases
     * to non-resource bundle strings,
     * then regular UnicodeString copies must be used instead of fastCopyFrom().
     *
     */</doc>
