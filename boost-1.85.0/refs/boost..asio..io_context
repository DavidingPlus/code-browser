<use f='boost-1.85.0/libs/asio/include/boost/asio/execution_context.hpp' l='34' c='_ZN5boost4asio11use_serviceERNS0_10io_contextE'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/execution_context.hpp' l='225' c='_ZN5boost4asio11use_serviceERNS0_10io_contextE'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/detail/service_registry.hpp' l='68' c='_ZN5boost4asio6detail16service_registry11use_serviceERNS0_10io_contextE'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/detail/impl/service_registry.hpp' l='34' c='_ZN5boost4asio6detail16service_registry11use_serviceERNS0_10io_contextE'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/detail/impl/service_registry.hpp' l='38' c='_ZN5boost4asio6detail16service_registry11use_serviceERNS0_10io_contextE'/>
<inh f='boost-1.85.0/libs/asio/include/boost/asio/execution_context.hpp' l='105' c='boost::asio::execution_context'/>
<def f='boost-1.85.0/libs/asio/include/boost/asio/io_context.hpp' l='192' ll='644'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/io_context.hpp' l='618' c='_ZN5boost4asio10io_context4wrapET_'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/io_context.hpp' l='624' c='_ZN5boost4asio10io_contextC1ERKS1_'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/io_context.hpp' l='625' c='_ZN5boost4asio10io_contextaSERKS1_'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/io_context.hpp' l='625' c='_ZN5boost4asio10io_contextaSERKS1_'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/io_context.hpp' l='633' c='_ZN5boost4asio11use_serviceERNS0_10io_contextE'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/io_context.hpp' l='860' c='_ZNK5boost4asio10io_context19basic_executor_type5queryENS0_9execution6detail9context_tILi0EEE'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/io_context.hpp' l='990' c='_ZNK5boost4asio10io_context19basic_executor_type7contextEv'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/io_context.hpp' l='1063'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/io_context.hpp' l='1067' c='_ZN5boost4asio10io_context19basic_executor_typeC1ERS1_'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/io_context.hpp' l='1076' c='_ZN5boost4asio10io_context19basic_executor_typeC1EPS1_RKT_m'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/io_context.hpp' l='1086' c='_ZNK5boost4asio10io_context19basic_executor_type11context_ptrEv'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/io_context.hpp' l='1088' c='_ZNK5boost4asio10io_context19basic_executor_type11context_ptrEv'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/io_context.hpp' l='1121' c='_ZN5boost4asio10io_context4workC1ERS1_'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/io_context.hpp' l='1140' c='_ZN5boost4asio10io_context4work14get_io_contextEv'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/io_context.hpp' l='1157' c='_ZN5boost4asio10io_context7service14get_io_contextEv'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/io_context.hpp' l='1194' c='_ZN5boost4asio10io_context7serviceC1ERS1_'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/io_context.hpp' l='1211' c='_ZN5boost4asio6detail12service_baseC1ERNS0_10io_contextE'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/io_context.hpp' l='1481'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/detail/handler_work.hpp' l='55'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/impl/io_context.hpp' l='35' c='_ZN5boost4asio11use_serviceERNS0_10io_contextE'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/impl/io_context.hpp' l='46' c='_ZN5boost4asio11use_serviceERNS0_10io_contextE'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/impl/io_context.hpp' l='121' c='_ZNK5boost4asio10io_context17initiate_dispatchclEOT_PS1_'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/impl/io_context.hpp' l='166' c='_ZNK5boost4asio10io_context13initiate_postclEOT_PS1_'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/impl/io_context.hpp' l='207' c='_ZN5boost4asio10io_context4wrapET_'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/impl/io_context.hpp' l='211' c='_ZN5boost4asio10io_context4wrapET_'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/impl/io_context.hpp' l='224' c='_ZN5boost4asio10io_context19basic_executor_typeaSERKNS1_19basic_executor_typeIT_XT0_EEE'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/impl/io_context.hpp' l='245' c='_ZN5boost4asio10io_context19basic_executor_typeaSEONS1_19basic_executor_typeIT_XT0_EEE'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/impl/io_context.hpp' l='313' c='_ZNK5boost4asio10io_context19basic_executor_type7contextEv'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/impl/io_context.hpp' l='402' c='_ZN5boost4asio10io_context4workC1ERS1_'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/impl/io_context.hpp' l='419' c='_ZN5boost4asio10io_context4work14get_io_contextEv'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/impl/io_context.hpp' l='421' c='_ZN5boost4asio10io_context4work14get_io_contextEv'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/impl/io_context.hpp' l='425' c='_ZN5boost4asio10io_context7service14get_io_contextEv'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/impl/io_context.hpp' l='427' c='_ZN5boost4asio10io_context7service14get_io_contextEv'/>
<use f='boost-1.85.0/libs/asio/include/boost/asio/impl/io_context.ipp' l='136' c='_ZN5boost4asio10io_context7serviceC1ERS1_'/>
<use f='boost-1.85.0/libs/log/src/syslog_backend.cpp' l='320' c='_ZN5boost3log12v2s_mt_posix5sinks9anonymous17syslog_udp_socketC1ERNS_4asio10io_contextERKNS5_2ip3udpERKNS8_14basic_endpointIS9_EE'/>
<use f='boost-1.85.0/libs/log/src/syslog_backend.cpp' l='351'/>
<size>16</size>
<doc f='boost-1.85.0/libs/asio/include/boost/asio/io_context.hpp' l='67'>/**
 * The io_context class provides the core I/O functionality for users of the
 * asynchronous I/O objects, including:
 *
 * @li boost::asio::ip::tcp::socket
 * @li boost::asio::ip::tcp::acceptor
 * @li boost::asio::ip::udp::socket
 * @li boost::asio::deadline_timer.
 *
 * The io_context class also includes facilities intended for developers of
 * custom asynchronous services.
 *
 * @par Thread Safety
 * @e Distinct @e objects: Safe.@n
 * @e Shared @e objects: Safe, with the specific exceptions of the restart()
 * and notify_fork() functions. Calling restart() while there are unfinished
 * run(), run_one(), run_for(), run_until(), poll() or poll_one() calls results
 * in undefined behaviour. The notify_fork() function should not be called
 * while any io_context function, or any function on an I/O object that is
 * associated with the io_context, is being called in another thread.
 *
 * @par Concepts:
 * Dispatcher.
 *
 * @par Synchronous and asynchronous operations
 *
 * Synchronous operations on I/O objects implicitly run the io_context object
 * for an individual operation. The io_context functions run(), run_one(),
 * run_for(), run_until(), poll() or poll_one() must be called for the
 * io_context to perform asynchronous operations on behalf of a C++ program.
 * Notification that an asynchronous operation has completed is delivered by
 * invocation of the associated handler. Handlers are invoked only by a thread
 * that is currently calling any overload of run(), run_one(), run_for(),
 * run_until(), poll() or poll_one() for the io_context.
 *
 * @par Effect of exceptions thrown from handlers
 *
 * If an exception is thrown from a handler, the exception is allowed to
 * propagate through the throwing thread&apos;s invocation of run(), run_one(),
 * run_for(), run_until(), poll() or poll_one(). No other threads that are
 * calling any of these functions are affected. It is then the responsibility
 * of the application to catch the exception.
 *
 * After the exception has been caught, the run(), run_one(), run_for(),
 * run_until(), poll() or poll_one() call may be restarted @em without the need
 * for an intervening call to restart(). This allows the thread to rejoin the
 * io_context object&apos;s thread pool without impacting any other threads in the
 * pool.
 *
 * For example:
 *
 * @code
 * boost::asio::io_context io_context;
 * ...
 * for (;;)
 * {
 *   try
 *   {
 *     io_context.run();
 *     break; // run() exited normally
 *   }
 *   catch (my_exception&amp; e)
 *   {
 *     // Deal with exception as appropriate.
 *   }
 * }
 * @endcode
 *
 * @par Submitting arbitrary tasks to the io_context
 *
 * To submit functions to the io_context, use the @ref boost::asio::dispatch,
 * @ref boost::asio::post or @ref boost::asio::defer free functions.
 *
 * For example:
 *
 * @code void my_task()
 * {
 *   ...
 * }
 *
 * ...
 *
 * boost::asio::io_context io_context;
 *
 * // Submit a function to the io_context.
 * boost::asio::post(io_context, my_task);
 *
 * // Submit a lambda object to the io_context.
 * boost::asio::post(io_context,
 *     []()
 *     {
 *       ...
 *     });
 *
 * // Run the io_context until it runs out of work.
 * io_context.run(); @endcode
 *
 * @par Stopping the io_context from running out of work
 *
 * Some applications may need to prevent an io_context object&apos;s run() call from
 * returning when there is no more work to do. For example, the io_context may
 * be being run in a background thread that is launched prior to the
 * application&apos;s asynchronous operations. The run() call may be kept running by
 * using the @ref make_work_guard function to create an object of type
 * boost::asio::executor_work_guard&lt;io_context::executor_type&gt;:
 *
 * @code boost::asio::io_context io_context;
 * boost::asio::executor_work_guard&lt;boost::asio::io_context::executor_type&gt;
 *   = boost::asio::make_work_guard(io_context);
 * ... @endcode
 *
 * To effect a shutdown, the application will then need to call the io_context
 * object&apos;s stop() member function. This will cause the io_context run() call
 * to return as soon as possible, abandoning unfinished operations and without
 * permitting ready handlers to be dispatched.
 *
 * Alternatively, if the application requires that all operations and handlers
 * be allowed to finish normally, the work object may be explicitly reset.
 *
 * @code boost::asio::io_context io_context;
 * boost::asio::executor_work_guard&lt;boost::asio::io_context::executor_type&gt;
 *   = boost::asio::make_work_guard(io_context);
 * ...
 * work.reset(); // Allow run() to exit. @endcode
 */</doc>
<fun r='_ZN5boost4asio10io_contextC1Ev'/>
<fun r='_ZN5boost4asio10io_contextC1Ei'/>
<fun r='_ZN5boost4asio10io_contextD1Ev'/>
<fun r='_ZN5boost4asio10io_context12get_executorEv'/>
<fun r='_ZN5boost4asio10io_context3runEv'/>
<fun r='_ZN5boost4asio10io_context3runERNS_6system10error_codeE'/>
<fun r='_ZN5boost4asio10io_context7run_forERKNSt6chrono8durationIT_T0_EE'/>
<fun r='_ZN5boost4asio10io_context9run_untilERKNSt6chrono10time_pointIT_T0_EE'/>
<fun r='_ZN5boost4asio10io_context7run_oneEv'/>
<fun r='_ZN5boost4asio10io_context7run_oneERNS_6system10error_codeE'/>
<fun r='_ZN5boost4asio10io_context11run_one_forERKNSt6chrono8durationIT_T0_EE'/>
<fun r='_ZN5boost4asio10io_context13run_one_untilERKNSt6chrono10time_pointIT_T0_EE'/>
<fun r='_ZN5boost4asio10io_context4pollEv'/>
<fun r='_ZN5boost4asio10io_context4pollERNS_6system10error_codeE'/>
<fun r='_ZN5boost4asio10io_context8poll_oneEv'/>
<fun r='_ZN5boost4asio10io_context8poll_oneERNS_6system10error_codeE'/>
<fun r='_ZN5boost4asio10io_context4stopEv'/>
<fun r='_ZNK5boost4asio10io_context7stoppedEv'/>
<fun r='_ZN5boost4asio10io_context7restartEv'/>
<fun r='_ZN5boost4asio10io_context5resetEv'/>
<fun r='_ZN5boost4asio10io_context8dispatchEOT_'/>
<fun r='_ZN5boost4asio10io_context4postEOT_'/>
<fun r='_ZN5boost4asio10io_context4wrapET_'/>
<fun r='_ZN5boost4asio10io_contextC1ERKS1_'/>
<fun r='_ZN5boost4asio10io_contextaSERKS1_'/>
<fun r='_ZN5boost4asio10io_context8add_implEPNS0_6detail9schedulerE'/>
<mbr r='boost::asio::io_context::impl_' o='64' t='boost::asio::io_context::impl_type &amp;'/>
<fun r='_ZN5boost4asio10io_context12get_executorEv'/>
<fun r='_ZN5boost4asio10io_context7run_forERKNSt6chrono8durationIT_T0_EE'/>
<fun r='_ZN5boost4asio10io_context9run_untilERKNSt6chrono10time_pointIT_T0_EE'/>
<fun r='_ZN5boost4asio10io_context11run_one_forERKNSt6chrono8durationIT_T0_EE'/>
<fun r='_ZN5boost4asio10io_context13run_one_untilERKNSt6chrono10time_pointIT_T0_EE'/>
<fun r='_ZN5boost4asio10io_context5resetEv'/>
<fun r='_ZN5boost4asio10io_context8dispatchEOT_'/>
<fun r='_ZN5boost4asio10io_context4postEOT_'/>
<fun r='_ZN5boost4asio10io_context4wrapET_'/>
<fun r='_ZN5boost4asio10io_contextC1Ev'/>
<fun r='_ZN5boost4asio10io_contextC1Ei'/>
<fun r='_ZN5boost4asio10io_context8add_implEPNS0_6detail9schedulerE'/>
<fun r='_ZN5boost4asio10io_contextD1Ev'/>
<fun r='_ZN5boost4asio10io_context3runEv'/>
<fun r='_ZN5boost4asio10io_context3runERNS_6system10error_codeE'/>
<fun r='_ZN5boost4asio10io_context7run_oneEv'/>
<fun r='_ZN5boost4asio10io_context7run_oneERNS_6system10error_codeE'/>
<fun r='_ZN5boost4asio10io_context4pollEv'/>
<fun r='_ZN5boost4asio10io_context4pollERNS_6system10error_codeE'/>
<fun r='_ZN5boost4asio10io_context8poll_oneEv'/>
<fun r='_ZN5boost4asio10io_context8poll_oneERNS_6system10error_codeE'/>
<fun r='_ZN5boost4asio10io_context4stopEv'/>
<fun r='_ZNK5boost4asio10io_context7stoppedEv'/>
<fun r='_ZN5boost4asio10io_context7restartEv'/>
