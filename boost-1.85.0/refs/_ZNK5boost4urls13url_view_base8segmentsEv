<dec f='boost-1.85.0/libs/url/include/boost/url/url_view_base.hpp' l='1757' type='boost::urls::segments_view boost::urls::url_view_base::segments() const'/>
<use f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='1858' u='c' c='_ZNK5boost4urls8url_base8segmentsEv'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/url_view_base.hpp' l='1719'>/** Return the path as a container of segments

        This function returns a bidirectional
        view of strings over the path.
        The returned view references the same
        underlying character buffer; ownership
        is not transferred.
        Any percent-escapes in strings returned
        when iterating the view are decoded first.

        @par Example
        @code
        segments_view sv = url_view( &quot;/path/to/file.txt&quot; ).segments();
        @endcode

        @par Complexity
        Constant.

        @par Exception Safety
        Throws nothing.

        @par BNF
        @code
        path          = [ &quot;/&quot; ] segment *( &quot;/&quot; segment )
        @endcode

        @par Specification
        @li &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc3986#section-3.3&quot;
            &gt;3.3. Path (rfc3986)&lt;/a&gt;

        @see
            @ref is_path_absolute,
            @ref encoded_path,
            @ref encoded_segments.
            @ref path,
            @ref segments_view.
    */</doc>
<def f='boost-1.85.0/libs/url/src/url_view_base.cpp' l='488' ll='493' type='boost::urls::segments_view boost::urls::url_view_base::segments() const'/>
