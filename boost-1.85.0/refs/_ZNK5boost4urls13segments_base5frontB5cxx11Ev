<dec f='boost-1.85.0/libs/url/include/boost/url/segments_base.hpp' l='242' type='std::string boost::urls::segments_base::front() const'/>
<def f='boost-1.85.0/libs/url/include/boost/url/impl/segments_base.hpp' l='105' ll='112' type='std::string boost::urls::segments_base::front() const'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/segments_base.hpp' l='212'>/** Return the first segment

        This function returns a string with the
        first segment of the path without any
        leading or trailing &apos;/&apos; separators.
        Any percent-escapes in the string are
        decoded first.

        @par Preconditions
        @code
        this-&gt;empty() == false
        @endcode

        @par Effects
        @code
        return *begin();
        @endcode

        @par Example
        @code
        assert( url_view( &quot;/path/to/file.txt&quot; ).segments().front() == &quot;path&quot; );
        @endcode

        @par Complexity
        Linear in `this-&gt;front().size()`.

        @par Exception Safety
        Calls to allocate may throw.
    */</doc>
<doc f='boost-1.85.0/libs/url/include/boost/url/impl/segments_base.hpp' l='103'>//------------------------------------------------</doc>
