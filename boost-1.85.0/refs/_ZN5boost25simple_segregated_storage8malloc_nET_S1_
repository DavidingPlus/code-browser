<dec f='boost-1.85.0/libs/pool/include/boost/pool/simple_segregated_storage.hpp' l='191' type='void * boost::simple_segregated_storage::malloc_n(boost::simple_segregated_storage::size_type n, boost::simple_segregated_storage::size_type partition_size)'/>
<def f='boost-1.85.0/libs/pool/include/boost/pool/simple_segregated_storage.hpp' l='363' ll='382' type='void * boost::simple_segregated_storage::malloc_n(const boost::simple_segregated_storage::size_type n, const boost::simple_segregated_storage::size_type partition_size)'/>
<doc f='boost-1.85.0/libs/pool/include/boost/pool/simple_segregated_storage.hpp' l='358'>//! Attempts to find a contiguous sequence of n partition_sz-sized chunks. If found, removes them 
//! all from the free list and returns a pointer to the first. If not found, returns 0. It is strongly 
//! recommended (but not required) that the free list be ordered, as this algorithm will fail to find 
//! a contiguous sequence unless it is contiguous in the free list as well. Order-preserving. 
//! O(N) with respect to the size of the free list.</doc>
