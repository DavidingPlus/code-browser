<def f='boost-1.85.0/libs/spirit/include/boost/spirit/home/support/iterators/detail/first_owner_policy.hpp' l='27' ll='58'/>
<size>1</size>
<doc f='boost-1.85.0/libs/spirit/include/boost/spirit/home/support/iterators/detail/first_owner_policy.hpp' l='15'>///////////////////////////////////////////////////////////////////////////
    //  class first_owner
    //  Implementation of an OwnershipPolicy used by multi_pass
    //  This ownership policy dictates that the first iterator created will
    //  determine the lifespan of the shared components.  This works well for
    //  spirit, since no dynamic allocation of iterators is done, and all 
    //  copies are make on the stack.
    //
    //  There is a caveat about using this policy together with the std_deque
    //  StoragePolicy. Since first_owner always returns false from unique(),
    //  std_deque will only release the queued data if clear_queue() is called.
    ///////////////////////////////////////////////////////////////////////////</doc>
