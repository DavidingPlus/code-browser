<def f='boost-1.85.0/libs/json/include/boost/json/value.hpp' l='2804' ll='2811' type='double boost::json::value::as_double() const'/>
<doc f='boost-1.85.0/libs/json/include/boost/json/value.hpp' l='2782'>/** Return the underlying `double`, or throw an exception.

        If @ref is_double() is `true`, returns
        the underlying `double`,
        otherwise throws an exception.

        @par Complexity
        Constant.

        @par Exception Safety
        Strong guarantee.

        @throw `boost::system::system_error` `! this-&gt;is_double()`.

        @par Note
        This function is the const-qualified overload of @ref as_double, which
        is intended for direct access to the underlying object, __if__ it has
        the type `double`. It does not convert the underlying object to type
        `double` even if a lossless conversion is possible. If you are not sure
        which kind your `value` has, and you only care about getting a `double`
        number, consider using @ref to_number instead.
    */</doc>
