<dec f='include/unicode/format.h' l='183' type='icu_66::UnicodeString &amp; icu_66::Format::format(const icu_66::Formattable &amp; obj, icu_66::UnicodeString &amp; appendTo, icu_66::FieldPositionIterator * posIter, UErrorCode &amp; status) const'/>
<doc f='include/unicode/format.h' l='167'>/**
     * Format an object to produce a string.  Subclasses should override this
     * method. This method allows polymorphic formatting of Formattable objects.
     * If a subclass of Format receives a Formattable object type it doesn&apos;t
     * handle (e.g., if a numeric Formattable is passed to a DateFormat object)
     * then it returns a failing UErrorCode.
     *
     * @param obj       The object to format.
     * @param appendTo  Output parameter to receive result.
     *                  Result is appended to existing contents.
     * @param posIter   On return, can be used to iterate over positions
     *                  of fields generated by this format call.
     * @param status    Output param filled with success/failure status.
     * @return          Reference to &apos;appendTo&apos; parameter.
     * @stable ICU 4.4
     */</doc>
