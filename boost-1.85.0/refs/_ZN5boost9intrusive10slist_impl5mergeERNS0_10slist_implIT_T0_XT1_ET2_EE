<def f='boost-1.85.0/libs/intrusive/include/boost/intrusive/slist.hpp' l='1565' ll='1566' type='void boost::intrusive::slist_impl::merge(slist_impl&lt;ValueTraits, SizeType, BoolFlags, HeaderHolder&gt; &amp; x)'/>
<doc f='boost-1.85.0/libs/intrusive/include/boost/intrusive/slist.hpp' l='1554'>//! &lt;b&gt;Effects&lt;/b&gt;: This function removes all of x&apos;s elements and inserts them
   //!   in order into *this according to operator&lt;. The merge is stable;
   //!   that is, if an element from *this is equivalent to one from x, then the element
   //!   from *this will precede the one from x.
   //!
   //! &lt;b&gt;Throws&lt;/b&gt;: if operator&lt; throws. Basic guarantee.
   //!
   //! &lt;b&gt;Complexity&lt;/b&gt;: This function is linear time: it performs at most
   //!   size() + x.size() - 1 comparisons.
   //!
   //! &lt;b&gt;Note&lt;/b&gt;: Iterators and references are not invalidated</doc>
