<dec f='include/unicode/datefmt.h' l='314' type='icu_66::UnicodeString &amp; icu_66::DateFormat::format(icu_66::Calendar &amp; cal, icu_66::UnicodeString &amp; appendTo, icu_66::FieldPosition &amp; fieldPosition) const'/>
<doc f='include/unicode/datefmt.h' l='281'>/**
     * Formats a date into a date/time string. This is an abstract method which
     * concrete subclasses must implement.
     * &lt;P&gt;
     * On input, the FieldPosition parameter may have its &quot;field&quot; member filled with
     * an enum value specifying a field.  On output, the FieldPosition will be filled
     * in with the text offsets for that field.
     * &lt;P&gt; For example, given a time text
     * &quot;1996.07.10 AD at 15:08:56 PDT&quot;, if the given fieldPosition.field is
     * UDAT_YEAR_FIELD, the offsets fieldPosition.beginIndex and
     * statfieldPositionus.getEndIndex will be set to 0 and 4, respectively.
     * &lt;P&gt; Notice
     * that if the same time field appears more than once in a pattern, the status will
     * be set for the first occurence of that time field. For instance,
     * formatting a UDate to the time string &quot;1 PM PDT (Pacific Daylight Time)&quot;
     * using the pattern &quot;h a z (zzzz)&quot; and the alignment field
     * DateFormat::TIMEZONE_FIELD, the offsets fieldPosition.beginIndex and
     * fieldPosition.getEndIndex will be set to 5 and 8, respectively, for the first
     * occurence of the timezone pattern character &apos;z&apos;.
     *
     * @param cal           Calendar set to the date and time to be formatted
     *                      into a date/time string.  When the calendar type is
     *                      different from the internal calendar held by this
     *                      DateFormat instance, the date and the time zone will
     *                      be inherited from the input calendar, but other calendar
     *                      field values will be calculated by the internal calendar.
     * @param appendTo      Output parameter to receive result.
     *                      Result is appended to existing contents.
     * @param fieldPosition On input: an alignment field, if desired (see examples above)
     *                      On output: the offsets of the alignment field (see examples above)
     * @return              Reference to &apos;appendTo&apos; parameter.
     * @stable ICU 2.1
     */</doc>
