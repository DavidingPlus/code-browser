<def f='boost-1.85.0/libs/intrusive/include/boost/intrusive/slist.hpp' l='1407' ll='1408' type='void boost::intrusive::slist_impl::splice(boost::intrusive::slist_impl::const_iterator pos, slist_impl&lt;ValueTraits, SizeType, BoolFlags, HeaderHolder&gt; &amp; x, boost::intrusive::slist_impl::const_iterator f, boost::intrusive::slist_impl::const_iterator l)'/>
<doc f='boost-1.85.0/libs/intrusive/include/boost/intrusive/slist.hpp' l='1390'>//! &lt;b&gt;Requires&lt;/b&gt;: pos must be a dereferenceable iterator in *this
   //!   and f and f belong to x and f and f a valid range on x.
   //!
   //! &lt;b&gt;Effects&lt;/b&gt;: Transfers the range [f, l) from list x to this
   //!   list, before the element pointed by pos.
   //!   No destructors or copy constructors are called.
   //!
   //! &lt;b&gt;Throws&lt;/b&gt;: Nothing.
   //!
   //! &lt;b&gt;Complexity&lt;/b&gt;: Linear to the sum of elements before pos, f, and l
   //!   plus linear to the number of elements transferred if constant_time_size is true.
   //!   Linear to the sum of elements before f, and l
   //!   plus linear to the number of elements transferred if constant_time_size is true
   //!   if cache_last&lt;&gt; is true and pos == end()
   //!
   //! &lt;b&gt;Note&lt;/b&gt;: Iterators of values obtained from list x now point to elements of this
   //!   list. Iterators of this list and all the references are not invalidated.</doc>
