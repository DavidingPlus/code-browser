<dec f='include/unicode/normalizer2.h' l='185' type='static const icu_66::Normalizer2 * icu_66::Normalizer2::getInstance(const char * packageName, const char * name, UNormalization2Mode mode, UErrorCode &amp; errorCode)'/>
<doc f='include/unicode/normalizer2.h' l='163'>/**
     * Returns a Normalizer2 instance which uses the specified data file
     * (packageName/name similar to ucnv_openPackage() and ures_open()/ResourceBundle)
     * and which composes or decomposes text according to the specified mode.
     * Returns an unmodifiable singleton instance. Do not delete it.
     *
     * Use packageName=NULL for data files that are part of ICU&apos;s own data.
     * Use name=&quot;nfc&quot; and UNORM2_COMPOSE/UNORM2_DECOMPOSE for Unicode standard NFC/NFD.
     * Use name=&quot;nfkc&quot; and UNORM2_COMPOSE/UNORM2_DECOMPOSE for Unicode standard NFKC/NFKD.
     * Use name=&quot;nfkc_cf&quot; and UNORM2_COMPOSE for Unicode standard NFKC_CF=NFKC_Casefold.
     *
     * @param packageName NULL for ICU built-in data, otherwise application data package name
     * @param name &quot;nfc&quot; or &quot;nfkc&quot; or &quot;nfkc_cf&quot; or name of custom data file
     * @param mode normalization mode (compose or decompose etc.)
     * @param errorCode Standard ICU error code. Its input value must
     *                  pass the U_SUCCESS() test, or else the function returns
     *                  immediately. Check for U_FAILURE() on output or use with
     *                  function chaining. (See User Guide for details.)
     * @return the requested Normalizer2, if successful
     * @stable ICU 4.4
     */</doc>
