<dec f='include/unicode/fmtable.h' l='333' type='int32_t icu_66::Formattable::getLong(UErrorCode &amp; status) const'/>
<use f='include/unicode/fmtable.h' l='732' u='c' c='_ZNK6icu_6611Formattable7getLongEP10UErrorCode'/>
<use f='boost-1.85.0/libs/locale/src/boost/locale/icu/formatter.cpp' l='88' u='c' c='_ZNK5boost6locale8impl_icu13number_format9get_valueERiRN6icu_6611FormattableE'/>
<doc f='include/unicode/fmtable.h' l='317'>/**
     * Gets the long value of this object. If the magnitude is too
     * large to fit in a long, then the maximum or minimum long value,
     * as appropriate, is returned and the status is set to
     * U_INVALID_FORMAT_ERROR.  If this object is of type kInt64 and
     * it fits within a long, then no precision is lost.  If it is of
     * type kDouble, then a conversion is peformed, with
     * truncation of any fractional part.  If the type is kObject and
     * the object is a Measure, then the result of
     * getNumber().getLong(status) is returned.  If this object is
     * neither a numeric type nor a Measure, then 0 is returned and
     * the status is set to U_INVALID_FORMAT_ERROR.
     * @param status the error code
     * @return    the long value of this object.
     * @stable ICU 3.0
     */</doc>
