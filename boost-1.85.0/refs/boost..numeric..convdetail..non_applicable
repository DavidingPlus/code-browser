<def f='boost-1.85.0/libs/numeric/conversion/include/boost/numeric/conversion/detail/converter.hpp' l='81'/>
<use f='boost-1.85.0/libs/numeric/conversion/include/boost/numeric/conversion/detail/converter.hpp' l='328'/>
<use f='boost-1.85.0/libs/numeric/conversion/include/boost/numeric/conversion/detail/converter.hpp' l='345'/>
<size>1</size>
<doc f='boost-1.85.0/libs/numeric/conversion/include/boost/numeric/conversion/detail/converter.hpp' l='68'>//--------------------------------------------------------------------------
//                             Range Checking Logic.
//
// The range checking logic is built up by combining 1 or 2 predicates.
// Each predicate is encapsulated in a template class and exposes
// the static member function &apos;apply&apos;.
//
//--------------------------------------------------------------------------


  // Because a particular logic can combine either 1 or two predicates, the following
  // tags are used to allow the predicate applier to receive 2 preds, but optimize away
  // one of them if it is &apos;non-applicable&apos;</doc>
