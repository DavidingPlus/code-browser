<def f='boost-1.85.0/libs/wave/include/boost/wave/util/functor_input.hpp' l='45' ll='143'/>
<size>1</size>
<doc f='boost-1.85.0/libs/wave/include/boost/wave/util/functor_input.hpp' l='28'>///////////////////////////////////////////////////////////////////////////////
//
//  class functor_input
//
//      Implementation of the InputPolicy used by multi_pass
//      functor_input gets tokens from a functor
//      Note: the functor must have a typedef for result_type
//            It also must have a static variable of type result_type defined
//            to represent eof that is called eof.
//
//      This functor input policy template is essentially the same as the
//      predefined multi_pass functor_input policy. The difference is,
//      that the first token is not read at initialization time, but only
//      just before returning the first token. Additionally it does not
//      call operator new() twice but only once.
//
///////////////////////////////////////////////////////////////////////////////</doc>
