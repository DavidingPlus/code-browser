<dec f='include/unicode/decimfmt.h' l='2116' type='const number::LocalizedNumberFormatter * icu_66::DecimalFormat::toNumberFormatter(UErrorCode &amp; status) const'/>
<doc f='include/unicode/decimfmt.h' l='2071'>/**
     * Converts this DecimalFormat to a (Localized)NumberFormatter. Starting
     * in ICU 60, NumberFormatter is the recommended way to format numbers.
     * You can use the returned LocalizedNumberFormatter to format numbers and
     * get a FormattedNumber, which contains a string as well as additional
     * annotations about the formatted value.
     * 
     * If a memory allocation failure occurs, the return value of this method
     * might be null. If you are concerned about correct recovery from
     * out-of-memory situations, use this pattern:
     *
     * &lt;pre&gt;
     * FormattedNumber result;
     * if (auto* ptr = df-&gt;toNumberFormatter(status)) {
     *     result = ptr-&gt;formatDouble(123, status);
     * }
     * &lt;/pre&gt;
     *
     * If you are not concerned about out-of-memory situations, or if your
     * environment throws exceptions when memory allocation failure occurs,
     * you can chain the methods, like this:
     *
     * &lt;pre&gt;
     * FormattedNumber result = df
     *     -&gt;toNumberFormatter(status)
     *     -&gt;formatDouble(123, status);
     * &lt;/pre&gt;
     *
     * NOTE: The returned LocalizedNumberFormatter is owned by this DecimalFormat.
     * If a non-const method is called on the DecimalFormat, or if the DecimalFormat
     * is deleted, the object becomes invalid. If you plan to keep the return value
     * beyond the lifetime of the DecimalFormat, copy it to a local variable:
     *
     * &lt;pre&gt;
     * LocalizedNumberFormatter lnf;
     * if (auto* ptr = df-&gt;toNumberFormatter(status)) {
     *     lnf = *ptr;
     * }
     * &lt;/pre&gt;
     *
     * @param status Set on failure, like U_MEMORY_ALLOCATION_ERROR.
     * @return A pointer to an internal object, or nullptr on failure.
     *         Do not delete the return value!
     * @draft ICU 64
     */</doc>
