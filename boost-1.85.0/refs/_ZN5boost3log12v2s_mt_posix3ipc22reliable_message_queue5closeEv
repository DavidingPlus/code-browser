<use f='boost-1.85.0/libs/log/include/boost/log/utility/ipc/reliable_message_queue.hpp' l='263' u='c' c='_ZN5boost3log12v2s_mt_posix3ipc22reliable_message_queueD1Ev'/>
<def f='boost-1.85.0/libs/log/include/boost/log/utility/ipc/reliable_message_queue.hpp' l='473' ll='477' type='void boost::log::ipc::reliable_message_queue::close()'/>
<doc f='boost-1.85.0/libs/log/include/boost/log/utility/ipc/reliable_message_queue.hpp' l='461'>/*!
     * The method disassociates the associated message queue, if any. No other threads
     * should be using this object before calling this method. The &lt;tt&gt;stop_local()&lt;/tt&gt; method
     * can be used to have any threads currently blocked in &lt;tt&gt;send()&lt;/tt&gt; or
     * &lt;tt&gt;receive()&lt;/tt&gt; return, and prevent further calls to them from blocking. Typically,
     * before calling this method, one would first call &lt;tt&gt;stop_local()&lt;/tt&gt; and then join all
     * threads that might be blocking on &lt;tt&gt;send()&lt;/tt&gt; or &lt;tt&gt;receive()&lt;/tt&gt; to ensure that
     * they have returned from the calls. The associated message queue is destroyed if the
     * object represents the last outstanding reference to it.
     *
     * \post &lt;tt&gt;is_open() == false&lt;/tt&gt;
     */</doc>
