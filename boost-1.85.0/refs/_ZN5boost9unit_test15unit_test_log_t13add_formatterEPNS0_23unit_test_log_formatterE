<dec f='boost-1.85.0/libs/test/include/boost/test/unit_test_log.hpp' l='206' type='void boost::unit_test::unit_test_log_t::add_formatter(boost::unit_test::unit_test_log_formatter * the_formatter)'/>
<doc f='boost-1.85.0/libs/test/include/boost/test/unit_test_log.hpp' l='194'>//! Adds a custom log formatter to the set of formatters
    //!
    //! The specified logger is added with the format @c OF_CUSTOM_LOGGER, such that it can
    //! be futher selected or its stream/log level can be specified.
    //! If there is already a custom logger (with @c OF_CUSTOM_LOGGER), then
    //! the existing one gets replaced by the one given in argument.
    //! The provided logger is added with an enabled state.
    //! If (unit_test_log_formatter*)0 is given as argument, the custom logger (if any) is removed and
    //! no other action is performed.
    //!
    //! @note The ownership of the pointer is transferred to the Boost.Test framework.
    //! @par Since Boost 1.62</doc>
<def f='boost-1.85.0/libs/test/include/boost/test/impl/unit_test_log.ipp' l='704' ll='721' type='void boost::unit_test::unit_test_log_t::add_formatter(boost::unit_test::unit_test_log_formatter * the_formatter)'/>
<use f='boost-1.85.0/libs/test/include/boost/test/impl/unit_test_log.ipp' l='746' u='c' c='_ZN5boost9unit_test15unit_test_log_t13set_formatterEPNS0_23unit_test_log_formatterE'/>
