<def f='boost-1.85.0/libs/property_tree/include/boost/property_tree/detail/rapidxml.hpp' l='943' ll='957' type='xml_node&lt;Ch&gt; * boost::property_tree::detail::rapidxml::xml_node::last_node(const Ch * n = 0, std::size_t nsize = 0, bool case_sensitive = true) const'/>
<doc f='boost-1.85.0/libs/property_tree/include/boost/property_tree/detail/rapidxml.hpp' l='936'>//! Gets last child node, optionally matching node name. 
        //! Behaviour is undefined if node has no children.
        //! Use first_node() to test if node has children.
        //! \param n Name of child to find, or 0 to return last child regardless of its name; this string doesn&apos;t have to be zero-terminated if nsize is non-zero
        //! \param nsize Size of name, in characters, or 0 to have size calculated automatically from string
        //! \param case_sensitive Should name comparison be case-sensitive; non case-sensitive comparison works properly only for ASCII characters
        //! \return Pointer to found child, or 0 if not found.</doc>
