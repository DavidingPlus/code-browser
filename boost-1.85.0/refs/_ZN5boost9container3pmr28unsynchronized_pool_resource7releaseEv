<dec f='boost-1.85.0/libs/container/include/boost/container/pmr/unsynchronized_pool_resource.hpp' l='112' type='void boost::container::pmr::unsynchronized_pool_resource::release()'/>
<def f='boost-1.85.0/libs/container/src/unsynchronized_pool_resource.cpp' l='40' ll='43' type='void boost::container::pmr::unsynchronized_pool_resource::release()'/>
<doc f='boost-1.85.0/libs/container/include/boost/container/pmr/unsynchronized_pool_resource.hpp' l='108'>//! &lt;b&gt;Effects&lt;/b&gt;: Calls Calls `upstream_resource()-&gt;deallocate()` as necessary
   //!   to release all allocated memory. [ Note: memory is released back to
   //!   `upstream_resource()` even if deallocate has not been called for some
   //!   of the allocated blocks. - end note ]</doc>
