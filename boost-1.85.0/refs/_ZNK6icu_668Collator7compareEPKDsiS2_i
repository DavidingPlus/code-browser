<dec f='include/unicode/coll.h' l='432' type='icu_66::Collator::EComparisonResult icu_66::Collator::compare(const char16_t * source, int32_t sourceLength, const char16_t * target, int32_t targetLength) const'/>
<doc f='include/unicode/coll.h' l='399'>/**
     * The comparison function compares the character data stored in two
     * different string arrays. Returns information about whether a string array
     * is less than, greater than or equal to another string array.
     * &lt;p&gt;Example of use:
     * &lt;pre&gt;
     * .       char16_t ABC[] = {0x41, 0x42, 0x43, 0};  // = &quot;ABC&quot;
     * .       char16_t abc[] = {0x61, 0x62, 0x63, 0};  // = &quot;abc&quot;
     * .       UErrorCode status = U_ZERO_ERROR;
     * .       Collator *myCollation =
     * .                         Collator::createInstance(Locale::getUS(), status);
     * .       if (U_FAILURE(status)) return;
     * .       myCollation-&gt;setStrength(Collator::PRIMARY);
     * .       // result would be Collator::EQUAL (&quot;abc&quot; == &quot;ABC&quot;)
     * .       // (no primary difference between &quot;abc&quot; and &quot;ABC&quot;)
     * .       Collator::EComparisonResult result =
     * .                             myCollation-&gt;compare(abc, 3, ABC, 3);
     * .       myCollation-&gt;setStrength(Collator::TERTIARY);
     * .       // result would be Collator::LESS (&quot;abc&quot; &amp;lt;&amp;lt;&amp;lt; &quot;ABC&quot;)
     * .       // (with tertiary difference between &quot;abc&quot; and &quot;ABC&quot;)
     * .       result = myCollation-&gt;compare(abc, 3, ABC, 3);
     * &lt;/pre&gt;
     * @param source the source string array to be compared with.
     * @param sourceLength the length of the source string array.  If this value
     *        is equal to -1, the string array is null-terminated.
     * @param target the string that is to be compared with the source string.
     * @param targetLength the length of the target string array.  If this value
     *        is equal to -1, the string array is null-terminated.
     * @return Returns a byte value. GREATER if source is greater than target;
     *         EQUAL if source is equal to target; LESS if source is less than
     *         target
     * @deprecated ICU 2.6 use the overload with UErrorCode &amp;
     */</doc>
