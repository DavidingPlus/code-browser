<dec f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='1263' type='boost::urls::url_base &amp; boost::urls::url_base::set_host_ipv4(const boost::urls::ipv4_address &amp; addr)'/>
<use f='boost-1.85.0/libs/url/include/boost/url/url.hpp' l='446' u='c' c='_ZN5boost4urls3url13set_host_ipv4ERKNS0_12ipv4_addressE'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='1210'>/** Set the host to an address

        The host is set to the specified IPv4
        address.
        The host type is @ref host_type::ipv4.

        @par Example
        @code
        assert( url(&quot;http://www.example.com&quot;).set_host_ipv4( ipv4_address( &quot;127.0.0.1&quot; ) ).buffer() == &quot;http://127.0.0.1&quot; );
        @endcode

        @par Complexity
        Linear in `this-&gt;size()`.

        @par Postconditions
        @code
        this-&gt;has_authority() == true &amp;&amp; this-&gt;host_ipv4_address() == addr &amp;&amp; this-&gt;host_type() == host_type::ipv4
        @endcode

        @par Exception Safety
        Strong guarantee.
        Calls to allocate may throw.

        @param addr The address to set.

        @par BNF
        @code
        IPv4address = dec-octet &quot;.&quot; dec-octet &quot;.&quot; dec-octet &quot;.&quot; dec-octet

        dec-octet   = DIGIT                 ; 0-9
                    / %x31-39 DIGIT         ; 10-99
                    / &quot;1&quot; 2DIGIT            ; 100-199
                    / &quot;2&quot; %x30-34 DIGIT     ; 200-249
                    / &quot;25&quot; %x30-35          ; 250-255
        @endcode

        @par Specification
        @li &lt;a href=&quot;https://en.wikipedia.org/wiki/IPv4&quot;
            &gt;IPv4 (Wikipedia)&lt;/a&gt;
        @li &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc3986#section-3.2.2&quot;&gt;
            3.2.2. Host (rfc3986)&lt;/a&gt;

        @see
            @ref set_encoded_host,
            @ref set_encoded_host_address,
            @ref set_encoded_host_name,
            @ref set_host,
            @ref set_host_address,
            @ref set_host_ipv6,
            @ref set_host_ipvfuture,
            @ref set_host_name.
    */</doc>
<use f='boost-1.85.0/libs/url/include/boost/url/static_url.hpp' l='382' u='c' c='_ZN5boost4urls10static_url13set_host_ipv4ERKNS0_12ipv4_addressE'/>
<use f='boost-1.85.0/libs/url/src/url_base.cpp' l='639' u='c' c='_ZN5boost4urls8url_base8set_hostENS_4core17basic_string_viewIcEE'/>
<use f='boost-1.85.0/libs/url/src/url_base.cpp' l='692' u='c' c='_ZN5boost4urls8url_base16set_encoded_hostENS0_15pct_string_viewE'/>
<use f='boost-1.85.0/libs/url/src/url_base.cpp' l='738' u='c' c='_ZN5boost4urls8url_base16set_host_addressENS_4core17basic_string_viewIcEE'/>
<use f='boost-1.85.0/libs/url/src/url_base.cpp' l='782' u='c' c='_ZN5boost4urls8url_base24set_encoded_host_addressENS0_15pct_string_viewE'/>
<def f='boost-1.85.0/libs/url/src/url_base.cpp' l='805' ll='823' type='boost::urls::url_base &amp; boost::urls::url_base::set_host_ipv4(const boost::urls::ipv4_address &amp; addr)'/>
