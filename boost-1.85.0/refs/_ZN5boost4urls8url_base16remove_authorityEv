<dec f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='404' type='boost::urls::url_base &amp; boost::urls::url_base::remove_authority()'/>
<use f='boost-1.85.0/libs/url/include/boost/url/url.hpp' l='418' u='c' c='_ZN5boost4urls3url16remove_authorityEv'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/url_base.hpp' l='365'>/** Remove the authority

        This function removes the authority,
        which includes the userinfo, host, and
        a port if present.

        @par Example
        @code
        assert( url( &quot;http://example.com/echo.cgi&quot; ).remove_authority().buffer() == &quot;http:/echo.cgi&quot; );
        @endcode

        @par Postconditions
        @code
        this-&gt;has_authority() == false &amp;&amp; this-&gt;has_userinfo() == false &amp;&amp; this-&gt;has_port() == false
        @endcode

        @par Complexity
        Linear in `this-&gt;size()`.

        @par Exception Safety
        Throws nothing.

        @par BNF
        @code
        authority     = [ userinfo &quot;@&quot; ] host [ &quot;:&quot; port ]

        userinfo      = *( unreserved / pct-encoded / sub-delims / &quot;:&quot; )
        host          = IP-literal / IPv4address / reg-name
        port          = *DIGIT
        @endcode

        @par Specification
        @li &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc3986#section-3.2&quot;&gt;
            3.2. Authority (rfc3986)&lt;/a&gt;

        @see
            @ref set_encoded_authority.
    */</doc>
<use f='boost-1.85.0/libs/url/include/boost/url/static_url.hpp' l='354' u='c' c='_ZN5boost4urls10static_url16remove_authorityEv'/>
<def f='boost-1.85.0/libs/url/src/url_base.cpp' l='312' ll='342' type='boost::urls::url_base &amp; boost::urls::url_base::remove_authority()'/>
<use f='boost-1.85.0/libs/url/src/url_base.cpp' l='1000' u='c' c='_ZN5boost4urls8url_base13remove_originEv'/>
