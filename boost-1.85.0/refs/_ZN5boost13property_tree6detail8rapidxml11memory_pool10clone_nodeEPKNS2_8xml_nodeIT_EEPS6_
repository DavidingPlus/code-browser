<def f='boost-1.85.0/libs/property_tree/include/boost/property_tree/detail/rapidxml.hpp' l='486' ll='509' type='xml_node&lt;Ch&gt; * boost::property_tree::detail::rapidxml::memory_pool::clone_node(const xml_node&lt;Ch&gt; * source, xml_node&lt;Ch&gt; * result = 0)'/>
<use f='boost-1.85.0/libs/property_tree/include/boost/property_tree/detail/rapidxml.hpp' l='504' u='c' c='_ZN5boost13property_tree6detail8rapidxml11memory_pool10clone_nodeEPKNS2_8xml_nodeIT_EEPS6_'/>
<doc f='boost-1.85.0/libs/property_tree/include/boost/property_tree/detail/rapidxml.hpp' l='477'>//! Clones an xml_node and its hierarchy of child nodes and attributes.
        //! Nodes and attributes are allocated from this memory pool.
        //! Names and values are not cloned, they are shared between the clone and the source.
        //! Result node can be optionally specified as a second parameter, 
        //! in which case its contents will be replaced with cloned source node.
        //! This is useful when you want to clone entire document.
        //! \param source Node to clone.
        //! \param result Node to put results in, or 0 to automatically allocate result node
        //! \return Pointer to cloned node. This pointer will never be NULL.</doc>
