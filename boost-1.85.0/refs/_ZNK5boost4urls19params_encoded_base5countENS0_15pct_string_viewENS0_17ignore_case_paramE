<dec f='boost-1.85.0/libs/url/include/boost/url/params_encoded_base.hpp' l='305' type='std::size_t boost::urls::params_encoded_base::count(boost::urls::pct_string_view key, boost::urls::ignore_case_param ic = {}) const'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/params_encoded_base.hpp' l='272'>/** Return the number of matching keys

        This function examines the parameters
        in the container to find the number of
        matches for the specified key,
        which may contain percent escapes.
        The comparison is performed as if all
        escaped characters were decoded first.

        @par Example
        @code
        assert( url_view( &quot;?first=John&amp;last=Doe&quot; ).encoded_params().count( &quot;first&quot; ) == 1 );
        @endcode

        @par Complexity
        Linear in `this-&gt;buffer().size()`.

        @par Exception Safety
        Exceptions thrown on invalid input.

        @throw system_error
        `key` contains an invalid percent-encoding.

        @param key The key to match.
        By default, a case-sensitive
        comparison is used.

        @param ic An optional parameter. If
        the value @ref ignore_case is passed
        here, the comparison is
        case-insensitive.
    */</doc>
<def f='boost-1.85.0/libs/url/src/params_encoded_base.cpp' l='97' ll='113' type='std::size_t boost::urls::params_encoded_base::count(boost::urls::pct_string_view key, boost::urls::ignore_case_param ic = {}) const'/>
<doc f='boost-1.85.0/libs/url/src/params_encoded_base.cpp' l='95'>//------------------------------------------------</doc>
