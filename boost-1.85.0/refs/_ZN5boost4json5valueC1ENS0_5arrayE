<def f='boost-1.85.0/libs/json/include/boost/json/value.hpp' l='805' ll='808' type='void boost::json::value::value(boost::json::array other)'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/value_ref.ipp' l='121' u='c' c='_ZN5boost4json9value_ref10make_valueESt16initializer_listIS1_ENS0_11storage_ptrE'/>
<doc f='boost-1.85.0/libs/json/include/boost/json/value.hpp' l='781'>/** Construct an @ref array.

        The value is constructed from `other`, using the
        same memory resource. To transfer ownership, use `std::move`:

        @par Example
        @code
        array arr( {1, 2, 3, 4, 5} );

        // transfer ownership
        value jv( std::move(arr) );

        assert( arr.empty() );
        assert( *arr.storage() == *jv.storage() );
        @endcode

        @par Complexity
        Constant.

        @par Exception Safety
        No-throw guarantee.

        @param other The array to construct with.
    */</doc>
