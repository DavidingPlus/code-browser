<dec f='include/c++/9/bits/stl_list.h' l='1427' type='std::list::iterator std::list::erase(std::list::const_iterator __position)'/>
<def f='include/c++/9/bits/list.tcc' l='148' ll='160' type='typename list&lt;_Tp, _Alloc&gt;::iterator std::list::erase(std::list::const_iterator __position)'/>
<doc f='include/c++/9/bits/stl_list.h' l='1410'>/**
       *  @brief  Remove element at given position.
       *  @param  __position  Iterator pointing to element to be erased.
       *  @return  An iterator pointing to the next element (or end()).
       *
       *  This function will erase the element at the given position and thus
       *  shorten the %list by one.
       *
       *  Due to the nature of a %list this operation can be done in
       *  constant time, and only invalidates iterators/references to
       *  the element being removed.  The user is also cautioned that
       *  this function only erases the element, and that if the element
       *  is itself a pointer, the pointed-to memory is not touched in
       *  any way.  Managing the pointer is the user&apos;s responsibility.
       */</doc>
<use f='boost-1.85.0/libs/thread/include/boost/thread/detail/thread_group.hpp' l='103' u='c' c='_ZN5boost12thread_group13remove_threadEPNS_6threadE'/>
<use f='boost-1.85.0/libs/thread/include/boost/thread/future.hpp' l='277' u='c' c='_ZN5boost6detail17shared_state_base19unnotify_when_readyESt14_List_iteratorIPNS_22condition_variable_anyEE'/>
<use f='boost-1.85.0/libs/log/src/text_file_backend.cpp' l='885' u='c' c='_ZN5boost3log12v2s_mt_posix5sinks9anonymous14file_collector10store_fileERKNS_10filesystem4pathE'/>
<use f='boost-1.85.0/libs/log/src/text_file_backend.cpp' l='916' u='c' c='_ZN5boost3log12v2s_mt_posix5sinks9anonymous14file_collector10store_fileERKNS_10filesystem4pathE'/>
<use f='boost-1.85.0/libs/log/src/text_file_backend.cpp' l='928' u='c' c='_ZN5boost3log12v2s_mt_posix5sinks9anonymous14file_collector10store_fileERKNS_10filesystem4pathE'/>
