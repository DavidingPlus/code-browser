<dec f='include/unicode/smpdtfmt.h' l='955' type='void icu_66::SimpleDateFormat::parse(const icu_66::UnicodeString &amp; text, icu_66::Calendar &amp; cal, icu_66::ParsePosition &amp; pos) const'/>
<doc f='include/unicode/smpdtfmt.h' l='929'>/**
     * Parse a date/time string beginning at the given parse position. For
     * example, a time text &quot;07/10/96 4:5 PM, PDT&quot; will be parsed into a Date
     * that is equivalent to Date(837039928046).
     * &lt;P&gt;
     * By default, parsing is lenient: If the input is not in the form used by
     * this object&apos;s format method but can still be parsed as a date, then the
     * parse succeeds. Clients may insist on strict adherence to the format by
     * calling setLenient(false).
     * @see DateFormat::setLenient(boolean)
     *
     * @param text  The date/time string to be parsed
     * @param cal   A Calendar set on input to the date and time to be used for
     *              missing values in the date/time string being parsed, and set
     *              on output to the parsed date/time. When the calendar type is
     *              different from the internal calendar held by this SimpleDateFormat
     *              instance, the internal calendar will be cloned to a work
     *              calendar set to the same milliseconds and time zone as the
     *              cal parameter, field values will be parsed based on the work
     *              calendar, then the result (milliseconds and time zone) will
     *              be set in this calendar.
     * @param pos   On input, the position at which to start parsing; on
     *              output, the position at which parsing terminated, or the
     *              start position if the parse failed.
     * @stable ICU 2.1
     */</doc>
