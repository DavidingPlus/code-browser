<dec f='boost-1.85.0/libs/url/include/boost/url/params_encoded_base.hpp' l='268' type='bool boost::urls::params_encoded_base::contains(boost::urls::pct_string_view key, boost::urls::ignore_case_param ic = {}) const'/>
<def f='boost-1.85.0/libs/url/include/boost/url/impl/params_encoded_base.hpp' l='122' ll='131' type='bool boost::urls::params_encoded_base::contains(boost::urls::pct_string_view key, boost::urls::ignore_case_param ic = {}) const'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/params_encoded_base.hpp' l='235'>/** Return true if a matching key exists

        This function examines the parameters
        in the container to find a match for
        the specified key,
        which may contain percent escapes.
        The comparison is performed as if all
        escaped characters were decoded first.

        @par Example
        @code
        assert( url_view( &quot;?first=John&amp;last=Doe&quot; ).encoded_params().contains( &quot;first&quot; ) );
        @endcode

        @par Complexity
        Linear in `this-&gt;buffer().size()`.

        @par Exception Safety
        Exceptions thrown on invalid input.

        @throw system_error
        `key` contains an invalid percent-encoding.

        @param key The key to match.
        By default, a case-sensitive
        comparison is used.

        @param ic An optional parameter. If
        the value @ref ignore_case is passed
        here, the comparison is
        case-insensitive.
    */</doc>
<doc f='boost-1.85.0/libs/url/include/boost/url/impl/params_encoded_base.hpp' l='116'>//------------------------------------------------
//
// Observers
//
//------------------------------------------------</doc>
