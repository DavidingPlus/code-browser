<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/graph/include/boost/pending/property.hpp' l='258' ll='260'/>
<inh f='boost-1.85.0/libs/mpl/include/boost/mpl/bool.hpp' l='23' c='mpl_::bool_'/>
<def f='boost-1.85.0/libs/graph/include/boost/pending/property.hpp' l='261' ll='263'/>
<use f='boost-1.85.0/libs/graph/include/boost/pending/property.hpp' l='261'/>
<use f='boost-1.85.0/libs/graph/include/boost/graph/detail/adjacency_list.hpp' l='2307'/>
<size>1</size>
<doc f='boost-1.85.0/libs/graph/include/boost/pending/property.hpp' l='252'>// The BGL properties specialize property_kind and
// property_num, and use enum&apos;s for the Property type (see
// graph/properties.hpp), but the user may want to use a class
// instead with a nested kind type and num.  Also, we may want to
// switch BGL back to using class types for properties at some point.</doc>
