<def f='boost-1.85.0/libs/endian/include/boost/endian/detail/endian_reverse.hpp' l='47' ll='50' type='std::uint8_t boost::endian::detail::endian_reverse_impl(std::uint8_t x)'/>
<doc f='boost-1.85.0/libs/endian/include/boost/endian/detail/endian_reverse.hpp' l='41'>//  -- portable approach suggested by tymofey, with avoidance of undefined behavior
//     as suggested by Giovanni Piero Deretta, with a further refinement suggested
//     by Pyry Jahkola.
//  -- intrinsic approach suggested by reviewers, and by David Stone, who provided
//     his Boost licensed macro implementation (detail/intrinsic.hpp)</doc>
