<inh f='boost-1.85.0/libs/program_options/include/boost/program_options/errors.hpp' l='94' c='boost::program_options::error_with_option_name'/>
<def f='boost-1.85.0/libs/program_options/include/boost/program_options/errors.hpp' l='250' ll='262'/>
<ovr f='boost-1.85.0/libs/program_options/include/boost/program_options/errors.hpp' l='266' c='boost::program_options::unknown_option'/>
<use f='boost-1.85.0/libs/program_options/include/boost/program_options/errors.hpp' l='266'/>
<use f='boost-1.85.0/libs/program_options/include/boost/program_options/errors.hpp' l='269' c='_ZN5boost15program_options14unknown_optionC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<ovr f='boost-1.85.0/libs/program_options/include/boost/program_options/errors.hpp' l='279' c='boost::program_options::ambiguous_option'/>
<use f='boost-1.85.0/libs/program_options/include/boost/program_options/errors.hpp' l='279'/>
<use f='boost-1.85.0/libs/program_options/include/boost/program_options/errors.hpp' l='282' c='_ZN5boost15program_options16ambiguous_optionC1ERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EE'/>
<size>184</size>
<doc f='boost-1.85.0/libs/program_options/include/boost/program_options/errors.hpp' l='239'>/** Base class of unparsable options,
     *  when the desired option cannot be identified.
     *  
     *  
     *  It makes no sense to have an option name, when we can&apos;t match an option to the
     *      parameter
     *  
     *  Having this a part of the error_with_option_name hierachy makes error handling
     *      a lot easier, even if the name indicates some sort of conceptual dissonance!
     *  
     *   */</doc>
<fun r='_ZN5boost15program_options25error_with_no_option_nameC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_'/>
<fun r='_ZN5boost15program_options25error_with_no_option_name15set_option_nameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
