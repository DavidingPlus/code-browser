<dec f='boost-1.85.0/libs/locale/include/boost/locale/util/locale_data.hpp' l='59' type='bool boost::locale::util::locale_data::parse(const std::string &amp; locale_name)'/>
<use f='boost-1.85.0/libs/locale/src/boost/locale/icu/cdata.hpp' l='23' u='c' c='_ZN5boost6locale8impl_icu5cdata3setERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<doc f='boost-1.85.0/libs/locale/include/boost/locale/util/locale_data.hpp' l='51'>/// Parse a locale identifier of the form `[language[_territory][.codeset][@modifier]]`
        ///
        /// Allows a dash as the delimiter: `[language-territory]`
        /// Return true if the identifier is valid:
        ///   - `language` is given and consists of ASCII letters
        ///   - `territory`, if given, consists of ASCII letters
        ///   - Any field started by a delimiter (`_`, `-`, `.`, `@`) is not empty
        /// Otherwise parsing is aborted. Valid values already parsed stay set, other are defaulted.</doc>
<use f='boost-1.85.0/libs/locale/src/boost/locale/posix/posix_backend.cpp' l='68' u='c' c='_ZN5boost6locale10impl_posix26posix_localization_backend12prepare_dataEv'/>
<use f='boost-1.85.0/libs/locale/src/boost/locale/std/std_backend.cpp' l='118' u='c' c='_ZN5boost6locale8impl_std24std_localization_backend12prepare_dataEv'/>
<use f='boost-1.85.0/libs/locale/src/boost/locale/util/info.cpp' l='22' u='c' c='_ZN5boost6locale4util11simple_infoC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm'/>
<use f='boost-1.85.0/libs/locale/src/boost/locale/util/locale_data.cpp' l='24' u='c' c='_ZN5boost6locale4util11locale_dataC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<def f='boost-1.85.0/libs/locale/src/boost/locale/util/locale_data.cpp' l='49' ll='53' type='bool boost::locale::util::locale_data::parse(const std::string &amp; locale_name)'/>
