<dec f='boost-1.85.0/libs/json/include/boost/json/basic_parser.hpp' l='643' type='void boost::json::basic_parser::fail(system::error_code ec)'/>
<def f='boost-1.85.0/libs/json/include/boost/json/basic_parser_impl.hpp' l='2820' ll='2836' type='void boost::json::basic_parser::fail(system::error_code ec)'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/parser.ipp' l='111' u='c' c='_ZN5boost4json6parser5writeEPKcmRNS_6system10error_codeE'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/parser.ipp' l='154' u='c' c='_ZN5boost4json6parser7releaseEv'/>
<use f='boost-1.85.0/libs/json/include/boost/json/impl/stream_parser.ipp' l='109' u='c' c='_ZN5boost4json13stream_parser5writeEPKcmRNS_6system10error_codeE'/>
<doc f='boost-1.85.0/libs/json/include/boost/json/basic_parser.hpp' l='620'>/** Indicate a parsing failure.

        This changes the state of the parser to indicate
        that the parse has failed. A parser implementation
        can use this to fail the parser if needed due to
        external inputs.

        @note

        If `!ec`, the stored error code is unspecified.

        @par Complexity
        Constant.

        @par Exception Safety
        No-throw guarantee.

        @param ec The error code to set. If the code does
        not indicate failure, an implementation-defined
        error code that indicates failure will be stored
        instead.
    */</doc>
