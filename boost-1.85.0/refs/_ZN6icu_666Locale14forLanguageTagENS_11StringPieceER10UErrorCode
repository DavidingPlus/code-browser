<dec f='include/unicode/locid.h' l='408' type='static icu_66::Locale icu_66::Locale::forLanguageTag(icu_66::StringPiece tag, UErrorCode &amp; status)'/>
<doc f='include/unicode/locid.h' l='391'>/**
     * Returns a Locale for the specified BCP47 language tag string.
     * If the specified language tag contains any ill-formed subtags,
     * the first such subtag and all following subtags are ignored.
     * &lt;p&gt;
     * This implements the &apos;Language-Tag&apos; production of BCP47, and so
     * supports grandfathered (regular and irregular) as well as private
     * use language tags.  Private use tags are represented as &apos;x-whatever&apos;,
     * and grandfathered tags are converted to their canonical replacements
     * where they exist.  Note that a few grandfathered tags have no modern
     * replacement, these will be converted using the fallback described in
     * the first paragraph, so some information might be lost.
     * @param tag     the input BCP47 language tag.
     * @param status  error information if creating the Locale failed.
     * @return        the Locale for the specified BCP47 language tag.
     * @stable ICU 63
     */</doc>
