<def f='boost-1.85.0/libs/spirit/include/boost/spirit/home/qi/parser.hpp' l='47' ll='50' type='const Derived &amp; boost::spirit::qi::parser::derived() const'/>
<doc f='boost-1.85.0/libs/spirit/include/boost/spirit/home/qi/parser.hpp' l='28'>// Requirement: p.parse(f, l, context, skip, attr) -&gt; bool
        //
        //  p:          a parser
        //  f, l:       first/last iterator pair
        //  context:    enclosing rule context (can be unused_type)
        //  skip:       skipper (can be unused_type)
        //  attr:       attribute (can be unused_type)

        // Requirement: p.what(context) -&gt; info
        //
        //  p:          a parser
        //  context:    enclosing rule context (can be unused_type)

        // Requirement: P::template attribute&lt;Ctx, Iter&gt;::type
        //
        //  P:          a parser type
        //  Ctx:        A context type (can be unused_type)
        //  Iter:       An iterator type (can be unused_type)</doc>
