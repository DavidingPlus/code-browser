<dec f='boost-1.85.0/libs/url/include/boost/url/params_base.hpp' l='387' type='boost::urls::params_base::iterator boost::urls::params_base::find(boost::urls::params_base::iterator from, core::string_view key, boost::urls::ignore_case_param ic = {}) const'/>
<doc f='boost-1.85.0/libs/url/include/boost/url/params_base.hpp' l='346'>/** Find a matching key

        This function examines the
        parameters in the container to
        find a match for the specified key.
        The comparison is performed as if all
        escaped characters were decoded first.

        &lt;br&gt;

        The search starts at `from`
        and proceeds forward until either the
        key is found or the end of the range is
        reached, in which case `end()` is
        returned.

        @par Example
        @code
        url_view u( &quot;?First=John&amp;Last=Doe&quot; );

        assert( u.params().find( &quot;first&quot; ) != u.params().find( &quot;first&quot;, ignore_case ) );
        @endcode

        @par Complexity
        Linear in `this-&gt;buffer().size()`.

        @return an iterator to the param

        @param from The position to begin the
            search from. This can be `end()`.

        @param key The key to match.
        By default, a case-sensitive
        comparison is used.

        @param ic An optional parameter. If
        the value @ref ignore_case is passed
        here, the comparison is
        case-insensitive.
    */</doc>
<use f='boost-1.85.0/libs/url/src/params_base.cpp' l='84' u='c' c='_ZNK5boost4urls11params_base8containsENS_4core17basic_string_viewIcEENS0_17ignore_case_paramE'/>
<def f='boost-1.85.0/libs/url/src/params_base.cpp' l='101' ll='113' type='boost::urls::params_base::iterator boost::urls::params_base::find(boost::urls::params_base::iterator it, core::string_view key, boost::urls::ignore_case_param ic = {}) const'/>
<use f='boost-1.85.0/libs/url/src/params_base.cpp' l='203' u='c' c='_ZNK5boost4urls11params_base5countENS_4core17basic_string_viewIcEENS0_17ignore_case_paramE'/>
