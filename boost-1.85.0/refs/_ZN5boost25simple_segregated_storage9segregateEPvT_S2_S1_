<dec f='boost-1.85.0/libs/pool/include/boost/pool/simple_segregated_storage.hpp' l='102' type='static void * boost::simple_segregated_storage::segregate(void * block, boost::simple_segregated_storage::size_type nsz, boost::simple_segregated_storage::size_type npartition_sz, void * end = 0)'/>
<use f='boost-1.85.0/libs/pool/include/boost/pool/simple_segregated_storage.hpp' l='116' u='c' c='_ZN5boost25simple_segregated_storage9add_blockEPvT_S2_'/>
<use f='boost-1.85.0/libs/pool/include/boost/pool/simple_segregated_storage.hpp' l='136' u='c' c='_ZN5boost25simple_segregated_storage17add_ordered_blockEPvT_S2_'/>
<def f='boost-1.85.0/libs/pool/include/boost/pool/simple_segregated_storage.hpp' l='279' ll='310' type='static void * boost::simple_segregated_storage::segregate(void *const block, const boost::simple_segregated_storage::size_type sz, const boost::simple_segregated_storage::size_type partition_sz, void *const end = 0)'/>
<doc f='boost-1.85.0/libs/pool/include/boost/pool/simple_segregated_storage.hpp' l='270'>//! Segregate block into chunks.
//! \pre npartition_sz &gt;= sizeof(void *)
//! \pre    npartition_sz = sizeof(void *) * i, for some integer i
//! \pre    nsz &gt;= npartition_sz
//! \pre Block is properly aligned for an array of object of
//!        size npartition_sz and array of void *.
//! The requirements above guarantee that any pointer to a chunk
//! (which is a pointer to an element in an array of npartition_sz)
//! may be cast to void **.</doc>
