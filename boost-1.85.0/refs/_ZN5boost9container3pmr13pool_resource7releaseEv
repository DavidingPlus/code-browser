<dec f='boost-1.85.0/libs/container/include/boost/container/detail/pool_resource.hpp' l='109' type='void boost::container::pmr::pool_resource::release()'/>
<use f='boost-1.85.0/libs/container/src/pool_resource.cpp' l='181' u='c' c='_ZN5boost9container3pmr13pool_resourceD1Ev'/>
<def f='boost-1.85.0/libs/container/src/pool_resource.cpp' l='191' ll='198' type='void boost::container::pmr::pool_resource::release()'/>
<doc f='boost-1.85.0/libs/container/include/boost/container/detail/pool_resource.hpp' l='105'>//! &lt;b&gt;Effects&lt;/b&gt;: Calls Calls `upstream_resource()-&gt;deallocate()` as necessary
   //!   to release all allocated memory. [ Note: memory is released back to
   //!   `upstream_resource()` even if deallocate has not been called for some
   //!   of the allocated blocks. - end note ]</doc>
<use f='boost-1.85.0/libs/container/src/synchronized_pool_resource.cpp' l='68' u='c' c='_ZN5boost9container3pmr26synchronized_pool_resource7releaseEv'/>
<use f='boost-1.85.0/libs/container/src/unsynchronized_pool_resource.cpp' l='42' u='c' c='_ZN5boost9container3pmr28unsynchronized_pool_resource7releaseEv'/>
