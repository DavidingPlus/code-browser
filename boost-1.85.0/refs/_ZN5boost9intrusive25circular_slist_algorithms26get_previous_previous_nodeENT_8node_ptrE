<def f='boost-1.85.0/libs/intrusive/include/boost/intrusive/circular_slist_algorithms.hpp' l='216' ll='217' type='static boost::intrusive::circular_slist_algorithms::node_ptr boost::intrusive::circular_slist_algorithms::get_previous_previous_node(boost::intrusive::circular_slist_algorithms::node_ptr this_node)'/>
<doc f='boost-1.85.0/libs/intrusive/include/boost/intrusive/circular_slist_algorithms.hpp' l='209'>//! &lt;b&gt;Requires&lt;/b&gt;: this_node must be in a circular list or be an empty circular list.
   //!
   //! &lt;b&gt;Effects&lt;/b&gt;: Returns the previous node of the previous node of this_node in the circular list.
   //!
   //! &lt;b&gt;Complexity&lt;/b&gt;: Linear to the number of elements in the circular list.
   //!
   //! &lt;b&gt;Throws&lt;/b&gt;: Nothing.</doc>
