<def f='boost-1.85.0/libs/spirit/include/boost/spirit/home/karma/generator.hpp' l='61' ll='64' type='const Derived &amp; boost::spirit::karma::generator::derived() const'/>
<doc f='boost-1.85.0/libs/spirit/include/boost/spirit/home/karma/generator.hpp' l='42'>// Requirement: g.generate(o, context, delimiter, attr) -&gt; bool
        //
        //  g:          a generator
        //  o:          output iterator
        //  context:    enclosing rule context (can be unused_type)
        //  delimit:    delimiter (can be unused_type)
        //  attr:       attribute (can be unused_type)

        // Requirement: g.what(context) -&gt; info
        //
        //  g:          a generator
        //  context:    enclosing rule context (can be unused_type)

        // Requirement: G::template attribute&lt;Ctx, Iter&gt;::type
        //
        //  G:          a generator type
        //  Ctx:        A context type (can be unused_type)
        //  Iter:       An iterator type (always unused_type)</doc>
